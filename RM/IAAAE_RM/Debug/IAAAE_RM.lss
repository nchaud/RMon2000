
IAAAE_RM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800100  00004cc2  00004d56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004cc2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002f2  0080019a  0080019a  00004df0  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00004df0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004e50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000d00  00000000  00000000  00004e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00021484  00000000  00000000  00005b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004a35  00000000  00000000  00027014  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00007359  00000000  00000000  0002ba49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000030b0  00000000  00000000  00032da4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005f6d  00000000  00000000  00035e54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00011bfb  00000000  00000000  0003bdc1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000d00  00000000  00000000  0004d9bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__dtors_end>
       4:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
       8:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
       c:	0c 94 93 21 	jmp	0x4326	; 0x4326 <__vector_3>
      10:	0c 94 93 21 	jmp	0x4326	; 0x4326 <__vector_3>
      14:	0c 94 93 21 	jmp	0x4326	; 0x4326 <__vector_3>
      18:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      1c:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      20:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      24:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      28:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      2c:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      30:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      34:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      38:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      3c:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      40:	0c 94 1f 1e 	jmp	0x3c3e	; 0x3c3e <__vector_16>
      44:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      48:	0c 94 be 1b 	jmp	0x377c	; 0x377c <__vector_18>
      4c:	0c 94 f0 1b 	jmp	0x37e0	; 0x37e0 <__vector_19>
      50:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      54:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      58:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      5c:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>
      60:	0c 94 9a 17 	jmp	0x2f34	; 0x2f34 <__vector_24>
      64:	0c 94 36 04 	jmp	0x86c	; 0x86c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	09 3c       	cpi	r16, 0xC9	; 201
      6a:	2d 2d       	mov	r18, r13
      6c:	2d 20       	and	r2, r13
	...

0000006f <_ZZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_jE3__c>:
      6f:	09 2d 2d 2d 3e 20 00                                .---> .

00000076 <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperljE3__c_0>:
      76:	09 3c 2d 2d 2d 20 00                                .<--- .

0000007d <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperljE3__c>:
      7d:	09 2d 2d 2d 3e 20 00                                .---> .

00000084 <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperjE3__c_0>:
      84:	09 3c 2d 2d 2d 20 00                                .<--- .

0000008b <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperjE3__c>:
      8b:	09 2d 2d 2d 3e 20 00                                .---> .

00000092 <_ZZN13Adafruit_FONA8readlineEjbE3__c>:
      92:	53 50 41 43 45 00                                   SPACE.

00000098 <_ZZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperjE3__c>:
      98:	09 3c 2d 2d 2d 20 00                                .<--- .

0000009f <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c_1>:
      9f:	55 41 00                                            UA.

000000a2 <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c_0>:
      a2:	55 52 4c 00                                         URL.

000000a6 <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c>:
      a6:	43 49 44 00                                         CID.

000000aa <_ZZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_PcE3__c>:
      aa:	43 4f 4e 54 45 4e 54 00                             CONTENT.

000000b2 <_ZZN13Adafruit_FONA12HTTP_readallEjPcE3__c_0>:
      b2:	2b 48 54 54 50 52 45 41 44 3a 20 00                 +HTTPREAD: .

000000be <_ZZN13Adafruit_FONA12HTTP_readallEjPcE3__c>:
      be:	41 54 2b 48 54 54 50 52 45 41 44 3d 30 2c 00        AT+HTTPREAD=0,.

000000cd <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c_1>:
      cd:	2b 48 54 54 50 41 43 54 49 4f 4e 3a 00              +HTTPACTION:.

000000da <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c_0>:
      da:	2b 48 54 54 50 41 43 54 49 4f 4e 3a 00              +HTTPACTION:.

000000e7 <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c>:
      e7:	41 54 2b 48 54 54 50 41 43 54 49 4f 4e 3d 00        AT+HTTPACTION=.

000000f6 <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_2>:
      f6:	44 4f 57 4e 4c 4f 41 44 00                          DOWNLOAD.

000000ff <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_1>:
      ff:	41 54 2b 48 54 54 50 44 41 54 41 3d 00              AT+HTTPDATA=.

0000010c <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_0>:
     10c:	41 54 2b 48 54 54 50 44 41 54 41 3d 00              AT+HTTPDATA=.

00000119 <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c>:
     119:	09 2d 2d 2d 3e 20 00                                .---> .

00000120 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_3>:
     120:	22 2c 00                                            ",.

00000123 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_2>:
     123:	22 2c 22 00                                         ",".

00000127 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_1>:
     127:	41 54 2b 48 54 54 50 50 41 52 41 3d 22 00           AT+HTTPPARA=".

00000135 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_0>:
     135:	41 54 2b 48 54 54 50 50 41 52 41 3d 22 00           AT+HTTPPARA=".

00000143 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c>:
     143:	09 2d 2d 2d 3e 20 00                                .---> .

0000014a <_ZZN13Adafruit_FONA9HTTP_termEvE3__c>:
     14a:	41 54 2b 48 54 54 50 54 45 52 4d 00                 AT+HTTPTERM.

00000156 <_ZZN13Adafruit_FONA9HTTP_initEvE3__c>:
     156:	41 54 2b 48 54 54 50 49 4e 49 54 00                 AT+HTTPINIT.

00000162 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_4>:
     162:	2c 20 77 65 27 76 65 20 72 65 61 64 20 00           , we've read .

00000170 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_3>:
     170:	2c 20 77 69 74 68 20 6f 75 72 20 6d 61 78 20 6f     , with our max o
     180:	66 20 00                                            f .

00000183 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_2>:
     183:	52 65 63 65 69 76 65 64 20 72 65 73 70 6f 6e 73     Received respons
     193:	65 20 6f 66 20 6c 65 6e 67 74 68 20 00              e of length .

000001a0 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_1>:
     1a0:	46 61 69 6c 65 64 20 74 6f 20 73 65 6e 64 20 64     Failed to send d
     1b0:	61 74 61 2c 20 73 74 61 74 75 73 20 63 6f 64 65     ata, status code
     1c0:	3a 20 00                                            : .

000001c3 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_0>:
     1c3:	74 65 78 74 2f 70 6c 61 69 6e 00                    text/plain.

000001ce <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c>:
     1ce:	68 74 74 70 3a 2f 2f 72 6d 6f 6e 2e 6b 68 75 64     http://rmon.khud
     1de:	64 61 6d 2e 6f 72 67 2e 75 6b 2f 3f 61 3d 61 64     dam.org.uk/?a=ad
     1ee:	64 00                                               d.

000001f0 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_14>:
     1f0:	41 54 2b 43 47 41 54 54 3d 30 00                    AT+CGATT=0.

000001fb <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_13>:
     1fb:	41 54 2b 53 41 50 42 52 3d 30 2c 31 00              AT+SAPBR=0,1.

00000208 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_11>:
     208:	41 54 2b 43 49 50 53 48 55 54 00                    AT+CIPSHUT.

00000213 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_12>:
     213:	53 48 55 54 20 4f 4b 00                             SHUT OK.

0000021b <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_10>:
     21b:	41 54 2b 43 49 49 43 52 00                          AT+CIICR.

00000224 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_9>:
     224:	41 54 2b 53 41 50 42 52 3d 31 2c 31 00              AT+SAPBR=1,1.

00000231 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_8>:
     231:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 50 57     AT+SAPBR=3,1,"PW
     241:	44 22 2c 00                                         D",.

00000245 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_7>:
     245:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 55 53     AT+SAPBR=3,1,"US
     255:	45 52 22 2c 00                                      ER",.

0000025a <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_6>:
     25a:	41 54 2b 43 53 54 54 3d 22 00                       AT+CSTT=".

00000264 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_5>:
     264:	09 2d 2d 2d 3e 20 00                                .---> .

0000026b <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_4>:
     26b:	41 54 2b 43 53 54 54 3d 22 00                       AT+CSTT=".

00000275 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_3>:
     275:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 41 50     AT+SAPBR=3,1,"AP
     285:	4e 22 2c 00                                         N",.

00000289 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_2>:
     289:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 43 4f     AT+SAPBR=3,1,"CO
     299:	4e 54 59 50 45 22 2c 22 47 50 52 53 22 00           NTYPE","GPRS".

000002a7 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_1>:
     2a7:	41 54 2b 43 47 41 54 54 3d 31 00                    AT+CGATT=1.

000002b2 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c>:
     2b2:	41 54 2b 43 49 50 53 48 55 54 00                    AT+CIPSHUT.

000002bd <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_0>:
     2bd:	53 48 55 54 20 4f 4b 00                             SHUT OK.

000002c5 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_5>:
     2c5:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000002ce <_ZZN13Adafruit_FONA7getRSSIEvE3__c_6>:
     2ce:	2b 43 52 45 47 3a 20 00                             +CREG: .

000002d6 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_3>:
     2d6:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000002df <_ZZN13Adafruit_FONA7getRSSIEvE3__c_4>:
     2df:	2b 43 52 45 47 3a 20 00                             +CREG: .

000002e7 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_1>:
     2e7:	41 54 2b 43 53 51 00                                AT+CSQ.

000002ee <_ZZN13Adafruit_FONA7getRSSIEvE3__c_2>:
     2ee:	2b 43 53 51 3a 20 00                                +CSQ: .

000002f5 <_ZZN13Adafruit_FONA7getRSSIEvE3__c>:
     2f5:	41 54 2b 43 53 51 00                                AT+CSQ.

000002fc <_ZZN13Adafruit_FONA7getRSSIEvE3__c_0>:
     2fc:	2b 43 53 51 3a 20 00                                +CSQ: .

00000303 <_ZZN13Adafruit_FONA14getBattPercentEPjE3__c>:
     303:	41 54 2b 43 42 43 00                                AT+CBC.

0000030a <_ZZN13Adafruit_FONA14getBattPercentEPjE3__c_0>:
     30a:	2b 43 42 43 3a 20 00                                +CBC: .

00000311 <_ZZN13Adafruit_FONA5beginEhhE3__c_11>:
     311:	53 49 4d 38 30 38 20 52 31 34 00                    SIM808 R14.

0000031c <_ZZN13Adafruit_FONA5beginEhhE3__c_10>:
     31c:	09 3c 2d 2d 2d 20 00                                .<--- .

00000323 <_ZZN13Adafruit_FONA5beginEhhE3__c_9>:
     323:	09 2d 2d 2d 3e 20 00                                .---> .

0000032a <_ZZN13Adafruit_FONA5beginEhhE3__c_8>:
     32a:	41 54 45 30 00                                      ATE0.

0000032f <_ZZN13Adafruit_FONA5beginEhhE3__c_7>:
     32f:	41 54 45 30 00                                      ATE0.

00000334 <_ZZN13Adafruit_FONA5beginEhhE3__c_6>:
     334:	41 54 20 46 61 69 6c 2e 2e 2e 20 6c 61 73 74 20     AT Fail... last 
     344:	64 69 74 63 68 20 61 74 74 65 6d 70 74 2e 00        ditch attempt..

00000353 <_ZZN13Adafruit_FONA5beginEhhE3__c_5>:
     353:	41 54 00                                            AT.

00000356 <_ZZN13Adafruit_FONA5beginEhhE3__c_4>:
     356:	41 54 00                                            AT.

00000359 <_ZZN13Adafruit_FONA5beginEhhE3__c_3>:
     359:	41 54 00                                            AT.

0000035c <_ZZN13Adafruit_FONA5beginEhhE3__c_1>:
     35c:	41 54 00                                            AT.

0000035f <_ZZN13Adafruit_FONA5beginEhhE3__c_2>:
     35f:	41 54 00                                            AT.

00000362 <_ZZN13Adafruit_FONA5beginEhhE3__c_0>:
     362:	41 54 00                                            AT.

00000365 <_ZZN13Adafruit_FONA5beginEhhE3__c>:
     365:	41 74 74 65 6d 70 74 69 6e 67 20 74 6f 20 6f 70     Attempting to op
     375:	65 6e 20 63 6f 6d 6d 20 77 69 74 68 20 41 54 73     en comm with ATs
	...

00000386 <_ZZN13Adafruit_FONAC4EabE3__c_0>:
     386:	4f 4b 00                                            OK.

00000389 <_ZZN13Adafruit_FONAC4EabE3__c>:
     389:	46 4f 4e 41 6e 65 74 00                             FONAnet.

00000391 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_17>:
     391:	20 7c 20 00                                          | .

00000395 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_16>:
     395:	52 65 73 70 6f 6e 73 65 20 43 6f 64 65 3d 00        Response Code=.

000003a4 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_15>:
     3a4:	20 7c 20 00                                          | .

000003a8 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_14>:
     3a8:	52 65 73 70 6f 6e 73 65 20 4c 65 6e 3d 00           Response Len=.

000003b6 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_13>:
     3b6:	20 7c 20 00                                          | .

000003ba <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_12>:
     3ba:	09 52 65 73 70 6f 6e 73 65 20 49 64 3d 00           .Response Id=.

000003c8 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_11>:
     3c8:	20 7c 20 00                                          | .

000003cc <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_10>:
     3cc:	53 65 6e 64 20 53 74 61 74 75 73 3d 00              Send Status=.

000003d9 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_9>:
     3d9:	20 7c 20 00                                          | .

000003dd <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_8>:
     3dd:	47 50 52 53 20 53 74 61 74 75 73 3d 00              GPRS Status=.

000003ea <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_7>:
     3ea:	20 7c 20 00                                          | .

000003ee <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_6>:
     3ee:	09 49 6e 69 74 20 53 74 61 74 75 73 3d 00           .Init Status=.

000003fc <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_5>:
     3fc:	09 00                                               ..

000003fe <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_4>:
     3fe:	20 7c 20 00                                          | .

00000402 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_3>:
     402:	42 61 74 74 25 3d 00                                Batt%=.

00000409 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_2>:
     409:	20 7c 20 00                                          | .

0000040d <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_1>:
     40d:	23 52 65 61 64 69 6e 67 73 3d 00                    #Readings=.

00000418 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_0>:
     418:	20 7c 20 00                                          | .

0000041c <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c>:
     41c:	09 42 6f 6f 74 23 3d 00                             .Boot#=.

00000424 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_7>:
     424:	45 72 72 6f 72 3d 00                                Error=.

0000042b <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_6>:
     42b:	20 7c 20 00                                          | .

0000042f <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_5>:
     42f:	54 65 6d 70 3d 00                                   Temp=.

00000435 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_4>:
     435:	20 7c 20 00                                          | .

00000439 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_3>:
     439:	43 75 72 72 65 6e 74 3d 00                          Current=.

00000442 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_2>:
     442:	20 7c 20 00                                          | .

00000446 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_1>:
     446:	50 56 2d 56 3d 00                                   PV-V=.

0000044c <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_0>:
     44c:	20 7c 20 00                                          | .

00000450 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c>:
     450:	42 61 74 74 2d 56 3d 00                             Batt-V=.

00000458 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_7>:
     458:	52 53 53 49 20 45 72 72 6f 72 3f 3d 00              RSSI Error?=.

00000465 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_6>:
     465:	20 7c 20 00                                          | .

00000469 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_5>:
     469:	2c 20 45 72 72 6f 72 3d 00                          , Error=.

00000472 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_4>:
     472:	2c 20 53 74 61 74 75 73 3d 00                       , Status=.

0000047c <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_3>:
     47c:	4e 65 74 77 6f 72 6b 2d 52 65 67 20 52 65 73 43     Network-Reg ResC
     48c:	6f 64 65 3d 00                                      ode=.

00000491 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_2>:
     491:	20 7c 20 00                                          | .

00000495 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_1>:
     495:	42 45 52 3d 00                                      BER=.

0000049a <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_0>:
     49a:	20 7c 20 00                                          | .

0000049e <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c>:
     49e:	52 53 53 49 3d 00                                   RSSI=.

000004a4 <_ZL12b64_alphabet>:
     4a4:	41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50     ABCDEFGHIJKLMNOP
     4b4:	51 52 53 54 55 56 57 58 59 5a 61 62 63 64 65 66     QRSTUVWXYZabcdef
     4c4:	67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76     ghijklmnopqrstuv
     4d4:	77 78 79 7a 30 31 32 33 34 35 36 37 38 39 2b 2f     wxyz0123456789+/
	...

000004e5 <_ZZ4loopE3__c>:
     4e5:	42 65 68 61 76 69 6f 75 72 00                       Behaviour.

000004ef <_ZZ8sendDatavE3__c_3>:
     4ef:	53 65 6e 64 2d 44 61 74 61 20 53 74 61 74 75 73     Send-Data Status
     4ff:	20 53 6c 6f 74 3a 00                                 Slot:.

00000506 <_ZZ8sendDatavE3__c_2>:
     506:	45 6e 63 6f 64 65 64 20 64 61 74 61 20 63 72 65     Encoded data cre
     516:	61 74 65 64 20 61 6e 64 20 72 65 61 64 79 20 66     ated and ready f
     526:	6f 72 20 73 65 6e 64 3a 00                          or send:.

0000052f <_ZZ8sendDatavE3__c_1>:
     52f:	09 28 46 6f 6e 61 20 49 6e 69 74 20 45 52 52 4f     .(Fona Init ERRO
     53f:	52 29 00                                            R).

00000542 <_ZZ8sendDatavE3__c_0>:
     542:	09 28 46 6f 6e 61 20 49 6e 69 74 20 50 65 6e 64     .(Fona Init Pend
     552:	69 6e 67 2e 2e 2e 29 00                             ing...).

0000055a <_ZZ8sendDatavE3__c>:
     55a:	49 6e 69 74 69 61 6c 69 73 69 6e 67 20 46 6f 6e     Initialising Fon
     56a:	61 20 74 6f 20 73 65 6e 64 20 64 61 74 61 00        a to send data.

00000579 <_ZZ17createEncodedDataPcPhh13FONA_GET_RSSIE3__c>:
     579:	2a 2a 2a 2a 20 54 6f 6f 20 6c 69 74 74 6c 65 20     **** Too little 
     589:	52 41 4d 20 62 65 66 6f 72 65 20 70 61 79 6c 6f     RAM before paylo
     599:	61 64 20 63 72 65 61 74 69 6f 6e 20 2a 2a 2a 00     ad creation ***.

000005a9 <_ZZ12takeReadingsvE3__c>:
     5a9:	54 61 6b 69 6e 67 20 72 65 61 64 69 6e 67 73 2e     Taking readings.
     5b9:	2e 2e 00                                            ...

000005bc <_ZZ21ensureFonaInitialisedbE3__c_10>:
     5bc:	09 20 28 47 6f 6f 64 2d 52 53 53 49 20 2d 20 73     . (Good-RSSI - s
     5cc:	75 63 63 65 73 73 66 75 6c 6c 2c 20 61 6c 6c 20     uccessfull, all 
     5dc:	64 6f 6e 65 29 00                                   done).

000005e2 <_ZZ21ensureFonaInitialisedbE3__c_9>:
     5e2:	09 20 28 57 61 69 74 69 6e 67 20 46 6f 72 20 47     . (Waiting For G
     5f2:	6f 6f 64 2d 52 53 53 49 20 54 69 6d 65 64 20 4f     ood-RSSI Timed O
     602:	75 74 20 2d 20 77 69 6c 6c 20 63 6f 6e 74 69 6e     ut - will contin
     612:	75 65 20 6e 6f 77 29 00                             ue now).

0000061a <_ZZ21ensureFonaInitialisedbE3__c_8>:
     61a:	09 20 28 42 61 64 2d 52 53 53 49 20 2d 20 77 69     . (Bad-RSSI - wi
     62a:	6c 6c 20 63 68 65 63 6b 20 61 67 61 69 6e 20 61     ll check again a
     63a:	66 74 65 72 20 69 6e 74 65 72 76 61 6c 29 00        fter interval).

00000649 <_ZZ21ensureFonaInitialisedbE3__c_7>:
     649:	43 68 65 63 6b 69 6e 67 20 52 53 53 49 20 2d 20     Checking RSSI - 
     659:	63 75 72 72 65 6e 74 6c 79 3a 00                    currently:.

00000664 <_ZZ21ensureFonaInitialisedbE3__c_6>:
     664:	47 50 52 53 20 69 6e 69 74 69 61 6c 69 73 65 64     GPRS initialised
     674:	20 73 75 63 63 65 73 73 66 75 6c 6c 79 20 21 00      successfully !.

00000684 <_ZZ21ensureFonaInitialisedbE3__c_5>:
     684:	41 6c 6c 20 61 74 74 65 6d 70 74 73 20 74 6f 20     All attempts to 
     694:	65 6e 61 62 6c 65 20 47 50 52 53 20 66 61 69 6c     enable GPRS fail
     6a4:	65 64 00                                            ed.

000006a7 <_ZZ21ensureFonaInitialisedbE3__c_4>:
     6a7:	57 69 6c 6c 20 74 72 79 20 74 6f 20 65 6e 61 62     Will try to enab
     6b7:	6c 65 20 47 50 52 53 20 61 67 61 69 6e 20 73 68     le GPRS again sh
     6c7:	6f 72 74 6c 79 00                                   ortly.

000006cd <_ZZ21ensureFonaInitialisedbE3__c_3>:
     6cd:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 73 69     Error initialisi
     6dd:	6e 67 20 47 50 52 53 00                             ng GPRS.

000006e5 <_ZZ21ensureFonaInitialisedbE3__c_2>:
     6e5:	41 74 74 65 6d 70 74 69 6e 67 20 74 6f 20 65 6e     Attempting to en
     6f5:	61 62 6c 65 20 47 50 52 53 2e 2e 2e 00              able GPRS....

00000702 <_ZZ21ensureFonaInitialisedbE3__c_1>:
     702:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 73 69     Error initialisi
     712:	6e 67 20 66 6f 6e 61 2e 2e 2e 00                    ng fona....

0000071d <_ZZ21ensureFonaInitialisedbE3__c_0>:
     71d:	49 6e 69 74 69 61 6c 69 73 69 6e 67 20 66 6f 6e     Initialising fon
     72d:	61 2e 2e 2e 00                                      a....

00000732 <_ZZ21ensureFonaInitialisedbE3__c>:
     732:	53 77 69 74 63 68 69 6e 67 20 6f 6e 20 66 6f 6e     Switching on fon
     742:	61 2e 2e 2e 00                                      a....

00000747 <_ZZ5setupE3__c>:
     747:	53 74 61 72 74 69 6e 67 2e 2e 2e 00                 Starting....

00000753 <_ZZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManagerE3__c_0>:
     753:	32 20 53 65 6e 73 6f 72 2d 44 61 74 61 73 20 67     2 Sensor-Datas g
     763:	6f 69 6e 67 20 66 6f 72 20 74 72 61 6e 73 6d 69     oing for transmi
     773:	73 73 69 6f 6e 3a 00                                ssion:.

0000077a <_ZZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManagerE3__c>:
     77a:	2a 2a 2a 2a 00                                      ****.

0000077f <_ZZN13ExtendedTests18endExtendedGsmTestEvE3__c>:
     77f:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 20     ~~~~~~~~~~~~~~~ 
     78f:	45 78 74 65 6e 64 65 64 20 47 53 4d 20 54 65 73     Extended GSM Tes
     79f:	74 20 43 6f 6d 70 6c 65 74 65 7e 7e 7e 7e 7e 7e     t Complete~~~~~~
     7af:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 00                    ~~~~~~~~~~.

000007ba <digital_pin_to_timer_PGM>:
     7ba:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
     7ca:	00 00 00 00                                         ....

000007ce <digital_pin_to_bit_mask_PGM>:
     7ce:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     7de:	04 08 10 20                                         ... 

000007e2 <digital_pin_to_port_PGM>:
     7e2:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     7f2:	03 03 03 03                                         ....

000007f6 <port_to_input_PGM>:
     7f6:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000800 <port_to_output_PGM>:
     800:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000080a <port_to_mode_PGM>:
     80a:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

00000814 <__ctors_start>:
     814:	ad 14       	cp	r10, r13
     816:	30 1a       	sub	r3, r16
     818:	20 1c       	adc	r2, r0

0000081a <__ctors_end>:
     81a:	c8 14       	cp	r12, r8

0000081c <__dtors_end>:
     81c:	11 24       	eor	r1, r1
     81e:	1f be       	out	0x3f, r1	; 63
     820:	cf ef       	ldi	r28, 0xFF	; 255
     822:	d8 e0       	ldi	r29, 0x08	; 8
     824:	de bf       	out	0x3e, r29	; 62
     826:	cd bf       	out	0x3d, r28	; 61

00000828 <__do_copy_data>:
     828:	11 e0       	ldi	r17, 0x01	; 1
     82a:	a0 e0       	ldi	r26, 0x00	; 0
     82c:	b1 e0       	ldi	r27, 0x01	; 1
     82e:	e2 ec       	ldi	r30, 0xC2	; 194
     830:	fc e4       	ldi	r31, 0x4C	; 76
     832:	02 c0       	rjmp	.+4      	; 0x838 <__do_copy_data+0x10>
     834:	05 90       	lpm	r0, Z+
     836:	0d 92       	st	X+, r0
     838:	aa 39       	cpi	r26, 0x9A	; 154
     83a:	b1 07       	cpc	r27, r17
     83c:	d9 f7       	brne	.-10     	; 0x834 <__do_copy_data+0xc>

0000083e <__do_clear_bss>:
     83e:	24 e0       	ldi	r18, 0x04	; 4
     840:	aa e9       	ldi	r26, 0x9A	; 154
     842:	b1 e0       	ldi	r27, 0x01	; 1
     844:	01 c0       	rjmp	.+2      	; 0x848 <.do_clear_bss_start>

00000846 <.do_clear_bss_loop>:
     846:	1d 92       	st	X+, r1

00000848 <.do_clear_bss_start>:
     848:	ac 38       	cpi	r26, 0x8C	; 140
     84a:	b2 07       	cpc	r27, r18
     84c:	e1 f7       	brne	.-8      	; 0x846 <.do_clear_bss_loop>

0000084e <__do_global_ctors>:
     84e:	14 e0       	ldi	r17, 0x04	; 4
     850:	cd e0       	ldi	r28, 0x0D	; 13
     852:	d4 e0       	ldi	r29, 0x04	; 4
     854:	04 c0       	rjmp	.+8      	; 0x85e <__do_global_ctors+0x10>
     856:	21 97       	sbiw	r28, 0x01	; 1
     858:	fe 01       	movw	r30, r28
     85a:	0e 94 8e 23 	call	0x471c	; 0x471c <__tablejump2__>
     85e:	ca 30       	cpi	r28, 0x0A	; 10
     860:	d1 07       	cpc	r29, r17
     862:	c9 f7       	brne	.-14     	; 0x856 <__do_global_ctors+0x8>
     864:	0e 94 4e 1c 	call	0x389c	; 0x389c <main>
     868:	0c 94 54 26 	jmp	0x4ca8	; 0x4ca8 <__do_global_dtors>

0000086c <__bad_interrupt>:
     86c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000870 <_ZN13Adafruit_FONA9availableEv>:
  return sendParseReply(F("AT+CBC"), F("+CBC: "), p, ',', 1);
}

boolean Adafruit_FONA::getADCVoltage(uint16_t *v) {
  return sendParseReply(F("AT+CADC?"), F("+CADC: 1,"), v);
}
     870:	83 5e       	subi	r24, 0xE3	; 227
     872:	9e 4f       	sbci	r25, 0xFE	; 254
     874:	dc 01       	movw	r26, r24
     876:	8d 91       	ld	r24, X+
     878:	9c 91       	ld	r25, X
     87a:	dc 01       	movw	r26, r24
     87c:	ed 91       	ld	r30, X+
     87e:	fc 91       	ld	r31, X
     880:	04 80       	ldd	r0, Z+4	; 0x04
     882:	f5 81       	ldd	r31, Z+5	; 0x05
     884:	e0 2d       	mov	r30, r0
     886:	09 94       	ijmp

00000888 <_ZN13Adafruit_FONA5writeEh>:
     888:	83 5e       	subi	r24, 0xE3	; 227
     88a:	9e 4f       	sbci	r25, 0xFE	; 254
     88c:	dc 01       	movw	r26, r24
     88e:	8d 91       	ld	r24, X+
     890:	9c 91       	ld	r25, X
     892:	dc 01       	movw	r26, r24
     894:	ed 91       	ld	r30, X+
     896:	fc 91       	ld	r31, X
     898:	01 90       	ld	r0, Z+
     89a:	f0 81       	ld	r31, Z
     89c:	e0 2d       	mov	r30, r0
     89e:	09 94       	ijmp

000008a0 <_ZN13Adafruit_FONA4readEv>:
     8a0:	83 5e       	subi	r24, 0xE3	; 227
     8a2:	9e 4f       	sbci	r25, 0xFE	; 254
     8a4:	dc 01       	movw	r26, r24
     8a6:	8d 91       	ld	r24, X+
     8a8:	9c 91       	ld	r25, X
     8aa:	dc 01       	movw	r26, r24
     8ac:	ed 91       	ld	r30, X+
     8ae:	fc 91       	ld	r31, X
     8b0:	06 80       	ldd	r0, Z+6	; 0x06
     8b2:	f7 81       	ldd	r31, Z+7	; 0x07
     8b4:	e0 2d       	mov	r30, r0
     8b6:	09 94       	ijmp

000008b8 <_ZN13Adafruit_FONA4peekEv>:
     8b8:	83 5e       	subi	r24, 0xE3	; 227
     8ba:	9e 4f       	sbci	r25, 0xFE	; 254
     8bc:	dc 01       	movw	r26, r24
     8be:	8d 91       	ld	r24, X+
     8c0:	9c 91       	ld	r25, X
     8c2:	dc 01       	movw	r26, r24
     8c4:	ed 91       	ld	r30, X+
     8c6:	fc 91       	ld	r31, X
     8c8:	00 84       	ldd	r0, Z+8	; 0x08
     8ca:	f1 85       	ldd	r31, Z+9	; 0x09
     8cc:	e0 2d       	mov	r30, r0
     8ce:	09 94       	ijmp

000008d0 <_ZN13Adafruit_FONA5flushEv>:
     8d0:	83 5e       	subi	r24, 0xE3	; 227
     8d2:	9e 4f       	sbci	r25, 0xFE	; 254
     8d4:	dc 01       	movw	r26, r24
     8d6:	8d 91       	ld	r24, X+
     8d8:	9c 91       	ld	r25, X
     8da:	dc 01       	movw	r26, r24
     8dc:	ed 91       	ld	r30, X+
     8de:	fc 91       	ld	r31, X
     8e0:	02 84       	ldd	r0, Z+10	; 0x0a
     8e2:	f3 85       	ldd	r31, Z+11	; 0x0b
     8e4:	e0 2d       	mov	r30, r0
     8e6:	09 94       	ijmp

000008e8 <_ZN13Adafruit_FONAC1Eab>:
     8e8:	0f 93       	push	r16
     8ea:	1f 93       	push	r17
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	ec 01       	movw	r28, r24
     8f2:	06 2f       	mov	r16, r22
     8f4:	14 2f       	mov	r17, r20
     8f6:	1b 82       	std	Y+3, r1	; 0x03
     8f8:	1a 82       	std	Y+2, r1	; 0x02
     8fa:	88 ee       	ldi	r24, 0xE8	; 232
     8fc:	93 e0       	ldi	r25, 0x03	; 3
     8fe:	a0 e0       	ldi	r26, 0x00	; 0
     900:	b0 e0       	ldi	r27, 0x00	; 0
     902:	8c 83       	std	Y+4, r24	; 0x04
     904:	9d 83       	std	Y+5, r25	; 0x05
     906:	ae 83       	std	Y+6, r26	; 0x06
     908:	bf 83       	std	Y+7, r27	; 0x07
     90a:	8d e2       	ldi	r24, 0x2D	; 45
     90c:	91 e0       	ldi	r25, 0x01	; 1
     90e:	99 83       	std	Y+1, r25	; 0x01
     910:	88 83       	st	Y, r24
     912:	83 e0       	ldi	r24, 0x03	; 3
     914:	8e 87       	std	Y+14, r24	; 0x0e
     916:	6c e7       	ldi	r22, 0x7C	; 124
     918:	71 e0       	ldi	r23, 0x01	; 1
     91a:	ce 01       	movw	r24, r28
     91c:	8b 5e       	subi	r24, 0xEB	; 235
     91e:	9e 4f       	sbci	r25, 0xFE	; 254
     920:	0e 94 24 20 	call	0x4048	; 0x4048 <_ZN6StringC1EPKc>
     924:	0c 87       	std	Y+12, r16	; 0x0c
     926:	1d 87       	std	Y+13, r17	; 0x0d
     928:	fe 01       	movw	r30, r28
     92a:	e2 5f       	subi	r30, 0xF2	; 242
     92c:	fe 4f       	sbci	r31, 0xFE	; 254
     92e:	89 e8       	ldi	r24, 0x89	; 137
     930:	93 e0       	ldi	r25, 0x03	; 3
     932:	91 83       	std	Z+1, r25	; 0x01
     934:	80 83       	st	Z, r24
     936:	32 96       	adiw	r30, 0x02	; 2
     938:	11 82       	std	Z+1, r1	; 0x01
     93a:	10 82       	st	Z, r1
     93c:	32 96       	adiw	r30, 0x02	; 2
     93e:	11 82       	std	Z+1, r1	; 0x01
     940:	10 82       	st	Z, r1
     942:	3b 96       	adiw	r30, 0x0b	; 11
     944:	11 82       	std	Z+1, r1	; 0x01
     946:	10 82       	st	Z, r1
     948:	39 97       	sbiw	r30, 0x09	; 9
     94a:	10 82       	st	Z, r1
     94c:	c5 5e       	subi	r28, 0xE5	; 229
     94e:	de 4f       	sbci	r29, 0xFE	; 254
     950:	86 e8       	ldi	r24, 0x86	; 134
     952:	93 e0       	ldi	r25, 0x03	; 3
     954:	99 83       	std	Y+1, r25	; 0x01
     956:	88 83       	st	Y, r24
     958:	df 91       	pop	r29
     95a:	cf 91       	pop	r28
     95c:	1f 91       	pop	r17
     95e:	0f 91       	pop	r16
     960:	08 95       	ret

00000962 <_ZN13Adafruit_FONA19internalReadRawDataEPcj>:
     962:	af 92       	push	r10
     964:	bf 92       	push	r11
     966:	cf 92       	push	r12
     968:	df 92       	push	r13
     96a:	ef 92       	push	r14
     96c:	ff 92       	push	r15
     96e:	0f 93       	push	r16
     970:	1f 93       	push	r17
     972:	cf 93       	push	r28
     974:	df 93       	push	r29
     976:	8c 01       	movw	r16, r24
     978:	5b 01       	movw	r10, r22
     97a:	7a 01       	movw	r14, r20
     97c:	c1 2c       	mov	r12, r1
     97e:	d1 2c       	mov	r13, r1
     980:	e5 01       	movw	r28, r10
     982:	cc 0d       	add	r28, r12
     984:	dd 1d       	adc	r29, r13
     986:	e1 14       	cp	r14, r1
     988:	f1 04       	cpc	r15, r1
     98a:	09 f1       	breq	.+66     	; 0x9ce <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x6c>
     98c:	d8 01       	movw	r26, r16
     98e:	ed 91       	ld	r30, X+
     990:	fc 91       	ld	r31, X
     992:	04 80       	ldd	r0, Z+4	; 0x04
     994:	f5 81       	ldd	r31, Z+5	; 0x05
     996:	e0 2d       	mov	r30, r0
     998:	c8 01       	movw	r24, r16
     99a:	09 95       	icall
     99c:	89 2b       	or	r24, r25
     99e:	81 f3       	breq	.-32     	; 0x980 <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x1e>
     9a0:	d8 01       	movw	r26, r16
     9a2:	ed 91       	ld	r30, X+
     9a4:	fc 91       	ld	r31, X
     9a6:	06 80       	ldd	r0, Z+6	; 0x06
     9a8:	f7 81       	ldd	r31, Z+7	; 0x07
     9aa:	e0 2d       	mov	r30, r0
     9ac:	c8 01       	movw	r24, r16
     9ae:	09 95       	icall
     9b0:	89 93       	st	Y+, r24
     9b2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     9b6:	95 ff       	sbrs	r25, 5
     9b8:	fc cf       	rjmp	.-8      	; 0x9b2 <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x50>
     9ba:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     9be:	bf ef       	ldi	r27, 0xFF	; 255
     9c0:	cb 1a       	sub	r12, r27
     9c2:	db 0a       	sbc	r13, r27
     9c4:	81 e0       	ldi	r24, 0x01	; 1
     9c6:	e8 1a       	sub	r14, r24
     9c8:	f1 08       	sbc	r15, r1
     9ca:	01 f7       	brne	.-64     	; 0x98c <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x2a>
     9cc:	d9 cf       	rjmp	.-78     	; 0x980 <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x1e>
     9ce:	18 82       	st	Y, r1
     9d0:	df 91       	pop	r29
     9d2:	cf 91       	pop	r28
     9d4:	1f 91       	pop	r17
     9d6:	0f 91       	pop	r16
     9d8:	ff 90       	pop	r15
     9da:	ef 90       	pop	r14
     9dc:	df 90       	pop	r13
     9de:	cf 90       	pop	r12
     9e0:	bf 90       	pop	r11
     9e2:	af 90       	pop	r10
     9e4:	08 95       	ret

000009e6 <_ZN13Adafruit_FONA12setUserAgentE6String>:
     9e6:	8b 5e       	subi	r24, 0xEB	; 235
     9e8:	9e 4f       	sbci	r25, 0xFE	; 254
     9ea:	0c 94 39 20 	jmp	0x4072	; 0x4072 <_ZN6StringaSERKS_>

000009ee <_ZN13Adafruit_FONA10flushInputEv>:
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	ec 01       	movw	r28, r24
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	8c 01       	movw	r16, r24
     9fe:	0f 5f       	subi	r16, 0xFF	; 255
     a00:	1f 4f       	sbci	r17, 0xFF	; 255
     a02:	88 97       	sbiw	r24, 0x28	; 40
     a04:	d8 f4       	brcc	.+54     	; 0xa3c <_ZN13Adafruit_FONA10flushInputEv+0x4e>
     a06:	e8 81       	ld	r30, Y
     a08:	f9 81       	ldd	r31, Y+1	; 0x01
     a0a:	04 80       	ldd	r0, Z+4	; 0x04
     a0c:	f5 81       	ldd	r31, Z+5	; 0x05
     a0e:	e0 2d       	mov	r30, r0
     a10:	ce 01       	movw	r24, r28
     a12:	09 95       	icall
     a14:	89 2b       	or	r24, r25
     a16:	51 f0       	breq	.+20     	; 0xa2c <_ZN13Adafruit_FONA10flushInputEv+0x3e>
     a18:	e8 81       	ld	r30, Y
     a1a:	f9 81       	ldd	r31, Y+1	; 0x01
     a1c:	06 80       	ldd	r0, Z+6	; 0x06
     a1e:	f7 81       	ldd	r31, Z+7	; 0x07
     a20:	e0 2d       	mov	r30, r0
     a22:	ce 01       	movw	r24, r28
     a24:	09 95       	icall
     a26:	00 e0       	ldi	r16, 0x00	; 0
     a28:	10 e0       	ldi	r17, 0x00	; 0
     a2a:	ed cf       	rjmp	.-38     	; 0xa06 <_ZN13Adafruit_FONA10flushInputEv+0x18>
     a2c:	61 e0       	ldi	r22, 0x01	; 1
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
     a38:	c8 01       	movw	r24, r16
     a3a:	e0 cf       	rjmp	.-64     	; 0x9fc <_ZN13Adafruit_FONA10flushInputEv+0xe>
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	1f 91       	pop	r17
     a42:	0f 91       	pop	r16
     a44:	08 95       	ret

00000a46 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>:
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	cf 93       	push	r28
     a4e:	df 93       	push	r29
     a50:	ec 01       	movw	r28, r24
     a52:	8b 01       	movw	r16, r22
     a54:	f4 2e       	mov	r15, r20
     a56:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
     a5a:	63 e4       	ldi	r22, 0x43	; 67
     a5c:	71 e0       	ldi	r23, 0x01	; 1
     a5e:	8e e9       	ldi	r24, 0x9E	; 158
     a60:	93 e0       	ldi	r25, 0x03	; 3
     a62:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     a66:	65 e3       	ldi	r22, 0x35	; 53
     a68:	71 e0       	ldi	r23, 0x01	; 1
     a6a:	8e e9       	ldi	r24, 0x9E	; 158
     a6c:	93 e0       	ldi	r25, 0x03	; 3
     a6e:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     a72:	b8 01       	movw	r22, r16
     a74:	8e e9       	ldi	r24, 0x9E	; 158
     a76:	93 e0       	ldi	r25, 0x03	; 3
     a78:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     a7c:	62 e2       	ldi	r22, 0x22	; 34
     a7e:	8e e9       	ldi	r24, 0x9E	; 158
     a80:	93 e0       	ldi	r25, 0x03	; 3
     a82:	0e 94 01 1d 	call	0x3a02	; 0x3a02 <_ZN5Print7printlnEc>
     a86:	c3 5e       	subi	r28, 0xE3	; 227
     a88:	de 4f       	sbci	r29, 0xFE	; 254
     a8a:	67 e2       	ldi	r22, 0x27	; 39
     a8c:	71 e0       	ldi	r23, 0x01	; 1
     a8e:	88 81       	ld	r24, Y
     a90:	99 81       	ldd	r25, Y+1	; 0x01
     a92:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     a96:	b8 01       	movw	r22, r16
     a98:	88 81       	ld	r24, Y
     a9a:	99 81       	ldd	r25, Y+1	; 0x01
     a9c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     aa0:	88 81       	ld	r24, Y
     aa2:	99 81       	ldd	r25, Y+1	; 0x01
     aa4:	ff 20       	and	r15, r15
     aa6:	19 f0       	breq	.+6      	; 0xaae <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb+0x68>
     aa8:	63 e2       	ldi	r22, 0x23	; 35
     aaa:	71 e0       	ldi	r23, 0x01	; 1
     aac:	02 c0       	rjmp	.+4      	; 0xab2 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb+0x6c>
     aae:	60 e2       	ldi	r22, 0x20	; 32
     ab0:	71 e0       	ldi	r23, 0x01	; 1
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	1f 91       	pop	r17
     ab8:	0f 91       	pop	r16
     aba:	ff 90       	pop	r15
     abc:	0c 94 9e 1c 	jmp	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>

00000ac0 <_ZN13Adafruit_FONA8readlineEjb>:
     ac0:	bf 92       	push	r11
     ac2:	cf 92       	push	r12
     ac4:	df 92       	push	r13
     ac6:	ef 92       	push	r14
     ac8:	ff 92       	push	r15
     aca:	0f 93       	push	r16
     acc:	1f 93       	push	r17
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
     ad2:	7c 01       	movw	r14, r24
     ad4:	b4 2e       	mov	r11, r20
     ad6:	8b 01       	movw	r16, r22
     ad8:	00 0f       	add	r16, r16
     ada:	11 1f       	adc	r17, r17
     adc:	00 0f       	add	r16, r16
     ade:	11 1f       	adc	r17, r17
     ae0:	c0 e0       	ldi	r28, 0x00	; 0
     ae2:	d0 e0       	ldi	r29, 0x00	; 0
     ae4:	67 01       	movw	r12, r14
     ae6:	83 ee       	ldi	r24, 0xE3	; 227
     ae8:	c8 1a       	sub	r12, r24
     aea:	8e ef       	ldi	r24, 0xFE	; 254
     aec:	d8 0a       	sbc	r13, r24
     aee:	01 15       	cp	r16, r1
     af0:	11 05       	cpc	r17, r1
     af2:	c9 f1       	breq	.+114    	; 0xb66 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     af4:	ce 3f       	cpi	r28, 0xFE	; 254
     af6:	d1 05       	cpc	r29, r1
     af8:	98 f0       	brcs	.+38     	; 0xb20 <_ZN13Adafruit_FONA8readlineEjb+0x60>
     afa:	62 e9       	ldi	r22, 0x92	; 146
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	8e e9       	ldi	r24, 0x9E	; 158
     b00:	93 e0       	ldi	r25, 0x03	; 3
     b02:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
     b06:	2f c0       	rjmp	.+94     	; 0xb66 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b08:	f6 01       	movw	r30, r12
     b0a:	80 81       	ld	r24, Z
     b0c:	91 81       	ldd	r25, Z+1	; 0x01
     b0e:	dc 01       	movw	r26, r24
     b10:	ed 91       	ld	r30, X+
     b12:	fc 91       	ld	r31, X
     b14:	06 80       	ldd	r0, Z+6	; 0x06
     b16:	f7 81       	ldd	r31, Z+7	; 0x07
     b18:	e0 2d       	mov	r30, r0
     b1a:	09 95       	icall
     b1c:	8d 30       	cpi	r24, 0x0D	; 13
     b1e:	69 f4       	brne	.+26     	; 0xb3a <_ZN13Adafruit_FONA8readlineEjb+0x7a>
     b20:	d6 01       	movw	r26, r12
     b22:	8d 91       	ld	r24, X+
     b24:	9c 91       	ld	r25, X
     b26:	dc 01       	movw	r26, r24
     b28:	ed 91       	ld	r30, X+
     b2a:	fc 91       	ld	r31, X
     b2c:	04 80       	ldd	r0, Z+4	; 0x04
     b2e:	f5 81       	ldd	r31, Z+5	; 0x05
     b30:	e0 2d       	mov	r30, r0
     b32:	09 95       	icall
     b34:	89 2b       	or	r24, r25
     b36:	41 f7       	brne	.-48     	; 0xb08 <_ZN13Adafruit_FONA8readlineEjb+0x48>
     b38:	0c c0       	rjmp	.+24     	; 0xb52 <_ZN13Adafruit_FONA8readlineEjb+0x92>
     b3a:	8a 30       	cpi	r24, 0x0A	; 10
     b3c:	21 f4       	brne	.+8      	; 0xb46 <_ZN13Adafruit_FONA8readlineEjb+0x86>
     b3e:	20 97       	sbiw	r28, 0x00	; 0
     b40:	79 f3       	breq	.-34     	; 0xb20 <_ZN13Adafruit_FONA8readlineEjb+0x60>
     b42:	bb 20       	and	r11, r11
     b44:	81 f0       	breq	.+32     	; 0xb66 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b46:	f7 01       	movw	r30, r14
     b48:	ec 0f       	add	r30, r28
     b4a:	fd 1f       	adc	r31, r29
     b4c:	87 87       	std	Z+15, r24	; 0x0f
     b4e:	21 96       	adiw	r28, 0x01	; 1
     b50:	e7 cf       	rjmp	.-50     	; 0xb20 <_ZN13Adafruit_FONA8readlineEjb+0x60>
     b52:	01 50       	subi	r16, 0x01	; 1
     b54:	11 09       	sbc	r17, r1
     b56:	39 f0       	breq	.+14     	; 0xb66 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b58:	61 e0       	ldi	r22, 0x01	; 1
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
     b64:	c4 cf       	rjmp	.-120    	; 0xaee <_ZN13Adafruit_FONA8readlineEjb+0x2e>
     b66:	f7 01       	movw	r30, r14
     b68:	ec 0f       	add	r30, r28
     b6a:	fd 1f       	adc	r31, r29
     b6c:	17 86       	std	Z+15, r1	; 0x0f
     b6e:	8c 2f       	mov	r24, r28
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	1f 91       	pop	r17
     b76:	0f 91       	pop	r16
     b78:	ff 90       	pop	r15
     b7a:	ef 90       	pop	r14
     b7c:	df 90       	pop	r13
     b7e:	cf 90       	pop	r12
     b80:	bf 90       	pop	r11
     b82:	08 95       	ret

00000b84 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>:
     b84:	0f 93       	push	r16
     b86:	1f 93       	push	r17
     b88:	cf 93       	push	r28
     b8a:	df 93       	push	r29
     b8c:	ec 01       	movw	r28, r24
     b8e:	8b 01       	movw	r16, r22
     b90:	ba 01       	movw	r22, r20
     b92:	40 e0       	ldi	r20, 0x00	; 0
     b94:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
     b98:	68 e9       	ldi	r22, 0x98	; 152
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	8e e9       	ldi	r24, 0x9E	; 158
     b9e:	93 e0       	ldi	r25, 0x03	; 3
     ba0:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     ba4:	2f 96       	adiw	r28, 0x0f	; 15
     ba6:	be 01       	movw	r22, r28
     ba8:	8e e9       	ldi	r24, 0x9E	; 158
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
     bb0:	b8 01       	movw	r22, r16
     bb2:	ce 01       	movw	r24, r28
     bb4:	0e 94 99 25 	call	0x4b32	; 0x4b32 <strcmp_P>
     bb8:	21 e0       	ldi	r18, 0x01	; 1
     bba:	89 2b       	or	r24, r25
     bbc:	09 f0       	breq	.+2      	; 0xbc0 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj+0x3c>
     bbe:	20 e0       	ldi	r18, 0x00	; 0
     bc0:	82 2f       	mov	r24, r18
     bc2:	df 91       	pop	r29
     bc4:	cf 91       	pop	r28
     bc6:	1f 91       	pop	r17
     bc8:	0f 91       	pop	r16
     bca:	08 95       	ret

00000bcc <_ZN13Adafruit_FONA13HTTP_para_endEb>:
     bcc:	cf 93       	push	r28
     bce:	df 93       	push	r29
     bd0:	ec 01       	movw	r28, r24
     bd2:	fc 01       	movw	r30, r24
     bd4:	e3 5e       	subi	r30, 0xE3	; 227
     bd6:	fe 4f       	sbci	r31, 0xFE	; 254
     bd8:	66 23       	and	r22, r22
     bda:	31 f0       	breq	.+12     	; 0xbe8 <_ZN13Adafruit_FONA13HTTP_para_endEb+0x1c>
     bdc:	62 e2       	ldi	r22, 0x22	; 34
     bde:	80 81       	ld	r24, Z
     be0:	91 81       	ldd	r25, Z+1	; 0x01
     be2:	0e 94 01 1d 	call	0x3a02	; 0x3a02 <_ZN5Print7printlnEc>
     be6:	04 c0       	rjmp	.+8      	; 0xbf0 <_ZN13Adafruit_FONA13HTTP_para_endEb+0x24>
     be8:	80 81       	ld	r24, Z
     bea:	91 81       	ldd	r25, Z+1	; 0x01
     bec:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
     bf0:	fe 01       	movw	r30, r28
     bf2:	e5 5e       	subi	r30, 0xE5	; 229
     bf4:	fe 4f       	sbci	r31, 0xFE	; 254
     bf6:	60 81       	ld	r22, Z
     bf8:	71 81       	ldd	r23, Z+1	; 0x01
     bfa:	40 e1       	ldi	r20, 0x10	; 16
     bfc:	57 e2       	ldi	r21, 0x27	; 39
     bfe:	ce 01       	movw	r24, r28
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>

00000c08 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelper6String>:
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	ec 01       	movw	r28, r24
     c12:	8a 01       	movw	r16, r20
     c14:	41 e0       	ldi	r20, 0x01	; 1
     c16:	0e 94 23 05 	call	0xa46	; 0xa46 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c1a:	fe 01       	movw	r30, r28
     c1c:	e3 5e       	subi	r30, 0xE3	; 227
     c1e:	fe 4f       	sbci	r31, 0xFE	; 254
     c20:	b8 01       	movw	r22, r16
     c22:	80 81       	ld	r24, Z
     c24:	91 81       	ldd	r25, Z+1	; 0x01
     c26:	0e 94 c2 1c 	call	0x3984	; 0x3984 <_ZN5Print5printERK6String>
     c2a:	61 e0       	ldi	r22, 0x01	; 1
     c2c:	ce 01       	movw	r24, r28
     c2e:	df 91       	pop	r29
     c30:	cf 91       	pop	r28
     c32:	1f 91       	pop	r17
     c34:	0f 91       	pop	r16
     c36:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c3a <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>:
     c3a:	0f 93       	push	r16
     c3c:	1f 93       	push	r17
     c3e:	cf 93       	push	r28
     c40:	df 93       	push	r29
     c42:	ec 01       	movw	r28, r24
     c44:	8a 01       	movw	r16, r20
     c46:	41 e0       	ldi	r20, 0x01	; 1
     c48:	0e 94 23 05 	call	0xa46	; 0xa46 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c4c:	fe 01       	movw	r30, r28
     c4e:	e3 5e       	subi	r30, 0xE3	; 227
     c50:	fe 4f       	sbci	r31, 0xFE	; 254
     c52:	b8 01       	movw	r22, r16
     c54:	80 81       	ld	r24, Z
     c56:	91 81       	ldd	r25, Z+1	; 0x01
     c58:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     c5c:	61 e0       	ldi	r22, 0x01	; 1
     c5e:	ce 01       	movw	r24, r28
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	1f 91       	pop	r17
     c66:	0f 91       	pop	r16
     c68:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c6c <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperl>:
     c6c:	cf 92       	push	r12
     c6e:	df 92       	push	r13
     c70:	ef 92       	push	r14
     c72:	ff 92       	push	r15
     c74:	cf 93       	push	r28
     c76:	df 93       	push	r29
     c78:	ec 01       	movw	r28, r24
     c7a:	69 01       	movw	r12, r18
     c7c:	7a 01       	movw	r14, r20
     c7e:	40 e0       	ldi	r20, 0x00	; 0
     c80:	0e 94 23 05 	call	0xa46	; 0xa46 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c84:	fe 01       	movw	r30, r28
     c86:	e3 5e       	subi	r30, 0xE3	; 227
     c88:	fe 4f       	sbci	r31, 0xFE	; 254
     c8a:	2a e0       	ldi	r18, 0x0A	; 10
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	b7 01       	movw	r22, r14
     c90:	a6 01       	movw	r20, r12
     c92:	80 81       	ld	r24, Z
     c94:	91 81       	ldd	r25, Z+1	; 0x01
     c96:	0e 94 ac 1d 	call	0x3b58	; 0x3b58 <_ZN5Print5printEli>
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	ce 01       	movw	r24, r28
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	ff 90       	pop	r15
     ca4:	ef 90       	pop	r14
     ca6:	df 90       	pop	r13
     ca8:	cf 90       	pop	r12
     caa:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000cae <_ZN13Adafruit_FONA9HTTP_dataEmm>:
     cae:	4f 92       	push	r4
     cb0:	5f 92       	push	r5
     cb2:	6f 92       	push	r6
     cb4:	7f 92       	push	r7
     cb6:	8f 92       	push	r8
     cb8:	9f 92       	push	r9
     cba:	af 92       	push	r10
     cbc:	bf 92       	push	r11
     cbe:	ef 92       	push	r14
     cc0:	ff 92       	push	r15
     cc2:	0f 93       	push	r16
     cc4:	1f 93       	push	r17
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	7c 01       	movw	r14, r24
     ccc:	2a 01       	movw	r4, r20
     cce:	3b 01       	movw	r6, r22
     cd0:	48 01       	movw	r8, r16
     cd2:	59 01       	movw	r10, r18
     cd4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
     cd8:	69 e1       	ldi	r22, 0x19	; 25
     cda:	71 e0       	ldi	r23, 0x01	; 1
     cdc:	8e e9       	ldi	r24, 0x9E	; 158
     cde:	93 e0       	ldi	r25, 0x03	; 3
     ce0:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     ce4:	6c e0       	ldi	r22, 0x0C	; 12
     ce6:	71 e0       	ldi	r23, 0x01	; 1
     ce8:	8e e9       	ldi	r24, 0x9E	; 158
     cea:	93 e0       	ldi	r25, 0x03	; 3
     cec:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     cf0:	2a e0       	ldi	r18, 0x0A	; 10
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	b3 01       	movw	r22, r6
     cf6:	a2 01       	movw	r20, r4
     cf8:	8e e9       	ldi	r24, 0x9E	; 158
     cfa:	93 e0       	ldi	r25, 0x03	; 3
     cfc:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <_ZN5Print5printEmi>
     d00:	6c e2       	ldi	r22, 0x2C	; 44
     d02:	8e e9       	ldi	r24, 0x9E	; 158
     d04:	93 e0       	ldi	r25, 0x03	; 3
     d06:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <_ZN5Print5printEc>
     d0a:	2a e0       	ldi	r18, 0x0A	; 10
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	b5 01       	movw	r22, r10
     d10:	a4 01       	movw	r20, r8
     d12:	8e e9       	ldi	r24, 0x9E	; 158
     d14:	93 e0       	ldi	r25, 0x03	; 3
     d16:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <_ZN5Print7printlnEmi>
     d1a:	e7 01       	movw	r28, r14
     d1c:	c3 5e       	subi	r28, 0xE3	; 227
     d1e:	de 4f       	sbci	r29, 0xFE	; 254
     d20:	6f ef       	ldi	r22, 0xFF	; 255
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	88 81       	ld	r24, Y
     d26:	99 81       	ldd	r25, Y+1	; 0x01
     d28:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     d2c:	2a e0       	ldi	r18, 0x0A	; 10
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	b3 01       	movw	r22, r6
     d32:	a2 01       	movw	r20, r4
     d34:	88 81       	ld	r24, Y
     d36:	99 81       	ldd	r25, Y+1	; 0x01
     d38:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <_ZN5Print5printEmi>
     d3c:	67 e0       	ldi	r22, 0x07	; 7
     d3e:	71 e0       	ldi	r23, 0x01	; 1
     d40:	88 81       	ld	r24, Y
     d42:	99 81       	ldd	r25, Y+1	; 0x01
     d44:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
     d48:	2a e0       	ldi	r18, 0x0A	; 10
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	b5 01       	movw	r22, r10
     d4e:	a4 01       	movw	r20, r8
     d50:	88 81       	ld	r24, Y
     d52:	99 81       	ldd	r25, Y+1	; 0x01
     d54:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <_ZN5Print7printlnEmi>
     d58:	40 e1       	ldi	r20, 0x10	; 16
     d5a:	57 e2       	ldi	r21, 0x27	; 39
     d5c:	66 ef       	ldi	r22, 0xF6	; 246
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	c7 01       	movw	r24, r14
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	ff 90       	pop	r15
     d6c:	ef 90       	pop	r14
     d6e:	bf 90       	pop	r11
     d70:	af 90       	pop	r10
     d72:	9f 90       	pop	r9
     d74:	8f 90       	pop	r8
     d76:	7f 90       	pop	r7
     d78:	6f 90       	pop	r6
     d7a:	5f 90       	pop	r5
     d7c:	4f 90       	pop	r4
     d7e:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>

00000d82 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>:
     d82:	ef 92       	push	r14
     d84:	ff 92       	push	r15
     d86:	0f 93       	push	r16
     d88:	1f 93       	push	r17
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	ec 01       	movw	r28, r24
     d90:	8b 01       	movw	r16, r22
     d92:	7a 01       	movw	r14, r20
     d94:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
     d98:	6b e8       	ldi	r22, 0x8B	; 139
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	8e e9       	ldi	r24, 0x9E	; 158
     d9e:	93 e0       	ldi	r25, 0x03	; 3
     da0:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     da4:	b8 01       	movw	r22, r16
     da6:	8e e9       	ldi	r24, 0x9E	; 158
     da8:	93 e0       	ldi	r25, 0x03	; 3
     daa:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
     dae:	fe 01       	movw	r30, r28
     db0:	e3 5e       	subi	r30, 0xE3	; 227
     db2:	fe 4f       	sbci	r31, 0xFE	; 254
     db4:	b8 01       	movw	r22, r16
     db6:	80 81       	ld	r24, Z
     db8:	91 81       	ldd	r25, Z+1	; 0x01
     dba:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
     dbe:	40 e0       	ldi	r20, 0x00	; 0
     dc0:	b7 01       	movw	r22, r14
     dc2:	ce 01       	movw	r24, r28
     dc4:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
     dc8:	18 2f       	mov	r17, r24
     dca:	64 e8       	ldi	r22, 0x84	; 132
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	8e e9       	ldi	r24, 0x9E	; 158
     dd0:	93 e0       	ldi	r25, 0x03	; 3
     dd2:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     dd6:	be 01       	movw	r22, r28
     dd8:	61 5f       	subi	r22, 0xF1	; 241
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	8e e9       	ldi	r24, 0x9E	; 158
     dde:	93 e0       	ldi	r25, 0x03	; 3
     de0:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
     de4:	81 2f       	mov	r24, r17
     de6:	df 91       	pop	r29
     de8:	cf 91       	pop	r28
     dea:	1f 91       	pop	r17
     dec:	0f 91       	pop	r16
     dee:	ff 90       	pop	r15
     df0:	ef 90       	pop	r14
     df2:	08 95       	ret

00000df4 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>:
     df4:	8f 92       	push	r8
     df6:	9f 92       	push	r9
     df8:	af 92       	push	r10
     dfa:	bf 92       	push	r11
     dfc:	cf 92       	push	r12
     dfe:	df 92       	push	r13
     e00:	ef 92       	push	r14
     e02:	ff 92       	push	r15
     e04:	0f 93       	push	r16
     e06:	1f 93       	push	r17
     e08:	cf 93       	push	r28
     e0a:	df 93       	push	r29
     e0c:	ec 01       	movw	r28, r24
     e0e:	6b 01       	movw	r12, r22
     e10:	49 01       	movw	r8, r18
     e12:	5a 01       	movw	r10, r20
     e14:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
     e18:	6d e7       	ldi	r22, 0x7D	; 125
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	8e e9       	ldi	r24, 0x9E	; 158
     e1e:	93 e0       	ldi	r25, 0x03	; 3
     e20:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     e24:	b6 01       	movw	r22, r12
     e26:	8e e9       	ldi	r24, 0x9E	; 158
     e28:	93 e0       	ldi	r25, 0x03	; 3
     e2a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     e2e:	2a e0       	ldi	r18, 0x0A	; 10
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	b5 01       	movw	r22, r10
     e34:	a4 01       	movw	r20, r8
     e36:	8e e9       	ldi	r24, 0x9E	; 158
     e38:	93 e0       	ldi	r25, 0x03	; 3
     e3a:	0e 94 0d 1e 	call	0x3c1a	; 0x3c1a <_ZN5Print7printlnEli>
     e3e:	7e 01       	movw	r14, r28
     e40:	83 ee       	ldi	r24, 0xE3	; 227
     e42:	e8 1a       	sub	r14, r24
     e44:	8e ef       	ldi	r24, 0xFE	; 254
     e46:	f8 0a       	sbc	r15, r24
     e48:	b6 01       	movw	r22, r12
     e4a:	f7 01       	movw	r30, r14
     e4c:	80 81       	ld	r24, Z
     e4e:	91 81       	ldd	r25, Z+1	; 0x01
     e50:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     e54:	2a e0       	ldi	r18, 0x0A	; 10
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	b5 01       	movw	r22, r10
     e5a:	a4 01       	movw	r20, r8
     e5c:	f7 01       	movw	r30, r14
     e5e:	80 81       	ld	r24, Z
     e60:	91 81       	ldd	r25, Z+1	; 0x01
     e62:	0e 94 0d 1e 	call	0x3c1a	; 0x3c1a <_ZN5Print7printlnEli>
     e66:	40 e0       	ldi	r20, 0x00	; 0
     e68:	b8 01       	movw	r22, r16
     e6a:	ce 01       	movw	r24, r28
     e6c:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
     e70:	18 2f       	mov	r17, r24
     e72:	66 e7       	ldi	r22, 0x76	; 118
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	8e e9       	ldi	r24, 0x9E	; 158
     e78:	93 e0       	ldi	r25, 0x03	; 3
     e7a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     e7e:	be 01       	movw	r22, r28
     e80:	61 5f       	subi	r22, 0xF1	; 241
     e82:	7f 4f       	sbci	r23, 0xFF	; 255
     e84:	8e e9       	ldi	r24, 0x9E	; 158
     e86:	93 e0       	ldi	r25, 0x03	; 3
     e88:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
     e8c:	81 2f       	mov	r24, r17
     e8e:	df 91       	pop	r29
     e90:	cf 91       	pop	r28
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	ff 90       	pop	r15
     e98:	ef 90       	pop	r14
     e9a:	df 90       	pop	r13
     e9c:	cf 90       	pop	r12
     e9e:	bf 90       	pop	r11
     ea0:	af 90       	pop	r10
     ea2:	9f 90       	pop	r9
     ea4:	8f 90       	pop	r8
     ea6:	08 95       	ret

00000ea8 <_ZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_j>:
     ea8:	af 92       	push	r10
     eaa:	bf 92       	push	r11
     eac:	cf 92       	push	r12
     eae:	df 92       	push	r13
     eb0:	ef 92       	push	r14
     eb2:	ff 92       	push	r15
     eb4:	0f 93       	push	r16
     eb6:	1f 93       	push	r17
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	ec 01       	movw	r28, r24
     ebe:	6b 01       	movw	r12, r22
     ec0:	7a 01       	movw	r14, r20
     ec2:	59 01       	movw	r10, r18
     ec4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
     ec8:	6f e6       	ldi	r22, 0x6F	; 111
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	8e e9       	ldi	r24, 0x9E	; 158
     ece:	93 e0       	ldi	r25, 0x03	; 3
     ed0:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     ed4:	b6 01       	movw	r22, r12
     ed6:	8e e9       	ldi	r24, 0x9E	; 158
     ed8:	93 e0       	ldi	r25, 0x03	; 3
     eda:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     ede:	62 e2       	ldi	r22, 0x22	; 34
     ee0:	8e e9       	ldi	r24, 0x9E	; 158
     ee2:	93 e0       	ldi	r25, 0x03	; 3
     ee4:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <_ZN5Print5printEc>
     ee8:	b7 01       	movw	r22, r14
     eea:	8e e9       	ldi	r24, 0x9E	; 158
     eec:	93 e0       	ldi	r25, 0x03	; 3
     eee:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     ef2:	62 e2       	ldi	r22, 0x22	; 34
     ef4:	8e e9       	ldi	r24, 0x9E	; 158
     ef6:	93 e0       	ldi	r25, 0x03	; 3
     ef8:	0e 94 01 1d 	call	0x3a02	; 0x3a02 <_ZN5Print7printlnEc>
     efc:	8e 01       	movw	r16, r28
     efe:	03 5e       	subi	r16, 0xE3	; 227
     f00:	1e 4f       	sbci	r17, 0xFE	; 254
     f02:	b6 01       	movw	r22, r12
     f04:	f8 01       	movw	r30, r16
     f06:	80 81       	ld	r24, Z
     f08:	91 81       	ldd	r25, Z+1	; 0x01
     f0a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     f0e:	62 e2       	ldi	r22, 0x22	; 34
     f10:	f8 01       	movw	r30, r16
     f12:	80 81       	ld	r24, Z
     f14:	91 81       	ldd	r25, Z+1	; 0x01
     f16:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <_ZN5Print5printEc>
     f1a:	b7 01       	movw	r22, r14
     f1c:	f8 01       	movw	r30, r16
     f1e:	80 81       	ld	r24, Z
     f20:	91 81       	ldd	r25, Z+1	; 0x01
     f22:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     f26:	62 e2       	ldi	r22, 0x22	; 34
     f28:	f8 01       	movw	r30, r16
     f2a:	80 81       	ld	r24, Z
     f2c:	91 81       	ldd	r25, Z+1	; 0x01
     f2e:	0e 94 01 1d 	call	0x3a02	; 0x3a02 <_ZN5Print7printlnEc>
     f32:	40 e0       	ldi	r20, 0x00	; 0
     f34:	b5 01       	movw	r22, r10
     f36:	ce 01       	movw	r24, r28
     f38:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
     f3c:	18 2f       	mov	r17, r24
     f3e:	68 e6       	ldi	r22, 0x68	; 104
     f40:	70 e0       	ldi	r23, 0x00	; 0
     f42:	8e e9       	ldi	r24, 0x9E	; 158
     f44:	93 e0       	ldi	r25, 0x03	; 3
     f46:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
     f4a:	be 01       	movw	r22, r28
     f4c:	61 5f       	subi	r22, 0xF1	; 241
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8e e9       	ldi	r24, 0x9E	; 158
     f52:	93 e0       	ldi	r25, 0x03	; 3
     f54:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
     f58:	81 2f       	mov	r24, r17
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	1f 91       	pop	r17
     f60:	0f 91       	pop	r16
     f62:	ff 90       	pop	r15
     f64:	ef 90       	pop	r14
     f66:	df 90       	pop	r13
     f68:	cf 90       	pop	r12
     f6a:	bf 90       	pop	r11
     f6c:	af 90       	pop	r10
     f6e:	08 95       	ret

00000f70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>:
     f70:	0f 93       	push	r16
     f72:	1f 93       	push	r17
     f74:	cf 93       	push	r28
     f76:	df 93       	push	r29
     f78:	ec 01       	movw	r28, r24
     f7a:	8a 01       	movw	r16, r20
     f7c:	a9 01       	movw	r20, r18
     f7e:	0e 94 c1 06 	call	0xd82	; 0xd82 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>
     f82:	88 23       	and	r24, r24
     f84:	41 f0       	breq	.+16     	; 0xf96 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j+0x26>
     f86:	b8 01       	movw	r22, r16
     f88:	ce 01       	movw	r24, r28
     f8a:	0f 96       	adiw	r24, 0x0f	; 15
     f8c:	0e 94 99 25 	call	0x4b32	; 0x4b32 <strcmp_P>
     f90:	21 e0       	ldi	r18, 0x01	; 1
     f92:	89 2b       	or	r24, r25
     f94:	09 f0       	breq	.+2      	; 0xf98 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j+0x28>
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	82 2f       	mov	r24, r18
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	08 95       	ret

00000fa4 <_ZN13Adafruit_FONA5beginEhh>:
     fa4:	cf 92       	push	r12
     fa6:	df 92       	push	r13
     fa8:	ef 92       	push	r14
     faa:	ff 92       	push	r15
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	ec 01       	movw	r28, r24
     fb6:	f6 2e       	mov	r15, r22
     fb8:	e4 2e       	mov	r14, r20
     fba:	8f e1       	ldi	r24, 0x1F	; 31
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 5d 1c 	call	0x38ba	; 0x38ba <_Znwj>
     fc2:	8c 01       	movw	r16, r24
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	4e 2d       	mov	r20, r14
     fc8:	6f 2d       	mov	r22, r15
     fca:	0e 94 5f 22 	call	0x44be	; 0x44be <_ZN14SoftwareSerialC1Ehhb>
     fce:	7e 01       	movw	r14, r28
     fd0:	83 ee       	ldi	r24, 0xE3	; 227
     fd2:	e8 1a       	sub	r14, r24
     fd4:	8e ef       	ldi	r24, 0xFE	; 254
     fd6:	f8 0a       	sbc	r15, r24
     fd8:	d7 01       	movw	r26, r14
     fda:	0d 93       	st	X+, r16
     fdc:	1c 93       	st	X, r17
     fde:	40 ec       	ldi	r20, 0xC0	; 192
     fe0:	52 e1       	ldi	r21, 0x12	; 18
     fe2:	60 e0       	ldi	r22, 0x00	; 0
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	c8 01       	movw	r24, r16
     fe8:	0e 94 8a 22 	call	0x4514	; 0x4514 <_ZN14SoftwareSerial5beginEl>
     fec:	61 e0       	ldi	r22, 0x01	; 1
     fee:	8c 85       	ldd	r24, Y+12	; 0x0c
     ff0:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <pinMode>
     ff4:	61 e0       	ldi	r22, 0x01	; 1
     ff6:	8c 85       	ldd	r24, Y+12	; 0x0c
     ff8:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
     ffc:	6a e0       	ldi	r22, 0x0A	; 10
     ffe:	70 e0       	ldi	r23, 0x00	; 0
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    1008:	60 e0       	ldi	r22, 0x00	; 0
    100a:	8c 85       	ldd	r24, Y+12	; 0x0c
    100c:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
    1010:	64 e6       	ldi	r22, 0x64	; 100
    1012:	70 e0       	ldi	r23, 0x00	; 0
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    101c:	61 e0       	ldi	r22, 0x01	; 1
    101e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1020:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
    1024:	65 e6       	ldi	r22, 0x65	; 101
    1026:	73 e0       	ldi	r23, 0x03	; 3
    1028:	8e e9       	ldi	r24, 0x9E	; 158
    102a:	93 e0       	ldi	r25, 0x03	; 3
    102c:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
    1030:	8e e0       	ldi	r24, 0x0E	; 14
    1032:	c8 2e       	mov	r12, r24
    1034:	d1 2c       	mov	r13, r1
    1036:	8e 01       	movw	r16, r28
    1038:	05 5e       	subi	r16, 0xE5	; 229
    103a:	1e 4f       	sbci	r17, 0xFE	; 254
    103c:	f7 01       	movw	r30, r14
    103e:	80 81       	ld	r24, Z
    1040:	91 81       	ldd	r25, Z+1	; 0x01
    1042:	dc 01       	movw	r26, r24
    1044:	ed 91       	ld	r30, X+
    1046:	fc 91       	ld	r31, X
    1048:	04 80       	ldd	r0, Z+4	; 0x04
    104a:	f5 81       	ldd	r31, Z+5	; 0x05
    104c:	e0 2d       	mov	r30, r0
    104e:	09 95       	icall
    1050:	89 2b       	or	r24, r25
    1052:	59 f0       	breq	.+22     	; 0x106a <_ZN13Adafruit_FONA5beginEhh+0xc6>
    1054:	f7 01       	movw	r30, r14
    1056:	80 81       	ld	r24, Z
    1058:	91 81       	ldd	r25, Z+1	; 0x01
    105a:	dc 01       	movw	r26, r24
    105c:	ed 91       	ld	r30, X+
    105e:	fc 91       	ld	r31, X
    1060:	06 80       	ldd	r0, Z+6	; 0x06
    1062:	f7 81       	ldd	r31, Z+7	; 0x07
    1064:	e0 2d       	mov	r30, r0
    1066:	09 95       	icall
    1068:	e9 cf       	rjmp	.-46     	; 0x103c <_ZN13Adafruit_FONA5beginEhh+0x98>
    106a:	f8 01       	movw	r30, r16
    106c:	40 81       	ld	r20, Z
    106e:	51 81       	ldd	r21, Z+1	; 0x01
    1070:	24 ef       	ldi	r18, 0xF4	; 244
    1072:	31 e0       	ldi	r19, 0x01	; 1
    1074:	62 e6       	ldi	r22, 0x62	; 98
    1076:	73 e0       	ldi	r23, 0x03	; 3
    1078:	ce 01       	movw	r24, r28
    107a:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    107e:	81 11       	cpse	r24, r1
    1080:	34 c0       	rjmp	.+104    	; 0x10ea <_ZN13Adafruit_FONA5beginEhh+0x146>
    1082:	d7 01       	movw	r26, r14
    1084:	8d 91       	ld	r24, X+
    1086:	9c 91       	ld	r25, X
    1088:	dc 01       	movw	r26, r24
    108a:	ed 91       	ld	r30, X+
    108c:	fc 91       	ld	r31, X
    108e:	04 80       	ldd	r0, Z+4	; 0x04
    1090:	f5 81       	ldd	r31, Z+5	; 0x05
    1092:	e0 2d       	mov	r30, r0
    1094:	09 95       	icall
    1096:	89 2b       	or	r24, r25
    1098:	59 f0       	breq	.+22     	; 0x10b0 <_ZN13Adafruit_FONA5beginEhh+0x10c>
    109a:	f7 01       	movw	r30, r14
    109c:	80 81       	ld	r24, Z
    109e:	91 81       	ldd	r25, Z+1	; 0x01
    10a0:	dc 01       	movw	r26, r24
    10a2:	ed 91       	ld	r30, X+
    10a4:	fc 91       	ld	r31, X
    10a6:	06 80       	ldd	r0, Z+6	; 0x06
    10a8:	f7 81       	ldd	r31, Z+7	; 0x07
    10aa:	e0 2d       	mov	r30, r0
    10ac:	09 95       	icall
    10ae:	e9 cf       	rjmp	.-46     	; 0x1082 <_ZN13Adafruit_FONA5beginEhh+0xde>
    10b0:	24 ef       	ldi	r18, 0xF4	; 244
    10b2:	31 e0       	ldi	r19, 0x01	; 1
    10b4:	4f e5       	ldi	r20, 0x5F	; 95
    10b6:	53 e0       	ldi	r21, 0x03	; 3
    10b8:	6c e5       	ldi	r22, 0x5C	; 92
    10ba:	73 e0       	ldi	r23, 0x03	; 3
    10bc:	ce 01       	movw	r24, r28
    10be:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    10c2:	81 11       	cpse	r24, r1
    10c4:	12 c0       	rjmp	.+36     	; 0x10ea <_ZN13Adafruit_FONA5beginEhh+0x146>
    10c6:	64 ef       	ldi	r22, 0xF4	; 244
    10c8:	71 e0       	ldi	r23, 0x01	; 1
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    10d2:	b1 e0       	ldi	r27, 0x01	; 1
    10d4:	cb 1a       	sub	r12, r27
    10d6:	d1 08       	sbc	r13, r1
    10d8:	09 f0       	breq	.+2      	; 0x10dc <_ZN13Adafruit_FONA5beginEhh+0x138>
    10da:	b0 cf       	rjmp	.-160    	; 0x103c <_ZN13Adafruit_FONA5beginEhh+0x98>
    10dc:	5e c0       	rjmp	.+188    	; 0x119a <_ZN13Adafruit_FONA5beginEhh+0x1f6>
    10de:	64 e6       	ldi	r22, 0x64	; 100
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	80 e0       	ldi	r24, 0x00	; 0
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    10ea:	f8 01       	movw	r30, r16
    10ec:	40 81       	ld	r20, Z
    10ee:	51 81       	ldd	r21, Z+1	; 0x01
    10f0:	24 ef       	ldi	r18, 0xF4	; 244
    10f2:	31 e0       	ldi	r19, 0x01	; 1
    10f4:	6f e2       	ldi	r22, 0x2F	; 47
    10f6:	73 e0       	ldi	r23, 0x03	; 3
    10f8:	ce 01       	movw	r24, r28
    10fa:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    10fe:	64 e6       	ldi	r22, 0x64	; 100
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    110a:	d8 01       	movw	r26, r16
    110c:	4d 91       	ld	r20, X+
    110e:	5c 91       	ld	r21, X
    1110:	24 ef       	ldi	r18, 0xF4	; 244
    1112:	31 e0       	ldi	r19, 0x01	; 1
    1114:	6a e2       	ldi	r22, 0x2A	; 42
    1116:	73 e0       	ldi	r23, 0x03	; 3
    1118:	ce 01       	movw	r24, r28
    111a:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    111e:	81 11       	cpse	r24, r1
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <_ZN13Adafruit_FONA5beginEhh+0x182>
    1122:	12 e0       	ldi	r17, 0x02	; 2
    1124:	01 c0       	rjmp	.+2      	; 0x1128 <_ZN13Adafruit_FONA5beginEhh+0x184>
    1126:	11 e0       	ldi	r17, 0x01	; 1
    1128:	64 e6       	ldi	r22, 0x64	; 100
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    1134:	ce 01       	movw	r24, r28
    1136:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
    113a:	63 e2       	ldi	r22, 0x23	; 35
    113c:	73 e0       	ldi	r23, 0x03	; 3
    113e:	8e e9       	ldi	r24, 0x9E	; 158
    1140:	93 e0       	ldi	r25, 0x03	; 3
    1142:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1146:	69 e0       	ldi	r22, 0x09	; 9
    1148:	71 e0       	ldi	r23, 0x01	; 1
    114a:	8e e9       	ldi	r24, 0x9E	; 158
    114c:	93 e0       	ldi	r25, 0x03	; 3
    114e:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
    1152:	69 e0       	ldi	r22, 0x09	; 9
    1154:	71 e0       	ldi	r23, 0x01	; 1
    1156:	f7 01       	movw	r30, r14
    1158:	80 81       	ld	r24, Z
    115a:	91 81       	ldd	r25, Z+1	; 0x01
    115c:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
    1160:	41 e0       	ldi	r20, 0x01	; 1
    1162:	64 ef       	ldi	r22, 0xF4	; 244
    1164:	71 e0       	ldi	r23, 0x01	; 1
    1166:	ce 01       	movw	r24, r28
    1168:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
    116c:	6c e1       	ldi	r22, 0x1C	; 28
    116e:	73 e0       	ldi	r23, 0x03	; 3
    1170:	8e e9       	ldi	r24, 0x9E	; 158
    1172:	93 e0       	ldi	r25, 0x03	; 3
    1174:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1178:	2f 96       	adiw	r28, 0x0f	; 15
    117a:	be 01       	movw	r22, r28
    117c:	8e e9       	ldi	r24, 0x9E	; 158
    117e:	93 e0       	ldi	r25, 0x03	; 3
    1180:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
    1184:	61 e1       	ldi	r22, 0x11	; 17
    1186:	73 e0       	ldi	r23, 0x03	; 3
    1188:	ce 01       	movw	r24, r28
    118a:	0e 94 ab 25 	call	0x4b56	; 0x4b56 <strstr_P>
    118e:	89 2b       	or	r24, r25
    1190:	11 f4       	brne	.+4      	; 0x1196 <_ZN13Adafruit_FONA5beginEhh+0x1f2>
    1192:	84 e0       	ldi	r24, 0x04	; 4
    1194:	35 c0       	rjmp	.+106    	; 0x1200 <_ZN13Adafruit_FONA5beginEhh+0x25c>
    1196:	81 2f       	mov	r24, r17
    1198:	33 c0       	rjmp	.+102    	; 0x1200 <_ZN13Adafruit_FONA5beginEhh+0x25c>
    119a:	d8 01       	movw	r26, r16
    119c:	4d 91       	ld	r20, X+
    119e:	5c 91       	ld	r21, X
    11a0:	24 ef       	ldi	r18, 0xF4	; 244
    11a2:	31 e0       	ldi	r19, 0x01	; 1
    11a4:	69 e5       	ldi	r22, 0x59	; 89
    11a6:	73 e0       	ldi	r23, 0x03	; 3
    11a8:	ce 01       	movw	r24, r28
    11aa:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11ae:	64 e6       	ldi	r22, 0x64	; 100
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    11ba:	f8 01       	movw	r30, r16
    11bc:	40 81       	ld	r20, Z
    11be:	51 81       	ldd	r21, Z+1	; 0x01
    11c0:	24 ef       	ldi	r18, 0xF4	; 244
    11c2:	31 e0       	ldi	r19, 0x01	; 1
    11c4:	66 e5       	ldi	r22, 0x56	; 86
    11c6:	73 e0       	ldi	r23, 0x03	; 3
    11c8:	ce 01       	movw	r24, r28
    11ca:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11ce:	64 e6       	ldi	r22, 0x64	; 100
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    11da:	d8 01       	movw	r26, r16
    11dc:	4d 91       	ld	r20, X+
    11de:	5c 91       	ld	r21, X
    11e0:	24 ef       	ldi	r18, 0xF4	; 244
    11e2:	31 e0       	ldi	r19, 0x01	; 1
    11e4:	63 e5       	ldi	r22, 0x53	; 83
    11e6:	73 e0       	ldi	r23, 0x03	; 3
    11e8:	ce 01       	movw	r24, r28
    11ea:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11ee:	81 11       	cpse	r24, r1
    11f0:	76 cf       	rjmp	.-276    	; 0x10de <_ZN13Adafruit_FONA5beginEhh+0x13a>
    11f2:	64 e3       	ldi	r22, 0x34	; 52
    11f4:	73 e0       	ldi	r23, 0x03	; 3
    11f6:	8e e9       	ldi	r24, 0x9E	; 158
    11f8:	93 e0       	ldi	r25, 0x03	; 3
    11fa:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
    11fe:	83 e0       	ldi	r24, 0x03	; 3
    1200:	df 91       	pop	r29
    1202:	cf 91       	pop	r28
    1204:	1f 91       	pop	r17
    1206:	0f 91       	pop	r16
    1208:	ff 90       	pop	r15
    120a:	ef 90       	pop	r14
    120c:	df 90       	pop	r13
    120e:	cf 90       	pop	r12
    1210:	08 95       	ret

00001212 <_ZN13Adafruit_FONA9HTTP_initEv>:
    1212:	fc 01       	movw	r30, r24
    1214:	e5 5e       	subi	r30, 0xE5	; 229
    1216:	fe 4f       	sbci	r31, 0xFE	; 254
    1218:	40 81       	ld	r20, Z
    121a:	51 81       	ldd	r21, Z+1	; 0x01
    121c:	24 ef       	ldi	r18, 0xF4	; 244
    121e:	31 e0       	ldi	r19, 0x01	; 1
    1220:	66 e5       	ldi	r22, 0x56	; 86
    1222:	71 e0       	ldi	r23, 0x01	; 1
    1224:	0c 94 b8 07 	jmp	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>

00001228 <_ZN13Adafruit_FONA9HTTP_termEv>:
    1228:	fc 01       	movw	r30, r24
    122a:	e5 5e       	subi	r30, 0xE5	; 229
    122c:	fe 4f       	sbci	r31, 0xFE	; 254
    122e:	40 81       	ld	r20, Z
    1230:	51 81       	ldd	r21, Z+1	; 0x01
    1232:	24 ef       	ldi	r18, 0xF4	; 244
    1234:	31 e0       	ldi	r19, 0x01	; 1
    1236:	6a e4       	ldi	r22, 0x4A	; 74
    1238:	71 e0       	ldi	r23, 0x01	; 1
    123a:	0c 94 b8 07 	jmp	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>

0000123e <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper>:
    123e:	ef 92       	push	r14
    1240:	ff 92       	push	r15
    1242:	0f 93       	push	r16
    1244:	1f 93       	push	r17
    1246:	cf 93       	push	r28
    1248:	df 93       	push	r29
    124a:	00 d0       	rcall	.+0      	; 0x124c <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0xe>
    124c:	00 d0       	rcall	.+0      	; 0x124e <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x10>
    124e:	00 d0       	rcall	.+0      	; 0x1250 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x12>
    1250:	cd b7       	in	r28, 0x3d	; 61
    1252:	de b7       	in	r29, 0x3e	; 62
    1254:	8c 01       	movw	r16, r24
    1256:	7b 01       	movw	r14, r22
    1258:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN13Adafruit_FONA9HTTP_termEv>
    125c:	c8 01       	movw	r24, r16
    125e:	0e 94 09 09 	call	0x1212	; 0x1212 <_ZN13Adafruit_FONA9HTTP_initEv>
    1262:	88 23       	and	r24, r24
    1264:	59 f1       	breq	.+86     	; 0x12bc <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x7e>
    1266:	21 e0       	ldi	r18, 0x01	; 1
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	40 e0       	ldi	r20, 0x00	; 0
    126c:	50 e0       	ldi	r21, 0x00	; 0
    126e:	66 ea       	ldi	r22, 0xA6	; 166
    1270:	70 e0       	ldi	r23, 0x00	; 0
    1272:	c8 01       	movw	r24, r16
    1274:	0e 94 36 06 	call	0xc6c	; 0xc6c <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperl>
    1278:	88 23       	and	r24, r24
    127a:	11 f1       	breq	.+68     	; 0x12c0 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x82>
    127c:	a7 01       	movw	r20, r14
    127e:	62 ea       	ldi	r22, 0xA2	; 162
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	c8 01       	movw	r24, r16
    1284:	0e 94 1d 06 	call	0xc3a	; 0xc3a <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>
    1288:	88 23       	and	r24, r24
    128a:	e1 f0       	breq	.+56     	; 0x12c4 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x86>
    128c:	b8 01       	movw	r22, r16
    128e:	6b 5e       	subi	r22, 0xEB	; 235
    1290:	7e 4f       	sbci	r23, 0xFE	; 254
    1292:	ce 01       	movw	r24, r28
    1294:	01 96       	adiw	r24, 0x01	; 1
    1296:	0e 94 50 20 	call	0x40a0	; 0x40a0 <_ZN6StringC1ERKS_>
    129a:	ae 01       	movw	r20, r28
    129c:	4f 5f       	subi	r20, 0xFF	; 255
    129e:	5f 4f       	sbci	r21, 0xFF	; 255
    12a0:	6f e9       	ldi	r22, 0x9F	; 159
    12a2:	70 e0       	ldi	r23, 0x00	; 0
    12a4:	c8 01       	movw	r24, r16
    12a6:	0e 94 04 06 	call	0xc08	; 0xc08 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelper6String>
    12aa:	18 2f       	mov	r17, r24
    12ac:	ce 01       	movw	r24, r28
    12ae:	01 96       	adiw	r24, 0x01	; 1
    12b0:	0e 94 b6 1f 	call	0x3f6c	; 0x3f6c <_ZN6StringD1Ev>
    12b4:	11 23       	and	r17, r17
    12b6:	41 f0       	breq	.+16     	; 0x12c8 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8a>
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	07 c0       	rjmp	.+14     	; 0x12ca <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12bc:	82 e0       	ldi	r24, 0x02	; 2
    12be:	05 c0       	rjmp	.+10     	; 0x12ca <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12c0:	83 e0       	ldi	r24, 0x03	; 3
    12c2:	03 c0       	rjmp	.+6      	; 0x12ca <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12c4:	84 e0       	ldi	r24, 0x04	; 4
    12c6:	01 c0       	rjmp	.+2      	; 0x12ca <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12c8:	80 e4       	ldi	r24, 0x40	; 64
    12ca:	26 96       	adiw	r28, 0x06	; 6
    12cc:	0f b6       	in	r0, 0x3f	; 63
    12ce:	f8 94       	cli
    12d0:	de bf       	out	0x3e, r29	; 62
    12d2:	0f be       	out	0x3f, r0	; 63
    12d4:	cd bf       	out	0x3d, r28	; 61
    12d6:	df 91       	pop	r29
    12d8:	cf 91       	pop	r28
    12da:	1f 91       	pop	r17
    12dc:	0f 91       	pop	r16
    12de:	ff 90       	pop	r15
    12e0:	ef 90       	pop	r14
    12e2:	08 95       	ret

000012e4 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j>:
    12e4:	cf 92       	push	r12
    12e6:	df 92       	push	r13
    12e8:	ef 92       	push	r14
    12ea:	ff 92       	push	r15
    12ec:	0f 93       	push	r16
    12ee:	1f 93       	push	r17
    12f0:	cf 93       	push	r28
    12f2:	df 93       	push	r29
    12f4:	ec 01       	movw	r28, r24
    12f6:	68 01       	movw	r12, r16
    12f8:	87 01       	movw	r16, r14
    12fa:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>
    12fe:	b6 01       	movw	r22, r12
    1300:	ce 01       	movw	r24, r28
    1302:	0f 96       	adiw	r24, 0x0f	; 15
    1304:	0e 94 99 25 	call	0x4b32	; 0x4b32 <strcmp_P>
    1308:	21 e0       	ldi	r18, 0x01	; 1
    130a:	89 2b       	or	r24, r25
    130c:	09 f0       	breq	.+2      	; 0x1310 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j+0x2c>
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	82 2f       	mov	r24, r18
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	1f 91       	pop	r17
    1318:	0f 91       	pop	r16
    131a:	ff 90       	pop	r15
    131c:	ef 90       	pop	r14
    131e:	df 90       	pop	r13
    1320:	cf 90       	pop	r12
    1322:	08 95       	ret

00001324 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>:
    1324:	ef 92       	push	r14
    1326:	ff 92       	push	r15
    1328:	0f 93       	push	r16
    132a:	1f 93       	push	r17
    132c:	cf 93       	push	r28
    132e:	df 93       	push	r29
    1330:	ec 01       	movw	r28, r24
    1332:	79 01       	movw	r14, r18
    1334:	98 01       	movw	r18, r16
    1336:	0e 94 54 07 	call	0xea8	; 0xea8 <_ZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_j>
    133a:	b7 01       	movw	r22, r14
    133c:	ce 01       	movw	r24, r28
    133e:	0f 96       	adiw	r24, 0x0f	; 15
    1340:	0e 94 99 25 	call	0x4b32	; 0x4b32 <strcmp_P>
    1344:	21 e0       	ldi	r18, 0x01	; 1
    1346:	89 2b       	or	r24, r25
    1348:	09 f0       	breq	.+2      	; 0x134c <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j+0x28>
    134a:	20 e0       	ldi	r18, 0x00	; 0
    134c:	82 2f       	mov	r24, r18
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	1f 91       	pop	r17
    1354:	0f 91       	pop	r16
    1356:	ff 90       	pop	r15
    1358:	ef 90       	pop	r14
    135a:	08 95       	ret

0000135c <_ZN13Adafruit_FONA10enableGPRSEb>:
    135c:	7f 92       	push	r7
    135e:	8f 92       	push	r8
    1360:	9f 92       	push	r9
    1362:	af 92       	push	r10
    1364:	bf 92       	push	r11
    1366:	cf 92       	push	r12
    1368:	df 92       	push	r13
    136a:	ef 92       	push	r14
    136c:	ff 92       	push	r15
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	cf 93       	push	r28
    1374:	df 93       	push	r29
    1376:	ec 01       	movw	r28, r24
    1378:	28 ee       	ldi	r18, 0xE8	; 232
    137a:	3d ef       	ldi	r19, 0xFD	; 253
    137c:	66 23       	and	r22, r22
    137e:	09 f4       	brne	.+2      	; 0x1382 <_ZN13Adafruit_FONA10enableGPRSEb+0x26>
    1380:	1f c1       	rjmp	.+574    	; 0x15c0 <_ZN13Adafruit_FONA10enableGPRSEb+0x264>
    1382:	4d eb       	ldi	r20, 0xBD	; 189
    1384:	52 e0       	ldi	r21, 0x02	; 2
    1386:	62 eb       	ldi	r22, 0xB2	; 178
    1388:	72 e0       	ldi	r23, 0x02	; 2
    138a:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    138e:	81 11       	cpse	r24, r1
    1390:	03 c0       	rjmp	.+6      	; 0x1398 <_ZN13Adafruit_FONA10enableGPRSEb+0x3c>
    1392:	82 e0       	ldi	r24, 0x02	; 2
    1394:	78 2e       	mov	r7, r24
    1396:	02 c0       	rjmp	.+4      	; 0x139c <_ZN13Adafruit_FONA10enableGPRSEb+0x40>
    1398:	77 24       	eor	r7, r7
    139a:	73 94       	inc	r7
    139c:	7e 01       	movw	r14, r28
    139e:	85 ee       	ldi	r24, 0xE5	; 229
    13a0:	e8 1a       	sub	r14, r24
    13a2:	8e ef       	ldi	r24, 0xFE	; 254
    13a4:	f8 0a       	sbc	r15, r24
    13a6:	f7 01       	movw	r30, r14
    13a8:	40 81       	ld	r20, Z
    13aa:	51 81       	ldd	r21, Z+1	; 0x01
    13ac:	20 e1       	ldi	r18, 0x10	; 16
    13ae:	37 e2       	ldi	r19, 0x27	; 39
    13b0:	67 ea       	ldi	r22, 0xA7	; 167
    13b2:	72 e0       	ldi	r23, 0x02	; 2
    13b4:	ce 01       	movw	r24, r28
    13b6:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13ba:	88 23       	and	r24, r24
    13bc:	09 f4       	brne	.+2      	; 0x13c0 <_ZN13Adafruit_FONA10enableGPRSEb+0x64>
    13be:	25 c1       	rjmp	.+586    	; 0x160a <_ZN13Adafruit_FONA10enableGPRSEb+0x2ae>
    13c0:	f7 01       	movw	r30, r14
    13c2:	40 81       	ld	r20, Z
    13c4:	51 81       	ldd	r21, Z+1	; 0x01
    13c6:	20 e1       	ldi	r18, 0x10	; 16
    13c8:	37 e2       	ldi	r19, 0x27	; 39
    13ca:	69 e8       	ldi	r22, 0x89	; 137
    13cc:	72 e0       	ldi	r23, 0x02	; 2
    13ce:	ce 01       	movw	r24, r28
    13d0:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13d4:	88 23       	and	r24, r24
    13d6:	09 f4       	brne	.+2      	; 0x13da <_ZN13Adafruit_FONA10enableGPRSEb+0x7e>
    13d8:	1a c1       	rjmp	.+564    	; 0x160e <_ZN13Adafruit_FONA10enableGPRSEb+0x2b2>
    13da:	4e 01       	movw	r8, r28
    13dc:	f2 ef       	ldi	r31, 0xF2	; 242
    13de:	8f 1a       	sub	r8, r31
    13e0:	fe ef       	ldi	r31, 0xFE	; 254
    13e2:	9f 0a       	sbc	r9, r31
    13e4:	f4 01       	movw	r30, r8
    13e6:	40 81       	ld	r20, Z
    13e8:	51 81       	ldd	r21, Z+1	; 0x01
    13ea:	41 15       	cp	r20, r1
    13ec:	51 05       	cpc	r21, r1
    13ee:	71 f4       	brne	.+28     	; 0x140c <_ZN13Adafruit_FONA10enableGPRSEb+0xb0>
    13f0:	f7 01       	movw	r30, r14
    13f2:	40 81       	ld	r20, Z
    13f4:	51 81       	ldd	r21, Z+1	; 0x01
    13f6:	2f ef       	ldi	r18, 0xFF	; 255
    13f8:	3f ef       	ldi	r19, 0xFF	; 255
    13fa:	64 e2       	ldi	r22, 0x24	; 36
    13fc:	72 e0       	ldi	r23, 0x02	; 2
    13fe:	ce 01       	movw	r24, r28
    1400:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    1404:	81 11       	cpse	r24, r1
    1406:	ce c0       	rjmp	.+412    	; 0x15a4 <_ZN13Adafruit_FONA10enableGPRSEb+0x248>
    1408:	89 e0       	ldi	r24, 0x09	; 9
    140a:	0e c1       	rjmp	.+540    	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    140c:	f7 01       	movw	r30, r14
    140e:	20 81       	ld	r18, Z
    1410:	31 81       	ldd	r19, Z+1	; 0x01
    1412:	00 e1       	ldi	r16, 0x10	; 16
    1414:	17 e2       	ldi	r17, 0x27	; 39
    1416:	65 e7       	ldi	r22, 0x75	; 117
    1418:	72 e0       	ldi	r23, 0x02	; 2
    141a:	ce 01       	movw	r24, r28
    141c:	0e 94 92 09 	call	0x1324	; 0x1324 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    1420:	88 23       	and	r24, r24
    1422:	09 f4       	brne	.+2      	; 0x1426 <_ZN13Adafruit_FONA10enableGPRSEb+0xca>
    1424:	f6 c0       	rjmp	.+492    	; 0x1612 <_ZN13Adafruit_FONA10enableGPRSEb+0x2b6>
    1426:	ce 01       	movw	r24, r28
    1428:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN13Adafruit_FONA10flushInputEv>
    142c:	8e 01       	movw	r16, r28
    142e:	03 5e       	subi	r16, 0xE3	; 227
    1430:	1e 4f       	sbci	r17, 0xFE	; 254
    1432:	6b e6       	ldi	r22, 0x6B	; 107
    1434:	72 e0       	ldi	r23, 0x02	; 2
    1436:	f8 01       	movw	r30, r16
    1438:	80 81       	ld	r24, Z
    143a:	91 81       	ldd	r25, Z+1	; 0x01
    143c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1440:	f4 01       	movw	r30, r8
    1442:	60 81       	ld	r22, Z
    1444:	71 81       	ldd	r23, Z+1	; 0x01
    1446:	f8 01       	movw	r30, r16
    1448:	80 81       	ld	r24, Z
    144a:	91 81       	ldd	r25, Z+1	; 0x01
    144c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1450:	5e 01       	movw	r10, r28
    1452:	f0 ef       	ldi	r31, 0xF0	; 240
    1454:	af 1a       	sub	r10, r31
    1456:	fe ef       	ldi	r31, 0xFE	; 254
    1458:	bf 0a       	sbc	r11, r31
    145a:	f5 01       	movw	r30, r10
    145c:	80 81       	ld	r24, Z
    145e:	91 81       	ldd	r25, Z+1	; 0x01
    1460:	89 2b       	or	r24, r25
    1462:	79 f0       	breq	.+30     	; 0x1482 <_ZN13Adafruit_FONA10enableGPRSEb+0x126>
    1464:	65 e2       	ldi	r22, 0x25	; 37
    1466:	71 e0       	ldi	r23, 0x01	; 1
    1468:	f8 01       	movw	r30, r16
    146a:	80 81       	ld	r24, Z
    146c:	91 81       	ldd	r25, Z+1	; 0x01
    146e:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    1472:	f5 01       	movw	r30, r10
    1474:	60 81       	ld	r22, Z
    1476:	71 81       	ldd	r23, Z+1	; 0x01
    1478:	f8 01       	movw	r30, r16
    147a:	80 81       	ld	r24, Z
    147c:	91 81       	ldd	r25, Z+1	; 0x01
    147e:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1482:	6e 01       	movw	r12, r28
    1484:	fe ee       	ldi	r31, 0xEE	; 238
    1486:	cf 1a       	sub	r12, r31
    1488:	fe ef       	ldi	r31, 0xFE	; 254
    148a:	df 0a       	sbc	r13, r31
    148c:	f6 01       	movw	r30, r12
    148e:	80 81       	ld	r24, Z
    1490:	91 81       	ldd	r25, Z+1	; 0x01
    1492:	89 2b       	or	r24, r25
    1494:	79 f0       	breq	.+30     	; 0x14b4 <_ZN13Adafruit_FONA10enableGPRSEb+0x158>
    1496:	65 e2       	ldi	r22, 0x25	; 37
    1498:	71 e0       	ldi	r23, 0x01	; 1
    149a:	f8 01       	movw	r30, r16
    149c:	80 81       	ld	r24, Z
    149e:	91 81       	ldd	r25, Z+1	; 0x01
    14a0:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    14a4:	f6 01       	movw	r30, r12
    14a6:	60 81       	ld	r22, Z
    14a8:	71 81       	ldd	r23, Z+1	; 0x01
    14aa:	f8 01       	movw	r30, r16
    14ac:	80 81       	ld	r24, Z
    14ae:	91 81       	ldd	r25, Z+1	; 0x01
    14b0:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    14b4:	67 e2       	ldi	r22, 0x27	; 39
    14b6:	71 e0       	ldi	r23, 0x01	; 1
    14b8:	f8 01       	movw	r30, r16
    14ba:	80 81       	ld	r24, Z
    14bc:	91 81       	ldd	r25, Z+1	; 0x01
    14be:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
    14c2:	64 e6       	ldi	r22, 0x64	; 100
    14c4:	72 e0       	ldi	r23, 0x02	; 2
    14c6:	8e e9       	ldi	r24, 0x9E	; 158
    14c8:	93 e0       	ldi	r25, 0x03	; 3
    14ca:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    14ce:	6a e5       	ldi	r22, 0x5A	; 90
    14d0:	72 e0       	ldi	r23, 0x02	; 2
    14d2:	8e e9       	ldi	r24, 0x9E	; 158
    14d4:	93 e0       	ldi	r25, 0x03	; 3
    14d6:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    14da:	f4 01       	movw	r30, r8
    14dc:	60 81       	ld	r22, Z
    14de:	71 81       	ldd	r23, Z+1	; 0x01
    14e0:	8e e9       	ldi	r24, 0x9E	; 158
    14e2:	93 e0       	ldi	r25, 0x03	; 3
    14e4:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    14e8:	f5 01       	movw	r30, r10
    14ea:	80 81       	ld	r24, Z
    14ec:	91 81       	ldd	r25, Z+1	; 0x01
    14ee:	89 2b       	or	r24, r25
    14f0:	69 f0       	breq	.+26     	; 0x150c <_ZN13Adafruit_FONA10enableGPRSEb+0x1b0>
    14f2:	65 e2       	ldi	r22, 0x25	; 37
    14f4:	71 e0       	ldi	r23, 0x01	; 1
    14f6:	8e e9       	ldi	r24, 0x9E	; 158
    14f8:	93 e0       	ldi	r25, 0x03	; 3
    14fa:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    14fe:	f5 01       	movw	r30, r10
    1500:	60 81       	ld	r22, Z
    1502:	71 81       	ldd	r23, Z+1	; 0x01
    1504:	8e e9       	ldi	r24, 0x9E	; 158
    1506:	93 e0       	ldi	r25, 0x03	; 3
    1508:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    150c:	f6 01       	movw	r30, r12
    150e:	80 81       	ld	r24, Z
    1510:	91 81       	ldd	r25, Z+1	; 0x01
    1512:	89 2b       	or	r24, r25
    1514:	69 f0       	breq	.+26     	; 0x1530 <_ZN13Adafruit_FONA10enableGPRSEb+0x1d4>
    1516:	65 e2       	ldi	r22, 0x25	; 37
    1518:	71 e0       	ldi	r23, 0x01	; 1
    151a:	8e e9       	ldi	r24, 0x9E	; 158
    151c:	93 e0       	ldi	r25, 0x03	; 3
    151e:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    1522:	f6 01       	movw	r30, r12
    1524:	60 81       	ld	r22, Z
    1526:	71 81       	ldd	r23, Z+1	; 0x01
    1528:	8e e9       	ldi	r24, 0x9E	; 158
    152a:	93 e0       	ldi	r25, 0x03	; 3
    152c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1530:	67 e2       	ldi	r22, 0x27	; 39
    1532:	71 e0       	ldi	r23, 0x01	; 1
    1534:	8e e9       	ldi	r24, 0x9E	; 158
    1536:	93 e0       	ldi	r25, 0x03	; 3
    1538:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
    153c:	f7 01       	movw	r30, r14
    153e:	60 81       	ld	r22, Z
    1540:	71 81       	ldd	r23, Z+1	; 0x01
    1542:	40 e1       	ldi	r20, 0x10	; 16
    1544:	57 e2       	ldi	r21, 0x27	; 39
    1546:	ce 01       	movw	r24, r28
    1548:	0e 94 c2 05 	call	0xb84	; 0xb84 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>
    154c:	88 23       	and	r24, r24
    154e:	09 f4       	brne	.+2      	; 0x1552 <_ZN13Adafruit_FONA10enableGPRSEb+0x1f6>
    1550:	62 c0       	rjmp	.+196    	; 0x1616 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ba>
    1552:	f5 01       	movw	r30, r10
    1554:	40 81       	ld	r20, Z
    1556:	51 81       	ldd	r21, Z+1	; 0x01
    1558:	41 15       	cp	r20, r1
    155a:	51 05       	cpc	r21, r1
    155c:	39 f4       	brne	.+14     	; 0x156c <_ZN13Adafruit_FONA10enableGPRSEb+0x210>
    155e:	f6 01       	movw	r30, r12
    1560:	40 81       	ld	r20, Z
    1562:	51 81       	ldd	r21, Z+1	; 0x01
    1564:	41 15       	cp	r20, r1
    1566:	51 05       	cpc	r21, r1
    1568:	79 f4       	brne	.+30     	; 0x1588 <_ZN13Adafruit_FONA10enableGPRSEb+0x22c>
    156a:	42 cf       	rjmp	.-380    	; 0x13f0 <_ZN13Adafruit_FONA10enableGPRSEb+0x94>
    156c:	f7 01       	movw	r30, r14
    156e:	20 81       	ld	r18, Z
    1570:	31 81       	ldd	r19, Z+1	; 0x01
    1572:	00 e1       	ldi	r16, 0x10	; 16
    1574:	17 e2       	ldi	r17, 0x27	; 39
    1576:	65 e4       	ldi	r22, 0x45	; 69
    1578:	72 e0       	ldi	r23, 0x02	; 2
    157a:	ce 01       	movw	r24, r28
    157c:	0e 94 92 09 	call	0x1324	; 0x1324 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    1580:	81 11       	cpse	r24, r1
    1582:	ed cf       	rjmp	.-38     	; 0x155e <_ZN13Adafruit_FONA10enableGPRSEb+0x202>
    1584:	87 e0       	ldi	r24, 0x07	; 7
    1586:	50 c0       	rjmp	.+160    	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1588:	f7 01       	movw	r30, r14
    158a:	20 81       	ld	r18, Z
    158c:	31 81       	ldd	r19, Z+1	; 0x01
    158e:	00 e1       	ldi	r16, 0x10	; 16
    1590:	17 e2       	ldi	r17, 0x27	; 39
    1592:	61 e3       	ldi	r22, 0x31	; 49
    1594:	72 e0       	ldi	r23, 0x02	; 2
    1596:	ce 01       	movw	r24, r28
    1598:	0e 94 92 09 	call	0x1324	; 0x1324 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    159c:	81 11       	cpse	r24, r1
    159e:	28 cf       	rjmp	.-432    	; 0x13f0 <_ZN13Adafruit_FONA10enableGPRSEb+0x94>
    15a0:	88 e0       	ldi	r24, 0x08	; 8
    15a2:	42 c0       	rjmp	.+132    	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15a4:	f7 01       	movw	r30, r14
    15a6:	40 81       	ld	r20, Z
    15a8:	51 81       	ldd	r21, Z+1	; 0x01
    15aa:	2f ef       	ldi	r18, 0xFF	; 255
    15ac:	3f ef       	ldi	r19, 0xFF	; 255
    15ae:	6b e1       	ldi	r22, 0x1B	; 27
    15b0:	72 e0       	ldi	r23, 0x02	; 2
    15b2:	ce 01       	movw	r24, r28
    15b4:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15b8:	88 23       	and	r24, r24
    15ba:	79 f1       	breq	.+94     	; 0x161a <_ZN13Adafruit_FONA10enableGPRSEb+0x2be>
    15bc:	87 2d       	mov	r24, r7
    15be:	34 c0       	rjmp	.+104    	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15c0:	43 e1       	ldi	r20, 0x13	; 19
    15c2:	52 e0       	ldi	r21, 0x02	; 2
    15c4:	68 e0       	ldi	r22, 0x08	; 8
    15c6:	72 e0       	ldi	r23, 0x02	; 2
    15c8:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15cc:	88 23       	and	r24, r24
    15ce:	39 f1       	breq	.+78     	; 0x161e <_ZN13Adafruit_FONA10enableGPRSEb+0x2c2>
    15d0:	8e 01       	movw	r16, r28
    15d2:	05 5e       	subi	r16, 0xE5	; 229
    15d4:	1e 4f       	sbci	r17, 0xFE	; 254
    15d6:	f8 01       	movw	r30, r16
    15d8:	40 81       	ld	r20, Z
    15da:	51 81       	ldd	r21, Z+1	; 0x01
    15dc:	20 e1       	ldi	r18, 0x10	; 16
    15de:	37 e2       	ldi	r19, 0x27	; 39
    15e0:	6b ef       	ldi	r22, 0xFB	; 251
    15e2:	71 e0       	ldi	r23, 0x01	; 1
    15e4:	ce 01       	movw	r24, r28
    15e6:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15ea:	88 23       	and	r24, r24
    15ec:	d1 f0       	breq	.+52     	; 0x1622 <_ZN13Adafruit_FONA10enableGPRSEb+0x2c6>
    15ee:	f8 01       	movw	r30, r16
    15f0:	40 81       	ld	r20, Z
    15f2:	51 81       	ldd	r21, Z+1	; 0x01
    15f4:	20 e1       	ldi	r18, 0x10	; 16
    15f6:	37 e2       	ldi	r19, 0x27	; 39
    15f8:	60 ef       	ldi	r22, 0xF0	; 240
    15fa:	71 e0       	ldi	r23, 0x01	; 1
    15fc:	ce 01       	movw	r24, r28
    15fe:	0e 94 b8 07 	call	0xf70	; 0xf70 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    1602:	88 23       	and	r24, r24
    1604:	81 f0       	breq	.+32     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ca>
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	0f c0       	rjmp	.+30     	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    160a:	83 e0       	ldi	r24, 0x03	; 3
    160c:	0d c0       	rjmp	.+26     	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    160e:	84 e0       	ldi	r24, 0x04	; 4
    1610:	0b c0       	rjmp	.+22     	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1612:	85 e0       	ldi	r24, 0x05	; 5
    1614:	09 c0       	rjmp	.+18     	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1616:	86 e0       	ldi	r24, 0x06	; 6
    1618:	07 c0       	rjmp	.+14     	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    161a:	8a e0       	ldi	r24, 0x0A	; 10
    161c:	05 c0       	rjmp	.+10     	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    161e:	8b e0       	ldi	r24, 0x0B	; 11
    1620:	03 c0       	rjmp	.+6      	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1622:	8c e0       	ldi	r24, 0x0C	; 12
    1624:	01 c0       	rjmp	.+2      	; 0x1628 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1626:	8d e0       	ldi	r24, 0x0D	; 13
    1628:	df 91       	pop	r29
    162a:	cf 91       	pop	r28
    162c:	1f 91       	pop	r17
    162e:	0f 91       	pop	r16
    1630:	ff 90       	pop	r15
    1632:	ef 90       	pop	r14
    1634:	df 90       	pop	r13
    1636:	cf 90       	pop	r12
    1638:	bf 90       	pop	r11
    163a:	af 90       	pop	r10
    163c:	9f 90       	pop	r9
    163e:	8f 90       	pop	r8
    1640:	7f 90       	pop	r7
    1642:	08 95       	ret

00001644 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>:
    1644:	af 92       	push	r10
    1646:	bf 92       	push	r11
    1648:	cf 92       	push	r12
    164a:	df 92       	push	r13
    164c:	ef 92       	push	r14
    164e:	ff 92       	push	r15
    1650:	0f 93       	push	r16
    1652:	cf 93       	push	r28
    1654:	df 93       	push	r29
    1656:	5b 01       	movw	r10, r22
    1658:	6a 01       	movw	r12, r20
    165a:	e2 2e       	mov	r14, r18
    165c:	0f 96       	adiw	r24, 0x0f	; 15
    165e:	0e 94 ab 25 	call	0x4b56	; 0x4b56 <strstr_P>
    1662:	ec 01       	movw	r28, r24
    1664:	89 2b       	or	r24, r25
    1666:	c1 f0       	breq	.+48     	; 0x1698 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x54>
    1668:	c5 01       	movw	r24, r10
    166a:	0e 94 a2 25 	call	0x4b44	; 0x4b44 <__strlen_P>
    166e:	8c 0f       	add	r24, r28
    1670:	9d 1f       	adc	r25, r29
    1672:	c0 e0       	ldi	r28, 0x00	; 0
    1674:	f1 2c       	mov	r15, r1
    1676:	c0 17       	cp	r28, r16
    1678:	41 f0       	breq	.+16     	; 0x168a <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x46>
    167a:	b7 01       	movw	r22, r14
    167c:	0e 94 ce 25 	call	0x4b9c	; 0x4b9c <strchr>
    1680:	00 97       	sbiw	r24, 0x00	; 0
    1682:	51 f0       	breq	.+20     	; 0x1698 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x54>
    1684:	01 96       	adiw	r24, 0x01	; 1
    1686:	cf 5f       	subi	r28, 0xFF	; 255
    1688:	f6 cf       	rjmp	.-20     	; 0x1676 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x32>
    168a:	0e 94 7b 25 	call	0x4af6	; 0x4af6 <atoi>
    168e:	f6 01       	movw	r30, r12
    1690:	91 83       	std	Z+1, r25	; 0x01
    1692:	80 83       	st	Z, r24
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	01 c0       	rjmp	.+2      	; 0x169a <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x56>
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	df 91       	pop	r29
    169c:	cf 91       	pop	r28
    169e:	0f 91       	pop	r16
    16a0:	ff 90       	pop	r15
    16a2:	ef 90       	pop	r14
    16a4:	df 90       	pop	r13
    16a6:	cf 90       	pop	r12
    16a8:	bf 90       	pop	r11
    16aa:	af 90       	pop	r10
    16ac:	08 95       	ret

000016ae <_ZN13Adafruit_FONA12HTTP_readallEjPc>:
    16ae:	cf 92       	push	r12
    16b0:	df 92       	push	r13
    16b2:	ef 92       	push	r14
    16b4:	ff 92       	push	r15
    16b6:	0f 93       	push	r16
    16b8:	1f 93       	push	r17
    16ba:	cf 93       	push	r28
    16bc:	df 93       	push	r29
    16be:	00 d0       	rcall	.+0      	; 0x16c0 <_ZN13Adafruit_FONA12HTTP_readallEjPc+0x12>
    16c0:	cd b7       	in	r28, 0x3d	; 61
    16c2:	de b7       	in	r29, 0x3e	; 62
    16c4:	7c 01       	movw	r14, r24
    16c6:	6a 01       	movw	r12, r20
    16c8:	9b 01       	movw	r18, r22
    16ca:	21 50       	subi	r18, 0x01	; 1
    16cc:	31 09       	sbc	r19, r1
    16ce:	40 e0       	ldi	r20, 0x00	; 0
    16d0:	50 e0       	ldi	r21, 0x00	; 0
    16d2:	04 ef       	ldi	r16, 0xF4	; 244
    16d4:	11 e0       	ldi	r17, 0x01	; 1
    16d6:	6e eb       	ldi	r22, 0xBE	; 190
    16d8:	70 e0       	ldi	r23, 0x00	; 0
    16da:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>
    16de:	00 e0       	ldi	r16, 0x00	; 0
    16e0:	2c e2       	ldi	r18, 0x2C	; 44
    16e2:	ae 01       	movw	r20, r28
    16e4:	4f 5f       	subi	r20, 0xFF	; 255
    16e6:	5f 4f       	sbci	r21, 0xFF	; 255
    16e8:	62 eb       	ldi	r22, 0xB2	; 178
    16ea:	70 e0       	ldi	r23, 0x00	; 0
    16ec:	c7 01       	movw	r24, r14
    16ee:	0e 94 22 0b 	call	0x1644	; 0x1644 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    16f2:	88 23       	and	r24, r24
    16f4:	61 f0       	breq	.+24     	; 0x170e <_ZN13Adafruit_FONA12HTTP_readallEjPc+0x60>
    16f6:	49 81       	ldd	r20, Y+1	; 0x01
    16f8:	5a 81       	ldd	r21, Y+2	; 0x02
    16fa:	b6 01       	movw	r22, r12
    16fc:	c7 01       	movw	r24, r14
    16fe:	0e 94 b1 04 	call	0x962	; 0x962 <_ZN13Adafruit_FONA19internalReadRawDataEPcj>
    1702:	40 e0       	ldi	r20, 0x00	; 0
    1704:	64 ef       	ldi	r22, 0xF4	; 244
    1706:	71 e0       	ldi	r23, 0x01	; 1
    1708:	c7 01       	movw	r24, r14
    170a:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
    170e:	0f 90       	pop	r0
    1710:	0f 90       	pop	r0
    1712:	df 91       	pop	r29
    1714:	cf 91       	pop	r28
    1716:	1f 91       	pop	r17
    1718:	0f 91       	pop	r16
    171a:	ff 90       	pop	r15
    171c:	ef 90       	pop	r14
    171e:	df 90       	pop	r13
    1720:	cf 90       	pop	r12
    1722:	08 95       	ret

00001724 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l>:
    1724:	4f 92       	push	r4
    1726:	5f 92       	push	r5
    1728:	6f 92       	push	r6
    172a:	7f 92       	push	r7
    172c:	af 92       	push	r10
    172e:	bf 92       	push	r11
    1730:	cf 92       	push	r12
    1732:	df 92       	push	r13
    1734:	ef 92       	push	r14
    1736:	ff 92       	push	r15
    1738:	0f 93       	push	r16
    173a:	1f 93       	push	r17
    173c:	cf 93       	push	r28
    173e:	df 93       	push	r29
    1740:	ec 01       	movw	r28, r24
    1742:	6a 01       	movw	r12, r20
    1744:	59 01       	movw	r10, r18
    1746:	27 01       	movw	r4, r14
    1748:	38 01       	movw	r6, r16
    174a:	fc 01       	movw	r30, r24
    174c:	e5 5e       	subi	r30, 0xE5	; 229
    174e:	fe 4f       	sbci	r31, 0xFE	; 254
    1750:	00 81       	ld	r16, Z
    1752:	11 81       	ldd	r17, Z+1	; 0x01
    1754:	26 2f       	mov	r18, r22
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	40 e0       	ldi	r20, 0x00	; 0
    175a:	50 e0       	ldi	r21, 0x00	; 0
    175c:	84 ef       	ldi	r24, 0xF4	; 244
    175e:	e8 2e       	mov	r14, r24
    1760:	ff 24       	eor	r15, r15
    1762:	f3 94       	inc	r15
    1764:	67 ee       	ldi	r22, 0xE7	; 231
    1766:	70 e0       	ldi	r23, 0x00	; 0
    1768:	ce 01       	movw	r24, r28
    176a:	0e 94 72 09 	call	0x12e4	; 0x12e4 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j>
    176e:	88 23       	and	r24, r24
    1770:	09 f1       	breq	.+66     	; 0x17b4 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x90>
    1772:	40 e0       	ldi	r20, 0x00	; 0
    1774:	b2 01       	movw	r22, r4
    1776:	ce 01       	movw	r24, r28
    1778:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
    177c:	01 e0       	ldi	r16, 0x01	; 1
    177e:	2c e2       	ldi	r18, 0x2C	; 44
    1780:	a6 01       	movw	r20, r12
    1782:	6a ed       	ldi	r22, 0xDA	; 218
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	ce 01       	movw	r24, r28
    1788:	0e 94 22 0b 	call	0x1644	; 0x1644 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    178c:	88 23       	and	r24, r24
    178e:	a1 f0       	breq	.+40     	; 0x17b8 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x94>
    1790:	02 e0       	ldi	r16, 0x02	; 2
    1792:	2c e2       	ldi	r18, 0x2C	; 44
    1794:	a5 01       	movw	r20, r10
    1796:	6d ec       	ldi	r22, 0xCD	; 205
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	ce 01       	movw	r24, r28
    179c:	0e 94 22 0b 	call	0x1644	; 0x1644 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    17a0:	88 23       	and	r24, r24
    17a2:	61 f0       	breq	.+24     	; 0x17bc <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x98>
    17a4:	f6 01       	movw	r30, r12
    17a6:	80 81       	ld	r24, Z
    17a8:	91 81       	ldd	r25, Z+1	; 0x01
    17aa:	88 3c       	cpi	r24, 0xC8	; 200
    17ac:	91 05       	cpc	r25, r1
    17ae:	41 f4       	brne	.+16     	; 0x17c0 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9c>
    17b0:	80 e0       	ldi	r24, 0x00	; 0
    17b2:	07 c0       	rjmp	.+14     	; 0x17c2 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17b4:	87 e0       	ldi	r24, 0x07	; 7
    17b6:	05 c0       	rjmp	.+10     	; 0x17c2 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17b8:	88 e0       	ldi	r24, 0x08	; 8
    17ba:	03 c0       	rjmp	.+6      	; 0x17c2 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17bc:	89 e0       	ldi	r24, 0x09	; 9
    17be:	01 c0       	rjmp	.+2      	; 0x17c2 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17c0:	80 e8       	ldi	r24, 0x80	; 128
    17c2:	df 91       	pop	r29
    17c4:	cf 91       	pop	r28
    17c6:	1f 91       	pop	r17
    17c8:	0f 91       	pop	r16
    17ca:	ff 90       	pop	r15
    17cc:	ef 90       	pop	r14
    17ce:	df 90       	pop	r13
    17d0:	cf 90       	pop	r12
    17d2:	bf 90       	pop	r11
    17d4:	af 90       	pop	r10
    17d6:	7f 90       	pop	r7
    17d8:	6f 90       	pop	r6
    17da:	5f 90       	pop	r5
    17dc:	4f 90       	pop	r4
    17de:	08 95       	ret

000017e0 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc>:
    17e0:	2f 92       	push	r2
    17e2:	3f 92       	push	r3
    17e4:	4f 92       	push	r4
    17e6:	5f 92       	push	r5
    17e8:	6f 92       	push	r6
    17ea:	7f 92       	push	r7
    17ec:	8f 92       	push	r8
    17ee:	9f 92       	push	r9
    17f0:	af 92       	push	r10
    17f2:	bf 92       	push	r11
    17f4:	cf 92       	push	r12
    17f6:	df 92       	push	r13
    17f8:	ef 92       	push	r14
    17fa:	ff 92       	push	r15
    17fc:	0f 93       	push	r16
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	00 d0       	rcall	.+0      	; 0x1806 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x26>
    1806:	00 d0       	rcall	.+0      	; 0x1808 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x28>
    1808:	1f 92       	push	r1
    180a:	cd b7       	in	r28, 0x3d	; 61
    180c:	de b7       	in	r29, 0x3e	; 62
    180e:	3c 01       	movw	r6, r24
    1810:	5b 83       	std	Y+3, r21	; 0x03
    1812:	4a 83       	std	Y+2, r20	; 0x02
    1814:	19 01       	movw	r2, r18
    1816:	28 01       	movw	r4, r16
    1818:	fd 82       	std	Y+5, r15	; 0x05
    181a:	ec 82       	std	Y+4, r14	; 0x04
    181c:	0e 94 1f 09 	call	0x123e	; 0x123e <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper>
    1820:	89 83       	std	Y+1, r24	; 0x01
    1822:	8f 70       	andi	r24, 0x0F	; 15
    1824:	82 30       	cpi	r24, 0x02	; 2
    1826:	08 f0       	brcs	.+2      	; 0x182a <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x4a>
    1828:	59 c0       	rjmp	.+178    	; 0x18dc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfc>
    182a:	4a 81       	ldd	r20, Y+2	; 0x02
    182c:	5b 81       	ldd	r21, Y+3	; 0x03
    182e:	6a ea       	ldi	r22, 0xAA	; 170
    1830:	70 e0       	ldi	r23, 0x00	; 0
    1832:	c3 01       	movw	r24, r6
    1834:	0e 94 1d 06 	call	0xc3a	; 0xc3a <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>
    1838:	81 11       	cpse	r24, r1
    183a:	03 c0       	rjmp	.+6      	; 0x1842 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x62>
    183c:	89 81       	ldd	r24, Y+1	; 0x01
    183e:	80 61       	ori	r24, 0x10	; 16
    1840:	89 83       	std	Y+1, r24	; 0x01
    1842:	a2 01       	movw	r20, r4
    1844:	60 e0       	ldi	r22, 0x00	; 0
    1846:	70 e0       	ldi	r23, 0x00	; 0
    1848:	00 ec       	ldi	r16, 0xC0	; 192
    184a:	14 ed       	ldi	r17, 0xD4	; 212
    184c:	21 e0       	ldi	r18, 0x01	; 1
    184e:	30 e0       	ldi	r19, 0x00	; 0
    1850:	c3 01       	movw	r24, r6
    1852:	0e 94 57 06 	call	0xcae	; 0xcae <_ZN13Adafruit_FONA9HTTP_dataEmm>
    1856:	81 11       	cpse	r24, r1
    1858:	03 c0       	rjmp	.+6      	; 0x1860 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x80>
    185a:	89 81       	ldd	r24, Y+1	; 0x01
    185c:	85 60       	ori	r24, 0x05	; 5
    185e:	3f c0       	rjmp	.+126    	; 0x18de <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    1860:	f3 01       	movw	r30, r6
    1862:	e3 5e       	subi	r30, 0xE3	; 227
    1864:	fe 4f       	sbci	r31, 0xFE	; 254
    1866:	80 81       	ld	r24, Z
    1868:	91 81       	ldd	r25, Z+1	; 0x01
    186a:	dc 01       	movw	r26, r24
    186c:	ed 91       	ld	r30, X+
    186e:	fc 91       	ld	r31, X
    1870:	02 80       	ldd	r0, Z+2	; 0x02
    1872:	f3 81       	ldd	r31, Z+3	; 0x03
    1874:	e0 2d       	mov	r30, r0
    1876:	a2 01       	movw	r20, r4
    1878:	b1 01       	movw	r22, r2
    187a:	09 95       	icall
    187c:	f3 01       	movw	r30, r6
    187e:	e5 5e       	subi	r30, 0xE5	; 229
    1880:	fe 4f       	sbci	r31, 0xFE	; 254
    1882:	60 81       	ld	r22, Z
    1884:	71 81       	ldd	r23, Z+1	; 0x01
    1886:	40 e1       	ldi	r20, 0x10	; 16
    1888:	57 e2       	ldi	r21, 0x27	; 39
    188a:	c3 01       	movw	r24, r6
    188c:	0e 94 c2 05 	call	0xb84	; 0xb84 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>
    1890:	81 11       	cpse	r24, r1
    1892:	03 c0       	rjmp	.+6      	; 0x189a <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xba>
    1894:	89 81       	ldd	r24, Y+1	; 0x01
    1896:	86 60       	ori	r24, 0x06	; 6
    1898:	22 c0       	rjmp	.+68     	; 0x18de <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    189a:	10 e1       	ldi	r17, 0x10	; 16
    189c:	e1 2e       	mov	r14, r17
    189e:	17 e2       	ldi	r17, 0x27	; 39
    18a0:	f1 2e       	mov	r15, r17
    18a2:	00 e0       	ldi	r16, 0x00	; 0
    18a4:	10 e0       	ldi	r17, 0x00	; 0
    18a6:	95 01       	movw	r18, r10
    18a8:	4c 81       	ldd	r20, Y+4	; 0x04
    18aa:	5d 81       	ldd	r21, Y+5	; 0x05
    18ac:	61 e0       	ldi	r22, 0x01	; 1
    18ae:	c3 01       	movw	r24, r6
    18b0:	0e 94 92 0b 	call	0x1724	; 0x1724 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l>
    18b4:	98 2f       	mov	r25, r24
    18b6:	9f 70       	andi	r25, 0x0F	; 15
    18b8:	92 30       	cpi	r25, 0x02	; 2
    18ba:	18 f0       	brcs	.+6      	; 0x18c2 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xe2>
    18bc:	b9 81       	ldd	r27, Y+1	; 0x01
    18be:	8b 2b       	or	r24, r27
    18c0:	0e c0       	rjmp	.+28     	; 0x18de <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    18c2:	a4 01       	movw	r20, r8
    18c4:	b6 01       	movw	r22, r12
    18c6:	c3 01       	movw	r24, r6
    18c8:	0e 94 57 0b 	call	0x16ae	; 0x16ae <_ZN13Adafruit_FONA12HTTP_readallEjPc>
    18cc:	81 11       	cpse	r24, r1
    18ce:	03 c0       	rjmp	.+6      	; 0x18d6 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xf6>
    18d0:	89 81       	ldd	r24, Y+1	; 0x01
    18d2:	80 62       	ori	r24, 0x20	; 32
    18d4:	89 83       	std	Y+1, r24	; 0x01
    18d6:	89 81       	ldd	r24, Y+1	; 0x01
    18d8:	81 60       	ori	r24, 0x01	; 1
    18da:	01 c0       	rjmp	.+2      	; 0x18de <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    18dc:	89 81       	ldd	r24, Y+1	; 0x01
    18de:	0f 90       	pop	r0
    18e0:	0f 90       	pop	r0
    18e2:	0f 90       	pop	r0
    18e4:	0f 90       	pop	r0
    18e6:	0f 90       	pop	r0
    18e8:	df 91       	pop	r29
    18ea:	cf 91       	pop	r28
    18ec:	1f 91       	pop	r17
    18ee:	0f 91       	pop	r16
    18f0:	ff 90       	pop	r15
    18f2:	ef 90       	pop	r14
    18f4:	df 90       	pop	r13
    18f6:	cf 90       	pop	r12
    18f8:	bf 90       	pop	r11
    18fa:	af 90       	pop	r10
    18fc:	9f 90       	pop	r9
    18fe:	8f 90       	pop	r8
    1900:	7f 90       	pop	r7
    1902:	6f 90       	pop	r6
    1904:	5f 90       	pop	r5
    1906:	4f 90       	pop	r4
    1908:	3f 90       	pop	r3
    190a:	2f 90       	pop	r2
    190c:	08 95       	ret

0000190e <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_>:
    190e:	2f 92       	push	r2
    1910:	3f 92       	push	r3
    1912:	4f 92       	push	r4
    1914:	5f 92       	push	r5
    1916:	6f 92       	push	r6
    1918:	7f 92       	push	r7
    191a:	8f 92       	push	r8
    191c:	9f 92       	push	r9
    191e:	af 92       	push	r10
    1920:	bf 92       	push	r11
    1922:	cf 92       	push	r12
    1924:	df 92       	push	r13
    1926:	ef 92       	push	r14
    1928:	ff 92       	push	r15
    192a:	0f 93       	push	r16
    192c:	1f 93       	push	r17
    192e:	cf 93       	push	r28
    1930:	df 93       	push	r29
    1932:	3c 01       	movw	r6, r24
    1934:	e9 01       	movw	r28, r18
    1936:	28 01       	movw	r4, r16
    1938:	17 01       	movw	r2, r14
    193a:	76 01       	movw	r14, r12
    193c:	49 01       	movw	r8, r18
    193e:	51 01       	movw	r10, r2
    1940:	68 01       	movw	r12, r16
    1942:	8a 01       	movw	r16, r20
    1944:	9b 01       	movw	r18, r22
    1946:	43 ec       	ldi	r20, 0xC3	; 195
    1948:	51 e0       	ldi	r21, 0x01	; 1
    194a:	6e ec       	ldi	r22, 0xCE	; 206
    194c:	71 e0       	ldi	r23, 0x01	; 1
    194e:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc>
    1952:	18 2f       	mov	r17, r24
    1954:	8f 70       	andi	r24, 0x0F	; 15
    1956:	82 30       	cpi	r24, 0x02	; 2
    1958:	78 f0       	brcs	.+30     	; 0x1978 <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0x6a>
    195a:	60 ea       	ldi	r22, 0xA0	; 160
    195c:	71 e0       	ldi	r23, 0x01	; 1
    195e:	8e e9       	ldi	r24, 0x9E	; 158
    1960:	93 e0       	ldi	r25, 0x03	; 3
    1962:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1966:	61 2f       	mov	r22, r17
    1968:	70 e0       	ldi	r23, 0x00	; 0
    196a:	4a e0       	ldi	r20, 0x0A	; 10
    196c:	50 e0       	ldi	r21, 0x00	; 0
    196e:	8e e9       	ldi	r24, 0x9E	; 158
    1970:	93 e0       	ldi	r25, 0x03	; 3
    1972:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <_ZN5Print7printlnEii>
    1976:	33 c0       	rjmp	.+102    	; 0x19de <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0xd0>
    1978:	63 e8       	ldi	r22, 0x83	; 131
    197a:	71 e0       	ldi	r23, 0x01	; 1
    197c:	8e e9       	ldi	r24, 0x9E	; 158
    197e:	93 e0       	ldi	r25, 0x03	; 3
    1980:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1984:	f1 01       	movw	r30, r2
    1986:	60 81       	ld	r22, Z
    1988:	71 81       	ldd	r23, Z+1	; 0x01
    198a:	4a e0       	ldi	r20, 0x0A	; 10
    198c:	50 e0       	ldi	r21, 0x00	; 0
    198e:	8e e9       	ldi	r24, 0x9E	; 158
    1990:	93 e0       	ldi	r25, 0x03	; 3
    1992:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1996:	60 e7       	ldi	r22, 0x70	; 112
    1998:	71 e0       	ldi	r23, 0x01	; 1
    199a:	8e e9       	ldi	r24, 0x9E	; 158
    199c:	93 e0       	ldi	r25, 0x03	; 3
    199e:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    19a2:	4a e0       	ldi	r20, 0x0A	; 10
    19a4:	50 e0       	ldi	r21, 0x00	; 0
    19a6:	b2 01       	movw	r22, r4
    19a8:	8e e9       	ldi	r24, 0x9E	; 158
    19aa:	93 e0       	ldi	r25, 0x03	; 3
    19ac:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    19b0:	62 e6       	ldi	r22, 0x62	; 98
    19b2:	71 e0       	ldi	r23, 0x01	; 1
    19b4:	8e e9       	ldi	r24, 0x9E	; 158
    19b6:	93 e0       	ldi	r25, 0x03	; 3
    19b8:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    19bc:	fe 01       	movw	r30, r28
    19be:	01 90       	ld	r0, Z+
    19c0:	00 20       	and	r0, r0
    19c2:	e9 f7       	brne	.-6      	; 0x19be <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0xb0>
    19c4:	31 97       	sbiw	r30, 0x01	; 1
    19c6:	bf 01       	movw	r22, r30
    19c8:	6c 1b       	sub	r22, r28
    19ca:	7d 0b       	sbc	r23, r29
    19cc:	4a e0       	ldi	r20, 0x0A	; 10
    19ce:	50 e0       	ldi	r21, 0x00	; 0
    19d0:	8e e9       	ldi	r24, 0x9E	; 158
    19d2:	93 e0       	ldi	r25, 0x03	; 3
    19d4:	0e 94 88 1d 	call	0x3b10	; 0x3b10 <_ZN5Print7printlnEji>
    19d8:	c3 01       	movw	r24, r6
    19da:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN13Adafruit_FONA9HTTP_termEv>
    19de:	81 2f       	mov	r24, r17
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	1f 91       	pop	r17
    19e6:	0f 91       	pop	r16
    19e8:	ff 90       	pop	r15
    19ea:	ef 90       	pop	r14
    19ec:	df 90       	pop	r13
    19ee:	cf 90       	pop	r12
    19f0:	bf 90       	pop	r11
    19f2:	af 90       	pop	r10
    19f4:	9f 90       	pop	r9
    19f6:	8f 90       	pop	r8
    19f8:	7f 90       	pop	r7
    19fa:	6f 90       	pop	r6
    19fc:	5f 90       	pop	r5
    19fe:	4f 90       	pop	r4
    1a00:	3f 90       	pop	r3
    1a02:	2f 90       	pop	r2
    1a04:	08 95       	ret

00001a06 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>:
    1a06:	af 92       	push	r10
    1a08:	bf 92       	push	r11
    1a0a:	cf 92       	push	r12
    1a0c:	df 92       	push	r13
    1a0e:	ef 92       	push	r14
    1a10:	0f 93       	push	r16
    1a12:	1f 93       	push	r17
    1a14:	cf 93       	push	r28
    1a16:	df 93       	push	r29
    1a18:	ec 01       	movw	r28, r24
    1a1a:	6a 01       	movw	r12, r20
    1a1c:	59 01       	movw	r10, r18
    1a1e:	10 2f       	mov	r17, r16
    1a20:	0e 2d       	mov	r16, r14
    1a22:	44 ef       	ldi	r20, 0xF4	; 244
    1a24:	51 e0       	ldi	r21, 0x01	; 1
    1a26:	0e 94 c1 06 	call	0xd82	; 0xd82 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>
    1a2a:	21 2f       	mov	r18, r17
    1a2c:	a5 01       	movw	r20, r10
    1a2e:	b6 01       	movw	r22, r12
    1a30:	ce 01       	movw	r24, r28
    1a32:	0e 94 22 0b 	call	0x1644	; 0x1644 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    1a36:	18 2f       	mov	r17, r24
    1a38:	88 23       	and	r24, r24
    1a3a:	31 f0       	breq	.+12     	; 0x1a48 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch+0x42>
    1a3c:	40 e0       	ldi	r20, 0x00	; 0
    1a3e:	64 ef       	ldi	r22, 0xF4	; 244
    1a40:	71 e0       	ldi	r23, 0x01	; 1
    1a42:	ce 01       	movw	r24, r28
    1a44:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN13Adafruit_FONA8readlineEjb>
    1a48:	81 2f       	mov	r24, r17
    1a4a:	df 91       	pop	r29
    1a4c:	cf 91       	pop	r28
    1a4e:	1f 91       	pop	r17
    1a50:	0f 91       	pop	r16
    1a52:	ef 90       	pop	r14
    1a54:	df 90       	pop	r13
    1a56:	cf 90       	pop	r12
    1a58:	bf 90       	pop	r11
    1a5a:	af 90       	pop	r10
    1a5c:	08 95       	ret

00001a5e <_ZN13Adafruit_FONA14getBattPercentEPj>:
    1a5e:	ef 92       	push	r14
    1a60:	0f 93       	push	r16
    1a62:	9b 01       	movw	r18, r22
    1a64:	ee 24       	eor	r14, r14
    1a66:	e3 94       	inc	r14
    1a68:	0c e2       	ldi	r16, 0x2C	; 44
    1a6a:	4a e0       	ldi	r20, 0x0A	; 10
    1a6c:	53 e0       	ldi	r21, 0x03	; 3
    1a6e:	63 e0       	ldi	r22, 0x03	; 3
    1a70:	73 e0       	ldi	r23, 0x03	; 3
    1a72:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1a76:	0f 91       	pop	r16
    1a78:	ef 90       	pop	r14
    1a7a:	08 95       	ret

00001a7c <_ZN13Adafruit_FONA7getRSSIEv>:
  return strlen(imei);
}

/********* NETWORK *******************************************************/

FONA_GET_RSSI Adafruit_FONA::getRSSI(void) {
    1a7c:	cf 92       	push	r12
    1a7e:	df 92       	push	r13
    1a80:	ef 92       	push	r14
    1a82:	ff 92       	push	r15
    1a84:	0f 93       	push	r16
    1a86:	1f 93       	push	r17
    1a88:	cf 93       	push	r28
    1a8a:	df 93       	push	r29
    1a8c:	cd b7       	in	r28, 0x3d	; 61
    1a8e:	de b7       	in	r29, 0x3e	; 62
    1a90:	28 97       	sbiw	r28, 0x08	; 8
    1a92:	0f b6       	in	r0, 0x3f	; 63
    1a94:	f8 94       	cli
    1a96:	de bf       	out	0x3e, r29	; 62
    1a98:	0f be       	out	0x3f, r0	; 63
    1a9a:	cd bf       	out	0x3d, r28	; 61
    1a9c:	6c 01       	movw	r12, r24
	
  FONA_GET_RSSI reply;
  uint16_t rssi=0, ber=0, nsPres=0, nsStat=0;
    1a9e:	18 86       	std	Y+8, r1	; 0x08
    1aa0:	1f 82       	std	Y+7, r1	; 0x07
    1aa2:	1e 82       	std	Y+6, r1	; 0x06
    1aa4:	1d 82       	std	Y+5, r1	; 0x05
    1aa6:	1c 82       	std	Y+4, r1	; 0x04
    1aa8:	1b 82       	std	Y+3, r1	; 0x03
    1aaa:	1a 82       	std	Y+2, r1	; 0x02
    1aac:	19 82       	std	Y+1, r1	; 0x01
  uint8_t netReg=0;
  
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &rssi, ',', 0))
    1aae:	e1 2c       	mov	r14, r1
    1ab0:	0c e2       	ldi	r16, 0x2C	; 44
    1ab2:	9e 01       	movw	r18, r28
    1ab4:	29 5f       	subi	r18, 0xF9	; 249
    1ab6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab8:	4c ef       	ldi	r20, 0xFC	; 252
    1aba:	52 e0       	ldi	r21, 0x02	; 2
    1abc:	65 ef       	ldi	r22, 0xF5	; 245
    1abe:	72 e0       	ldi	r23, 0x02	; 2
    1ac0:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1ac4:	f8 2e       	mov	r15, r24
	  reply.rssiErr = 1;
	
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &ber, ',', 1))
    1ac6:	ee 24       	eor	r14, r14
    1ac8:	e3 94       	inc	r14
    1aca:	9e 01       	movw	r18, r28
    1acc:	2b 5f       	subi	r18, 0xFB	; 251
    1ace:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad0:	4e ee       	ldi	r20, 0xEE	; 238
    1ad2:	52 e0       	ldi	r21, 0x02	; 2
    1ad4:	67 ee       	ldi	r22, 0xE7	; 231
    1ad6:	72 e0       	ldi	r23, 0x02	; 2
    1ad8:	c6 01       	movw	r24, r12
    1ada:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1ade:	88 23       	and	r24, r24
    1ae0:	19 f0       	breq	.+6      	; 0x1ae8 <_ZN13Adafruit_FONA7getRSSIEv+0x6c>
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    1ae2:	81 e0       	ldi	r24, 0x01	; 1
    1ae4:	f8 26       	eor	r15, r24
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <_ZN13Adafruit_FONA7getRSSIEv+0x70>
	  reply.rssiErr = 1;
    1ae8:	ff 24       	eor	r15, r15
    1aea:	f3 94       	inc	r15
  
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsPres, ',', 0))
    1aec:	e1 2c       	mov	r14, r1
    1aee:	0c e2       	ldi	r16, 0x2C	; 44
    1af0:	9e 01       	movw	r18, r28
    1af2:	2d 5f       	subi	r18, 0xFD	; 253
    1af4:	3f 4f       	sbci	r19, 0xFF	; 255
    1af6:	4f ed       	ldi	r20, 0xDF	; 223
    1af8:	52 e0       	ldi	r21, 0x02	; 2
    1afa:	66 ed       	ldi	r22, 0xD6	; 214
    1afc:	72 e0       	ldi	r23, 0x02	; 2
    1afe:	c6 01       	movw	r24, r12
    1b00:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1b04:	88 23       	and	r24, r24
    1b06:	11 f0       	breq	.+4      	; 0x1b0c <_ZN13Adafruit_FONA7getRSSIEv+0x90>
	  netReg |= FONA_GET_NETREG::IS_ERROR;
  else
	  netReg |= nsPres; //Is within GET_NETREG enum bounds
    1b08:	1b 81       	ldd	r17, Y+3	; 0x03
    1b0a:	01 c0       	rjmp	.+2      	; 0x1b0e <_ZN13Adafruit_FONA7getRSSIEv+0x92>
	
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &ber, ',', 1))
	  reply.rssiErr = 1;
  
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsPres, ',', 0))
	  netReg |= FONA_GET_NETREG::IS_ERROR;
    1b0c:	10 e2       	ldi	r17, 0x20	; 32
  else
	  netReg |= nsPres; //Is within GET_NETREG enum bounds
	
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsStat, ',', 1))
    1b0e:	ee 24       	eor	r14, r14
    1b10:	e3 94       	inc	r14
    1b12:	0c e2       	ldi	r16, 0x2C	; 44
    1b14:	9e 01       	movw	r18, r28
    1b16:	2f 5f       	subi	r18, 0xFF	; 255
    1b18:	3f 4f       	sbci	r19, 0xFF	; 255
    1b1a:	4e ec       	ldi	r20, 0xCE	; 206
    1b1c:	52 e0       	ldi	r21, 0x02	; 2
    1b1e:	65 ec       	ldi	r22, 0xC5	; 197
    1b20:	72 e0       	ldi	r23, 0x02	; 2
    1b22:	c6 01       	movw	r24, r12
    1b24:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1b28:	81 11       	cpse	r24, r1
    1b2a:	03 c0       	rjmp	.+6      	; 0x1b32 <_ZN13Adafruit_FONA7getRSSIEv+0xb6>
	  netReg |= FONA_GET_NETREG::IS_ERROR;
    1b2c:	91 2f       	mov	r25, r17
    1b2e:	90 62       	ori	r25, 0x20	; 32
    1b30:	02 c0       	rjmp	.+4      	; 0x1b36 <_ZN13Adafruit_FONA7getRSSIEv+0xba>
  else
	  netReg |= nsStat; //Is within GET_NETREG enum bounds
    1b32:	99 81       	ldd	r25, Y+1	; 0x01
    1b34:	91 2b       	or	r25, r17
  
  //Both are <= 99 so can cast&store in 1 byte fields
  reply.rssi = rssi;
  reply.ber = ber;
    1b36:	7d 81       	ldd	r23, Y+5	; 0x05
  reply.netReg = (FONA_GET_NETREG)netReg;
  
  return reply;
    1b38:	6f 81       	ldd	r22, Y+7	; 0x07
}
    1b3a:	8f 2d       	mov	r24, r15
    1b3c:	28 96       	adiw	r28, 0x08	; 8
    1b3e:	0f b6       	in	r0, 0x3f	; 63
    1b40:	f8 94       	cli
    1b42:	de bf       	out	0x3e, r29	; 62
    1b44:	0f be       	out	0x3f, r0	; 63
    1b46:	cd bf       	out	0x3d, r28	; 61
    1b48:	df 91       	pop	r29
    1b4a:	cf 91       	pop	r28
    1b4c:	1f 91       	pop	r17
    1b4e:	0f 91       	pop	r16
    1b50:	ff 90       	pop	r15
    1b52:	ef 90       	pop	r14
    1b54:	df 90       	pop	r13
    1b56:	cf 90       	pop	r12
    1b58:	08 95       	ret

00001b5a <_ZN10GsmPayloadC1Ev>:
boolean GsmPayload::hasGpsInfo(void) { return _header.hasGpsInfo; }
uint8_t GsmPayload::getModuleId(void) { return _header.moduleId; }
void GsmPayload::setModuleId(uint8_t moduleId) { _header.moduleId = moduleId; }
uint16_t GsmPayload::getBootNumber(void) { return _header.bootNumber; }
void GsmPayload::setBootNumber(uint16_t bootNumber) { _header.bootNumber = bootNumber; }
FONA_GET_RSSI GsmPayload::getRSSI(void) { return _header.rssi; }
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	10 82       	st	Z, r1
    1b5e:	12 82       	std	Z+2, r1	; 0x02
    1b60:	11 82       	std	Z+1, r1	; 0x01
    1b62:	13 82       	std	Z+3, r1	; 0x03
    1b64:	14 82       	std	Z+4, r1	; 0x04
    1b66:	15 82       	std	Z+5, r1	; 0x05
    1b68:	16 82       	std	Z+6, r1	; 0x06
    1b6a:	17 82       	std	Z+7, r1	; 0x07
    1b6c:	12 86       	std	Z+10, r1	; 0x0a
    1b6e:	11 86       	std	Z+9, r1	; 0x09
    1b70:	14 86       	std	Z+12, r1	; 0x0c
    1b72:	13 86       	std	Z+11, r1	; 0x0b
    1b74:	08 95       	ret

00001b76 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>:
    1b76:	2a e0       	ldi	r18, 0x0A	; 10
    1b78:	82 9f       	mul	r24, r18
    1b7a:	c0 01       	movw	r24, r0
    1b7c:	11 24       	eor	r1, r1
    1b7e:	09 96       	adiw	r24, 0x09	; 9
    1b80:	0c 94 04 10 	jmp	0x2008	; 0x2008 <_ZN7Helpers14base64_enc_lenEi>

00001b84 <_ZN10GsmPayload16createRawPayloadEPh>:
    1b84:	cf 93       	push	r28
    1b86:	df 93       	push	r29
    1b88:	ec 01       	movw	r28, r24
    1b8a:	cb 01       	movw	r24, r22
    1b8c:	29 e0       	ldi	r18, 0x09	; 9
    1b8e:	fe 01       	movw	r30, r28
    1b90:	db 01       	movw	r26, r22
    1b92:	01 90       	ld	r0, Z+
    1b94:	0d 92       	st	X+, r0
    1b96:	2a 95       	dec	r18
    1b98:	e1 f7       	brne	.-8      	; 0x1b92 <_ZN10GsmPayload16createRawPayloadEPh+0xe>
    1b9a:	4b 81       	ldd	r20, Y+3	; 0x03
    1b9c:	2a e0       	ldi	r18, 0x0A	; 10
    1b9e:	42 9f       	mul	r20, r18
    1ba0:	a0 01       	movw	r20, r0
    1ba2:	11 24       	eor	r1, r1
    1ba4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ba6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ba8:	09 96       	adiw	r24, 0x09	; 9
    1baa:	df 91       	pop	r29
    1bac:	cf 91       	pop	r28
    1bae:	0c 94 c5 25 	jmp	0x4b8a	; 0x4b8a <memcpy>

00001bb2 <_ZN10GsmPayload20createEncodedPayloadEPc>:
    1bb2:	af 92       	push	r10
    1bb4:	bf 92       	push	r11
    1bb6:	cf 92       	push	r12
    1bb8:	df 92       	push	r13
    1bba:	ef 92       	push	r14
    1bbc:	ff 92       	push	r15
    1bbe:	0f 93       	push	r16
    1bc0:	1f 93       	push	r17
    1bc2:	cf 93       	push	r28
    1bc4:	df 93       	push	r29
    1bc6:	cd b7       	in	r28, 0x3d	; 61
    1bc8:	de b7       	in	r29, 0x3e	; 62
    1bca:	6b 01       	movw	r12, r22
    1bcc:	ed b6       	in	r14, 0x3d	; 61
    1bce:	fe b6       	in	r15, 0x3e	; 62
    1bd0:	fc 01       	movw	r30, r24
    1bd2:	03 81       	ldd	r16, Z+3	; 0x03
    1bd4:	fa e0       	ldi	r31, 0x0A	; 10
    1bd6:	0f 9f       	mul	r16, r31
    1bd8:	80 01       	movw	r16, r0
    1bda:	11 24       	eor	r1, r1
    1bdc:	07 5f       	subi	r16, 0xF7	; 247
    1bde:	1f 4f       	sbci	r17, 0xFF	; 255
    1be0:	2d b7       	in	r18, 0x3d	; 61
    1be2:	3e b7       	in	r19, 0x3e	; 62
    1be4:	20 1b       	sub	r18, r16
    1be6:	31 0b       	sbc	r19, r17
    1be8:	0f b6       	in	r0, 0x3f	; 63
    1bea:	f8 94       	cli
    1bec:	3e bf       	out	0x3e, r19	; 62
    1bee:	0f be       	out	0x3f, r0	; 63
    1bf0:	2d bf       	out	0x3d, r18	; 61
    1bf2:	ed b7       	in	r30, 0x3d	; 61
    1bf4:	fe b7       	in	r31, 0x3e	; 62
    1bf6:	31 96       	adiw	r30, 0x01	; 1
    1bf8:	5f 01       	movw	r10, r30
    1bfa:	bf 01       	movw	r22, r30
    1bfc:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <_ZN10GsmPayload16createRawPayloadEPh>
    1c00:	a8 01       	movw	r20, r16
    1c02:	b5 01       	movw	r22, r10
    1c04:	c6 01       	movw	r24, r12
    1c06:	0e 94 3f 10 	call	0x207e	; 0x207e <_ZN7Helpers13base64_encodeEPcPhi>
    1c0a:	0f b6       	in	r0, 0x3f	; 63
    1c0c:	f8 94       	cli
    1c0e:	fe be       	out	0x3e, r15	; 62
    1c10:	0f be       	out	0x3f, r0	; 63
    1c12:	ed be       	out	0x3d, r14	; 61
    1c14:	df 91       	pop	r29
    1c16:	cf 91       	pop	r28
    1c18:	1f 91       	pop	r17
    1c1a:	0f 91       	pop	r16
    1c1c:	ff 90       	pop	r15
    1c1e:	ef 90       	pop	r14
    1c20:	df 90       	pop	r13
    1c22:	cf 90       	pop	r12
    1c24:	bf 90       	pop	r11
    1c26:	af 90       	pop	r10
    1c28:	08 95       	ret

00001c2a <_ZN10GsmPayload13setSensorDataEP10SensorDatah>:
    1c2a:	fc 01       	movw	r30, r24
    1c2c:	74 87       	std	Z+12, r23	; 0x0c
    1c2e:	63 87       	std	Z+11, r22	; 0x0b
    1c30:	43 83       	std	Z+3, r20	; 0x03
    1c32:	08 95       	ret

00001c34 <_ZN10GsmPayload11setModuleIdEh>:
    1c34:	fc 01       	movw	r30, r24
    1c36:	60 83       	st	Z, r22
    1c38:	08 95       	ret

00001c3a <_ZN10GsmPayload13setBootNumberEj>:
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	72 83       	std	Z+2, r23	; 0x02
    1c3e:	61 83       	std	Z+1, r22	; 0x01
    1c40:	08 95       	ret

00001c42 <_ZN10GsmPayload7setRSSIE13FONA_GET_RSSI>:
void GsmPayload::setRSSI(FONA_GET_RSSI rssi) { _header.rssi = rssi; }
    1c42:	fc 01       	movw	r30, r24
    1c44:	45 83       	std	Z+5, r20	; 0x05
    1c46:	56 83       	std	Z+6, r21	; 0x06
    1c48:	67 83       	std	Z+7, r22	; 0x07
    1c4a:	70 87       	std	Z+8, r23	; 0x08
    1c4c:	08 95       	ret

00001c4e <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>:
	for(i = inputLen - 1; input[i] == '='; i--) {
		numEq++;
	}

	return ((6 * inputLen) / 8) - numEq;
}
    1c4e:	cf 93       	push	r28
    1c50:	df 93       	push	r29
    1c52:	ec 01       	movw	r28, r24
    1c54:	6e e9       	ldi	r22, 0x9E	; 158
    1c56:	74 e0       	ldi	r23, 0x04	; 4
    1c58:	8e e9       	ldi	r24, 0x9E	; 158
    1c5a:	93 e0       	ldi	r25, 0x03	; 3
    1c5c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1c60:	4a e0       	ldi	r20, 0x0A	; 10
    1c62:	50 e0       	ldi	r21, 0x00	; 0
    1c64:	68 81       	ld	r22, Y
    1c66:	8e e9       	ldi	r24, 0x9E	; 158
    1c68:	93 e0       	ldi	r25, 0x03	; 3
    1c6a:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <_ZN5Print5printEhi>
    1c6e:	6a e9       	ldi	r22, 0x9A	; 154
    1c70:	74 e0       	ldi	r23, 0x04	; 4
    1c72:	8e e9       	ldi	r24, 0x9E	; 158
    1c74:	93 e0       	ldi	r25, 0x03	; 3
    1c76:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1c7a:	65 e9       	ldi	r22, 0x95	; 149
    1c7c:	74 e0       	ldi	r23, 0x04	; 4
    1c7e:	8e e9       	ldi	r24, 0x9E	; 158
    1c80:	93 e0       	ldi	r25, 0x03	; 3
    1c82:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1c86:	4a e0       	ldi	r20, 0x0A	; 10
    1c88:	50 e0       	ldi	r21, 0x00	; 0
    1c8a:	69 81       	ldd	r22, Y+1	; 0x01
    1c8c:	8e e9       	ldi	r24, 0x9E	; 158
    1c8e:	93 e0       	ldi	r25, 0x03	; 3
    1c90:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <_ZN5Print5printEhi>
    1c94:	61 e9       	ldi	r22, 0x91	; 145
    1c96:	74 e0       	ldi	r23, 0x04	; 4
    1c98:	8e e9       	ldi	r24, 0x9E	; 158
    1c9a:	93 e0       	ldi	r25, 0x03	; 3
    1c9c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1ca0:	6c e7       	ldi	r22, 0x7C	; 124
    1ca2:	74 e0       	ldi	r23, 0x04	; 4
    1ca4:	8e e9       	ldi	r24, 0x9E	; 158
    1ca6:	93 e0       	ldi	r25, 0x03	; 3
    1ca8:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1cac:	6b 81       	ldd	r22, Y+3	; 0x03
    1cae:	63 70       	andi	r22, 0x03	; 3
    1cb0:	70 e0       	ldi	r23, 0x00	; 0
    1cb2:	4a e0       	ldi	r20, 0x0A	; 10
    1cb4:	50 e0       	ldi	r21, 0x00	; 0
    1cb6:	8e e9       	ldi	r24, 0x9E	; 158
    1cb8:	93 e0       	ldi	r25, 0x03	; 3
    1cba:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1cbe:	62 e7       	ldi	r22, 0x72	; 114
    1cc0:	74 e0       	ldi	r23, 0x04	; 4
    1cc2:	8e e9       	ldi	r24, 0x9E	; 158
    1cc4:	93 e0       	ldi	r25, 0x03	; 3
    1cc6:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1cca:	6b 81       	ldd	r22, Y+3	; 0x03
    1ccc:	6c 71       	andi	r22, 0x1C	; 28
    1cce:	70 e0       	ldi	r23, 0x00	; 0
    1cd0:	75 95       	asr	r23
    1cd2:	67 95       	ror	r22
    1cd4:	75 95       	asr	r23
    1cd6:	67 95       	ror	r22
    1cd8:	4a e0       	ldi	r20, 0x0A	; 10
    1cda:	50 e0       	ldi	r21, 0x00	; 0
    1cdc:	8e e9       	ldi	r24, 0x9E	; 158
    1cde:	93 e0       	ldi	r25, 0x03	; 3
    1ce0:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1ce4:	69 e6       	ldi	r22, 0x69	; 105
    1ce6:	74 e0       	ldi	r23, 0x04	; 4
    1ce8:	8e e9       	ldi	r24, 0x9E	; 158
    1cea:	93 e0       	ldi	r25, 0x03	; 3
    1cec:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1cf0:	6b 81       	ldd	r22, Y+3	; 0x03
    1cf2:	65 fb       	bst	r22, 5
    1cf4:	66 27       	eor	r22, r22
    1cf6:	60 f9       	bld	r22, 0
    1cf8:	4a e0       	ldi	r20, 0x0A	; 10
    1cfa:	50 e0       	ldi	r21, 0x00	; 0
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	8e e9       	ldi	r24, 0x9E	; 158
    1d00:	93 e0       	ldi	r25, 0x03	; 3
    1d02:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1d06:	65 e6       	ldi	r22, 0x65	; 101
    1d08:	74 e0       	ldi	r23, 0x04	; 4
    1d0a:	8e e9       	ldi	r24, 0x9E	; 158
    1d0c:	93 e0       	ldi	r25, 0x03	; 3
    1d0e:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1d12:	68 e5       	ldi	r22, 0x58	; 88
    1d14:	74 e0       	ldi	r23, 0x04	; 4
    1d16:	8e e9       	ldi	r24, 0x9E	; 158
    1d18:	93 e0       	ldi	r25, 0x03	; 3
    1d1a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1d1e:	4a e0       	ldi	r20, 0x0A	; 10
    1d20:	50 e0       	ldi	r21, 0x00	; 0
    1d22:	6a 81       	ldd	r22, Y+2	; 0x02
    1d24:	8e e9       	ldi	r24, 0x9E	; 158
    1d26:	93 e0       	ldi	r25, 0x03	; 3
    1d28:	df 91       	pop	r29
    1d2a:	cf 91       	pop	r28
    1d2c:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <_ZN5Print7printlnEhi>

00001d30 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>:
    1d30:	fc 01       	movw	r30, r24
    1d32:	22 81       	ldd	r18, Z+2	; 0x02
    1d34:	21 11       	cpse	r18, r1
    1d36:	06 c0       	rjmp	.+12     	; 0x1d44 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x14>
    1d38:	90 81       	ld	r25, Z
    1d3a:	93 36       	cpi	r25, 0x63	; 99
    1d3c:	19 f0       	breq	.+6      	; 0x1d44 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x14>
    1d3e:	81 e0       	ldi	r24, 0x01	; 1
    1d40:	97 30       	cpi	r25, 0x07	; 7
    1d42:	08 f4       	brcc	.+2      	; 0x1d46 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x16>
    1d44:	80 e0       	ldi	r24, 0x00	; 0
    1d46:	08 95       	ret

00001d48 <_ZN7Helpers15printSensorDataEP10SensorData>:
    1d48:	cf 93       	push	r28
    1d4a:	df 93       	push	r29
    1d4c:	ec 01       	movw	r28, r24
    1d4e:	60 e5       	ldi	r22, 0x50	; 80
    1d50:	74 e0       	ldi	r23, 0x04	; 4
    1d52:	8e e9       	ldi	r24, 0x9E	; 158
    1d54:	93 e0       	ldi	r25, 0x03	; 3
    1d56:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1d5a:	68 81       	ld	r22, Y
    1d5c:	79 81       	ldd	r23, Y+1	; 0x01
    1d5e:	4a e0       	ldi	r20, 0x0A	; 10
    1d60:	50 e0       	ldi	r21, 0x00	; 0
    1d62:	8e e9       	ldi	r24, 0x9E	; 158
    1d64:	93 e0       	ldi	r25, 0x03	; 3
    1d66:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1d6a:	6c e4       	ldi	r22, 0x4C	; 76
    1d6c:	74 e0       	ldi	r23, 0x04	; 4
    1d6e:	8e e9       	ldi	r24, 0x9E	; 158
    1d70:	93 e0       	ldi	r25, 0x03	; 3
    1d72:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1d76:	66 e4       	ldi	r22, 0x46	; 70
    1d78:	74 e0       	ldi	r23, 0x04	; 4
    1d7a:	8e e9       	ldi	r24, 0x9E	; 158
    1d7c:	93 e0       	ldi	r25, 0x03	; 3
    1d7e:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1d82:	6a 81       	ldd	r22, Y+2	; 0x02
    1d84:	7b 81       	ldd	r23, Y+3	; 0x03
    1d86:	4a e0       	ldi	r20, 0x0A	; 10
    1d88:	50 e0       	ldi	r21, 0x00	; 0
    1d8a:	8e e9       	ldi	r24, 0x9E	; 158
    1d8c:	93 e0       	ldi	r25, 0x03	; 3
    1d8e:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1d92:	62 e4       	ldi	r22, 0x42	; 66
    1d94:	74 e0       	ldi	r23, 0x04	; 4
    1d96:	8e e9       	ldi	r24, 0x9E	; 158
    1d98:	93 e0       	ldi	r25, 0x03	; 3
    1d9a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1d9e:	69 e3       	ldi	r22, 0x39	; 57
    1da0:	74 e0       	ldi	r23, 0x04	; 4
    1da2:	8e e9       	ldi	r24, 0x9E	; 158
    1da4:	93 e0       	ldi	r25, 0x03	; 3
    1da6:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1daa:	6c 81       	ldd	r22, Y+4	; 0x04
    1dac:	7d 81       	ldd	r23, Y+5	; 0x05
    1dae:	4a e0       	ldi	r20, 0x0A	; 10
    1db0:	50 e0       	ldi	r21, 0x00	; 0
    1db2:	8e e9       	ldi	r24, 0x9E	; 158
    1db4:	93 e0       	ldi	r25, 0x03	; 3
    1db6:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1dba:	65 e3       	ldi	r22, 0x35	; 53
    1dbc:	74 e0       	ldi	r23, 0x04	; 4
    1dbe:	8e e9       	ldi	r24, 0x9E	; 158
    1dc0:	93 e0       	ldi	r25, 0x03	; 3
    1dc2:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1dc6:	6f e2       	ldi	r22, 0x2F	; 47
    1dc8:	74 e0       	ldi	r23, 0x04	; 4
    1dca:	8e e9       	ldi	r24, 0x9E	; 158
    1dcc:	93 e0       	ldi	r25, 0x03	; 3
    1dce:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1dd2:	6e 81       	ldd	r22, Y+6	; 0x06
    1dd4:	7f 81       	ldd	r23, Y+7	; 0x07
    1dd6:	4a e0       	ldi	r20, 0x0A	; 10
    1dd8:	50 e0       	ldi	r21, 0x00	; 0
    1dda:	8e e9       	ldi	r24, 0x9E	; 158
    1ddc:	93 e0       	ldi	r25, 0x03	; 3
    1dde:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1de2:	6b e2       	ldi	r22, 0x2B	; 43
    1de4:	74 e0       	ldi	r23, 0x04	; 4
    1de6:	8e e9       	ldi	r24, 0x9E	; 158
    1de8:	93 e0       	ldi	r25, 0x03	; 3
    1dea:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1dee:	64 e2       	ldi	r22, 0x24	; 36
    1df0:	74 e0       	ldi	r23, 0x04	; 4
    1df2:	8e e9       	ldi	r24, 0x9E	; 158
    1df4:	93 e0       	ldi	r25, 0x03	; 3
    1df6:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1dfa:	4a e0       	ldi	r20, 0x0A	; 10
    1dfc:	50 e0       	ldi	r21, 0x00	; 0
    1dfe:	68 85       	ldd	r22, Y+8	; 0x08
    1e00:	8e e9       	ldi	r24, 0x9E	; 158
    1e02:	93 e0       	ldi	r25, 0x03	; 3
    1e04:	df 91       	pop	r29
    1e06:	cf 91       	pop	r28
    1e08:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <_ZN5Print7printlnEhi>

00001e0c <_ZN7Helpers18printDailySendDataEP14DailyCycleData>:
    1e0c:	cf 93       	push	r28
    1e0e:	df 93       	push	r29
    1e10:	ec 01       	movw	r28, r24
    1e12:	6c e1       	ldi	r22, 0x1C	; 28
    1e14:	74 e0       	ldi	r23, 0x04	; 4
    1e16:	8e e9       	ldi	r24, 0x9E	; 158
    1e18:	93 e0       	ldi	r25, 0x03	; 3
    1e1a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1e1e:	69 81       	ldd	r22, Y+1	; 0x01
    1e20:	7a 81       	ldd	r23, Y+2	; 0x02
    1e22:	4a e0       	ldi	r20, 0x0A	; 10
    1e24:	50 e0       	ldi	r21, 0x00	; 0
    1e26:	8e e9       	ldi	r24, 0x9E	; 158
    1e28:	93 e0       	ldi	r25, 0x03	; 3
    1e2a:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1e2e:	68 e1       	ldi	r22, 0x18	; 24
    1e30:	74 e0       	ldi	r23, 0x04	; 4
    1e32:	8e e9       	ldi	r24, 0x9E	; 158
    1e34:	93 e0       	ldi	r25, 0x03	; 3
    1e36:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1e3a:	6d e0       	ldi	r22, 0x0D	; 13
    1e3c:	74 e0       	ldi	r23, 0x04	; 4
    1e3e:	8e e9       	ldi	r24, 0x9E	; 158
    1e40:	93 e0       	ldi	r25, 0x03	; 3
    1e42:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1e46:	4a e0       	ldi	r20, 0x0A	; 10
    1e48:	50 e0       	ldi	r21, 0x00	; 0
    1e4a:	6b 81       	ldd	r22, Y+3	; 0x03
    1e4c:	8e e9       	ldi	r24, 0x9E	; 158
    1e4e:	93 e0       	ldi	r25, 0x03	; 3
    1e50:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <_ZN5Print5printEhi>
    1e54:	69 e0       	ldi	r22, 0x09	; 9
    1e56:	74 e0       	ldi	r23, 0x04	; 4
    1e58:	8e e9       	ldi	r24, 0x9E	; 158
    1e5a:	93 e0       	ldi	r25, 0x03	; 3
    1e5c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1e60:	62 e0       	ldi	r22, 0x02	; 2
    1e62:	74 e0       	ldi	r23, 0x04	; 4
    1e64:	8e e9       	ldi	r24, 0x9E	; 158
    1e66:	93 e0       	ldi	r25, 0x03	; 3
    1e68:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1e6c:	68 81       	ld	r22, Y
    1e6e:	06 2e       	mov	r0, r22
    1e70:	00 0c       	add	r0, r0
    1e72:	77 0b       	sbc	r23, r23
    1e74:	4a e0       	ldi	r20, 0x0A	; 10
    1e76:	50 e0       	ldi	r21, 0x00	; 0
    1e78:	8e e9       	ldi	r24, 0x9E	; 158
    1e7a:	93 e0       	ldi	r25, 0x03	; 3
    1e7c:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1e80:	6e ef       	ldi	r22, 0xFE	; 254
    1e82:	73 e0       	ldi	r23, 0x03	; 3
    1e84:	8e e9       	ldi	r24, 0x9E	; 158
    1e86:	93 e0       	ldi	r25, 0x03	; 3
    1e88:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
    1e8c:	6c ef       	ldi	r22, 0xFC	; 252
    1e8e:	73 e0       	ldi	r23, 0x03	; 3
    1e90:	8e e9       	ldi	r24, 0x9E	; 158
    1e92:	93 e0       	ldi	r25, 0x03	; 3
    1e94:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1e98:	ce 01       	movw	r24, r28
    1e9a:	04 96       	adiw	r24, 0x04	; 4
    1e9c:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>
    1ea0:	6e ee       	ldi	r22, 0xEE	; 238
    1ea2:	73 e0       	ldi	r23, 0x03	; 3
    1ea4:	8e e9       	ldi	r24, 0x9E	; 158
    1ea6:	93 e0       	ldi	r25, 0x03	; 3
    1ea8:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1eac:	68 85       	ldd	r22, Y+8	; 0x08
    1eae:	70 e0       	ldi	r23, 0x00	; 0
    1eb0:	42 e0       	ldi	r20, 0x02	; 2
    1eb2:	50 e0       	ldi	r21, 0x00	; 0
    1eb4:	8e e9       	ldi	r24, 0x9E	; 158
    1eb6:	93 e0       	ldi	r25, 0x03	; 3
    1eb8:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1ebc:	6a ee       	ldi	r22, 0xEA	; 234
    1ebe:	73 e0       	ldi	r23, 0x03	; 3
    1ec0:	8e e9       	ldi	r24, 0x9E	; 158
    1ec2:	93 e0       	ldi	r25, 0x03	; 3
    1ec4:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1ec8:	6d ed       	ldi	r22, 0xDD	; 221
    1eca:	73 e0       	ldi	r23, 0x03	; 3
    1ecc:	8e e9       	ldi	r24, 0x9E	; 158
    1ece:	93 e0       	ldi	r25, 0x03	; 3
    1ed0:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1ed4:	69 85       	ldd	r22, Y+9	; 0x09
    1ed6:	70 e0       	ldi	r23, 0x00	; 0
    1ed8:	42 e0       	ldi	r20, 0x02	; 2
    1eda:	50 e0       	ldi	r21, 0x00	; 0
    1edc:	8e e9       	ldi	r24, 0x9E	; 158
    1ede:	93 e0       	ldi	r25, 0x03	; 3
    1ee0:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1ee4:	69 ed       	ldi	r22, 0xD9	; 217
    1ee6:	73 e0       	ldi	r23, 0x03	; 3
    1ee8:	8e e9       	ldi	r24, 0x9E	; 158
    1eea:	93 e0       	ldi	r25, 0x03	; 3
    1eec:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1ef0:	6c ec       	ldi	r22, 0xCC	; 204
    1ef2:	73 e0       	ldi	r23, 0x03	; 3
    1ef4:	8e e9       	ldi	r24, 0x9E	; 158
    1ef6:	93 e0       	ldi	r25, 0x03	; 3
    1ef8:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1efc:	6a 85       	ldd	r22, Y+10	; 0x0a
    1efe:	70 e0       	ldi	r23, 0x00	; 0
    1f00:	42 e0       	ldi	r20, 0x02	; 2
    1f02:	50 e0       	ldi	r21, 0x00	; 0
    1f04:	8e e9       	ldi	r24, 0x9E	; 158
    1f06:	93 e0       	ldi	r25, 0x03	; 3
    1f08:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    1f0c:	68 ec       	ldi	r22, 0xC8	; 200
    1f0e:	73 e0       	ldi	r23, 0x03	; 3
    1f10:	8e e9       	ldi	r24, 0x9E	; 158
    1f12:	93 e0       	ldi	r25, 0x03	; 3
    1f14:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
    1f18:	6a eb       	ldi	r22, 0xBA	; 186
    1f1a:	73 e0       	ldi	r23, 0x03	; 3
    1f1c:	8e e9       	ldi	r24, 0x9E	; 158
    1f1e:	93 e0       	ldi	r25, 0x03	; 3
    1f20:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1f24:	6f 85       	ldd	r22, Y+15	; 0x0f
    1f26:	78 89       	ldd	r23, Y+16	; 0x10
    1f28:	4a e0       	ldi	r20, 0x0A	; 10
    1f2a:	50 e0       	ldi	r21, 0x00	; 0
    1f2c:	8e e9       	ldi	r24, 0x9E	; 158
    1f2e:	93 e0       	ldi	r25, 0x03	; 3
    1f30:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1f34:	66 eb       	ldi	r22, 0xB6	; 182
    1f36:	73 e0       	ldi	r23, 0x03	; 3
    1f38:	8e e9       	ldi	r24, 0x9E	; 158
    1f3a:	93 e0       	ldi	r25, 0x03	; 3
    1f3c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1f40:	68 ea       	ldi	r22, 0xA8	; 168
    1f42:	73 e0       	ldi	r23, 0x03	; 3
    1f44:	8e e9       	ldi	r24, 0x9E	; 158
    1f46:	93 e0       	ldi	r25, 0x03	; 3
    1f48:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1f4c:	6d 85       	ldd	r22, Y+13	; 0x0d
    1f4e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1f50:	4a e0       	ldi	r20, 0x0A	; 10
    1f52:	50 e0       	ldi	r21, 0x00	; 0
    1f54:	8e e9       	ldi	r24, 0x9E	; 158
    1f56:	93 e0       	ldi	r25, 0x03	; 3
    1f58:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1f5c:	64 ea       	ldi	r22, 0xA4	; 164
    1f5e:	73 e0       	ldi	r23, 0x03	; 3
    1f60:	8e e9       	ldi	r24, 0x9E	; 158
    1f62:	93 e0       	ldi	r25, 0x03	; 3
    1f64:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1f68:	65 e9       	ldi	r22, 0x95	; 149
    1f6a:	73 e0       	ldi	r23, 0x03	; 3
    1f6c:	8e e9       	ldi	r24, 0x9E	; 158
    1f6e:	93 e0       	ldi	r25, 0x03	; 3
    1f70:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    1f74:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f76:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f78:	4a e0       	ldi	r20, 0x0A	; 10
    1f7a:	50 e0       	ldi	r21, 0x00	; 0
    1f7c:	8e e9       	ldi	r24, 0x9E	; 158
    1f7e:	93 e0       	ldi	r25, 0x03	; 3
    1f80:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    1f84:	61 e9       	ldi	r22, 0x91	; 145
    1f86:	73 e0       	ldi	r23, 0x03	; 3
    1f88:	8e e9       	ldi	r24, 0x9E	; 158
    1f8a:	93 e0       	ldi	r25, 0x03	; 3
    1f8c:	df 91       	pop	r29
    1f8e:	cf 91       	pop	r28
    1f90:	0c 94 dd 1c 	jmp	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>

00001f94 <_ZN7Helpers12freeListSizeEv>:
    1f94:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <__flp>
    1f98:	f0 91 8b 04 	lds	r31, 0x048B	; 0x80048b <__flp+0x1>
    1f9c:	80 e0       	ldi	r24, 0x00	; 0
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	30 97       	sbiw	r30, 0x00	; 0
    1fa2:	49 f0       	breq	.+18     	; 0x1fb6 <_ZN7Helpers12freeListSizeEv+0x22>
    1fa4:	02 96       	adiw	r24, 0x02	; 2
    1fa6:	20 81       	ld	r18, Z
    1fa8:	31 81       	ldd	r19, Z+1	; 0x01
    1faa:	82 0f       	add	r24, r18
    1fac:	93 1f       	adc	r25, r19
    1fae:	02 80       	ldd	r0, Z+2	; 0x02
    1fb0:	f3 81       	ldd	r31, Z+3	; 0x03
    1fb2:	e0 2d       	mov	r30, r0
    1fb4:	f5 cf       	rjmp	.-22     	; 0x1fa0 <_ZN7Helpers12freeListSizeEv+0xc>
    1fb6:	08 95       	ret

00001fb8 <_ZN7Helpers10freeMemoryEv>:
    1fb8:	0f 93       	push	r16
    1fba:	1f 93       	push	r17
    1fbc:	cf 93       	push	r28
    1fbe:	df 93       	push	r29
    1fc0:	00 d0       	rcall	.+0      	; 0x1fc2 <_ZN7Helpers10freeMemoryEv+0xa>
    1fc2:	cd b7       	in	r28, 0x3d	; 61
    1fc4:	de b7       	in	r29, 0x3e	; 62
    1fc6:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__brkval>
    1fca:	90 91 89 04 	lds	r25, 0x0489	; 0x800489 <__brkval+0x1>
    1fce:	8e 01       	movw	r16, r28
    1fd0:	0f 5f       	subi	r16, 0xFF	; 255
    1fd2:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd4:	00 97       	sbiw	r24, 0x00	; 0
    1fd6:	29 f4       	brne	.+10     	; 0x1fe2 <_ZN7Helpers10freeMemoryEv+0x2a>
    1fd8:	0c 58       	subi	r16, 0x8C	; 140
    1fda:	14 40       	sbci	r17, 0x04	; 4
    1fdc:	1a 83       	std	Y+2, r17	; 0x02
    1fde:	09 83       	std	Y+1, r16	; 0x01
    1fe0:	0a c0       	rjmp	.+20     	; 0x1ff6 <_ZN7Helpers10freeMemoryEv+0x3e>
    1fe2:	08 1b       	sub	r16, r24
    1fe4:	19 0b       	sbc	r17, r25
    1fe6:	1a 83       	std	Y+2, r17	; 0x02
    1fe8:	09 83       	std	Y+1, r16	; 0x01
    1fea:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <_ZN7Helpers12freeListSizeEv>
    1fee:	80 0f       	add	r24, r16
    1ff0:	91 1f       	adc	r25, r17
    1ff2:	9a 83       	std	Y+2, r25	; 0x02
    1ff4:	89 83       	std	Y+1, r24	; 0x01
    1ff6:	89 81       	ldd	r24, Y+1	; 0x01
    1ff8:	9a 81       	ldd	r25, Y+2	; 0x02
    1ffa:	0f 90       	pop	r0
    1ffc:	0f 90       	pop	r0
    1ffe:	df 91       	pop	r29
    2000:	cf 91       	pop	r28
    2002:	1f 91       	pop	r17
    2004:	0f 91       	pop	r16
    2006:	08 95       	ret

00002008 <_ZN7Helpers14base64_enc_lenEi>:
    2008:	9c 01       	movw	r18, r24
    200a:	2e 5f       	subi	r18, 0xFE	; 254
    200c:	3f 4f       	sbci	r19, 0xFF	; 255
    200e:	e3 e0       	ldi	r30, 0x03	; 3
    2010:	f0 e0       	ldi	r31, 0x00	; 0
    2012:	c9 01       	movw	r24, r18
    2014:	bf 01       	movw	r22, r30
    2016:	0e 94 39 23 	call	0x4672	; 0x4672 <__divmodhi4>
    201a:	a9 01       	movw	r20, r18
    201c:	48 1b       	sub	r20, r24
    201e:	59 0b       	sbc	r21, r25
    2020:	ca 01       	movw	r24, r20
    2022:	bf 01       	movw	r22, r30
    2024:	0e 94 39 23 	call	0x4672	; 0x4672 <__divmodhi4>
    2028:	cb 01       	movw	r24, r22
    202a:	88 0f       	add	r24, r24
    202c:	99 1f       	adc	r25, r25
    202e:	88 0f       	add	r24, r24
    2030:	99 1f       	adc	r25, r25
    2032:	01 96       	adiw	r24, 0x01	; 1
    2034:	08 95       	ret

00002036 <_Z8a3_to_a4PhS_>:

inline void a3_to_a4(uint8_t * a4, uint8_t * a3) {
    2036:	dc 01       	movw	r26, r24
    2038:	fb 01       	movw	r30, r22
	a4[0] = (a3[0] & 0xfc) >> 2;
    203a:	80 81       	ld	r24, Z
    203c:	86 95       	lsr	r24
    203e:	86 95       	lsr	r24
    2040:	8c 93       	st	X, r24
	a4[1] = ((a3[0] & 0x03) << 4) + ((a3[1] & 0xf0) >> 4);
    2042:	80 81       	ld	r24, Z
    2044:	83 70       	andi	r24, 0x03	; 3
    2046:	91 81       	ldd	r25, Z+1	; 0x01
    2048:	92 95       	swap	r25
    204a:	9f 70       	andi	r25, 0x0F	; 15
    204c:	20 e1       	ldi	r18, 0x10	; 16
    204e:	82 9f       	mul	r24, r18
    2050:	90 0d       	add	r25, r0
    2052:	11 24       	eor	r1, r1
    2054:	11 96       	adiw	r26, 0x01	; 1
    2056:	9c 93       	st	X, r25
    2058:	11 97       	sbiw	r26, 0x01	; 1
	a4[2] = ((a3[1] & 0x0f) << 2) + ((a3[2] & 0xc0) >> 6);
    205a:	91 81       	ldd	r25, Z+1	; 0x01
    205c:	9f 70       	andi	r25, 0x0F	; 15
    205e:	99 0f       	add	r25, r25
    2060:	99 0f       	add	r25, r25
    2062:	22 81       	ldd	r18, Z+2	; 0x02
    2064:	22 95       	swap	r18
    2066:	26 95       	lsr	r18
    2068:	26 95       	lsr	r18
    206a:	23 70       	andi	r18, 0x03	; 3
    206c:	92 0f       	add	r25, r18
    206e:	12 96       	adiw	r26, 0x02	; 2
    2070:	9c 93       	st	X, r25
    2072:	12 97       	sbiw	r26, 0x02	; 2
	a4[3] = (a3[2] & 0x3f);
    2074:	82 81       	ldd	r24, Z+2	; 0x02
    2076:	8f 73       	andi	r24, 0x3F	; 63
    2078:	13 96       	adiw	r26, 0x03	; 3
    207a:	8c 93       	st	X, r24
    207c:	08 95       	ret

0000207e <_ZN7Helpers13base64_encodeEPcPhi>:

/* 
	If *input is string, trailing \0 should NOT be included in the length
	Return length DOES include trailing \0
*/
int16_t Helpers::base64_encode(char *output, uint8_t *input, int16_t inputLen) {
    207e:	6f 92       	push	r6
    2080:	7f 92       	push	r7
    2082:	8f 92       	push	r8
    2084:	9f 92       	push	r9
    2086:	af 92       	push	r10
    2088:	bf 92       	push	r11
    208a:	cf 92       	push	r12
    208c:	df 92       	push	r13
    208e:	ef 92       	push	r14
    2090:	ff 92       	push	r15
    2092:	0f 93       	push	r16
    2094:	1f 93       	push	r17
    2096:	cf 93       	push	r28
    2098:	df 93       	push	r29
    209a:	cd b7       	in	r28, 0x3d	; 61
    209c:	de b7       	in	r29, 0x3e	; 62
    209e:	27 97       	sbiw	r28, 0x07	; 7
    20a0:	0f b6       	in	r0, 0x3f	; 63
    20a2:	f8 94       	cli
    20a4:	de bf       	out	0x3e, r29	; 62
    20a6:	0f be       	out	0x3f, r0	; 63
    20a8:	cd bf       	out	0x3d, r28	; 61
    20aa:	6c 01       	movw	r12, r24
    20ac:	5b 01       	movw	r10, r22
    20ae:	3b 01       	movw	r6, r22
    20b0:	64 0e       	add	r6, r20
    20b2:	75 1e       	adc	r7, r21
	
	int16_t i = 0, j = 0;
	int16_t encLen = 0;
    20b4:	e1 2c       	mov	r14, r1
    20b6:	f1 2c       	mov	r15, r1
	If *input is string, trailing \0 should NOT be included in the length
	Return length DOES include trailing \0
*/
int16_t Helpers::base64_encode(char *output, uint8_t *input, int16_t inputLen) {
	
	int16_t i = 0, j = 0;
    20b8:	00 e0       	ldi	r16, 0x00	; 0
    20ba:	10 e0       	ldi	r17, 0x00	; 0
	int16_t encLen = 0;
	uint8_t a3[3];
	uint8_t a4[4];

	while(inputLen--) {
		a3[i++] = *(input++);
    20bc:	4e 01       	movw	r8, r28
    20be:	85 e0       	ldi	r24, 0x05	; 5
    20c0:	88 0e       	add	r8, r24
    20c2:	91 1c       	adc	r9, r1
	int16_t i = 0, j = 0;
	int16_t encLen = 0;
	uint8_t a3[3];
	uint8_t a4[4];

	while(inputLen--) {
    20c4:	6a 14       	cp	r6, r10
    20c6:	7b 04       	cpc	r7, r11
    20c8:	49 f1       	breq	.+82     	; 0x211c <_ZN7Helpers13base64_encodeEPcPhi+0x9e>
		a3[i++] = *(input++);
    20ca:	c8 01       	movw	r24, r16
    20cc:	01 96       	adiw	r24, 0x01	; 1
    20ce:	f5 01       	movw	r30, r10
    20d0:	21 91       	ld	r18, Z+
    20d2:	5f 01       	movw	r10, r30
    20d4:	f4 01       	movw	r30, r8
    20d6:	e0 0f       	add	r30, r16
    20d8:	f1 1f       	adc	r31, r17
    20da:	20 83       	st	Z, r18
		if(i == 3) {
    20dc:	83 30       	cpi	r24, 0x03	; 3
    20de:	91 05       	cpc	r25, r1
    20e0:	11 f0       	breq	.+4      	; 0x20e6 <_ZN7Helpers13base64_encodeEPcPhi+0x68>

			for(i = 0; i < 4; i++) {
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
			}

			i = 0;
    20e2:	8c 01       	movw	r16, r24
    20e4:	ef cf       	rjmp	.-34     	; 0x20c4 <_ZN7Helpers13base64_encodeEPcPhi+0x46>
	uint8_t a4[4];

	while(inputLen--) {
		a3[i++] = *(input++);
		if(i == 3) {
			a3_to_a4(a4, a3);
    20e6:	b4 01       	movw	r22, r8
    20e8:	ce 01       	movw	r24, r28
    20ea:	01 96       	adiw	r24, 0x01	; 1
    20ec:	0e 94 1b 10 	call	0x2036	; 0x2036 <_Z8a3_to_a4PhS_>
    20f0:	de 01       	movw	r26, r28
    20f2:	11 96       	adiw	r26, 0x01	; 1
    20f4:	c6 01       	movw	r24, r12
    20f6:	8e 0d       	add	r24, r14
    20f8:	9f 1d       	adc	r25, r15

			for(i = 0; i < 4; i++) {
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
    20fa:	ed 91       	ld	r30, X+
    20fc:	f0 e0       	ldi	r31, 0x00	; 0
    20fe:	ec 55       	subi	r30, 0x5C	; 92
    2100:	fb 4f       	sbci	r31, 0xFB	; 251
    2102:	24 91       	lpm	r18, Z
    2104:	fc 01       	movw	r30, r24
    2106:	21 93       	st	Z+, r18
    2108:	cf 01       	movw	r24, r30
	while(inputLen--) {
		a3[i++] = *(input++);
		if(i == 3) {
			a3_to_a4(a4, a3);

			for(i = 0; i < 4; i++) {
    210a:	a8 15       	cp	r26, r8
    210c:	b9 05       	cpc	r27, r9
    210e:	a9 f7       	brne	.-22     	; 0x20fa <_ZN7Helpers13base64_encodeEPcPhi+0x7c>
    2110:	f4 e0       	ldi	r31, 0x04	; 4
    2112:	ef 0e       	add	r14, r31
    2114:	f1 1c       	adc	r15, r1
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
			}

			i = 0;
    2116:	80 e0       	ldi	r24, 0x00	; 0
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	e3 cf       	rjmp	.-58     	; 0x20e2 <_ZN7Helpers13base64_encodeEPcPhi+0x64>
		}
	}

	if(i) {
    211c:	01 15       	cp	r16, r1
    211e:	11 05       	cpc	r17, r1
    2120:	09 f4       	brne	.+2      	; 0x2124 <_ZN7Helpers13base64_encodeEPcPhi+0xa6>
    2122:	3c c0       	rjmp	.+120    	; 0x219c <_ZN7Helpers13base64_encodeEPcPhi+0x11e>
    2124:	be 01       	movw	r22, r28
    2126:	6b 5f       	subi	r22, 0xFB	; 251
    2128:	7f 4f       	sbci	r23, 0xFF	; 255
    212a:	fb 01       	movw	r30, r22
    212c:	e0 0f       	add	r30, r16
    212e:	f1 1f       	adc	r31, r17
		for(j = i; j < 3; j++) {
    2130:	cf 01       	movw	r24, r30
    2132:	86 1b       	sub	r24, r22
    2134:	97 0b       	sbc	r25, r23
    2136:	03 97       	sbiw	r24, 0x03	; 3
    2138:	14 f4       	brge	.+4      	; 0x213e <_ZN7Helpers13base64_encodeEPcPhi+0xc0>
			a3[j] = '\0';
    213a:	11 92       	st	Z+, r1
			i = 0;
		}
	}

	if(i) {
		for(j = i; j < 3; j++) {
    213c:	f9 cf       	rjmp	.-14     	; 0x2130 <_ZN7Helpers13base64_encodeEPcPhi+0xb2>
			a3[j] = '\0';
		}

		a3_to_a4(a4, a3);
    213e:	ce 01       	movw	r24, r28
    2140:	01 96       	adiw	r24, 0x01	; 1
    2142:	5c 01       	movw	r10, r24
    2144:	0e 94 1b 10 	call	0x2036	; 0x2036 <_Z8a3_to_a4PhS_>
    2148:	c6 01       	movw	r24, r12
    214a:	8e 0d       	add	r24, r14
    214c:	9f 1d       	adc	r25, r15
    214e:	d5 01       	movw	r26, r10

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
    2150:	ed 91       	ld	r30, X+
    2152:	f0 e0       	ldi	r31, 0x00	; 0
    2154:	ec 55       	subi	r30, 0x5C	; 92
    2156:	fb 4f       	sbci	r31, 0xFB	; 251
    2158:	24 91       	lpm	r18, Z
    215a:	fc 01       	movw	r30, r24
    215c:	21 93       	st	Z+, r18
    215e:	cf 01       	movw	r24, r30
			a3[j] = '\0';
		}

		a3_to_a4(a4, a3);

		for(j = 0; j < i + 1; j++) {
    2160:	9d 01       	movw	r18, r26
    2162:	2a 19       	sub	r18, r10
    2164:	3b 09       	sbc	r19, r11
    2166:	02 17       	cp	r16, r18
    2168:	13 07       	cpc	r17, r19
    216a:	94 f7       	brge	.-28     	; 0x2150 <_ZN7Helpers13base64_encodeEPcPhi+0xd2>
    216c:	ff ef       	ldi	r31, 0xFF	; 255
    216e:	ef 1a       	sub	r14, r31
    2170:	ff 0a       	sbc	r15, r31
    2172:	e0 0e       	add	r14, r16
    2174:	f1 1e       	adc	r15, r17
    2176:	f6 01       	movw	r30, r12
    2178:	ee 0d       	add	r30, r14
    217a:	ff 1d       	adc	r31, r15
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    217c:	0c 19       	sub	r16, r12
    217e:	1d 09       	sbc	r17, r13
    2180:	0e 19       	sub	r16, r14
    2182:	1f 09       	sbc	r17, r15
			output[encLen++] = '=';
    2184:	8d e3       	ldi	r24, 0x3D	; 61
    2186:	7f 01       	movw	r14, r30
    2188:	ec 18       	sub	r14, r12
    218a:	fd 08       	sbc	r15, r13

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    218c:	98 01       	movw	r18, r16
    218e:	2e 0f       	add	r18, r30
    2190:	3f 1f       	adc	r19, r31
    2192:	23 30       	cpi	r18, 0x03	; 3
    2194:	31 05       	cpc	r19, r1
    2196:	14 f4       	brge	.+4      	; 0x219c <_ZN7Helpers13base64_encodeEPcPhi+0x11e>
			output[encLen++] = '=';
    2198:	81 93       	st	Z+, r24

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    219a:	f5 cf       	rjmp	.-22     	; 0x2186 <_ZN7Helpers13base64_encodeEPcPhi+0x108>
			output[encLen++] = '=';
		}
	}
	
	output[encLen++] = '\0';
    219c:	f6 01       	movw	r30, r12
    219e:	ee 0d       	add	r30, r14
    21a0:	ff 1d       	adc	r31, r15
    21a2:	10 82       	st	Z, r1
	
	return encLen;
}
    21a4:	c7 01       	movw	r24, r14
    21a6:	01 96       	adiw	r24, 0x01	; 1
    21a8:	27 96       	adiw	r28, 0x07	; 7
    21aa:	0f b6       	in	r0, 0x3f	; 63
    21ac:	f8 94       	cli
    21ae:	de bf       	out	0x3e, r29	; 62
    21b0:	0f be       	out	0x3f, r0	; 63
    21b2:	cd bf       	out	0x3d, r28	; 61
    21b4:	df 91       	pop	r29
    21b6:	cf 91       	pop	r28
    21b8:	1f 91       	pop	r17
    21ba:	0f 91       	pop	r16
    21bc:	ff 90       	pop	r15
    21be:	ef 90       	pop	r14
    21c0:	df 90       	pop	r13
    21c2:	cf 90       	pop	r12
    21c4:	bf 90       	pop	r11
    21c6:	af 90       	pop	r10
    21c8:	9f 90       	pop	r9
    21ca:	8f 90       	pop	r8
    21cc:	7f 90       	pop	r7
    21ce:	6f 90       	pop	r6
    21d0:	08 95       	ret

000021d2 <setup>:
	// the following line then redirects over SSL will be followed.
	//fona.setHTTPSRedirect(true);


	//Must immediately set this to high as this pin in LOW (the default) turns off PWR_SYS
	pinMode(PIN_SHUTDOWN, OUTPUT);
    21d2:	61 e0       	ldi	r22, 0x01	; 1
    21d4:	85 e0       	ldi	r24, 0x05	; 5
    21d6:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <pinMode>
	digitalWrite(PIN_SHUTDOWN, HIGH);
    21da:	61 e0       	ldi	r22, 0x01	; 1
    21dc:	85 e0       	ldi	r24, 0x05	; 5
    21de:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>

	//Keep FONA powered off by default until it's required later
	pinMode(PIN_FONA_PWR, OUTPUT);
    21e2:	61 e0       	ldi	r22, 0x01	; 1
    21e4:	8c e0       	ldi	r24, 0x0C	; 12
    21e6:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <pinMode>
	digitalWrite(PIN_FONA_PWR, LOW);
    21ea:	60 e0       	ldi	r22, 0x00	; 0
    21ec:	8c e0       	ldi	r24, 0x0C	; 12
    21ee:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
	
	//Turn off redundant Arduino board notification LED controlled by pin 13
	pinMode(13, OUTPUT);
    21f2:	61 e0       	ldi	r22, 0x01	; 1
    21f4:	8d e0       	ldi	r24, 0x0D	; 13
    21f6:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <pinMode>

	delay(3000); //time for above to happen + hardware peripherals to warm up + for user's serial monitor to connect
    21fa:	68 eb       	ldi	r22, 0xB8	; 184
    21fc:	7b e0       	ldi	r23, 0x0B	; 11
    21fe:	80 e0       	ldi	r24, 0x00	; 0
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    2206:	26 e0       	ldi	r18, 0x06	; 6
    2208:	40 e8       	ldi	r20, 0x80	; 128
    220a:	55 e2       	ldi	r21, 0x25	; 37
    220c:	60 e0       	ldi	r22, 0x00	; 0
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	8e e9       	ldi	r24, 0x9E	; 158
    2212:	93 e0       	ldi	r25, 0x03	; 3
    2214:	0e 94 59 1b 	call	0x36b2	; 0x36b2 <_ZN14HardwareSerial5beginEmh>
	
	#ifdef OUTPUT_DEBUG
		Serial.begin(9600); //Writes to Serial output
	#endif
	
	RM_LOGLN(F("Starting..."));
    2218:	67 e4       	ldi	r22, 0x47	; 71
    221a:	77 e0       	ldi	r23, 0x07	; 7
    221c:	8e e9       	ldi	r24, 0x9E	; 158
    221e:	93 e0       	ldi	r25, 0x03	; 3
    2220:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
		return;
	}

	if (IS_EXTENDED_GSM_TEST) {
	
		_behaviour |= SYS_BEHAVIOUR::ExtendedGsmTest;
    2224:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2228:	84 60       	ori	r24, 0x04	; 4
    222a:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
    222e:	08 95       	ret

00002230 <_Z21ensureFonaInitialisedb>:
		_behaviour |= SYS_BEHAVIOUR::SendData;
	}
}

INITIALISING_STATE __initState;
INITIALISING_STATE* ensureFonaInitialised(boolean forDataSend) {
    2230:	0f 93       	push	r16
    2232:	1f 93       	push	r17
    2234:	cf 93       	push	r28
    2236:	df 93       	push	r29
    2238:	cd b7       	in	r28, 0x3d	; 61
    223a:	de b7       	in	r29, 0x3e	; 62
    223c:	2c 97       	sbiw	r28, 0x0c	; 12
    223e:	0f b6       	in	r0, 0x3f	; 63
    2240:	f8 94       	cli
    2242:	de bf       	out	0x3e, r29	; 62
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	cd bf       	out	0x3d, r28	; 61
    2248:	18 2f       	mov	r17, r24

	//boolean isFirstLoop = _initFonaLoopCount == 0;
	++__initState._initFonaLoopCount;
    224a:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    224e:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    2252:	01 96       	adiw	r24, 0x01	; 1
    2254:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__initState+0xa>
    2258:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__initState+0x9>
	
	__initState.isComplete = true;
    225c:	21 e0       	ldi	r18, 0x01	; 1
    225e:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <__initState+0x2>
	__initState.fona = &__fona; //Assume this succeeds
    2262:	29 eb       	ldi	r18, 0xB9	; 185
    2264:	31 e0       	ldi	r19, 0x01	; 1
    2266:	30 93 9f 01 	sts	0x019F, r19	; 0x80019f <__initState+0x1>
    226a:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <__initState>
	
	//Power on and wait 5 seconds
	if (__initState._initFonaLoopCount <= 5) {
    226e:	86 30       	cpi	r24, 0x06	; 6
    2270:	91 05       	cpc	r25, r1
    2272:	78 f4       	brcc	.+30     	; 0x2292 <_Z21ensureFonaInitialisedb+0x62>
		
		if (__initState._initFonaLoopCount == 1) {
    2274:	01 97       	sbiw	r24, 0x01	; 1
    2276:	51 f4       	brne	.+20     	; 0x228c <_Z21ensureFonaInitialisedb+0x5c>
			
			RM_LOGLN(F("Switching on fona..."));
    2278:	62 e3       	ldi	r22, 0x32	; 50
    227a:	77 e0       	ldi	r23, 0x07	; 7
    227c:	8e e9       	ldi	r24, 0x9E	; 158
    227e:	93 e0       	ldi	r25, 0x03	; 3
    2280:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
			digitalWrite(PIN_FONA_PWR, HIGH);
    2284:	61 e0       	ldi	r22, 0x01	; 1
    2286:	8c e0       	ldi	r24, 0x0C	; 12
    2288:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
		}
		
		__initState.isComplete = false;
    228c:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
		return &__initState;
    2290:	05 c1       	rjmp	.+522    	; 0x249c <_Z21ensureFonaInitialisedb+0x26c>
	}
	
	if (__initState._fonaStatusInit==0) {
    2292:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__initState+0x3>
    2296:	81 11       	cpse	r24, r1
    2298:	34 c0       	rjmp	.+104    	; 0x2302 <_Z21ensureFonaInitialisedb+0xd2>
		
		RM_LOGLN(F("Initialising fona..."));
    229a:	6d e1       	ldi	r22, 0x1D	; 29
    229c:	77 e0       	ldi	r23, 0x07	; 7
    229e:	8e e9       	ldi	r24, 0x9E	; 158
    22a0:	93 e0       	ldi	r25, 0x03	; 3
    22a2:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
		FONA_STATUS_INIT ret = __fona.begin(FONA_TX, FONA_RX);
    22a6:	42 e0       	ldi	r20, 0x02	; 2
    22a8:	63 e0       	ldi	r22, 0x03	; 3
    22aa:	89 eb       	ldi	r24, 0xB9	; 185
    22ac:	91 e0       	ldi	r25, 0x01	; 1
    22ae:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <_ZN13Adafruit_FONA5beginEhh>
		__initState._fonaStatusInit = ret;
    22b2:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <__initState+0x3>
		
		//TODO: TEST ! with both single-digit module IDs and double digit
		uint8_t moduleId = mem.getModuleId();
    22b6:	8e ea       	ldi	r24, 0xAE	; 174
    22b8:	91 e0       	ldi	r25, 0x01	; 1
    22ba:	0e 94 8e 15 	call	0x2b1c	; 0x2b1c <_ZN12RmMemManager11getModuleIdEv>
    22be:	08 2f       	mov	r16, r24
		String userAgentStr = "IAAAE_RMonV3_";
    22c0:	69 e3       	ldi	r22, 0x39	; 57
    22c2:	71 e0       	ldi	r23, 0x01	; 1
    22c4:	ce 01       	movw	r24, r28
    22c6:	07 96       	adiw	r24, 0x07	; 7
    22c8:	0e 94 24 20 	call	0x4048	; 0x4048 <_ZN6StringC1EPKc>
	// if there's not enough memory for the concatenated value, the string
	// will be left unchanged (but this isn't signalled in any way)
	String & operator += (const String &rhs)	{concat(rhs); return (*this);}
	String & operator += (const char *cstr)		{concat(cstr); return (*this);}
	String & operator += (char c)			{concat(c); return (*this);}
	String & operator += (unsigned char num)		{concat(num); return (*this);}
    22cc:	60 2f       	mov	r22, r16
    22ce:	ce 01       	movw	r24, r28
    22d0:	07 96       	adiw	r24, 0x07	; 7
    22d2:	0e 94 87 20 	call	0x410e	; 0x410e <_ZN6String6concatEh>
		userAgentStr += moduleId;
		__fona.setUserAgent(userAgentStr);
    22d6:	be 01       	movw	r22, r28
    22d8:	69 5f       	subi	r22, 0xF9	; 249
    22da:	7f 4f       	sbci	r23, 0xFF	; 255
    22dc:	ce 01       	movw	r24, r28
    22de:	01 96       	adiw	r24, 0x01	; 1
    22e0:	0e 94 50 20 	call	0x40a0	; 0x40a0 <_ZN6StringC1ERKS_>
    22e4:	be 01       	movw	r22, r28
    22e6:	6f 5f       	subi	r22, 0xFF	; 255
    22e8:	7f 4f       	sbci	r23, 0xFF	; 255
    22ea:	89 eb       	ldi	r24, 0xB9	; 185
    22ec:	91 e0       	ldi	r25, 0x01	; 1
    22ee:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <_ZN13Adafruit_FONA12setUserAgentE6String>
    22f2:	ce 01       	movw	r24, r28
    22f4:	01 96       	adiw	r24, 0x01	; 1
    22f6:	0e 94 b6 1f 	call	0x3f6c	; 0x3f6c <_ZN6StringD1Ev>
		FONA_STATUS_INIT ret = __fona.begin(FONA_TX, FONA_RX);
		__initState._fonaStatusInit = ret;
		
		//TODO: TEST ! with both single-digit module IDs and double digit
		uint8_t moduleId = mem.getModuleId();
		String userAgentStr = "IAAAE_RMonV3_";
    22fa:	ce 01       	movw	r24, r28
    22fc:	07 96       	adiw	r24, 0x07	; 7
    22fe:	0e 94 b6 1f 	call	0x3f6c	; 0x3f6c <_ZN6StringD1Ev>
		userAgentStr += moduleId;
		__fona.setUserAgent(userAgentStr);
	}

	if (IS_ERR_FSI(__initState._fonaStatusInit)) {
    2302:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__initState+0x3>
    2306:	83 50       	subi	r24, 0x03	; 3
    2308:	82 30       	cpi	r24, 0x02	; 2
    230a:	b0 f4       	brcc	.+44     	; 0x2338 <_Z21ensureFonaInitialisedb+0x108>
	
		RM_LOG2(F("Error initialising fona..."), __initState._fonaStatusInit);
    230c:	62 e0       	ldi	r22, 0x02	; 2
    230e:	77 e0       	ldi	r23, 0x07	; 7
    2310:	8e e9       	ldi	r24, 0x9E	; 158
    2312:	93 e0       	ldi	r25, 0x03	; 3
    2314:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    2318:	67 e4       	ldi	r22, 0x47	; 71
    231a:	71 e0       	ldi	r23, 0x01	; 1
    231c:	8e e9       	ldi	r24, 0x9E	; 158
    231e:	93 e0       	ldi	r25, 0x03	; 3
    2320:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    2324:	60 91 a1 01 	lds	r22, 0x01A1	; 0x8001a1 <__initState+0x3>
    2328:	70 e0       	ldi	r23, 0x00	; 0
    232a:	4a e0       	ldi	r20, 0x0A	; 10
    232c:	50 e0       	ldi	r21, 0x00	; 0
    232e:	8e e9       	ldi	r24, 0x9E	; 158
    2330:	93 e0       	ldi	r25, 0x03	; 3
    2332:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <_ZN5Print7printlnEii>
    2336:	65 c0       	rjmp	.+202    	; 0x2402 <_Z21ensureFonaInitialisedb+0x1d2>
		__initState.fona = NULL;
		return &__initState;
	}	

	
	if (forDataSend) {
    2338:	11 23       	and	r17, r17
    233a:	09 f4       	brne	.+2      	; 0x233e <_Z21ensureFonaInitialisedb+0x10e>
    233c:	af c0       	rjmp	.+350    	; 0x249c <_Z21ensureFonaInitialisedb+0x26c>
		
		//The first enable attempt will happen after GPRS_ENABLE_INTERVAL
		
		if (__initState._gprsStatusInit != 0) {
    233e:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__initState+0x4>
    2342:	81 11       	cpse	r24, r1
    2344:	49 c0       	rjmp	.+146    	; 0x23d8 <_Z21ensureFonaInitialisedb+0x1a8>
			
			//No-op, just return what was calculated the last time
		}
		else if (__initState._initFonaLoopCount % GPRS_ENABLE_INTERVAL != 0) {
    2346:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    234a:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    234e:	6a e0       	ldi	r22, 0x0A	; 10
    2350:	70 e0       	ldi	r23, 0x00	; 0
    2352:	0e 94 25 23 	call	0x464a	; 0x464a <__udivmodhi4>
    2356:	89 2b       	or	r24, r25
    2358:	19 f0       	breq	.+6      	; 0x2360 <_Z21ensureFonaInitialisedb+0x130>
			
			//Try to enable it every x seconds for a period
			__initState.isComplete = false;
    235a:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
    235e:	3c c0       	rjmp	.+120    	; 0x23d8 <_Z21ensureFonaInitialisedb+0x1a8>
		}
		else {
			
			RM_LOGLN(F("Attempting to enable GPRS..."));
    2360:	65 ee       	ldi	r22, 0xE5	; 229
    2362:	76 e0       	ldi	r23, 0x06	; 6
    2364:	8e e9       	ldi	r24, 0x9E	; 158
    2366:	93 e0       	ldi	r25, 0x03	; 3
    2368:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
		
			FONA_STATUS_GPRS_INIT gprsRet = __fona.enableGPRS(true);
    236c:	61 e0       	ldi	r22, 0x01	; 1
    236e:	89 eb       	ldi	r24, 0xB9	; 185
    2370:	91 e0       	ldi	r25, 0x01	; 1
    2372:	0e 94 ae 09 	call	0x135c	; 0x135c <_ZN13Adafruit_FONA10enableGPRSEb>
    2376:	18 2f       	mov	r17, r24
		
			if (IS_ERR_FSGI(gprsRet)) {
    2378:	8f ef       	ldi	r24, 0xFF	; 255
    237a:	81 0f       	add	r24, r17
    237c:	82 30       	cpi	r24, 0x02	; 2
    237e:	20 f1       	brcs	.+72     	; 0x23c8 <_Z21ensureFonaInitialisedb+0x198>
			
				//TODO: Log this
				//But don't log it in eeprom if running a test? Basic=non-writing test vs Extended tests?
			
				RM_LOG2(F("Error initialising GPRS"), gprsRet);
    2380:	6d ec       	ldi	r22, 0xCD	; 205
    2382:	76 e0       	ldi	r23, 0x06	; 6
    2384:	8e e9       	ldi	r24, 0x9E	; 158
    2386:	93 e0       	ldi	r25, 0x03	; 3
    2388:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    238c:	67 e4       	ldi	r22, 0x47	; 71
    238e:	71 e0       	ldi	r23, 0x01	; 1
    2390:	8e e9       	ldi	r24, 0x9E	; 158
    2392:	93 e0       	ldi	r25, 0x03	; 3
    2394:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    2398:	61 2f       	mov	r22, r17
    239a:	70 e0       	ldi	r23, 0x00	; 0
    239c:	4a e0       	ldi	r20, 0x0A	; 10
    239e:	50 e0       	ldi	r21, 0x00	; 0
    23a0:	8e e9       	ldi	r24, 0x9E	; 158
    23a2:	93 e0       	ldi	r25, 0x03	; 3
    23a4:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <_ZN5Print7printlnEii>
				if (__initState._initFonaLoopCount < GPRS_MAX_ENABLE_TIME) {
    23a8:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    23ac:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    23b0:	cc 97       	sbiw	r24, 0x3c	; 60
    23b2:	28 f4       	brcc	.+10     	; 0x23be <_Z21ensureFonaInitialisedb+0x18e>
				
					__initState.isComplete = false;
    23b4:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
					RM_LOGLN(F("Will try to enable GPRS again shortly"));
    23b8:	67 ea       	ldi	r22, 0xA7	; 167
    23ba:	76 e0       	ldi	r23, 0x06	; 6
    23bc:	09 c0       	rjmp	.+18     	; 0x23d0 <_Z21ensureFonaInitialisedb+0x1a0>
				}
				else {
				
					//We've hit the last interval of trying, so all done trying
					__initState._gprsStatusInit = gprsRet;
    23be:	10 93 a2 01 	sts	0x01A2, r17	; 0x8001a2 <__initState+0x4>
					RM_LOGLN(F("All attempts to enable GPRS failed"));
    23c2:	64 e8       	ldi	r22, 0x84	; 132
    23c4:	76 e0       	ldi	r23, 0x06	; 6
    23c6:	04 c0       	rjmp	.+8      	; 0x23d0 <_Z21ensureFonaInitialisedb+0x1a0>
				}
			}
			else {
			
				//Success, we're done initialising GPRS
				__initState._gprsStatusInit = gprsRet;
    23c8:	10 93 a2 01 	sts	0x01A2, r17	; 0x8001a2 <__initState+0x4>
				RM_LOGLN(F("GPRS initialised successfully !"));
    23cc:	64 e6       	ldi	r22, 0x64	; 100
    23ce:	76 e0       	ldi	r23, 0x06	; 6
    23d0:	8e e9       	ldi	r24, 0x9E	; 158
    23d2:	93 e0       	ldi	r25, 0x03	; 3
    23d4:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
		}
		
		if (__initState._gprsStatusInit != 0) {
    23d8:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__initState+0x4>
    23dc:	81 50       	subi	r24, 0x01	; 1
    23de:	82 30       	cpi	r24, 0x02	; 2
    23e0:	80 f4       	brcc	.+32     	; 0x2402 <_Z21ensureFonaInitialisedb+0x1d2>
				__initState.fona=NULL;
				return &__initState;
			}
			else { //Initialised successfully, now ensure good signal
				
				++__initState._gprsSignalLoopCount;
    23e2:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    23e6:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    23ea:	01 96       	adiw	r24, 0x01	; 1
    23ec:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <__initState+0xc>
    23f0:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <__initState+0xb>
				
				if (Helpers::isSignalGood(&__initState._rssiStatusInit)) {
    23f4:	83 ea       	ldi	r24, 0xA3	; 163
    23f6:	91 e0       	ldi	r25, 0x01	; 1
    23f8:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>
    23fc:	88 23       	and	r24, r24
    23fe:	31 f0       	breq	.+12     	; 0x240c <_Z21ensureFonaInitialisedb+0x1dc>
    2400:	4d c0       	rjmp	.+154    	; 0x249c <_Z21ensureFonaInitialisedb+0x26c>
			}
		}
		
		if (__initState._gprsStatusInit != 0) {
			if (IS_ERR_FSGI(__initState._gprsStatusInit)) {
				__initState.fona=NULL;
    2402:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <__initState+0x1>
    2406:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__initState>
    240a:	48 c0       	rjmp	.+144    	; 0x249c <_Z21ensureFonaInitialisedb+0x26c>
				
				if (Helpers::isSignalGood(&__initState._rssiStatusInit)) {
					
					//Previously checked - it's fine
				}
				else if (__initState._gprsSignalLoopCount % GPRS_SIGNAL_CHECK_INTERVAL != 0) {
    240c:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    2410:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    2414:	6a e0       	ldi	r22, 0x0A	; 10
    2416:	70 e0       	ldi	r23, 0x00	; 0
    2418:	0e 94 25 23 	call	0x464a	; 0x464a <__udivmodhi4>
    241c:	89 2b       	or	r24, r25
    241e:	09 f0       	breq	.+2      	; 0x2422 <_Z21ensureFonaInitialisedb+0x1f2>
    2420:	35 cf       	rjmp	.-406    	; 0x228c <_Z21ensureFonaInitialisedb+0x5c>
					//Try to enable it every x seconds for a period
					__initState.isComplete = false;
				}
				else {

					RM_LOG(F("Checking RSSI - currently:"));
    2422:	69 e4       	ldi	r22, 0x49	; 73
    2424:	76 e0       	ldi	r23, 0x06	; 6
    2426:	8e e9       	ldi	r24, 0x9E	; 158
    2428:	93 e0       	ldi	r25, 0x03	; 3
    242a:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
					FONA_GET_RSSI rssi = __fona.getRSSI();
    242e:	89 eb       	ldi	r24, 0xB9	; 185
    2430:	91 e0       	ldi	r25, 0x01	; 1
    2432:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <_ZN13Adafruit_FONA7getRSSIEv>
    2436:	69 83       	std	Y+1, r22	; 0x01
    2438:	7a 83       	std	Y+2, r23	; 0x02
    243a:	8b 83       	std	Y+3, r24	; 0x03
    243c:	9c 83       	std	Y+4, r25	; 0x04
					Helpers::printRSSI(&rssi);					
    243e:	ce 01       	movw	r24, r28
    2440:	01 96       	adiw	r24, 0x01	; 1
    2442:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>
					
					if (!Helpers::isSignalGood(&rssi)) {
    2446:	ce 01       	movw	r24, r28
    2448:	01 96       	adiw	r24, 0x01	; 1
    244a:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>
    244e:	81 11       	cpse	r24, r1
    2450:	13 c0       	rjmp	.+38     	; 0x2478 <_Z21ensureFonaInitialisedb+0x248>
						
						if (__initState._gprsSignalLoopCount < GPRS_MAX_SIGNAL_WAIT_TIME) {
    2452:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    2456:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    245a:	8c 32       	cpi	r24, 0x2C	; 44
    245c:	91 40       	sbci	r25, 0x01	; 1
    245e:	48 f4       	brcc	.+18     	; 0x2472 <_Z21ensureFonaInitialisedb+0x242>
							
							__initState.isComplete = false;
    2460:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
							RM_LOGLN(F("\t (Bad-RSSI - will check again after interval)"));
    2464:	6a e1       	ldi	r22, 0x1A	; 26
    2466:	76 e0       	ldi	r23, 0x06	; 6
    2468:	8e e9       	ldi	r24, 0x9E	; 158
    246a:	93 e0       	ldi	r25, 0x03	; 3
    246c:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
    2470:	15 c0       	rjmp	.+42     	; 0x249c <_Z21ensureFonaInitialisedb+0x26c>
						}						
						else {
							
							//Wait-time over for signal, continue regardless of signal value, it may work
							RM_LOGLN(F("\t (Waiting For Good-RSSI Timed Out - will continue now)"));
    2472:	62 ee       	ldi	r22, 0xE2	; 226
    2474:	75 e0       	ldi	r23, 0x05	; 5
    2476:	02 c0       	rjmp	.+4      	; 0x247c <_Z21ensureFonaInitialisedb+0x24c>
						}
					}
					else {
						
						//All done, signal is good now
						RM_LOGLN(F("\t (Good-RSSI - successfull, all done)"));
    2478:	6c eb       	ldi	r22, 0xBC	; 188
    247a:	75 e0       	ldi	r23, 0x05	; 5
    247c:	8e e9       	ldi	r24, 0x9E	; 158
    247e:	93 e0       	ldi	r25, 0x03	; 3
    2480:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
						__initState._rssiStatusInit = rssi;
    2484:	89 81       	ldd	r24, Y+1	; 0x01
    2486:	9a 81       	ldd	r25, Y+2	; 0x02
    2488:	ab 81       	ldd	r26, Y+3	; 0x03
    248a:	bc 81       	ldd	r27, Y+4	; 0x04
    248c:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <__initState+0x5>
    2490:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <__initState+0x6>
    2494:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__initState+0x7>
    2498:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__initState+0x8>
			return &__initState;
		}
	}
	
	return &__initState;//__fona;
}
    249c:	8e e9       	ldi	r24, 0x9E	; 158
    249e:	91 e0       	ldi	r25, 0x01	; 1
    24a0:	2c 96       	adiw	r28, 0x0c	; 12
    24a2:	0f b6       	in	r0, 0x3f	; 63
    24a4:	f8 94       	cli
    24a6:	de bf       	out	0x3e, r29	; 62
    24a8:	0f be       	out	0x3f, r0	; 63
    24aa:	cd bf       	out	0x3d, r28	; 61
    24ac:	df 91       	pop	r29
    24ae:	cf 91       	pop	r28
    24b0:	1f 91       	pop	r17
    24b2:	0f 91       	pop	r16
    24b4:	08 95       	ret

000024b6 <_Z15switchOffSystemv>:


void switchOffSystem() {
	
	RM_LOGLN("Switching off...");
    24b6:	69 e4       	ldi	r22, 0x49	; 73
    24b8:	71 e0       	ldi	r23, 0x01	; 1
    24ba:	8e e9       	ldi	r24, 0x9E	; 158
    24bc:	93 e0       	ldi	r25, 0x03	; 3
    24be:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
	
	digitalWrite(PIN_SHUTDOWN, LOW);
    24c2:	60 e0       	ldi	r22, 0x00	; 0
    24c4:	85 e0       	ldi	r24, 0x05	; 5
    24c6:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
	
	delay(1000); //To allow serial to purge the shutdown message
    24ca:	68 ee       	ldi	r22, 0xE8	; 232
    24cc:	73 e0       	ldi	r23, 0x03	; 3
    24ce:	80 e0       	ldi	r24, 0x00	; 0
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	0c 94 8e 1e 	jmp	0x3d1c	; 0x3d1c <delay>

000024d6 <_Z12takeReadingsv>:
}


boolean takeReadings() {
    24d6:	cf 93       	push	r28
    24d8:	df 93       	push	r29
    24da:	cd b7       	in	r28, 0x3d	; 61
    24dc:	de b7       	in	r29, 0x3e	; 62
    24de:	2a 97       	sbiw	r28, 0x0a	; 10
    24e0:	0f b6       	in	r0, 0x3f	; 63
    24e2:	f8 94       	cli
    24e4:	de bf       	out	0x3e, r29	; 62
    24e6:	0f be       	out	0x3f, r0	; 63
    24e8:	cd bf       	out	0x3d, r28	; 61
	
	RM_LOGLN(F("Taking readings..."));
    24ea:	69 ea       	ldi	r22, 0xA9	; 169
    24ec:	75 e0       	ldi	r23, 0x05	; 5
    24ee:	8e e9       	ldi	r24, 0x9E	; 158
    24f0:	93 e0       	ldi	r25, 0x03	; 3
    24f2:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	SensorData sd;
    24f6:	1a 82       	std	Y+2, r1	; 0x02
    24f8:	19 82       	std	Y+1, r1	; 0x01
    24fa:	1c 82       	std	Y+4, r1	; 0x04
    24fc:	1b 82       	std	Y+3, r1	; 0x03
    24fe:	1e 82       	std	Y+6, r1	; 0x06
    2500:	1d 82       	std	Y+5, r1	; 0x05
    2502:	18 86       	std	Y+8, r1	; 0x08
    2504:	1f 82       	std	Y+7, r1	; 0x07
    2506:	19 86       	std	Y+9, r1	; 0x09
    2508:	81 e0       	ldi	r24, 0x01	; 1
    250a:	8a 87       	std	Y+10, r24	; 0x0a
	sensorMgr.readData(&sd);
    250c:	be 01       	movw	r22, r28
    250e:	6f 5f       	subi	r22, 0xFF	; 255
    2510:	7f 4f       	sbci	r23, 0xFF	; 255
    2512:	8c ea       	ldi	r24, 0xAC	; 172
    2514:	91 e0       	ldi	r25, 0x01	; 1
    2516:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <_ZN13SensorManager8readDataEP10SensorData>
	
	return true;
}
    251a:	81 e0       	ldi	r24, 0x01	; 1
    251c:	2a 96       	adiw	r28, 0x0a	; 10
    251e:	0f b6       	in	r0, 0x3f	; 63
    2520:	f8 94       	cli
    2522:	de bf       	out	0x3e, r29	; 62
    2524:	0f be       	out	0x3f, r0	; 63
    2526:	cd bf       	out	0x3d, r28	; 61
    2528:	df 91       	pop	r29
    252a:	cf 91       	pop	r28
    252c:	08 95       	ret

0000252e <_Z17createEncodedDataPcPhh13FONA_GET_RSSI>:

void createEncodedData(char* encodedOutput, uint8_t* outputNumLoaded, uint8_t maxReadings, 
					   FONA_GET_RSSI rssi) {
    252e:	2f 92       	push	r2
    2530:	3f 92       	push	r3
    2532:	4f 92       	push	r4
    2534:	5f 92       	push	r5
    2536:	6f 92       	push	r6
    2538:	7f 92       	push	r7
    253a:	8f 92       	push	r8
    253c:	9f 92       	push	r9
    253e:	af 92       	push	r10
    2540:	bf 92       	push	r11
    2542:	df 92       	push	r13
    2544:	ef 92       	push	r14
    2546:	ff 92       	push	r15
    2548:	0f 93       	push	r16
    254a:	1f 93       	push	r17
    254c:	cf 93       	push	r28
    254e:	df 93       	push	r29
    2550:	cd b7       	in	r28, 0x3d	; 61
    2552:	de b7       	in	r29, 0x3e	; 62
    2554:	2d 97       	sbiw	r28, 0x0d	; 13
    2556:	0f b6       	in	r0, 0x3f	; 63
    2558:	f8 94       	cli
    255a:	de bf       	out	0x3e, r29	; 62
    255c:	0f be       	out	0x3f, r0	; 63
    255e:	cd bf       	out	0x3d, r28	; 61
    2560:	4c 01       	movw	r8, r24
    2562:	5b 01       	movw	r10, r22
    2564:	d4 2e       	mov	r13, r20
    2566:	28 01       	movw	r4, r16
    2568:	39 01       	movw	r6, r18
	payload.setModuleId(mem.getModuleId());
	payload.setBootNumber(mem.getBootCount());
	payload.setSensorData((SensorData*)&sData, *outputNumLoaded);
	payload.setRSSI(rssi);
	payload.createEncodedPayload(encodedOutput);
}
    256a:	2d b6       	in	r2, 0x3d	; 61
    256c:	3e b6       	in	r3, 0x3e	; 62

void createEncodedData(char* encodedOutput, uint8_t* outputNumLoaded, uint8_t maxReadings, 
					   FONA_GET_RSSI rssi) {
	
	//This will likely be peak of stack usage so warn if low memory !
	int16_t freeRAM = Helpers::freeMemory();
    256e:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <_ZN7Helpers10freeMemoryEv>
    2572:	7c 01       	movw	r14, r24
	int16_t minRAM = (sizeof(SensorData)*maxReadings)
    2574:	0d 2d       	mov	r16, r13
    2576:	10 e0       	ldi	r17, 0x00	; 0
					+sizeof(GsmPayload)
					+100; //Buffer

	if (freeRAM < minRAM)
    2578:	2a e0       	ldi	r18, 0x0A	; 10
    257a:	d2 9e       	mul	r13, r18
    257c:	c0 01       	movw	r24, r0
    257e:	11 24       	eor	r1, r1
    2580:	8f 58       	subi	r24, 0x8F	; 143
    2582:	9f 4f       	sbci	r25, 0xFF	; 255
    2584:	e8 16       	cp	r14, r24
    2586:	f9 06       	cpc	r15, r25
    2588:	34 f4       	brge	.+12     	; 0x2596 <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0x68>
		RM_LOG2(F("**** Too little RAM before payload creation ***"), freeRAM);
    258a:	69 e7       	ldi	r22, 0x79	; 121
    258c:	75 e0       	ldi	r23, 0x05	; 5
    258e:	8e e9       	ldi	r24, 0x9E	; 158
    2590:	93 e0       	ldi	r25, 0x03	; 3
    2592:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    2596:	67 e4       	ldi	r22, 0x47	; 71
    2598:	71 e0       	ldi	r23, 0x01	; 1
    259a:	8e e9       	ldi	r24, 0x9E	; 158
    259c:	93 e0       	ldi	r25, 0x03	; 3
    259e:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    25a2:	4a e0       	ldi	r20, 0x0A	; 10
    25a4:	50 e0       	ldi	r21, 0x00	; 0
    25a6:	b7 01       	movw	r22, r14
    25a8:	8e e9       	ldi	r24, 0x9E	; 158
    25aa:	93 e0       	ldi	r25, 0x03	; 3
    25ac:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <_ZN5Print7printlnEii>
	
	SensorData sData[maxReadings];
    25b0:	2a e0       	ldi	r18, 0x0A	; 10
    25b2:	20 9f       	mul	r18, r16
    25b4:	c0 01       	movw	r24, r0
    25b6:	21 9f       	mul	r18, r17
    25b8:	90 0d       	add	r25, r0
    25ba:	11 24       	eor	r1, r1
    25bc:	ed b7       	in	r30, 0x3d	; 61
    25be:	fe b7       	in	r31, 0x3e	; 62
    25c0:	e8 1b       	sub	r30, r24
    25c2:	f9 0b       	sbc	r31, r25
    25c4:	0f b6       	in	r0, 0x3f	; 63
    25c6:	f8 94       	cli
    25c8:	fe bf       	out	0x3e, r31	; 62
    25ca:	0f be       	out	0x3f, r0	; 63
    25cc:	ed bf       	out	0x3d, r30	; 61
    25ce:	2d b7       	in	r18, 0x3d	; 61
    25d0:	3e b7       	in	r19, 0x3e	; 62
    25d2:	2f 5f       	subi	r18, 0xFF	; 255
    25d4:	3f 4f       	sbci	r19, 0xFF	; 255
    25d6:	79 01       	movw	r14, r18
    25d8:	f9 01       	movw	r30, r18
	
	uint8_t spareBuffer[16] = {0}; //Sets all elems to 0
};


struct SensorData {
    25da:	81 e0       	ldi	r24, 0x01	; 1
    25dc:	01 50       	subi	r16, 0x01	; 1
    25de:	11 09       	sbc	r17, r1
    25e0:	60 f0       	brcs	.+24     	; 0x25fa <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0xcc>
    25e2:	11 82       	std	Z+1, r1	; 0x01
    25e4:	10 82       	st	Z, r1
    25e6:	13 82       	std	Z+3, r1	; 0x03
    25e8:	12 82       	std	Z+2, r1	; 0x02
    25ea:	15 82       	std	Z+5, r1	; 0x05
    25ec:	14 82       	std	Z+4, r1	; 0x04
    25ee:	17 82       	std	Z+7, r1	; 0x07
    25f0:	16 82       	std	Z+6, r1	; 0x06
    25f2:	10 86       	std	Z+8, r1	; 0x08
    25f4:	81 87       	std	Z+9, r24	; 0x09
    25f6:	3a 96       	adiw	r30, 0x0a	; 10
    25f8:	f1 cf       	rjmp	.-30     	; 0x25dc <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0xae>
	*outputNumLoaded = mem.loadSensorData((SensorData*)&sData, maxReadings);//, countToSend, &loadedTo);
    25fa:	4d 2d       	mov	r20, r13
    25fc:	b7 01       	movw	r22, r14
    25fe:	8e ea       	ldi	r24, 0xAE	; 174
    2600:	91 e0       	ldi	r25, 0x01	; 1
    2602:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah>
    2606:	f5 01       	movw	r30, r10
    2608:	80 83       	st	Z, r24
	
	GsmPayload payload;
    260a:	ce 01       	movw	r24, r28
    260c:	01 96       	adiw	r24, 0x01	; 1
    260e:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <_ZN10GsmPayloadC1Ev>
	payload.setModuleId(mem.getModuleId());
    2612:	8e ea       	ldi	r24, 0xAE	; 174
    2614:	91 e0       	ldi	r25, 0x01	; 1
    2616:	0e 94 8e 15 	call	0x2b1c	; 0x2b1c <_ZN12RmMemManager11getModuleIdEv>
    261a:	68 2f       	mov	r22, r24
    261c:	ce 01       	movw	r24, r28
    261e:	01 96       	adiw	r24, 0x01	; 1
    2620:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <_ZN10GsmPayload11setModuleIdEh>
	payload.setBootNumber(mem.getBootCount());
    2624:	8e ea       	ldi	r24, 0xAE	; 174
    2626:	91 e0       	ldi	r25, 0x01	; 1
    2628:	0e 94 a5 15 	call	0x2b4a	; 0x2b4a <_ZN12RmMemManager12getBootCountEv>
    262c:	bc 01       	movw	r22, r24
    262e:	ce 01       	movw	r24, r28
    2630:	01 96       	adiw	r24, 0x01	; 1
    2632:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN10GsmPayload13setBootNumberEj>
	payload.setSensorData((SensorData*)&sData, *outputNumLoaded);
    2636:	f5 01       	movw	r30, r10
    2638:	40 81       	ld	r20, Z
    263a:	b7 01       	movw	r22, r14
    263c:	ce 01       	movw	r24, r28
    263e:	01 96       	adiw	r24, 0x01	; 1
    2640:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <_ZN10GsmPayload13setSensorDataEP10SensorDatah>
	payload.setRSSI(rssi);
    2644:	b3 01       	movw	r22, r6
    2646:	a2 01       	movw	r20, r4
    2648:	ce 01       	movw	r24, r28
    264a:	01 96       	adiw	r24, 0x01	; 1
    264c:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <_ZN10GsmPayload7setRSSIE13FONA_GET_RSSI>
	payload.createEncodedPayload(encodedOutput);
    2650:	b4 01       	movw	r22, r8
    2652:	ce 01       	movw	r24, r28
    2654:	01 96       	adiw	r24, 0x01	; 1
    2656:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_ZN10GsmPayload20createEncodedPayloadEPc>
}
    265a:	0f b6       	in	r0, 0x3f	; 63
    265c:	f8 94       	cli
    265e:	3e be       	out	0x3e, r3	; 62
    2660:	0f be       	out	0x3f, r0	; 63
    2662:	2d be       	out	0x3d, r2	; 61
    2664:	2d 96       	adiw	r28, 0x0d	; 13
    2666:	0f b6       	in	r0, 0x3f	; 63
    2668:	f8 94       	cli
    266a:	de bf       	out	0x3e, r29	; 62
    266c:	0f be       	out	0x3f, r0	; 63
    266e:	cd bf       	out	0x3d, r28	; 61
    2670:	df 91       	pop	r29
    2672:	cf 91       	pop	r28
    2674:	1f 91       	pop	r17
    2676:	0f 91       	pop	r16
    2678:	ff 90       	pop	r15
    267a:	ef 90       	pop	r14
    267c:	df 90       	pop	r13
    267e:	bf 90       	pop	r11
    2680:	af 90       	pop	r10
    2682:	9f 90       	pop	r9
    2684:	8f 90       	pop	r8
    2686:	7f 90       	pop	r7
    2688:	6f 90       	pop	r6
    268a:	5f 90       	pop	r5
    268c:	4f 90       	pop	r4
    268e:	3f 90       	pop	r3
    2690:	2f 90       	pop	r2
    2692:	08 95       	ret

00002694 <_Z8sendDatav>:

uint16_t _sendDataLoopCount = 0;
boolean sendData() {
    2694:	3f 92       	push	r3
    2696:	4f 92       	push	r4
    2698:	5f 92       	push	r5
    269a:	6f 92       	push	r6
    269c:	7f 92       	push	r7
    269e:	8f 92       	push	r8
    26a0:	9f 92       	push	r9
    26a2:	af 92       	push	r10
    26a4:	bf 92       	push	r11
    26a6:	cf 92       	push	r12
    26a8:	df 92       	push	r13
    26aa:	ef 92       	push	r14
    26ac:	ff 92       	push	r15
    26ae:	0f 93       	push	r16
    26b0:	1f 93       	push	r17
    26b2:	cf 93       	push	r28
    26b4:	df 93       	push	r29
    26b6:	cd b7       	in	r28, 0x3d	; 61
    26b8:	de b7       	in	r29, 0x3e	; 62
    26ba:	a3 97       	sbiw	r28, 0x23	; 35
    26bc:	0f b6       	in	r0, 0x3f	; 63
    26be:	f8 94       	cli
    26c0:	de bf       	out	0x3e, r29	; 62
    26c2:	0f be       	out	0x3f, r0	; 63
    26c4:	cd bf       	out	0x3d, r28	; 61
	Helpers::printDailySendData(&sendData);
		
	mem.appendDailyEntry(&sendData);
		
	return true;
}
    26c6:	4d b6       	in	r4, 0x3d	; 61
    26c8:	5e b6       	in	r5, 0x3e	; 62
uint16_t _sendDataLoopCount = 0;
boolean sendData() {
	
	//Increment before doing any work so doesn't get stuck continuously initialising
	//(by being called from 'loop') due to a loop-resetting error raised by FONA
	++_sendDataLoopCount;
    26ca:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <_sendDataLoopCount>
    26ce:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <_sendDataLoopCount+0x1>
    26d2:	01 96       	adiw	r24, 0x01	; 1
    26d4:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <_sendDataLoopCount+0x1>
    26d8:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <_sendDataLoopCount>
	
	if (_sendDataLoopCount == 1)
    26dc:	01 97       	sbiw	r24, 0x01	; 1
    26de:	31 f4       	brne	.+12     	; 0x26ec <_Z8sendDatav+0x58>
		RM_LOGLN(F("Initialising Fona to send data"));
    26e0:	6a e5       	ldi	r22, 0x5A	; 90
    26e2:	75 e0       	ldi	r23, 0x05	; 5
    26e4:	8e e9       	ldi	r24, 0x9E	; 158
    26e6:	93 e0       	ldi	r25, 0x03	; 3
    26e8:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	INITIALISING_STATE* sendDataFona = ensureFonaInitialised(true);
    26ec:	81 e0       	ldi	r24, 0x01	; 1
    26ee:	0e 94 18 11 	call	0x2230	; 0x2230 <_Z21ensureFonaInitialisedb>
    26f2:	5c 01       	movw	r10, r24
	
	if (!sendDataFona->isComplete) {
    26f4:	fc 01       	movw	r30, r24
    26f6:	32 80       	ldd	r3, Z+2	; 0x02
    26f8:	31 10       	cpse	r3, r1
    26fa:	07 c0       	rjmp	.+14     	; 0x270a <_Z8sendDatav+0x76>
		RM_LOGLN(F("\t(Fona Init Pending...)"));
    26fc:	62 e4       	ldi	r22, 0x42	; 66
    26fe:	75 e0       	ldi	r23, 0x05	; 5
    2700:	8e e9       	ldi	r24, 0x9E	; 158
    2702:	93 e0       	ldi	r25, 0x03	; 3
    2704:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
		return false; //Still waiting to initialise
    2708:	ab c0       	rjmp	.+342    	; 0x2860 <_Z8sendDatav+0x1cc>
	//NB: This datatype MUST be at end for reverse traversal that happens
	MEM_SLOT_TYPE  dataType = MEM_SLOT_TYPE::SensorMem;
};

/* Stored in ROM (for later checking) to record what happened when trying to send a day's worth of readings */
struct DailyCycleData {
    270a:	19 82       	std	Y+1, r1	; 0x01
    270c:	1b 82       	std	Y+3, r1	; 0x03
    270e:	1a 82       	std	Y+2, r1	; 0x02
    2710:	1c 82       	std	Y+4, r1	; 0x04
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    2712:	1d 82       	std	Y+5, r1	; 0x05
    2714:	1e 82       	std	Y+6, r1	; 0x06
    2716:	1f 82       	std	Y+7, r1	; 0x07
	//NB: This datatype MUST be at end for reverse traversal that happens
	MEM_SLOT_TYPE  dataType = MEM_SLOT_TYPE::SensorMem;
};

/* Stored in ROM (for later checking) to record what happened when trying to send a day's worth of readings */
struct DailyCycleData {
    2718:	19 86       	std	Y+9, r1	; 0x09
    271a:	1a 86       	std	Y+10, r1	; 0x0a
    271c:	1b 86       	std	Y+11, r1	; 0x0b
    271e:	1d 86       	std	Y+13, r1	; 0x0d
    2720:	1c 86       	std	Y+12, r1	; 0x0c
    2722:	1f 86       	std	Y+15, r1	; 0x0f
    2724:	1e 86       	std	Y+14, r1	; 0x0e
    2726:	19 8a       	std	Y+17, r1	; 0x11
    2728:	18 8a       	std	Y+16, r1	; 0x10
    272a:	82 e0       	ldi	r24, 0x02	; 2
    272c:	8a 8b       	std	Y+18, r24	; 0x12
	}
		
	DailyCycleData sendData;
	sendData.BootNo = mem.getBootCount();
    272e:	8e ea       	ldi	r24, 0xAE	; 174
    2730:	91 e0       	ldi	r25, 0x01	; 1
    2732:	0e 94 a5 15 	call	0x2b4a	; 0x2b4a <_ZN12RmMemManager12getBootCountEv>
    2736:	9b 83       	std	Y+3, r25	; 0x03
    2738:	8a 83       	std	Y+2, r24	; 0x02
	sendData.InitStatus = sendDataFona->_fonaStatusInit;
    273a:	f5 01       	movw	r30, r10
    273c:	83 81       	ldd	r24, Z+3	; 0x03
    273e:	89 87       	std	Y+9, r24	; 0x09
	sendData.GPRSInitStatus = sendDataFona->_gprsStatusInit;
    2740:	84 81       	ldd	r24, Z+4	; 0x04
    2742:	8a 87       	std	Y+10, r24	; 0x0a
	sendData.RSSI = sendDataFona->_rssiStatusInit;
    2744:	85 81       	ldd	r24, Z+5	; 0x05
    2746:	96 81       	ldd	r25, Z+6	; 0x06
    2748:	a7 81       	ldd	r26, Z+7	; 0x07
    274a:	b0 85       	ldd	r27, Z+8	; 0x08
    274c:	8d 83       	std	Y+5, r24	; 0x05
    274e:	9e 83       	std	Y+6, r25	; 0x06
    2750:	af 83       	std	Y+7, r26	; 0x07
    2752:	b8 87       	std	Y+8, r27	; 0x08
		
	if (sendDataFona->fona == NULL) {
    2754:	a0 80       	ld	r10, Z
    2756:	b1 80       	ldd	r11, Z+1	; 0x01
    2758:	a1 14       	cp	r10, r1
    275a:	b1 04       	cpc	r11, r1
    275c:	39 f4       	brne	.+14     	; 0x276c <_Z8sendDatav+0xd8>
		
		RM_LOGLN(F("\t(Fona Init ERROR)"));
    275e:	6f e2       	ldi	r22, 0x2F	; 47
    2760:	75 e0       	ldi	r23, 0x05	; 5
    2762:	8e e9       	ldi	r24, 0x9E	; 158
    2764:	93 e0       	ldi	r25, 0x03	; 3
    2766:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
    276a:	73 c0       	rjmp	.+230    	; 0x2852 <_Z8sendDatav+0x1be>
	
	Adafruit_FONA* fona = (Adafruit_FONA*)sendDataFona->fona;
	
	//TODO: Max number of readings to send vs when eeprom rolls over and start from beginning
		 
	uint16_t fullEncodedSz = GsmPayload::getEncodedPayloadSize_S(GPRS_MAX_READINGS_FOR_SEND);
    276c:	84 e1       	ldi	r24, 0x14	; 20
    276e:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>
	char encodedData[fullEncodedSz];
    2772:	2d b7       	in	r18, 0x3d	; 61
    2774:	3e b7       	in	r19, 0x3e	; 62
    2776:	28 1b       	sub	r18, r24
    2778:	39 0b       	sbc	r19, r25
    277a:	0f b6       	in	r0, 0x3f	; 63
    277c:	f8 94       	cli
    277e:	3e bf       	out	0x3e, r19	; 62
    2780:	0f be       	out	0x3f, r0	; 63
    2782:	2d bf       	out	0x3d, r18	; 61
    2784:	8d b7       	in	r24, 0x3d	; 61
    2786:	9e b7       	in	r25, 0x3e	; 62
    2788:	01 96       	adiw	r24, 0x01	; 1
    278a:	4c 01       	movw	r8, r24
		
	//Encode in another method to free up RAM on return for the sending (just in case)
	uint8_t numReadingsLoaded;
	createEncodedData(encodedData, &numReadingsLoaded, GPRS_MAX_READINGS_FOR_SEND, sendData.RSSI);
    278c:	0d 81       	ldd	r16, Y+5	; 0x05
    278e:	1e 81       	ldd	r17, Y+6	; 0x06
    2790:	2f 81       	ldd	r18, Y+7	; 0x07
    2792:	38 85       	ldd	r19, Y+8	; 0x08
    2794:	44 e1       	ldi	r20, 0x14	; 20
    2796:	be 01       	movw	r22, r28
    2798:	6d 5d       	subi	r22, 0xDD	; 221
    279a:	7f 4f       	sbci	r23, 0xFF	; 255
    279c:	0e 94 97 12 	call	0x252e	; 0x252e <_Z17createEncodedDataPcPhh13FONA_GET_RSSI>
	sendData.NoOfReadings = numReadingsLoaded;
    27a0:	8b a1       	ldd	r24, Y+35	; 0x23
    27a2:	8c 83       	std	Y+4, r24	; 0x04
	
	uint16_t actualEncodedSz = GsmPayload::getEncodedPayloadSize_S(numReadingsLoaded);
    27a4:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>
    27a8:	3c 01       	movw	r6, r24

	RM_LOGLN(F("Encoded data created and ready for send:"));
    27aa:	66 e0       	ldi	r22, 0x06	; 6
    27ac:	75 e0       	ldi	r23, 0x05	; 5
    27ae:	8e e9       	ldi	r24, 0x9E	; 158
    27b0:	93 e0       	ldi	r25, 0x03	; 3
    27b2:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
	RM_LOGLN(encodedData);
    27b6:	b4 01       	movw	r22, r8
    27b8:	8e e9       	ldi	r24, 0x9E	; 158
    27ba:	93 e0       	ldi	r25, 0x03	; 3
    27bc:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN5Print7printlnEPKc>
	
	uint8_t maxResponseSz = 10;
	char response[maxResponseSz] = {0};
    27c0:	1b 8a       	std	Y+19, r1	; 0x13
    27c2:	1c 8a       	std	Y+20, r1	; 0x14
    27c4:	1d 8a       	std	Y+21, r1	; 0x15
    27c6:	1e 8a       	std	Y+22, r1	; 0x16
    27c8:	1f 8a       	std	Y+23, r1	; 0x17
    27ca:	18 8e       	std	Y+24, r1	; 0x18
    27cc:	19 8e       	std	Y+25, r1	; 0x19
    27ce:	1a 8e       	std	Y+26, r1	; 0x1a
    27d0:	1b 8e       	std	Y+27, r1	; 0x1b
    27d2:	1c 8e       	std	Y+28, r1	; 0x1c
	uint16_t statuscode=0;
    27d4:	1a a2       	std	Y+34, r1	; 0x22
    27d6:	19 a2       	std	Y+33, r1	; 0x21
	uint16_t actualResponseLen=0;
    27d8:	18 a2       	std	Y+32, r1	; 0x20
    27da:	1f 8e       	std	Y+31, r1	; 0x1f
	FONA_STATUS_GPRS_SEND status =  fona->sendDataOverGprs(
		(uint8_t*)encodedData, actualEncodedSz, 
		response, maxResponseSz, &actualResponseLen, &statuscode);
    27dc:	fe 01       	movw	r30, r28
    27de:	b1 96       	adiw	r30, 0x21	; 33
    27e0:	6f 01       	movw	r12, r30
    27e2:	9e 01       	movw	r18, r28
    27e4:	21 5e       	subi	r18, 0xE1	; 225
    27e6:	3f 4f       	sbci	r19, 0xFF	; 255
    27e8:	79 01       	movw	r14, r18
    27ea:	0a e0       	ldi	r16, 0x0A	; 10
    27ec:	10 e0       	ldi	r17, 0x00	; 0
    27ee:	2c 50       	subi	r18, 0x0C	; 12
    27f0:	31 09       	sbc	r19, r1
    27f2:	a3 01       	movw	r20, r6
    27f4:	b4 01       	movw	r22, r8
    27f6:	c5 01       	movw	r24, r10
    27f8:	0e 94 87 0c 	call	0x190e	; 0x190e <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_>
    27fc:	78 2e       	mov	r7, r24
	
	//Switch off internet, lowers power consumption	
	fona->enableGPRS(false);
    27fe:	60 e0       	ldi	r22, 0x00	; 0
    2800:	c5 01       	movw	r24, r10
    2802:	0e 94 ae 09 	call	0x135c	; 0x135c <_ZN13Adafruit_FONA10enableGPRSEb>

	uint16_t responseId = atoi(response);
    2806:	ce 01       	movw	r24, r28
    2808:	43 96       	adiw	r24, 0x13	; 19
    280a:	0e 94 7b 25 	call	0x4af6	; 0x4af6 <atoi>
    280e:	4c 01       	movw	r8, r24

	uint16_t battPct;
	if (!fona->getBattPercent(&battPct))
    2810:	be 01       	movw	r22, r28
    2812:	63 5e       	subi	r22, 0xE3	; 227
    2814:	7f 4f       	sbci	r23, 0xFF	; 255
    2816:	c5 01       	movw	r24, r10
    2818:	0e 94 2f 0d 	call	0x1a5e	; 0x1a5e <_ZN13Adafruit_FONA14getBattPercentEPj>
    281c:	81 11       	cpse	r24, r1
    281e:	02 c0       	rjmp	.+4      	; 0x2824 <_Z8sendDatav+0x190>
		sendData.BattPct = -1;
    2820:	8f ef       	ldi	r24, 0xFF	; 255
    2822:	01 c0       	rjmp	.+2      	; 0x2826 <_Z8sendDatav+0x192>
	else
		sendData.BattPct = battPct;
    2824:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2826:	89 83       	std	Y+1, r24	; 0x01
	
	sendData.SendStatus = status;
    2828:	7b 86       	std	Y+11, r7	; 0x0b
	sendData.ResponseHTMLCode = statuscode;
    282a:	89 a1       	ldd	r24, Y+33	; 0x21
    282c:	9a a1       	ldd	r25, Y+34	; 0x22
    282e:	9d 87       	std	Y+13, r25	; 0x0d
    2830:	8c 87       	std	Y+12, r24	; 0x0c
	sendData.ResponseLength = actualResponseLen;
    2832:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2834:	98 a1       	ldd	r25, Y+32	; 0x20
    2836:	9f 87       	std	Y+15, r25	; 0x0f
    2838:	8e 87       	std	Y+14, r24	; 0x0e
	sendData.ResponseId = responseId;
    283a:	99 8a       	std	Y+17, r9	; 0x11
    283c:	88 8a       	std	Y+16, r8	; 0x10
	
	RM_LOGLN(F("Send-Data Status Slot:"));
    283e:	6f ee       	ldi	r22, 0xEF	; 239
    2840:	74 e0       	ldi	r23, 0x04	; 4
    2842:	8e e9       	ldi	r24, 0x9E	; 158
    2844:	93 e0       	ldi	r25, 0x03	; 3
    2846:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
	Helpers::printDailySendData(&sendData);
    284a:	ce 01       	movw	r24, r28
    284c:	01 96       	adiw	r24, 0x01	; 1
    284e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <_ZN7Helpers18printDailySendDataEP14DailyCycleData>
		
	mem.appendDailyEntry(&sendData);
    2852:	be 01       	movw	r22, r28
    2854:	6f 5f       	subi	r22, 0xFF	; 255
    2856:	7f 4f       	sbci	r23, 0xFF	; 255
    2858:	8e ea       	ldi	r24, 0xAE	; 174
    285a:	91 e0       	ldi	r25, 0x01	; 1
    285c:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData>
		
	return true;
}
    2860:	83 2d       	mov	r24, r3
    2862:	0f b6       	in	r0, 0x3f	; 63
    2864:	f8 94       	cli
    2866:	5e be       	out	0x3e, r5	; 62
    2868:	0f be       	out	0x3f, r0	; 63
    286a:	4d be       	out	0x3d, r4	; 61
    286c:	a3 96       	adiw	r28, 0x23	; 35
    286e:	0f b6       	in	r0, 0x3f	; 63
    2870:	f8 94       	cli
    2872:	de bf       	out	0x3e, r29	; 62
    2874:	0f be       	out	0x3f, r0	; 63
    2876:	cd bf       	out	0x3d, r28	; 61
    2878:	df 91       	pop	r29
    287a:	cf 91       	pop	r28
    287c:	1f 91       	pop	r17
    287e:	0f 91       	pop	r16
    2880:	ff 90       	pop	r15
    2882:	ef 90       	pop	r14
    2884:	df 90       	pop	r13
    2886:	cf 90       	pop	r12
    2888:	bf 90       	pop	r11
    288a:	af 90       	pop	r10
    288c:	9f 90       	pop	r9
    288e:	8f 90       	pop	r8
    2890:	7f 90       	pop	r7
    2892:	6f 90       	pop	r6
    2894:	5f 90       	pop	r5
    2896:	4f 90       	pop	r4
    2898:	3f 90       	pop	r3
    289a:	08 95       	ret

0000289c <loop>:

//Loop-scoped variables
uint16_t _timerCounter = 0;
void loop() {

	delay(1000);
    289c:	68 ee       	ldi	r22, 0xE8	; 232
    289e:	73 e0       	ldi	r23, 0x03	; 3
    28a0:	80 e0       	ldi	r24, 0x00	; 0
    28a2:	90 e0       	ldi	r25, 0x00	; 0
    28a4:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
	++_timerCounter;
    28a8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
    28ac:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
    28b0:	01 96       	adiw	r24, 0x01	; 1
    28b2:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
    28b6:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>

	RM_LOG2(F("Behaviour"), _behaviour);
    28ba:	65 ee       	ldi	r22, 0xE5	; 229
    28bc:	74 e0       	ldi	r23, 0x04	; 4
    28be:	8e e9       	ldi	r24, 0x9E	; 158
    28c0:	93 e0       	ldi	r25, 0x03	; 3
    28c2:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    28c6:	67 e4       	ldi	r22, 0x47	; 71
    28c8:	71 e0       	ldi	r23, 0x01	; 1
    28ca:	8e e9       	ldi	r24, 0x9E	; 158
    28cc:	93 e0       	ldi	r25, 0x03	; 3
    28ce:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <_ZN5Print5printEPKc>
    28d2:	4a e0       	ldi	r20, 0x0A	; 10
    28d4:	50 e0       	ldi	r21, 0x00	; 0
    28d6:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <_behaviour>
    28da:	8e e9       	ldi	r24, 0x9E	; 158
    28dc:	93 e0       	ldi	r25, 0x03	; 3
    28de:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <_ZN5Print7printlnEhi>
	
	if((_behaviour&SYS_BEHAVIOUR::TakeReadings) != 0) {
    28e2:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28e6:	80 ff       	sbrs	r24, 0
    28e8:	09 c0       	rjmp	.+18     	; 0x28fc <loop+0x60>
		
		if (takeReadings())
    28ea:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <_Z12takeReadingsv>
    28ee:	88 23       	and	r24, r24
    28f0:	29 f0       	breq	.+10     	; 0x28fc <loop+0x60>
			_behaviour &= ~SYS_BEHAVIOUR::TakeReadings;
    28f2:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28f6:	8e 7f       	andi	r24, 0xFE	; 254
    28f8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
	}
	
	if ((_behaviour&SYS_BEHAVIOUR::SendData) != 0) {
    28fc:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2900:	81 ff       	sbrs	r24, 1
    2902:	09 c0       	rjmp	.+18     	; 0x2916 <loop+0x7a>
		
		if (sendData())
    2904:	0e 94 4a 13 	call	0x2694	; 0x2694 <_Z8sendDatav>
    2908:	88 23       	and	r24, r24
    290a:	29 f0       	breq	.+10     	; 0x2916 <loop+0x7a>
			_behaviour &= ~SYS_BEHAVIOUR::SendData;
    290c:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2910:	8d 7f       	andi	r24, 0xFD	; 253
    2912:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
	}

	if ((_behaviour&SYS_BEHAVIOUR::ExtendedGsmTest) != 0) {
    2916:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    291a:	82 ff       	sbrs	r24, 2
    291c:	17 c0       	rjmp	.+46     	; 0x294c <loop+0xb0>
	
		if (_timerCounter == 1)
    291e:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
    2922:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
    2926:	01 97       	sbiw	r24, 0x01	; 1
    2928:	31 f4       	brne	.+12     	; 0x2936 <loop+0x9a>
			ExtendedTests::startExtendedGsmTest(&__fona, &mem);
    292a:	6e ea       	ldi	r22, 0xAE	; 174
    292c:	71 e0       	ldi	r23, 0x01	; 1
    292e:	89 eb       	ldi	r24, 0xB9	; 185
    2930:	91 e0       	ldi	r25, 0x01	; 1
    2932:	0e 94 40 1a 	call	0x3480	; 0x3480 <_ZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManager>
	
		if (sendData()) {
    2936:	0e 94 4a 13 	call	0x2694	; 0x2694 <_Z8sendDatav>
    293a:	88 23       	and	r24, r24
    293c:	39 f0       	breq	.+14     	; 0x294c <loop+0xb0>
			
			_behaviour &= ~SYS_BEHAVIOUR::ExtendedGsmTest;
    293e:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2942:	8b 7f       	andi	r24, 0xFB	; 251
    2944:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
			ExtendedTests::endExtendedGsmTest();
    2948:	0e 94 34 1a 	call	0x3468	; 0x3468 <_ZN13ExtendedTests18endExtendedGsmTestEv>
		}
	}

	if (_behaviour == SYS_BEHAVIOUR::DoNothing) {
    294c:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2950:	81 11       	cpse	r24, r1
    2952:	02 c0       	rjmp	.+4      	; 0x2958 <loop+0xbc>
		
		switchOffSystem();
    2954:	0c 94 5b 12 	jmp	0x24b6	; 0x24b6 <_Z15switchOffSystemv>
    2958:	08 95       	ret

0000295a <_GLOBAL__sub_I___fona>:
#include "SensorManager.h"
#include "ExtendedTests.h"


//C++ instances
Adafruit_FONA __fona = Adafruit_FONA(FONA_RST, IS_GSM_MOCK);
    295a:	41 e0       	ldi	r20, 0x01	; 1
    295c:	64 e0       	ldi	r22, 0x04	; 4
    295e:	89 eb       	ldi	r24, 0xB9	; 185
    2960:	91 e0       	ldi	r25, 0x01	; 1
    2962:	0e 94 74 04 	call	0x8e8	; 0x8e8 <_ZN13Adafruit_FONAC1Eab>
RmMemManager mem = RmMemManager(false);
    2966:	60 e0       	ldi	r22, 0x00	; 0
    2968:	8e ea       	ldi	r24, 0xAE	; 174
    296a:	91 e0       	ldi	r25, 0x01	; 1
    296c:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <_ZN12RmMemManagerC1Eb>
SensorManager sensorMgr = SensorManager(true);
    2970:	61 e0       	ldi	r22, 0x01	; 1
    2972:	8c ea       	ldi	r24, 0xAC	; 172
    2974:	91 e0       	ldi	r25, 0x01	; 1
    2976:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <_ZN13SensorManagerC1Eb>
	uint8_t rssiErr	= 0;
	
	FONA_GET_NETREG netReg;
};

struct INITIALISING_STATE {
    297a:	ee e9       	ldi	r30, 0x9E	; 158
    297c:	f1 e0       	ldi	r31, 0x01	; 1
    297e:	12 82       	std	Z+2, r1	; 0x02
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    2980:	15 82       	std	Z+5, r1	; 0x05
    2982:	16 82       	std	Z+6, r1	; 0x06
    2984:	17 82       	std	Z+7, r1	; 0x07
	uint8_t rssiErr	= 0;
	
	FONA_GET_NETREG netReg;
};

struct INITIALISING_STATE {
    2986:	12 86       	std	Z+10, r1	; 0x0a
    2988:	11 86       	std	Z+9, r1	; 0x09
    298a:	14 86       	std	Z+12, r1	; 0x0c
    298c:	13 86       	std	Z+11, r1	; 0x0b
    298e:	08 95       	ret

00002990 <_GLOBAL__sub_D___fona>:
#define prog_char_strcpy(to, fromprogmem)		strcpy_P((to), (fromprogmem))




class Adafruit_FONA : public FONAStreamType {
    2990:	8d e2       	ldi	r24, 0x2D	; 45
    2992:	91 e0       	ldi	r25, 0x01	; 1
    2994:	90 93 ba 01 	sts	0x01BA, r25	; 0x8001ba <__fona+0x1>
    2998:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <__fona>
    299c:	8e ec       	ldi	r24, 0xCE	; 206
    299e:	92 e0       	ldi	r25, 0x02	; 2
    29a0:	0c 94 b6 1f 	jmp	0x3f6c	; 0x3f6c <_ZN6StringD1Ev>

000029a4 <_ZN7TwoWire5writeEi>:
		RM_LOG(F(", Char="));
		RM_LOGLNFMT(val1, HEX);
	}
	
	return numFailures;
}
    29a4:	dc 01       	movw	r26, r24
    29a6:	ed 91       	ld	r30, X+
    29a8:	fc 91       	ld	r31, X
    29aa:	01 90       	ld	r0, Z+
    29ac:	f0 81       	ld	r31, Z
    29ae:	e0 2d       	mov	r30, r0
    29b0:	09 94       	ijmp

000029b2 <_ZN12RmMemManagerC1Eb>:
    29b2:	fc 01       	movw	r30, r24
    29b4:	14 82       	std	Z+4, r1	; 0x04
    29b6:	15 82       	std	Z+5, r1	; 0x05
    29b8:	16 82       	std	Z+6, r1	; 0x06
    29ba:	17 82       	std	Z+7, r1	; 0x07
    29bc:	80 e8       	ldi	r24, 0x80	; 128
    29be:	80 87       	std	Z+8, r24	; 0x08
    29c0:	81 87       	std	Z+9, r24	; 0x09
    29c2:	12 86       	std	Z+10, r1	; 0x0a
    29c4:	63 83       	std	Z+3, r22	; 0x03
    29c6:	61 11       	cpse	r22, r1
    29c8:	04 c0       	rjmp	.+8      	; 0x29d2 <_ZN12RmMemManagerC1Eb+0x20>
    29ca:	86 e4       	ldi	r24, 0x46	; 70
    29cc:	93 e0       	ldi	r25, 0x03	; 3
    29ce:	0c 94 95 19 	jmp	0x332a	; 0x332a <_ZN7TwoWire5beginEv>
    29d2:	08 95       	ret

000029d4 <_Z13internalWritejPhh>:
    29d4:	ef 92       	push	r14
    29d6:	ff 92       	push	r15
    29d8:	0f 93       	push	r16
    29da:	1f 93       	push	r17
    29dc:	cf 93       	push	r28
    29de:	df 93       	push	r29
    29e0:	eb 01       	movw	r28, r22
    29e2:	7b 01       	movw	r14, r22
    29e4:	e4 0e       	add	r14, r20
    29e6:	f1 1c       	adc	r15, r1
    29e8:	8c 01       	movw	r16, r24
    29ea:	ce 15       	cp	r28, r14
    29ec:	df 05       	cpc	r29, r15
    29ee:	21 f1       	breq	.+72     	; 0x2a38 <_Z13internalWritejPhh+0x64>
    29f0:	60 e5       	ldi	r22, 0x50	; 80
    29f2:	70 e0       	ldi	r23, 0x00	; 0
    29f4:	86 e4       	ldi	r24, 0x46	; 70
    29f6:	93 e0       	ldi	r25, 0x03	; 3
    29f8:	0e 94 b1 19 	call	0x3362	; 0x3362 <_ZN7TwoWire17beginTransmissionEi>
    29fc:	61 2f       	mov	r22, r17
    29fe:	70 e0       	ldi	r23, 0x00	; 0
    2a00:	86 e4       	ldi	r24, 0x46	; 70
    2a02:	93 e0       	ldi	r25, 0x03	; 3
    2a04:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <_ZN7TwoWire5writeEi>
    2a08:	b8 01       	movw	r22, r16
    2a0a:	77 27       	eor	r23, r23
    2a0c:	86 e4       	ldi	r24, 0x46	; 70
    2a0e:	93 e0       	ldi	r25, 0x03	; 3
    2a10:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <_ZN7TwoWire5writeEi>
    2a14:	69 91       	ld	r22, Y+
    2a16:	86 e4       	ldi	r24, 0x46	; 70
    2a18:	93 e0       	ldi	r25, 0x03	; 3
    2a1a:	0e 94 56 19 	call	0x32ac	; 0x32ac <_ZN7TwoWire5writeEh>
    2a1e:	86 e4       	ldi	r24, 0x46	; 70
    2a20:	93 e0       	ldi	r25, 0x03	; 3
    2a22:	0e 94 2d 1a 	call	0x345a	; 0x345a <_ZN7TwoWire15endTransmissionEv>
    2a26:	6f e0       	ldi	r22, 0x0F	; 15
    2a28:	70 e0       	ldi	r23, 0x00	; 0
    2a2a:	80 e0       	ldi	r24, 0x00	; 0
    2a2c:	90 e0       	ldi	r25, 0x00	; 0
    2a2e:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <delay>
    2a32:	0f 5f       	subi	r16, 0xFF	; 255
    2a34:	1f 4f       	sbci	r17, 0xFF	; 255
    2a36:	d9 cf       	rjmp	.-78     	; 0x29ea <_Z13internalWritejPhh+0x16>
    2a38:	df 91       	pop	r29
    2a3a:	cf 91       	pop	r28
    2a3c:	1f 91       	pop	r17
    2a3e:	0f 91       	pop	r16
    2a40:	ff 90       	pop	r15
    2a42:	ef 90       	pop	r14
    2a44:	08 95       	ret

00002a46 <_Z12internalReadjPhh>:
    2a46:	ef 92       	push	r14
    2a48:	ff 92       	push	r15
    2a4a:	0f 93       	push	r16
    2a4c:	1f 93       	push	r17
    2a4e:	cf 93       	push	r28
    2a50:	df 93       	push	r29
    2a52:	eb 01       	movw	r28, r22
    2a54:	7b 01       	movw	r14, r22
    2a56:	e4 0e       	add	r14, r20
    2a58:	f1 1c       	adc	r15, r1
    2a5a:	8c 01       	movw	r16, r24
    2a5c:	ce 15       	cp	r28, r14
    2a5e:	df 05       	cpc	r29, r15
    2a60:	71 f1       	breq	.+92     	; 0x2abe <_Z12internalReadjPhh+0x78>
    2a62:	60 e5       	ldi	r22, 0x50	; 80
    2a64:	70 e0       	ldi	r23, 0x00	; 0
    2a66:	86 e4       	ldi	r24, 0x46	; 70
    2a68:	93 e0       	ldi	r25, 0x03	; 3
    2a6a:	0e 94 b1 19 	call	0x3362	; 0x3362 <_ZN7TwoWire17beginTransmissionEi>
    2a6e:	61 2f       	mov	r22, r17
    2a70:	70 e0       	ldi	r23, 0x00	; 0
    2a72:	86 e4       	ldi	r24, 0x46	; 70
    2a74:	93 e0       	ldi	r25, 0x03	; 3
    2a76:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <_ZN7TwoWire5writeEi>
    2a7a:	b8 01       	movw	r22, r16
    2a7c:	77 27       	eor	r23, r23
    2a7e:	86 e4       	ldi	r24, 0x46	; 70
    2a80:	93 e0       	ldi	r25, 0x03	; 3
    2a82:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <_ZN7TwoWire5writeEi>
    2a86:	86 e4       	ldi	r24, 0x46	; 70
    2a88:	93 e0       	ldi	r25, 0x03	; 3
    2a8a:	0e 94 2d 1a 	call	0x345a	; 0x345a <_ZN7TwoWire15endTransmissionEv>
    2a8e:	41 e0       	ldi	r20, 0x01	; 1
    2a90:	50 e0       	ldi	r21, 0x00	; 0
    2a92:	60 e5       	ldi	r22, 0x50	; 80
    2a94:	70 e0       	ldi	r23, 0x00	; 0
    2a96:	86 e4       	ldi	r24, 0x46	; 70
    2a98:	93 e0       	ldi	r25, 0x03	; 3
    2a9a:	0e 94 2a 1a 	call	0x3454	; 0x3454 <_ZN7TwoWire11requestFromEii>
    2a9e:	86 e4       	ldi	r24, 0x46	; 70
    2aa0:	93 e0       	ldi	r25, 0x03	; 3
    2aa2:	0e 94 c7 18 	call	0x318e	; 0x318e <_ZN7TwoWire9availableEv>
    2aa6:	89 2b       	or	r24, r25
    2aa8:	29 f0       	breq	.+10     	; 0x2ab4 <_Z12internalReadjPhh+0x6e>
    2aaa:	86 e4       	ldi	r24, 0x46	; 70
    2aac:	93 e0       	ldi	r25, 0x03	; 3
    2aae:	0e 94 cf 18 	call	0x319e	; 0x319e <_ZN7TwoWire4readEv>
    2ab2:	01 c0       	rjmp	.+2      	; 0x2ab6 <_Z12internalReadjPhh+0x70>
    2ab4:	8f ef       	ldi	r24, 0xFF	; 255
    2ab6:	89 93       	st	Y+, r24
    2ab8:	0f 5f       	subi	r16, 0xFF	; 255
    2aba:	1f 4f       	sbci	r17, 0xFF	; 255
    2abc:	cf cf       	rjmp	.-98     	; 0x2a5c <_Z12internalReadjPhh+0x16>
    2abe:	df 91       	pop	r29
    2ac0:	cf 91       	pop	r28
    2ac2:	1f 91       	pop	r17
    2ac4:	0f 91       	pop	r16
    2ac6:	ff 90       	pop	r15
    2ac8:	ef 90       	pop	r14
    2aca:	08 95       	ret

00002acc <_ZN12RmMemManager18getUCharFromMemoryEj>:
    2acc:	cf 93       	push	r28
    2ace:	df 93       	push	r29
    2ad0:	1f 92       	push	r1
    2ad2:	cd b7       	in	r28, 0x3d	; 61
    2ad4:	de b7       	in	r29, 0x3e	; 62
    2ad6:	cb 01       	movw	r24, r22
    2ad8:	41 e0       	ldi	r20, 0x01	; 1
    2ada:	be 01       	movw	r22, r28
    2adc:	6f 5f       	subi	r22, 0xFF	; 255
    2ade:	7f 4f       	sbci	r23, 0xFF	; 255
    2ae0:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_Z12internalReadjPhh>
    2ae4:	89 81       	ldd	r24, Y+1	; 0x01
    2ae6:	0f 90       	pop	r0
    2ae8:	df 91       	pop	r29
    2aea:	cf 91       	pop	r28
    2aec:	08 95       	ret

00002aee <_ZN12RmMemManager19incrementCycleCountEv>:
    2aee:	cf 93       	push	r28
    2af0:	df 93       	push	r29
    2af2:	1f 92       	push	r1
    2af4:	cd b7       	in	r28, 0x3d	; 61
    2af6:	de b7       	in	r29, 0x3e	; 62
    2af8:	63 e0       	ldi	r22, 0x03	; 3
    2afa:	70 e0       	ldi	r23, 0x00	; 0
    2afc:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN12RmMemManager18getUCharFromMemoryEj>
    2b00:	8f 5f       	subi	r24, 0xFF	; 255
    2b02:	89 83       	std	Y+1, r24	; 0x01
    2b04:	41 e0       	ldi	r20, 0x01	; 1
    2b06:	be 01       	movw	r22, r28
    2b08:	6f 5f       	subi	r22, 0xFF	; 255
    2b0a:	7f 4f       	sbci	r23, 0xFF	; 255
    2b0c:	83 e0       	ldi	r24, 0x03	; 3
    2b0e:	90 e0       	ldi	r25, 0x00	; 0
    2b10:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <_Z13internalWritejPhh>
    2b14:	0f 90       	pop	r0
    2b16:	df 91       	pop	r29
    2b18:	cf 91       	pop	r28
    2b1a:	08 95       	ret

00002b1c <_ZN12RmMemManager11getModuleIdEv>:
    2b1c:	60 e0       	ldi	r22, 0x00	; 0
    2b1e:	70 e0       	ldi	r23, 0x00	; 0
    2b20:	0c 94 66 15 	jmp	0x2acc	; 0x2acc <_ZN12RmMemManager18getUCharFromMemoryEj>

00002b24 <_ZN12RmMemManager19getUShortFromMemoryEj>:
    2b24:	cf 93       	push	r28
    2b26:	df 93       	push	r29
    2b28:	00 d0       	rcall	.+0      	; 0x2b2a <_ZN12RmMemManager19getUShortFromMemoryEj+0x6>
    2b2a:	cd b7       	in	r28, 0x3d	; 61
    2b2c:	de b7       	in	r29, 0x3e	; 62
    2b2e:	cb 01       	movw	r24, r22
    2b30:	42 e0       	ldi	r20, 0x02	; 2
    2b32:	be 01       	movw	r22, r28
    2b34:	6f 5f       	subi	r22, 0xFF	; 255
    2b36:	7f 4f       	sbci	r23, 0xFF	; 255
    2b38:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_Z12internalReadjPhh>
    2b3c:	89 81       	ldd	r24, Y+1	; 0x01
    2b3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b40:	0f 90       	pop	r0
    2b42:	0f 90       	pop	r0
    2b44:	df 91       	pop	r29
    2b46:	cf 91       	pop	r28
    2b48:	08 95       	ret

00002b4a <_ZN12RmMemManager12getBootCountEv>:
    2b4a:	61 e0       	ldi	r22, 0x01	; 1
    2b4c:	70 e0       	ldi	r23, 0x00	; 0
    2b4e:	0c 94 92 15 	jmp	0x2b24	; 0x2b24 <_ZN12RmMemManager19getUShortFromMemoryEj>

00002b52 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData>:
    2b52:	cf 92       	push	r12
    2b54:	df 92       	push	r13
    2b56:	ef 92       	push	r14
    2b58:	ff 92       	push	r15
    2b5a:	0f 93       	push	r16
    2b5c:	1f 93       	push	r17
    2b5e:	cf 93       	push	r28
    2b60:	df 93       	push	r29
    2b62:	00 d0       	rcall	.+0      	; 0x2b64 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData+0x12>
    2b64:	cd b7       	in	r28, 0x3d	; 61
    2b66:	de b7       	in	r29, 0x3e	; 62
    2b68:	7c 01       	movw	r14, r24
    2b6a:	6b 01       	movw	r12, r22
    2b6c:	64 e0       	ldi	r22, 0x04	; 4
    2b6e:	70 e0       	ldi	r23, 0x00	; 0
    2b70:	0e 94 92 15 	call	0x2b24	; 0x2b24 <_ZN12RmMemManager19getUShortFromMemoryEj>
    2b74:	8c 01       	movw	r16, r24
    2b76:	42 96       	adiw	r24, 0x12	; 18
    2b78:	8f 3f       	cpi	r24, 0xFF	; 255
    2b7a:	9f 47       	sbci	r25, 0x7F	; 127
    2b7c:	28 f0       	brcs	.+10     	; 0x2b88 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData+0x36>
    2b7e:	c7 01       	movw	r24, r14
    2b80:	0e 94 77 15 	call	0x2aee	; 0x2aee <_ZN12RmMemManager19incrementCycleCountEv>
    2b84:	0e e1       	ldi	r16, 0x1E	; 30
    2b86:	10 e0       	ldi	r17, 0x00	; 0
    2b88:	42 e1       	ldi	r20, 0x12	; 18
    2b8a:	b6 01       	movw	r22, r12
    2b8c:	c8 01       	movw	r24, r16
    2b8e:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <_Z13internalWritejPhh>
    2b92:	0e 5e       	subi	r16, 0xEE	; 238
    2b94:	1f 4f       	sbci	r17, 0xFF	; 255
    2b96:	1a 83       	std	Y+2, r17	; 0x02
    2b98:	09 83       	std	Y+1, r16	; 0x01
    2b9a:	42 e0       	ldi	r20, 0x02	; 2
    2b9c:	be 01       	movw	r22, r28
    2b9e:	6f 5f       	subi	r22, 0xFF	; 255
    2ba0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ba2:	84 e0       	ldi	r24, 0x04	; 4
    2ba4:	90 e0       	ldi	r25, 0x00	; 0
    2ba6:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <_Z13internalWritejPhh>
    2baa:	0f 90       	pop	r0
    2bac:	0f 90       	pop	r0
    2bae:	df 91       	pop	r29
    2bb0:	cf 91       	pop	r28
    2bb2:	1f 91       	pop	r17
    2bb4:	0f 91       	pop	r16
    2bb6:	ff 90       	pop	r15
    2bb8:	ef 90       	pop	r14
    2bba:	df 90       	pop	r13
    2bbc:	cf 90       	pop	r12
    2bbe:	08 95       	ret

00002bc0 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah>:
	RM_LOG(F("*** FAIL PRINT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}
 
/* Returns the number of readings read */
uint8_t RmMemManager::loadSensorData(SensorData* buffer, uint8_t maxNoOfReadings) {
    2bc0:	af 92       	push	r10
    2bc2:	bf 92       	push	r11
    2bc4:	cf 92       	push	r12
    2bc6:	df 92       	push	r13
    2bc8:	ef 92       	push	r14
    2bca:	ff 92       	push	r15
    2bcc:	0f 93       	push	r16
    2bce:	1f 93       	push	r17
    2bd0:	cf 93       	push	r28
    2bd2:	df 93       	push	r29
    2bd4:	7c 01       	movw	r14, r24
    2bd6:	6b 01       	movw	r12, r22
    2bd8:	d4 2f       	mov	r29, r20

	if (mockSensorData != NULL) {
    2bda:	fc 01       	movw	r30, r24
    2bdc:	60 81       	ld	r22, Z
    2bde:	71 81       	ldd	r23, Z+1	; 0x01
    2be0:	61 15       	cp	r22, r1
    2be2:	71 05       	cpc	r23, r1
    2be4:	59 f0       	breq	.+22     	; 0x2bfc <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x3c>
		
		memcpy(buffer, mockSensorData, sizeof(SensorData)*numMockSensorData);
    2be6:	42 81       	ldd	r20, Z+2	; 0x02
    2be8:	fa e0       	ldi	r31, 0x0A	; 10
    2bea:	4f 9f       	mul	r20, r31
    2bec:	a0 01       	movw	r20, r0
    2bee:	11 24       	eor	r1, r1
    2bf0:	c6 01       	movw	r24, r12
    2bf2:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <memcpy>
		return numMockSensorData;
    2bf6:	f7 01       	movw	r30, r14
    2bf8:	82 81       	ldd	r24, Z+2	; 0x02
    2bfa:	24 c0       	rjmp	.+72     	; 0x2c44 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x84>
	}

	uint8_t numReadings = 0;
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
    2bfc:	64 e0       	ldi	r22, 0x04	; 4
    2bfe:	70 e0       	ldi	r23, 0x00	; 0
    2c00:	0e 94 92 15 	call	0x2b24	; 0x2b24 <_ZN12RmMemManager19getUShortFromMemoryEj>
    2c04:	8c 01       	movw	r16, r24
    2c06:	01 50       	subi	r16, 0x01	; 1
    2c08:	11 09       	sbc	r17, r1
		
		memcpy(buffer, mockSensorData, sizeof(SensorData)*numMockSensorData);
		return numMockSensorData;
	}

	uint8_t numReadings = 0;
    2c0a:	c0 e0       	ldi	r28, 0x00	; 0
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
	
	while(true) {
		
		if (numReadings == maxNoOfReadings)
    2c0c:	cd 17       	cp	r28, r29
    2c0e:	c9 f0       	breq	.+50     	; 0x2c42 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
			break;
			
		uint16_t prevMemSlotTypeAddr = currSlotStartAddr-1; //The MEM_SLOT_TYPE address of the previous slot
	
		if (prevMemSlotTypeAddr <= (sizeof(MEMLOC_START) + sizeof(ModuleMeta)))
    2c10:	01 32       	cpi	r16, 0x21	; 33
    2c12:	11 05       	cpc	r17, r1
    2c14:	b0 f0       	brcs	.+44     	; 0x2c42 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
			break; //We're at the very beginning - either module has just been deployed or mem has wrapped (& we'll ignore this one day's readings)
	
		uint8_t slotType = (MEM_SLOT_TYPE)getUCharFromMemory(prevMemSlotTypeAddr);
    2c16:	b8 01       	movw	r22, r16
    2c18:	c7 01       	movw	r24, r14
    2c1a:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN12RmMemManager18getUCharFromMemoryEj>
    2c1e:	58 01       	movw	r10, r16
    2c20:	fa e0       	ldi	r31, 0x0A	; 10
    2c22:	af 1a       	sub	r10, r31
    2c24:	b1 08       	sbc	r11, r1
		
		if (slotType == MEM_SLOT_TYPE::SensorMem) {
    2c26:	81 30       	cpi	r24, 0x01	; 1
    2c28:	61 f4       	brne	.+24     	; 0x2c42 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
		
			uint16_t prevSlotStartAddr = currSlotStartAddr - sizeof(SensorData);
			internalRead(prevSlotStartAddr, (uint8_t*)buffer, sizeof(SensorData));
    2c2a:	4a e0       	ldi	r20, 0x0A	; 10
    2c2c:	b6 01       	movw	r22, r12
    2c2e:	c8 01       	movw	r24, r16
    2c30:	09 97       	sbiw	r24, 0x09	; 9
    2c32:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_Z12internalReadjPhh>
			
			buffer += sizeof(SensorData);
    2c36:	84 e6       	ldi	r24, 0x64	; 100
    2c38:	c8 0e       	add	r12, r24
    2c3a:	d1 1c       	adc	r13, r1
			currSlotStartAddr -= sizeof(SensorData);
			++numReadings;
    2c3c:	cf 5f       	subi	r28, 0xFF	; 255

	uint8_t numReadings = 0;
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
	
	while(true) {
    2c3e:	85 01       	movw	r16, r10
    2c40:	e5 cf       	rjmp	.-54     	; 0x2c0c <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x4c>
    2c42:	8c 2f       	mov	r24, r28
			break;
		}
	}

	return numReadings;
}
    2c44:	df 91       	pop	r29
    2c46:	cf 91       	pop	r28
    2c48:	1f 91       	pop	r17
    2c4a:	0f 91       	pop	r16
    2c4c:	ff 90       	pop	r15
    2c4e:	ef 90       	pop	r14
    2c50:	df 90       	pop	r13
    2c52:	cf 90       	pop	r12
    2c54:	bf 90       	pop	r11
    2c56:	af 90       	pop	r10
    2c58:	08 95       	ret

00002c5a <_ZN13SensorManagerC1Eb>:
	while (bit_is_set(ADCSRA,ADSC));
	result = ADCL;
	result |= ADCH<<8;
	result = 1125300L / result; // Back-calculate AVcc in mV
	return result / 1000;
}
    2c5a:	fc 01       	movw	r30, r24
    2c5c:	60 83       	st	Z, r22
    2c5e:	08 95       	ret

00002c60 <_ZN13SensorManager16takeSampleAnalogEh>:

//Returns (analog_reading * vcc)
uint16_t SensorManager::takeSampleAnalog(uint8_t pinNo)	{
	
	if (_isMock)
    2c60:	fc 01       	movw	r30, r24
    2c62:	80 81       	ld	r24, Z
    2c64:	81 11       	cpse	r24, r1
    2c66:	03 c0       	rjmp	.+6      	; 0x2c6e <_ZN13SensorManager16takeSampleAnalogEh+0xe>
		return 5;
	
	uint16_t batt = analogRead(pinNo);
    2c68:	86 2f       	mov	r24, r22
    2c6a:	0c 94 05 1f 	jmp	0x3e0a	; 0x3e0a <analogRead>
	
	//float vcc = readVcc();
	//batt *= vcc;
	
	return batt;
}
    2c6e:	85 e0       	ldi	r24, 0x05	; 5
    2c70:	90 e0       	ldi	r25, 0x00	; 0
    2c72:	08 95       	ret

00002c74 <_ZN13SensorManager11getMockDataEP10SensorData>:

void SensorManager::getMockData(SensorData* ret) {
    2c74:	fc 01       	movw	r30, r24
    2c76:	db 01       	movw	r26, r22
	
	++__mockDataCounter; //After 255, will roll back to 0, fine for tests
    2c78:	81 81       	ldd	r24, Z+1	; 0x01
    2c7a:	8f 5f       	subi	r24, 0xFF	; 255
    2c7c:	81 83       	std	Z+1, r24	; 0x01
	
	ret->battVoltage = __mockDataCounter;
    2c7e:	90 e0       	ldi	r25, 0x00	; 0
    2c80:	11 96       	adiw	r26, 0x01	; 1
    2c82:	9c 93       	st	X, r25
    2c84:	8e 93       	st	-X, r24
	ret->pVVoltage = __mockDataCounter*10;
    2c86:	81 81       	ldd	r24, Z+1	; 0x01
    2c88:	2a e0       	ldi	r18, 0x0A	; 10
    2c8a:	82 9f       	mul	r24, r18
    2c8c:	c0 01       	movw	r24, r0
    2c8e:	11 24       	eor	r1, r1
    2c90:	13 96       	adiw	r26, 0x03	; 3
    2c92:	9c 93       	st	X, r25
    2c94:	8e 93       	st	-X, r24
    2c96:	12 97       	sbiw	r26, 0x02	; 2
	ret->current = __mockDataCounter%7;
    2c98:	81 81       	ldd	r24, Z+1	; 0x01
    2c9a:	67 e0       	ldi	r22, 0x07	; 7
    2c9c:	0e 94 19 23 	call	0x4632	; 0x4632 <__udivmodqi4>
    2ca0:	89 2f       	mov	r24, r25
    2ca2:	90 e0       	ldi	r25, 0x00	; 0
    2ca4:	15 96       	adiw	r26, 0x05	; 5
    2ca6:	9c 93       	st	X, r25
    2ca8:	8e 93       	st	-X, r24
    2caa:	14 97       	sbiw	r26, 0x04	; 4
	ret->temperature = __mockDataCounter*100;
    2cac:	81 81       	ldd	r24, Z+1	; 0x01
    2cae:	24 e6       	ldi	r18, 0x64	; 100
    2cb0:	82 9f       	mul	r24, r18
    2cb2:	c0 01       	movw	r24, r0
    2cb4:	11 24       	eor	r1, r1
    2cb6:	17 96       	adiw	r26, 0x07	; 7
    2cb8:	9c 93       	st	X, r25
    2cba:	8e 93       	st	-X, r24
    2cbc:	16 97       	sbiw	r26, 0x06	; 6
    2cbe:	08 95       	ret

00002cc0 <_ZN13SensorManager8readDataEP10SensorData>:
	
	//return ret;
}

void SensorManager::readData(SensorData* ret) {
    2cc0:	af 92       	push	r10
    2cc2:	bf 92       	push	r11
    2cc4:	cf 92       	push	r12
    2cc6:	df 92       	push	r13
    2cc8:	ef 92       	push	r14
    2cca:	ff 92       	push	r15
    2ccc:	0f 93       	push	r16
    2cce:	1f 93       	push	r17
    2cd0:	cf 93       	push	r28
    2cd2:	df 93       	push	r29
    2cd4:	8c 01       	movw	r16, r24
    2cd6:	eb 01       	movw	r28, r22
	
	if (_isMock) {
    2cd8:	fc 01       	movw	r30, r24
    2cda:	80 81       	ld	r24, Z
    2cdc:	88 23       	and	r24, r24
    2cde:	21 f0       	breq	.+8      	; 0x2ce8 <_ZN13SensorManager8readDataEP10SensorData+0x28>
		this->getMockData(ret);
    2ce0:	c8 01       	movw	r24, r16
    2ce2:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <_ZN13SensorManager11getMockDataEP10SensorData>
    2ce6:	1b c0       	rjmp	.+54     	; 0x2d1e <_ZN13SensorManager8readDataEP10SensorData+0x5e>
	}
	else {
		uint16_t pvRaw   = takeSampleAnalog(PIN_PV_VOLTAGE);
    2ce8:	6e e0       	ldi	r22, 0x0E	; 14
    2cea:	c8 01       	movw	r24, r16
    2cec:	0e 94 30 16 	call	0x2c60	; 0x2c60 <_ZN13SensorManager16takeSampleAnalogEh>
    2cf0:	6c 01       	movw	r12, r24
		uint16_t battRaw = takeSampleAnalog(PIN_BATT_VOLTAGE);
    2cf2:	6f e0       	ldi	r22, 0x0F	; 15
    2cf4:	c8 01       	movw	r24, r16
    2cf6:	0e 94 30 16 	call	0x2c60	; 0x2c60 <_ZN13SensorManager16takeSampleAnalogEh>
    2cfa:	5c 01       	movw	r10, r24
		uint16_t currentRaw = takeSampleAnalog(PIN_CURRENT);
    2cfc:	61 e1       	ldi	r22, 0x11	; 17
    2cfe:	c8 01       	movw	r24, r16
    2d00:	0e 94 30 16 	call	0x2c60	; 0x2c60 <_ZN13SensorManager16takeSampleAnalogEh>
    2d04:	7c 01       	movw	r14, r24
		uint16_t tempRaw = takeSampleAnalog(PIN_TEMP);
    2d06:	60 e1       	ldi	r22, 0x10	; 16
    2d08:	c8 01       	movw	r24, r16
    2d0a:	0e 94 30 16 	call	0x2c60	; 0x2c60 <_ZN13SensorManager16takeSampleAnalogEh>

		ret->battVoltage = battRaw;
    2d0e:	b9 82       	std	Y+1, r11	; 0x01
    2d10:	a8 82       	st	Y, r10
		ret->pVVoltage = pvRaw;
    2d12:	db 82       	std	Y+3, r13	; 0x03
    2d14:	ca 82       	std	Y+2, r12	; 0x02
		ret->current = currentRaw;
    2d16:	fd 82       	std	Y+5, r15	; 0x05
    2d18:	ec 82       	std	Y+4, r14	; 0x04
		ret->temperature = tempRaw;
    2d1a:	9f 83       	std	Y+7, r25	; 0x07
    2d1c:	8e 83       	std	Y+6, r24	; 0x06
	}
	
	Helpers::printSensorData(ret);
    2d1e:	ce 01       	movw	r24, r28
	
	//return ret;
}
    2d20:	df 91       	pop	r29
    2d22:	cf 91       	pop	r28
    2d24:	1f 91       	pop	r17
    2d26:	0f 91       	pop	r16
    2d28:	ff 90       	pop	r15
    2d2a:	ef 90       	pop	r14
    2d2c:	df 90       	pop	r13
    2d2e:	cf 90       	pop	r12
    2d30:	bf 90       	pop	r11
    2d32:	af 90       	pop	r10
		ret->pVVoltage = pvRaw;
		ret->current = currentRaw;
		ret->temperature = tempRaw;
	}
	
	Helpers::printSensorData(ret);
    2d34:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <_ZN7Helpers15printSensorDataEP10SensorData>

00002d38 <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    2d38:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2d3c:	81 e0       	ldi	r24, 0x01	; 1
    2d3e:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <twi_sendStop>
    2d42:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2d46:	61 e0       	ldi	r22, 0x01	; 1
    2d48:	82 e1       	ldi	r24, 0x12	; 18
    2d4a:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
    2d4e:	61 e0       	ldi	r22, 0x01	; 1
    2d50:	83 e1       	ldi	r24, 0x13	; 19
    2d52:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
    2d56:	e9 eb       	ldi	r30, 0xB9	; 185
    2d58:	f0 e0       	ldi	r31, 0x00	; 0
    2d5a:	80 81       	ld	r24, Z
    2d5c:	8e 7f       	andi	r24, 0xFE	; 254
    2d5e:	80 83       	st	Z, r24
    2d60:	80 81       	ld	r24, Z
    2d62:	8d 7f       	andi	r24, 0xFD	; 253
    2d64:	80 83       	st	Z, r24
    2d66:	88 e4       	ldi	r24, 0x48	; 72
    2d68:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    2d6c:	85 e4       	ldi	r24, 0x45	; 69
    2d6e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2d72:	08 95       	ret

00002d74 <twi_readFrom>:
    2d74:	41 32       	cpi	r20, 0x21	; 33
    2d76:	08 f0       	brcs	.+2      	; 0x2d7a <twi_readFrom+0x6>
    2d78:	43 c0       	rjmp	.+134    	; 0x2e00 <twi_readFrom+0x8c>
    2d7a:	90 91 45 03 	lds	r25, 0x0345	; 0x800345 <twi_state>
    2d7e:	91 11       	cpse	r25, r1
    2d80:	fc cf       	rjmp	.-8      	; 0x2d7a <twi_readFrom+0x6>
    2d82:	91 e0       	ldi	r25, 0x01	; 1
    2d84:	90 93 45 03 	sts	0x0345, r25	; 0x800345 <twi_state>
    2d88:	20 93 43 03 	sts	0x0343, r18	; 0x800343 <twi_sendStop>
    2d8c:	2f ef       	ldi	r18, 0xFF	; 255
    2d8e:	20 93 d8 02 	sts	0x02D8, r18	; 0x8002d8 <twi_error>
    2d92:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <twi_masterBufferIndex>
    2d96:	24 0f       	add	r18, r20
    2d98:	20 93 1c 03 	sts	0x031C, r18	; 0x80031c <twi_masterBufferLength>
    2d9c:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <twi_slarw>
    2da0:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <twi_slarw>
    2da4:	88 0f       	add	r24, r24
    2da6:	89 2b       	or	r24, r25
    2da8:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <twi_slarw>
    2dac:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <twi_inRepStart>
    2db0:	81 30       	cpi	r24, 0x01	; 1
    2db2:	61 f4       	brne	.+24     	; 0x2dcc <twi_readFrom+0x58>
    2db4:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2db8:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2dbc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2dc0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2dc4:	83 fd       	sbrc	r24, 3
    2dc6:	f8 cf       	rjmp	.-16     	; 0x2db8 <twi_readFrom+0x44>
    2dc8:	85 ec       	ldi	r24, 0xC5	; 197
    2dca:	01 c0       	rjmp	.+2      	; 0x2dce <twi_readFrom+0x5a>
    2dcc:	85 ee       	ldi	r24, 0xE5	; 229
    2dce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2dd2:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <twi_state>
    2dd6:	81 30       	cpi	r24, 0x01	; 1
    2dd8:	e1 f3       	breq	.-8      	; 0x2dd2 <twi_readFrom+0x5e>
    2dda:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2dde:	84 17       	cp	r24, r20
    2de0:	10 f4       	brcc	.+4      	; 0x2de6 <twi_readFrom+0x72>
    2de2:	40 91 1d 03 	lds	r20, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2de6:	ae e1       	ldi	r26, 0x1E	; 30
    2de8:	b3 e0       	ldi	r27, 0x03	; 3
    2dea:	96 2f       	mov	r25, r22
    2dec:	fb 01       	movw	r30, r22
    2dee:	8e 2f       	mov	r24, r30
    2df0:	89 1b       	sub	r24, r25
    2df2:	84 17       	cp	r24, r20
    2df4:	18 f4       	brcc	.+6      	; 0x2dfc <twi_readFrom+0x88>
    2df6:	8d 91       	ld	r24, X+
    2df8:	81 93       	st	Z+, r24
    2dfa:	f9 cf       	rjmp	.-14     	; 0x2dee <twi_readFrom+0x7a>
    2dfc:	84 2f       	mov	r24, r20
    2dfe:	08 95       	ret
    2e00:	80 e0       	ldi	r24, 0x00	; 0
    2e02:	08 95       	ret

00002e04 <twi_writeTo>:
    2e04:	0f 93       	push	r16
    2e06:	41 32       	cpi	r20, 0x21	; 33
    2e08:	08 f0       	brcs	.+2      	; 0x2e0c <twi_writeTo+0x8>
    2e0a:	4a c0       	rjmp	.+148    	; 0x2ea0 <twi_writeTo+0x9c>
    2e0c:	90 91 45 03 	lds	r25, 0x0345	; 0x800345 <twi_state>
    2e10:	91 11       	cpse	r25, r1
    2e12:	fc cf       	rjmp	.-8      	; 0x2e0c <twi_writeTo+0x8>
    2e14:	32 e0       	ldi	r19, 0x02	; 2
    2e16:	30 93 45 03 	sts	0x0345, r19	; 0x800345 <twi_state>
    2e1a:	00 93 43 03 	sts	0x0343, r16	; 0x800343 <twi_sendStop>
    2e1e:	3f ef       	ldi	r19, 0xFF	; 255
    2e20:	30 93 d8 02 	sts	0x02D8, r19	; 0x8002d8 <twi_error>
    2e24:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <twi_masterBufferIndex>
    2e28:	40 93 1c 03 	sts	0x031C, r20	; 0x80031c <twi_masterBufferLength>
    2e2c:	56 2f       	mov	r21, r22
    2e2e:	ae e1       	ldi	r26, 0x1E	; 30
    2e30:	b3 e0       	ldi	r27, 0x03	; 3
    2e32:	fb 01       	movw	r30, r22
    2e34:	3e 2f       	mov	r19, r30
    2e36:	35 1b       	sub	r19, r21
    2e38:	34 17       	cp	r19, r20
    2e3a:	18 f4       	brcc	.+6      	; 0x2e42 <twi_writeTo+0x3e>
    2e3c:	31 91       	ld	r19, Z+
    2e3e:	3d 93       	st	X+, r19
    2e40:	f9 cf       	rjmp	.-14     	; 0x2e34 <twi_writeTo+0x30>
    2e42:	10 92 44 03 	sts	0x0344, r1	; 0x800344 <twi_slarw>
    2e46:	30 91 44 03 	lds	r19, 0x0344	; 0x800344 <twi_slarw>
    2e4a:	88 0f       	add	r24, r24
    2e4c:	83 2b       	or	r24, r19
    2e4e:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <twi_slarw>
    2e52:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <twi_inRepStart>
    2e56:	81 30       	cpi	r24, 0x01	; 1
    2e58:	61 f4       	brne	.+24     	; 0x2e72 <twi_writeTo+0x6e>
    2e5a:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2e5e:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2e62:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2e66:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2e6a:	83 fd       	sbrc	r24, 3
    2e6c:	f8 cf       	rjmp	.-16     	; 0x2e5e <twi_writeTo+0x5a>
    2e6e:	85 ec       	ldi	r24, 0xC5	; 197
    2e70:	01 c0       	rjmp	.+2      	; 0x2e74 <twi_writeTo+0x70>
    2e72:	85 ee       	ldi	r24, 0xE5	; 229
    2e74:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2e78:	22 23       	and	r18, r18
    2e7a:	21 f0       	breq	.+8      	; 0x2e84 <twi_writeTo+0x80>
    2e7c:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <twi_state>
    2e80:	82 30       	cpi	r24, 0x02	; 2
    2e82:	d1 f3       	breq	.-12     	; 0x2e78 <twi_writeTo+0x74>
    2e84:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e88:	8f 3f       	cpi	r24, 0xFF	; 255
    2e8a:	79 f0       	breq	.+30     	; 0x2eaa <twi_writeTo+0xa6>
    2e8c:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e90:	80 32       	cpi	r24, 0x20	; 32
    2e92:	41 f0       	breq	.+16     	; 0x2ea4 <twi_writeTo+0xa0>
    2e94:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e98:	80 33       	cpi	r24, 0x30	; 48
    2e9a:	31 f0       	breq	.+12     	; 0x2ea8 <twi_writeTo+0xa4>
    2e9c:	94 e0       	ldi	r25, 0x04	; 4
    2e9e:	05 c0       	rjmp	.+10     	; 0x2eaa <twi_writeTo+0xa6>
    2ea0:	91 e0       	ldi	r25, 0x01	; 1
    2ea2:	03 c0       	rjmp	.+6      	; 0x2eaa <twi_writeTo+0xa6>
    2ea4:	92 e0       	ldi	r25, 0x02	; 2
    2ea6:	01 c0       	rjmp	.+2      	; 0x2eaa <twi_writeTo+0xa6>
    2ea8:	93 e0       	ldi	r25, 0x03	; 3
    2eaa:	89 2f       	mov	r24, r25
    2eac:	0f 91       	pop	r16
    2eae:	08 95       	ret

00002eb0 <twi_transmit>:
    2eb0:	40 91 fa 02 	lds	r20, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2eb4:	26 2f       	mov	r18, r22
    2eb6:	30 e0       	ldi	r19, 0x00	; 0
    2eb8:	24 0f       	add	r18, r20
    2eba:	31 1d       	adc	r19, r1
    2ebc:	21 32       	cpi	r18, 0x21	; 33
    2ebe:	31 05       	cpc	r19, r1
    2ec0:	dc f4       	brge	.+54     	; 0x2ef8 <twi_transmit+0x48>
    2ec2:	20 91 45 03 	lds	r18, 0x0345	; 0x800345 <twi_state>
    2ec6:	24 30       	cpi	r18, 0x04	; 4
    2ec8:	c9 f4       	brne	.+50     	; 0x2efc <twi_transmit+0x4c>
    2eca:	fc 01       	movw	r30, r24
    2ecc:	80 e0       	ldi	r24, 0x00	; 0
    2ece:	90 e0       	ldi	r25, 0x00	; 0
    2ed0:	86 17       	cp	r24, r22
    2ed2:	58 f4       	brcc	.+22     	; 0x2eea <twi_transmit+0x3a>
    2ed4:	30 91 fa 02 	lds	r19, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2ed8:	21 91       	ld	r18, Z+
    2eda:	dc 01       	movw	r26, r24
    2edc:	a4 50       	subi	r26, 0x04	; 4
    2ede:	bd 4f       	sbci	r27, 0xFD	; 253
    2ee0:	a3 0f       	add	r26, r19
    2ee2:	b1 1d       	adc	r27, r1
    2ee4:	2c 93       	st	X, r18
    2ee6:	01 96       	adiw	r24, 0x01	; 1
    2ee8:	f3 cf       	rjmp	.-26     	; 0x2ed0 <twi_transmit+0x20>
    2eea:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2eee:	68 0f       	add	r22, r24
    2ef0:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <twi_txBufferLength>
    2ef4:	80 e0       	ldi	r24, 0x00	; 0
    2ef6:	08 95       	ret
    2ef8:	81 e0       	ldi	r24, 0x01	; 1
    2efa:	08 95       	ret
    2efc:	82 e0       	ldi	r24, 0x02	; 2
    2efe:	08 95       	ret

00002f00 <twi_attachSlaveRxEvent>:
    2f00:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <twi_onSlaveReceive+0x1>
    2f04:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <twi_onSlaveReceive>
    2f08:	08 95       	ret

00002f0a <twi_attachSlaveTxEvent>:
    2f0a:	90 93 41 03 	sts	0x0341, r25	; 0x800341 <twi_onSlaveTransmit+0x1>
    2f0e:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <twi_onSlaveTransmit>
    2f12:	08 95       	ret

00002f14 <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    2f14:	85 ed       	ldi	r24, 0xD5	; 213
    2f16:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    2f1a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2f1e:	84 fd       	sbrc	r24, 4
    2f20:	fc cf       	rjmp	.-8      	; 0x2f1a <twi_stop+0x6>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    2f22:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2f26:	08 95       	ret

00002f28 <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    2f28:	85 ec       	ldi	r24, 0xC5	; 197
    2f2a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

  // update twi state
  twi_state = TWI_READY;
    2f2e:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2f32:	08 95       	ret

00002f34 <__vector_24>:
}

ISR(TWI_vect)
{
    2f34:	1f 92       	push	r1
    2f36:	0f 92       	push	r0
    2f38:	0f b6       	in	r0, 0x3f	; 63
    2f3a:	0f 92       	push	r0
    2f3c:	11 24       	eor	r1, r1
    2f3e:	2f 93       	push	r18
    2f40:	3f 93       	push	r19
    2f42:	4f 93       	push	r20
    2f44:	5f 93       	push	r21
    2f46:	6f 93       	push	r22
    2f48:	7f 93       	push	r23
    2f4a:	8f 93       	push	r24
    2f4c:	9f 93       	push	r25
    2f4e:	af 93       	push	r26
    2f50:	bf 93       	push	r27
    2f52:	ef 93       	push	r30
    2f54:	ff 93       	push	r31
  switch(TW_STATUS){
    2f56:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2f5a:	88 7f       	andi	r24, 0xF8	; 248
    2f5c:	80 36       	cpi	r24, 0x60	; 96
    2f5e:	09 f4       	brne	.+2      	; 0x2f62 <__vector_24+0x2e>
    2f60:	9e c0       	rjmp	.+316    	; 0x309e <__vector_24+0x16a>
    2f62:	78 f5       	brcc	.+94     	; 0x2fc2 <__vector_24+0x8e>
    2f64:	88 32       	cpi	r24, 0x28	; 40
    2f66:	09 f4       	brne	.+2      	; 0x2f6a <__vector_24+0x36>
    2f68:	5d c0       	rjmp	.+186    	; 0x3024 <__vector_24+0xf0>
    2f6a:	90 f4       	brcc	.+36     	; 0x2f90 <__vector_24+0x5c>
    2f6c:	80 31       	cpi	r24, 0x10	; 16
    2f6e:	09 f4       	brne	.+2      	; 0x2f72 <__vector_24+0x3e>
    2f70:	56 c0       	rjmp	.+172    	; 0x301e <__vector_24+0xea>
    2f72:	38 f4       	brcc	.+14     	; 0x2f82 <__vector_24+0x4e>
    2f74:	88 23       	and	r24, r24
    2f76:	09 f4       	brne	.+2      	; 0x2f7a <__vector_24+0x46>
    2f78:	f5 c0       	rjmp	.+490    	; 0x3164 <__vector_24+0x230>
    2f7a:	88 30       	cpi	r24, 0x08	; 8
    2f7c:	09 f4       	brne	.+2      	; 0x2f80 <__vector_24+0x4c>
    2f7e:	4f c0       	rjmp	.+158    	; 0x301e <__vector_24+0xea>
    2f80:	f5 c0       	rjmp	.+490    	; 0x316c <__vector_24+0x238>
    2f82:	88 31       	cpi	r24, 0x18	; 24
    2f84:	09 f4       	brne	.+2      	; 0x2f88 <__vector_24+0x54>
    2f86:	4e c0       	rjmp	.+156    	; 0x3024 <__vector_24+0xf0>
    2f88:	80 32       	cpi	r24, 0x20	; 32
    2f8a:	09 f4       	brne	.+2      	; 0x2f8e <__vector_24+0x5a>
    2f8c:	5f c0       	rjmp	.+190    	; 0x304c <__vector_24+0x118>
    2f8e:	ee c0       	rjmp	.+476    	; 0x316c <__vector_24+0x238>
    2f90:	80 34       	cpi	r24, 0x40	; 64
    2f92:	09 f4       	brne	.+2      	; 0x2f96 <__vector_24+0x62>
    2f94:	6a c0       	rjmp	.+212    	; 0x306a <__vector_24+0x136>
    2f96:	58 f4       	brcc	.+22     	; 0x2fae <__vector_24+0x7a>
    2f98:	80 33       	cpi	r24, 0x30	; 48
    2f9a:	09 f4       	brne	.+2      	; 0x2f9e <__vector_24+0x6a>
    2f9c:	57 c0       	rjmp	.+174    	; 0x304c <__vector_24+0x118>
    2f9e:	88 33       	cpi	r24, 0x38	; 56
    2fa0:	09 f0       	breq	.+2      	; 0x2fa4 <__vector_24+0x70>
    2fa2:	e4 c0       	rjmp	.+456    	; 0x316c <__vector_24+0x238>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    2fa4:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <twi_error>
      twi_releaseBus();
    2fa8:	0e 94 94 17 	call	0x2f28	; 0x2f28 <twi_releaseBus>
      break;
    2fac:	df c0       	rjmp	.+446    	; 0x316c <__vector_24+0x238>
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2fae:	80 35       	cpi	r24, 0x50	; 80
    2fb0:	09 f4       	brne	.+2      	; 0x2fb4 <__vector_24+0x80>
    2fb2:	4f c0       	rjmp	.+158    	; 0x3052 <__vector_24+0x11e>
    2fb4:	88 35       	cpi	r24, 0x58	; 88
    2fb6:	09 f4       	brne	.+2      	; 0x2fba <__vector_24+0x86>
    2fb8:	5d c0       	rjmp	.+186    	; 0x3074 <__vector_24+0x140>
    2fba:	88 34       	cpi	r24, 0x48	; 72
    2fbc:	09 f0       	breq	.+2      	; 0x2fc0 <__vector_24+0x8c>
    2fbe:	d6 c0       	rjmp	.+428    	; 0x316c <__vector_24+0x238>
    2fc0:	d3 c0       	rjmp	.+422    	; 0x3168 <__vector_24+0x234>
    2fc2:	88 39       	cpi	r24, 0x98	; 152
    2fc4:	09 f4       	brne	.+2      	; 0x2fc8 <__vector_24+0x94>
    2fc6:	c4 c0       	rjmp	.+392    	; 0x3150 <__vector_24+0x21c>
    2fc8:	a8 f4       	brcc	.+42     	; 0x2ff4 <__vector_24+0xc0>
    2fca:	88 37       	cpi	r24, 0x78	; 120
    2fcc:	09 f4       	brne	.+2      	; 0x2fd0 <__vector_24+0x9c>
    2fce:	67 c0       	rjmp	.+206    	; 0x309e <__vector_24+0x16a>
    2fd0:	38 f4       	brcc	.+14     	; 0x2fe0 <__vector_24+0xac>
    2fd2:	88 36       	cpi	r24, 0x68	; 104
    2fd4:	09 f4       	brne	.+2      	; 0x2fd8 <__vector_24+0xa4>
    2fd6:	63 c0       	rjmp	.+198    	; 0x309e <__vector_24+0x16a>
    2fd8:	80 37       	cpi	r24, 0x70	; 112
    2fda:	09 f4       	brne	.+2      	; 0x2fde <__vector_24+0xaa>
    2fdc:	60 c0       	rjmp	.+192    	; 0x309e <__vector_24+0x16a>
    2fde:	c6 c0       	rjmp	.+396    	; 0x316c <__vector_24+0x238>
    2fe0:	88 38       	cpi	r24, 0x88	; 136
    2fe2:	09 f4       	brne	.+2      	; 0x2fe6 <__vector_24+0xb2>
    2fe4:	b5 c0       	rjmp	.+362    	; 0x3150 <__vector_24+0x21c>
    2fe6:	80 39       	cpi	r24, 0x90	; 144
    2fe8:	09 f4       	brne	.+2      	; 0x2fec <__vector_24+0xb8>
    2fea:	5f c0       	rjmp	.+190    	; 0x30aa <__vector_24+0x176>
    2fec:	80 38       	cpi	r24, 0x80	; 128
    2fee:	09 f0       	breq	.+2      	; 0x2ff2 <__vector_24+0xbe>
    2ff0:	bd c0       	rjmp	.+378    	; 0x316c <__vector_24+0x238>
    2ff2:	5b c0       	rjmp	.+182    	; 0x30aa <__vector_24+0x176>
    2ff4:	80 3b       	cpi	r24, 0xB0	; 176
    2ff6:	09 f4       	brne	.+2      	; 0x2ffa <__vector_24+0xc6>
    2ff8:	83 c0       	rjmp	.+262    	; 0x3100 <__vector_24+0x1cc>
    2ffa:	38 f4       	brcc	.+14     	; 0x300a <__vector_24+0xd6>
    2ffc:	80 3a       	cpi	r24, 0xA0	; 160
    2ffe:	09 f4       	brne	.+2      	; 0x3002 <__vector_24+0xce>
    3000:	66 c0       	rjmp	.+204    	; 0x30ce <__vector_24+0x19a>
    3002:	88 3a       	cpi	r24, 0xA8	; 168
    3004:	09 f4       	brne	.+2      	; 0x3008 <__vector_24+0xd4>
    3006:	7c c0       	rjmp	.+248    	; 0x3100 <__vector_24+0x1cc>
    3008:	b1 c0       	rjmp	.+354    	; 0x316c <__vector_24+0x238>
    300a:	80 3c       	cpi	r24, 0xC0	; 192
    300c:	09 f4       	brne	.+2      	; 0x3010 <__vector_24+0xdc>
    300e:	a4 c0       	rjmp	.+328    	; 0x3158 <__vector_24+0x224>
    3010:	88 3c       	cpi	r24, 0xC8	; 200
    3012:	09 f4       	brne	.+2      	; 0x3016 <__vector_24+0xe2>
    3014:	a1 c0       	rjmp	.+322    	; 0x3158 <__vector_24+0x224>
    3016:	88 3b       	cpi	r24, 0xB8	; 184
    3018:	09 f4       	brne	.+2      	; 0x301c <__vector_24+0xe8>
    301a:	87 c0       	rjmp	.+270    	; 0x312a <__vector_24+0x1f6>
    301c:	a7 c0       	rjmp	.+334    	; 0x316c <__vector_24+0x238>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    301e:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    3022:	10 c0       	rjmp	.+32     	; 0x3044 <__vector_24+0x110>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3024:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3028:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <twi_masterBufferLength>
    302c:	98 17       	cp	r25, r24
    302e:	70 f5       	brcc	.+92     	; 0x308c <__vector_24+0x158>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    3030:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3034:	81 e0       	ldi	r24, 0x01	; 1
    3036:	8e 0f       	add	r24, r30
    3038:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    303c:	f0 e0       	ldi	r31, 0x00	; 0
    303e:	e2 5e       	subi	r30, 0xE2	; 226
    3040:	fc 4f       	sbci	r31, 0xFC	; 252
    3042:	80 81       	ld	r24, Z
    3044:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3048:	85 ec       	ldi	r24, 0xC5	; 197
    304a:	83 c0       	rjmp	.+262    	; 0x3152 <__vector_24+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    304c:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <twi_error>
    3050:	8b c0       	rjmp	.+278    	; 0x3168 <__vector_24+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3052:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3056:	81 e0       	ldi	r24, 0x01	; 1
    3058:	8e 0f       	add	r24, r30
    305a:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    305e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    3062:	f0 e0       	ldi	r31, 0x00	; 0
    3064:	e2 5e       	subi	r30, 0xE2	; 226
    3066:	fc 4f       	sbci	r31, 0xFC	; 252
    3068:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    306a:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <twi_masterBufferIndex>
    306e:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <twi_masterBufferLength>
    3072:	6b c0       	rjmp	.+214    	; 0x314a <__vector_24+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3074:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3078:	81 e0       	ldi	r24, 0x01	; 1
    307a:	8e 0f       	add	r24, r30
    307c:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    3080:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    3084:	f0 e0       	ldi	r31, 0x00	; 0
    3086:	e2 5e       	subi	r30, 0xE2	; 226
    3088:	fc 4f       	sbci	r31, 0xFC	; 252
    308a:	80 83       	st	Z, r24
	if (twi_sendStop)
    308c:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <twi_sendStop>
    3090:	81 11       	cpse	r24, r1
    3092:	6a c0       	rjmp	.+212    	; 0x3168 <__vector_24+0x234>
          twi_stop();
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    3094:	81 e0       	ldi	r24, 0x01	; 1
    3096:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <twi_inRepStart>
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    309a:	84 ea       	ldi	r24, 0xA4	; 164
    309c:	5e c0       	rjmp	.+188    	; 0x315a <__vector_24+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    309e:	83 e0       	ldi	r24, 0x03	; 3
    30a0:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    30a4:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <twi_rxBufferIndex>
    30a8:	cf cf       	rjmp	.-98     	; 0x3048 <__vector_24+0x114>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    30aa:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30ae:	80 32       	cpi	r24, 0x20	; 32
    30b0:	08 f0       	brcs	.+2      	; 0x30b4 <__vector_24+0x180>
    30b2:	4e c0       	rjmp	.+156    	; 0x3150 <__vector_24+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    30b4:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30b8:	81 e0       	ldi	r24, 0x01	; 1
    30ba:	8e 0f       	add	r24, r30
    30bc:	80 93 d9 02 	sts	0x02D9, r24	; 0x8002d9 <twi_rxBufferIndex>
    30c0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    30c4:	f0 e0       	ldi	r31, 0x00	; 0
    30c6:	e6 52       	subi	r30, 0x26	; 38
    30c8:	fd 4f       	sbci	r31, 0xFD	; 253
    30ca:	80 83       	st	Z, r24
    30cc:	bd cf       	rjmp	.-134    	; 0x3048 <__vector_24+0x114>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    30ce:	0e 94 94 17 	call	0x2f28	; 0x2f28 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    30d2:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30d6:	80 32       	cpi	r24, 0x20	; 32
    30d8:	30 f4       	brcc	.+12     	; 0x30e6 <__vector_24+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    30da:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30de:	f0 e0       	ldi	r31, 0x00	; 0
    30e0:	e6 52       	subi	r30, 0x26	; 38
    30e2:	fd 4f       	sbci	r31, 0xFD	; 253
    30e4:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    30e6:	60 91 d9 02 	lds	r22, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30ea:	70 e0       	ldi	r23, 0x00	; 0
    30ec:	e0 91 3e 03 	lds	r30, 0x033E	; 0x80033e <twi_onSlaveReceive>
    30f0:	f0 91 3f 03 	lds	r31, 0x033F	; 0x80033f <twi_onSlaveReceive+0x1>
    30f4:	8a ed       	ldi	r24, 0xDA	; 218
    30f6:	92 e0       	ldi	r25, 0x02	; 2
    30f8:	09 95       	icall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    30fa:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <twi_rxBufferIndex>
      break;
    30fe:	36 c0       	rjmp	.+108    	; 0x316c <__vector_24+0x238>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    3100:	84 e0       	ldi	r24, 0x04	; 4
    3102:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    3106:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    310a:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    310e:	e0 91 40 03 	lds	r30, 0x0340	; 0x800340 <twi_onSlaveTransmit>
    3112:	f0 91 41 03 	lds	r31, 0x0341	; 0x800341 <twi_onSlaveTransmit+0x1>
    3116:	09 95       	icall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    3118:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    311c:	81 11       	cpse	r24, r1
    311e:	05 c0       	rjmp	.+10     	; 0x312a <__vector_24+0x1f6>
        twi_txBufferLength = 1;
    3120:	81 e0       	ldi	r24, 0x01	; 1
    3122:	80 93 fa 02 	sts	0x02FA, r24	; 0x8002fa <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    3126:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    312a:	e0 91 fb 02 	lds	r30, 0x02FB	; 0x8002fb <twi_txBufferIndex>
    312e:	81 e0       	ldi	r24, 0x01	; 1
    3130:	8e 0f       	add	r24, r30
    3132:	80 93 fb 02 	sts	0x02FB, r24	; 0x8002fb <twi_txBufferIndex>
    3136:	f0 e0       	ldi	r31, 0x00	; 0
    3138:	e4 50       	subi	r30, 0x04	; 4
    313a:	fd 4f       	sbci	r31, 0xFD	; 253
    313c:	80 81       	ld	r24, Z
    313e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    3142:	90 91 fb 02 	lds	r25, 0x02FB	; 0x8002fb <twi_txBufferIndex>
    3146:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    314a:	98 17       	cp	r25, r24
    314c:	08 f4       	brcc	.+2      	; 0x3150 <__vector_24+0x21c>
    314e:	7c cf       	rjmp	.-264    	; 0x3048 <__vector_24+0x114>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    3150:	85 e8       	ldi	r24, 0x85	; 133
    3152:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3156:	0a c0       	rjmp	.+20     	; 0x316c <__vector_24+0x238>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3158:	85 ec       	ldi	r24, 0xC5	; 197
    315a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    315e:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
      break;
    3162:	04 c0       	rjmp	.+8      	; 0x316c <__vector_24+0x238>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    3164:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <twi_error>
      twi_stop();
    3168:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <twi_stop>
      break;
  }
}
    316c:	ff 91       	pop	r31
    316e:	ef 91       	pop	r30
    3170:	bf 91       	pop	r27
    3172:	af 91       	pop	r26
    3174:	9f 91       	pop	r25
    3176:	8f 91       	pop	r24
    3178:	7f 91       	pop	r23
    317a:	6f 91       	pop	r22
    317c:	5f 91       	pop	r21
    317e:	4f 91       	pop	r20
    3180:	3f 91       	pop	r19
    3182:	2f 91       	pop	r18
    3184:	0f 90       	pop	r0
    3186:	0f be       	out	0x3f, r0	; 63
    3188:	0f 90       	pop	r0
    318a:	1f 90       	pop	r1
    318c:	18 95       	reti

0000318e <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    318e:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3198:	82 1b       	sub	r24, r18
    319a:	91 09       	sbc	r25, r1
    319c:	08 95       	ret

0000319e <_ZN7TwoWire4readEv>:
    319e:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31a2:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31a6:	98 17       	cp	r25, r24
    31a8:	50 f4       	brcc	.+20     	; 0x31be <_ZN7TwoWire4readEv+0x20>
    31aa:	e9 2f       	mov	r30, r25
    31ac:	f0 e0       	ldi	r31, 0x00	; 0
    31ae:	e4 58       	subi	r30, 0x84	; 132
    31b0:	fc 4f       	sbci	r31, 0xFC	; 252
    31b2:	20 81       	ld	r18, Z
    31b4:	30 e0       	ldi	r19, 0x00	; 0
    31b6:	9f 5f       	subi	r25, 0xFF	; 255
    31b8:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31bc:	02 c0       	rjmp	.+4      	; 0x31c2 <_ZN7TwoWire4readEv+0x24>
    31be:	2f ef       	ldi	r18, 0xFF	; 255
    31c0:	3f ef       	ldi	r19, 0xFF	; 255
    31c2:	c9 01       	movw	r24, r18
    31c4:	08 95       	ret

000031c6 <_ZN7TwoWire4peekEv>:
    31c6:	e0 91 7b 03 	lds	r30, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31ca:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31ce:	e8 17       	cp	r30, r24
    31d0:	30 f4       	brcc	.+12     	; 0x31de <_ZN7TwoWire4peekEv+0x18>
    31d2:	f0 e0       	ldi	r31, 0x00	; 0
    31d4:	e4 58       	subi	r30, 0x84	; 132
    31d6:	fc 4f       	sbci	r31, 0xFC	; 252
    31d8:	80 81       	ld	r24, Z
    31da:	90 e0       	ldi	r25, 0x00	; 0
    31dc:	08 95       	ret
    31de:	8f ef       	ldi	r24, 0xFF	; 255
    31e0:	9f ef       	ldi	r25, 0xFF	; 255
    31e2:	08 95       	ret

000031e4 <_ZN7TwoWire5flushEv>:
    31e4:	08 95       	ret

000031e6 <_ZN7TwoWire16onReceiveServiceEPhi>:
    31e6:	cf 93       	push	r28
    31e8:	df 93       	push	r29
    31ea:	ec 01       	movw	r28, r24
    31ec:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <_ZN7TwoWire14user_onReceiveE>
    31f0:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <_ZN7TwoWire14user_onReceiveE+0x1>
    31f4:	30 97       	sbiw	r30, 0x00	; 0
    31f6:	f1 f0       	breq	.+60     	; 0x3234 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    31f8:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31fc:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3200:	98 17       	cp	r25, r24
    3202:	c0 f0       	brcs	.+48     	; 0x3234 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    3204:	90 e0       	ldi	r25, 0x00	; 0
    3206:	29 2f       	mov	r18, r25
    3208:	30 e0       	ldi	r19, 0x00	; 0
    320a:	26 17       	cp	r18, r22
    320c:	37 07       	cpc	r19, r23
    320e:	54 f4       	brge	.+20     	; 0x3224 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    3210:	de 01       	movw	r26, r28
    3212:	a2 0f       	add	r26, r18
    3214:	b3 1f       	adc	r27, r19
    3216:	4c 91       	ld	r20, X
    3218:	d9 01       	movw	r26, r18
    321a:	a4 58       	subi	r26, 0x84	; 132
    321c:	bc 4f       	sbci	r27, 0xFC	; 252
    321e:	4c 93       	st	X, r20
    3220:	9f 5f       	subi	r25, 0xFF	; 255
    3222:	f1 cf       	rjmp	.-30     	; 0x3206 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    3224:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3228:	60 93 7a 03 	sts	0x037A, r22	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    322c:	cb 01       	movw	r24, r22
    322e:	df 91       	pop	r29
    3230:	cf 91       	pop	r28
    3232:	09 94       	ijmp
    3234:	df 91       	pop	r29
    3236:	cf 91       	pop	r28
    3238:	08 95       	ret

0000323a <_ZN7TwoWire16onRequestServiceEv>:
    323a:	e0 91 54 03 	lds	r30, 0x0354	; 0x800354 <_ZN7TwoWire14user_onRequestE>
    323e:	f0 91 55 03 	lds	r31, 0x0355	; 0x800355 <_ZN7TwoWire14user_onRequestE+0x1>
    3242:	30 97       	sbiw	r30, 0x00	; 0
    3244:	29 f0       	breq	.+10     	; 0x3250 <_ZN7TwoWire16onRequestServiceEv+0x16>
    3246:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    324a:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    324e:	09 94       	ijmp
    3250:	08 95       	ret

00003252 <_ZN7TwoWire5writeEPKhj>:
    3252:	cf 92       	push	r12
    3254:	df 92       	push	r13
    3256:	ef 92       	push	r14
    3258:	ff 92       	push	r15
    325a:	0f 93       	push	r16
    325c:	1f 93       	push	r17
    325e:	cf 93       	push	r28
    3260:	df 93       	push	r29
    3262:	7c 01       	movw	r14, r24
    3264:	cb 01       	movw	r24, r22
    3266:	8a 01       	movw	r16, r20
    3268:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <_ZN7TwoWire12transmittingE>
    326c:	22 23       	and	r18, r18
    326e:	89 f0       	breq	.+34     	; 0x3292 <_ZN7TwoWire5writeEPKhj+0x40>
    3270:	eb 01       	movw	r28, r22
    3272:	6b 01       	movw	r12, r22
    3274:	c4 0e       	add	r12, r20
    3276:	d5 1e       	adc	r13, r21
    3278:	cc 15       	cp	r28, r12
    327a:	dd 05       	cpc	r29, r13
    327c:	69 f0       	breq	.+26     	; 0x3298 <_ZN7TwoWire5writeEPKhj+0x46>
    327e:	69 91       	ld	r22, Y+
    3280:	d7 01       	movw	r26, r14
    3282:	ed 91       	ld	r30, X+
    3284:	fc 91       	ld	r31, X
    3286:	01 90       	ld	r0, Z+
    3288:	f0 81       	ld	r31, Z
    328a:	e0 2d       	mov	r30, r0
    328c:	c7 01       	movw	r24, r14
    328e:	09 95       	icall
    3290:	f3 cf       	rjmp	.-26     	; 0x3278 <_ZN7TwoWire5writeEPKhj+0x26>
    3292:	64 2f       	mov	r22, r20
    3294:	0e 94 58 17 	call	0x2eb0	; 0x2eb0 <twi_transmit>
    3298:	c8 01       	movw	r24, r16
    329a:	df 91       	pop	r29
    329c:	cf 91       	pop	r28
    329e:	1f 91       	pop	r17
    32a0:	0f 91       	pop	r16
    32a2:	ff 90       	pop	r15
    32a4:	ef 90       	pop	r14
    32a6:	df 90       	pop	r13
    32a8:	cf 90       	pop	r12
    32aa:	08 95       	ret

000032ac <_ZN7TwoWire5writeEh>:
    32ac:	cf 93       	push	r28
    32ae:	df 93       	push	r29
    32b0:	1f 92       	push	r1
    32b2:	cd b7       	in	r28, 0x3d	; 61
    32b4:	de b7       	in	r29, 0x3e	; 62
    32b6:	69 83       	std	Y+1, r22	; 0x01
    32b8:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <_ZN7TwoWire12transmittingE>
    32bc:	22 23       	and	r18, r18
    32be:	d1 f0       	breq	.+52     	; 0x32f4 <_ZN7TwoWire5writeEh+0x48>
    32c0:	20 91 57 03 	lds	r18, 0x0357	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    32c4:	20 32       	cpi	r18, 0x20	; 32
    32c6:	40 f0       	brcs	.+16     	; 0x32d8 <_ZN7TwoWire5writeEh+0x2c>
    32c8:	21 e0       	ldi	r18, 0x01	; 1
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	fc 01       	movw	r30, r24
    32ce:	33 83       	std	Z+3, r19	; 0x03
    32d0:	22 83       	std	Z+2, r18	; 0x02
    32d2:	80 e0       	ldi	r24, 0x00	; 0
    32d4:	90 e0       	ldi	r25, 0x00	; 0
    32d6:	15 c0       	rjmp	.+42     	; 0x3302 <_ZN7TwoWire5writeEh+0x56>
    32d8:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    32dc:	e8 2f       	mov	r30, r24
    32de:	f0 e0       	ldi	r31, 0x00	; 0
    32e0:	e7 5a       	subi	r30, 0xA7	; 167
    32e2:	fc 4f       	sbci	r31, 0xFC	; 252
    32e4:	99 81       	ldd	r25, Y+1	; 0x01
    32e6:	90 83       	st	Z, r25
    32e8:	8f 5f       	subi	r24, 0xFF	; 255
    32ea:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    32ee:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    32f2:	05 c0       	rjmp	.+10     	; 0x32fe <_ZN7TwoWire5writeEh+0x52>
    32f4:	61 e0       	ldi	r22, 0x01	; 1
    32f6:	ce 01       	movw	r24, r28
    32f8:	01 96       	adiw	r24, 0x01	; 1
    32fa:	0e 94 58 17 	call	0x2eb0	; 0x2eb0 <twi_transmit>
    32fe:	81 e0       	ldi	r24, 0x01	; 1
    3300:	90 e0       	ldi	r25, 0x00	; 0
    3302:	0f 90       	pop	r0
    3304:	df 91       	pop	r29
    3306:	cf 91       	pop	r28
    3308:	08 95       	ret

0000330a <_ZN7TwoWireC1Ev>:
    330a:	fc 01       	movw	r30, r24
    330c:	13 82       	std	Z+3, r1	; 0x03
    330e:	12 82       	std	Z+2, r1	; 0x02
    3310:	88 ee       	ldi	r24, 0xE8	; 232
    3312:	93 e0       	ldi	r25, 0x03	; 3
    3314:	a0 e0       	ldi	r26, 0x00	; 0
    3316:	b0 e0       	ldi	r27, 0x00	; 0
    3318:	84 83       	std	Z+4, r24	; 0x04
    331a:	95 83       	std	Z+5, r25	; 0x05
    331c:	a6 83       	std	Z+6, r26	; 0x06
    331e:	b7 83       	std	Z+7, r27	; 0x07
    3320:	8e e5       	ldi	r24, 0x5E	; 94
    3322:	91 e0       	ldi	r25, 0x01	; 1
    3324:	91 83       	std	Z+1, r25	; 0x01
    3326:	80 83       	st	Z, r24
    3328:	08 95       	ret

0000332a <_ZN7TwoWire5beginEv>:
    332a:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    332e:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3332:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3336:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    333a:	0e 94 9c 16 	call	0x2d38	; 0x2d38 <twi_init>
    333e:	8d e1       	ldi	r24, 0x1D	; 29
    3340:	99 e1       	ldi	r25, 0x19	; 25
    3342:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <twi_attachSlaveTxEvent>
    3346:	83 ef       	ldi	r24, 0xF3	; 243
    3348:	98 e1       	ldi	r25, 0x18	; 24
    334a:	0c 94 80 17 	jmp	0x2f00	; 0x2f00 <twi_attachSlaveRxEvent>

0000334e <_ZN7TwoWire17beginTransmissionEh>:
    334e:	81 e0       	ldi	r24, 0x01	; 1
    3350:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <_ZN7TwoWire12transmittingE>
    3354:	60 93 79 03 	sts	0x0379, r22	; 0x800379 <_ZN7TwoWire9txAddressE>
    3358:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    335c:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3360:	08 95       	ret

00003362 <_ZN7TwoWire17beginTransmissionEi>:
    3362:	0c 94 a7 19 	jmp	0x334e	; 0x334e <_ZN7TwoWire17beginTransmissionEh>

00003366 <_ZN7TwoWire15endTransmissionEh>:
    3366:	0f 93       	push	r16
    3368:	06 2f       	mov	r16, r22
    336a:	21 e0       	ldi	r18, 0x01	; 1
    336c:	40 91 57 03 	lds	r20, 0x0357	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3370:	69 e5       	ldi	r22, 0x59	; 89
    3372:	73 e0       	ldi	r23, 0x03	; 3
    3374:	80 91 79 03 	lds	r24, 0x0379	; 0x800379 <_ZN7TwoWire9txAddressE>
    3378:	0e 94 02 17 	call	0x2e04	; 0x2e04 <twi_writeTo>
    337c:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3380:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3384:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <_ZN7TwoWire12transmittingE>
    3388:	0f 91       	pop	r16
    338a:	08 95       	ret

0000338c <_ZN7TwoWire11requestFromEhhmhh>:
    338c:	4f 92       	push	r4
    338e:	5f 92       	push	r5
    3390:	6f 92       	push	r6
    3392:	7f 92       	push	r7
    3394:	af 92       	push	r10
    3396:	bf 92       	push	r11
    3398:	cf 92       	push	r12
    339a:	ef 92       	push	r14
    339c:	ff 92       	push	r15
    339e:	0f 93       	push	r16
    33a0:	1f 93       	push	r17
    33a2:	cf 93       	push	r28
    33a4:	df 93       	push	r29
    33a6:	5c 01       	movw	r10, r24
    33a8:	f6 2e       	mov	r15, r22
    33aa:	d4 2f       	mov	r29, r20
    33ac:	28 01       	movw	r4, r16
    33ae:	39 01       	movw	r6, r18
    33b0:	ee 20       	and	r14, r14
    33b2:	21 f1       	breq	.+72     	; 0x33fc <_ZN7TwoWire11requestFromEhhmhh+0x70>
    33b4:	0e 94 a7 19 	call	0x334e	; 0x334e <_ZN7TwoWire17beginTransmissionEh>
    33b8:	ce 2d       	mov	r28, r14
    33ba:	c4 30       	cpi	r28, 0x04	; 4
    33bc:	08 f0       	brcs	.+2      	; 0x33c0 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    33be:	c3 e0       	ldi	r28, 0x03	; 3
    33c0:	c1 50       	subi	r28, 0x01	; 1
    33c2:	c0 f0       	brcs	.+48     	; 0x33f4 <_ZN7TwoWire11requestFromEhhmhh+0x68>
    33c4:	28 e0       	ldi	r18, 0x08	; 8
    33c6:	c2 9f       	mul	r28, r18
    33c8:	c0 01       	movw	r24, r0
    33ca:	11 24       	eor	r1, r1
    33cc:	a3 01       	movw	r20, r6
    33ce:	92 01       	movw	r18, r4
    33d0:	04 c0       	rjmp	.+8      	; 0x33da <_ZN7TwoWire11requestFromEhhmhh+0x4e>
    33d2:	56 95       	lsr	r21
    33d4:	47 95       	ror	r20
    33d6:	37 95       	ror	r19
    33d8:	27 95       	ror	r18
    33da:	8a 95       	dec	r24
    33dc:	d2 f7       	brpl	.-12     	; 0x33d2 <_ZN7TwoWire11requestFromEhhmhh+0x46>
    33de:	ca 01       	movw	r24, r20
    33e0:	b9 01       	movw	r22, r18
    33e2:	d5 01       	movw	r26, r10
    33e4:	ed 91       	ld	r30, X+
    33e6:	fc 91       	ld	r31, X
    33e8:	01 90       	ld	r0, Z+
    33ea:	f0 81       	ld	r31, Z
    33ec:	e0 2d       	mov	r30, r0
    33ee:	c5 01       	movw	r24, r10
    33f0:	09 95       	icall
    33f2:	e6 cf       	rjmp	.-52     	; 0x33c0 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    33f4:	60 e0       	ldi	r22, 0x00	; 0
    33f6:	c5 01       	movw	r24, r10
    33f8:	0e 94 b3 19 	call	0x3366	; 0x3366 <_ZN7TwoWire15endTransmissionEh>
    33fc:	4d 2f       	mov	r20, r29
    33fe:	d1 32       	cpi	r29, 0x21	; 33
    3400:	08 f0       	brcs	.+2      	; 0x3404 <_ZN7TwoWire11requestFromEhhmhh+0x78>
    3402:	40 e2       	ldi	r20, 0x20	; 32
    3404:	2c 2d       	mov	r18, r12
    3406:	6c e7       	ldi	r22, 0x7C	; 124
    3408:	73 e0       	ldi	r23, 0x03	; 3
    340a:	8f 2d       	mov	r24, r15
    340c:	0e 94 ba 16 	call	0x2d74	; 0x2d74 <twi_readFrom>
    3410:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3414:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3418:	df 91       	pop	r29
    341a:	cf 91       	pop	r28
    341c:	1f 91       	pop	r17
    341e:	0f 91       	pop	r16
    3420:	ff 90       	pop	r15
    3422:	ef 90       	pop	r14
    3424:	cf 90       	pop	r12
    3426:	bf 90       	pop	r11
    3428:	af 90       	pop	r10
    342a:	7f 90       	pop	r7
    342c:	6f 90       	pop	r6
    342e:	5f 90       	pop	r5
    3430:	4f 90       	pop	r4
    3432:	08 95       	ret

00003434 <_ZN7TwoWire11requestFromEhhh>:
    3434:	cf 92       	push	r12
    3436:	ef 92       	push	r14
    3438:	0f 93       	push	r16
    343a:	1f 93       	push	r17
    343c:	c2 2e       	mov	r12, r18
    343e:	e1 2c       	mov	r14, r1
    3440:	00 e0       	ldi	r16, 0x00	; 0
    3442:	10 e0       	ldi	r17, 0x00	; 0
    3444:	98 01       	movw	r18, r16
    3446:	0e 94 c6 19 	call	0x338c	; 0x338c <_ZN7TwoWire11requestFromEhhmhh>
    344a:	1f 91       	pop	r17
    344c:	0f 91       	pop	r16
    344e:	ef 90       	pop	r14
    3450:	cf 90       	pop	r12
    3452:	08 95       	ret

00003454 <_ZN7TwoWire11requestFromEii>:
    3454:	21 e0       	ldi	r18, 0x01	; 1
    3456:	0c 94 1a 1a 	jmp	0x3434	; 0x3434 <_ZN7TwoWire11requestFromEhhh>

0000345a <_ZN7TwoWire15endTransmissionEv>:
    345a:	61 e0       	ldi	r22, 0x01	; 1
    345c:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <_ZN7TwoWire15endTransmissionEh>

00003460 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    3460:	86 e4       	ldi	r24, 0x46	; 70
    3462:	93 e0       	ldi	r25, 0x03	; 3
    3464:	0c 94 85 19 	jmp	0x330a	; 0x330a <_ZN7TwoWireC1Ev>

00003468 <_ZN13ExtendedTests18endExtendedGsmTestEv>:
void ExtendedTests::endExtendedGsmTest() {
	
#if IS_EXTENDED_GSM_TEST == true

	//Clear dynamic memory
	free(_mockData);
    3468:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    346c:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    3470:	0e 94 2c 24 	call	0x4858	; 0x4858 <free>
	
	//Do verification of data test (somehow?)
	
	
	RM_LOGLN(F("~~~~~~~~~~~~~~~ Extended GSM Test Complete~~~~~~~~~~~~~~~~"));
    3474:	6f e7       	ldi	r22, 0x7F	; 127
    3476:	77 e0       	ldi	r23, 0x07	; 7
    3478:	8e e9       	ldi	r24, 0x9E	; 158
    347a:	93 e0       	ldi	r25, 0x03	; 3
    347c:	0c 94 dd 1c 	jmp	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>

00003480 <_ZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManager>:
#else
	RM_LOGLN(F("*** FAIL EGT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}

void ExtendedTests::startExtendedGsmTest(Adafruit_FONA* fona, RmMemManager* mem) {
    3480:	cf 93       	push	r28
    3482:	df 93       	push	r29
    3484:	eb 01       	movw	r28, r22
	
#if IS_EXTENDED_GSM_TEST == true

    Serial.println(F("****"));
    3486:	6a e7       	ldi	r22, 0x7A	; 122
    3488:	77 e0       	ldi	r23, 0x07	; 7
    348a:	8e e9       	ldi	r24, 0x9E	; 158
    348c:	93 e0       	ldi	r25, 0x03	; 3
    348e:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	//Malloc as the data will be sent later on when gsm connection made
	_mockData = (SensorData*)malloc(sizeof(SensorData)*2);
    3492:	84 e1       	ldi	r24, 0x14	; 20
    3494:	90 e0       	ldi	r25, 0x00	; 0
    3496:	0e 94 94 23 	call	0x4728	; 0x4728 <malloc>
    349a:	fc 01       	movw	r30, r24
    349c:	90 93 9d 03 	sts	0x039D, r25	; 0x80039d <_mockData+0x1>
    34a0:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <_mockData>


//RMonV3 types/flags test

void writeMockSD(SensorData* iSd, uint8_t i){
	iSd->battVoltage = (i+1);
    34a4:	81 e0       	ldi	r24, 0x01	; 1
    34a6:	90 e0       	ldi	r25, 0x00	; 0
    34a8:	91 83       	std	Z+1, r25	; 0x01
    34aa:	80 83       	st	Z, r24
	iSd->current = (i+1)*10;
    34ac:	8a e0       	ldi	r24, 0x0A	; 10
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	95 83       	std	Z+5, r25	; 0x05
    34b2:	84 83       	std	Z+4, r24	; 0x04
	iSd->pVVoltage = (i+1)*100;
    34b4:	84 e6       	ldi	r24, 0x64	; 100
    34b6:	90 e0       	ldi	r25, 0x00	; 0
    34b8:	93 83       	std	Z+3, r25	; 0x03
    34ba:	82 83       	std	Z+2, r24	; 0x02
	iSd->temperature = (i+1)+50;
    34bc:	83 e3       	ldi	r24, 0x33	; 51
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	97 83       	std	Z+7, r25	; 0x07
    34c2:	86 83       	std	Z+6, r24	; 0x06
	iSd->errorChar = i%5==0?3:0;
    34c4:	83 e0       	ldi	r24, 0x03	; 3
    34c6:	80 87       	std	Z+8, r24	; 0x08


//RMonV3 types/flags test

void writeMockSD(SensorData* iSd, uint8_t i){
	iSd->battVoltage = (i+1);
    34c8:	82 e0       	ldi	r24, 0x02	; 2
    34ca:	90 e0       	ldi	r25, 0x00	; 0
    34cc:	93 87       	std	Z+11, r25	; 0x0b
    34ce:	82 87       	std	Z+10, r24	; 0x0a
	iSd->current = (i+1)*10;
    34d0:	84 e1       	ldi	r24, 0x14	; 20
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	97 87       	std	Z+15, r25	; 0x0f
    34d6:	86 87       	std	Z+14, r24	; 0x0e
	iSd->pVVoltage = (i+1)*100;
    34d8:	88 ec       	ldi	r24, 0xC8	; 200
    34da:	90 e0       	ldi	r25, 0x00	; 0
    34dc:	95 87       	std	Z+13, r25	; 0x0d
    34de:	84 87       	std	Z+12, r24	; 0x0c
	iSd->temperature = (i+1)+50;
    34e0:	84 e3       	ldi	r24, 0x34	; 52
    34e2:	90 e0       	ldi	r25, 0x00	; 0
    34e4:	91 8b       	std	Z+17, r25	; 0x11
    34e6:	80 8b       	std	Z+16, r24	; 0x10
	iSd->errorChar = i%5==0?3:0;
    34e8:	12 8a       	std	Z+18, r1	; 0x12
	//Malloc as the data will be sent later on when gsm connection made
	_mockData = (SensorData*)malloc(sizeof(SensorData)*2);
	writeMockSD(_mockData, 0);
	writeMockSD(_mockData+1, 1);
	
	Serial.println(F("2 Sensor-Datas going for transmission:"));
    34ea:	63 e5       	ldi	r22, 0x53	; 83
    34ec:	77 e0       	ldi	r23, 0x07	; 7
    34ee:	8e e9       	ldi	r24, 0x9E	; 158
    34f0:	93 e0       	ldi	r25, 0x03	; 3
    34f2:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print7printlnEPK19__FlashStringHelper>
	Helpers::printSensorData(_mockData);
    34f6:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    34fa:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    34fe:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <_ZN7Helpers15printSensorDataEP10SensorData>
	Helpers::printSensorData(_mockData+1);
    3502:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    3506:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    350a:	0a 96       	adiw	r24, 0x0a	; 10
    350c:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <_ZN7Helpers15printSensorDataEP10SensorData>
	
	mem->mockSensorData = _mockData;
    3510:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    3514:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    3518:	99 83       	std	Y+1, r25	; 0x01
    351a:	88 83       	st	Y, r24
	mem->numMockSensorData = 2;
    351c:	82 e0       	ldi	r24, 0x02	; 2
    351e:	8a 83       	std	Y+2, r24	; 0x02
	
#else
	RM_LOGLN(F("*** FAIL EGT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}
    3520:	df 91       	pop	r29
    3522:	cf 91       	pop	r28
    3524:	08 95       	ret

00003526 <_ZN14HardwareSerial9availableEv>:
    3526:	fc 01       	movw	r30, r24
    3528:	91 8d       	ldd	r25, Z+25	; 0x19
    352a:	22 8d       	ldd	r18, Z+26	; 0x1a
    352c:	89 2f       	mov	r24, r25
    352e:	90 e0       	ldi	r25, 0x00	; 0
    3530:	80 5c       	subi	r24, 0xC0	; 192
    3532:	9f 4f       	sbci	r25, 0xFF	; 255
    3534:	82 1b       	sub	r24, r18
    3536:	91 09       	sbc	r25, r1
    3538:	8f 73       	andi	r24, 0x3F	; 63
    353a:	99 27       	eor	r25, r25
    353c:	08 95       	ret

0000353e <_ZN14HardwareSerial4peekEv>:
    353e:	fc 01       	movw	r30, r24
    3540:	91 8d       	ldd	r25, Z+25	; 0x19
    3542:	82 8d       	ldd	r24, Z+26	; 0x1a
    3544:	98 17       	cp	r25, r24
    3546:	31 f0       	breq	.+12     	; 0x3554 <_ZN14HardwareSerial4peekEv+0x16>
    3548:	82 8d       	ldd	r24, Z+26	; 0x1a
    354a:	e8 0f       	add	r30, r24
    354c:	f1 1d       	adc	r31, r1
    354e:	85 8d       	ldd	r24, Z+29	; 0x1d
    3550:	90 e0       	ldi	r25, 0x00	; 0
    3552:	08 95       	ret
    3554:	8f ef       	ldi	r24, 0xFF	; 255
    3556:	9f ef       	ldi	r25, 0xFF	; 255
    3558:	08 95       	ret

0000355a <_ZN14HardwareSerial4readEv>:
    355a:	fc 01       	movw	r30, r24
    355c:	91 8d       	ldd	r25, Z+25	; 0x19
    355e:	82 8d       	ldd	r24, Z+26	; 0x1a
    3560:	98 17       	cp	r25, r24
    3562:	61 f0       	breq	.+24     	; 0x357c <_ZN14HardwareSerial4readEv+0x22>
    3564:	82 8d       	ldd	r24, Z+26	; 0x1a
    3566:	df 01       	movw	r26, r30
    3568:	a8 0f       	add	r26, r24
    356a:	b1 1d       	adc	r27, r1
    356c:	5d 96       	adiw	r26, 0x1d	; 29
    356e:	8c 91       	ld	r24, X
    3570:	92 8d       	ldd	r25, Z+26	; 0x1a
    3572:	9f 5f       	subi	r25, 0xFF	; 255
    3574:	9f 73       	andi	r25, 0x3F	; 63
    3576:	92 8f       	std	Z+26, r25	; 0x1a
    3578:	90 e0       	ldi	r25, 0x00	; 0
    357a:	08 95       	ret
    357c:	8f ef       	ldi	r24, 0xFF	; 255
    357e:	9f ef       	ldi	r25, 0xFF	; 255
    3580:	08 95       	ret

00003582 <_Z14serialEventRunv>:
    3582:	86 e1       	ldi	r24, 0x16	; 22
    3584:	9c e1       	ldi	r25, 0x1C	; 28
    3586:	89 2b       	or	r24, r25
    3588:	49 f0       	breq	.+18     	; 0x359c <_Z14serialEventRunv+0x1a>
    358a:	80 e0       	ldi	r24, 0x00	; 0
    358c:	90 e0       	ldi	r25, 0x00	; 0
    358e:	89 2b       	or	r24, r25
    3590:	29 f0       	breq	.+10     	; 0x359c <_Z14serialEventRunv+0x1a>
    3592:	0e 94 16 1c 	call	0x382c	; 0x382c <_Z17Serial0_availablev>
    3596:	81 11       	cpse	r24, r1
    3598:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    359c:	08 95       	ret

0000359e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
    359e:	fc 01       	movw	r30, r24
    35a0:	84 8d       	ldd	r24, Z+28	; 0x1c
    35a2:	df 01       	movw	r26, r30
    35a4:	a8 0f       	add	r26, r24
    35a6:	b1 1d       	adc	r27, r1
    35a8:	a3 5a       	subi	r26, 0xA3	; 163
    35aa:	bf 4f       	sbci	r27, 0xFF	; 255
    35ac:	2c 91       	ld	r18, X
    35ae:	84 8d       	ldd	r24, Z+28	; 0x1c
    35b0:	90 e0       	ldi	r25, 0x00	; 0
    35b2:	01 96       	adiw	r24, 0x01	; 1
    35b4:	8f 73       	andi	r24, 0x3F	; 63
    35b6:	99 27       	eor	r25, r25
    35b8:	84 8f       	std	Z+28, r24	; 0x1c
    35ba:	a6 89       	ldd	r26, Z+22	; 0x16
    35bc:	b7 89       	ldd	r27, Z+23	; 0x17
    35be:	2c 93       	st	X, r18
    35c0:	a0 89       	ldd	r26, Z+16	; 0x10
    35c2:	b1 89       	ldd	r27, Z+17	; 0x11
    35c4:	8c 91       	ld	r24, X
    35c6:	80 64       	ori	r24, 0x40	; 64
    35c8:	8c 93       	st	X, r24
    35ca:	93 8d       	ldd	r25, Z+27	; 0x1b
    35cc:	84 8d       	ldd	r24, Z+28	; 0x1c
    35ce:	98 13       	cpse	r25, r24
    35d0:	06 c0       	rjmp	.+12     	; 0x35de <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    35d2:	02 88       	ldd	r0, Z+18	; 0x12
    35d4:	f3 89       	ldd	r31, Z+19	; 0x13
    35d6:	e0 2d       	mov	r30, r0
    35d8:	80 81       	ld	r24, Z
    35da:	8f 7d       	andi	r24, 0xDF	; 223
    35dc:	80 83       	st	Z, r24
    35de:	08 95       	ret

000035e0 <_ZN14HardwareSerial5writeEh>:
    35e0:	ef 92       	push	r14
    35e2:	ff 92       	push	r15
    35e4:	0f 93       	push	r16
    35e6:	1f 93       	push	r17
    35e8:	cf 93       	push	r28
    35ea:	df 93       	push	r29
    35ec:	ec 01       	movw	r28, r24
    35ee:	81 e0       	ldi	r24, 0x01	; 1
    35f0:	88 8f       	std	Y+24, r24	; 0x18
    35f2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    35f4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    35f6:	98 13       	cpse	r25, r24
    35f8:	05 c0       	rjmp	.+10     	; 0x3604 <_ZN14HardwareSerial5writeEh+0x24>
    35fa:	e8 89       	ldd	r30, Y+16	; 0x10
    35fc:	f9 89       	ldd	r31, Y+17	; 0x11
    35fe:	80 81       	ld	r24, Z
    3600:	85 fd       	sbrc	r24, 5
    3602:	24 c0       	rjmp	.+72     	; 0x364c <_ZN14HardwareSerial5writeEh+0x6c>
    3604:	f6 2e       	mov	r15, r22
    3606:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3608:	10 e0       	ldi	r17, 0x00	; 0
    360a:	0f 5f       	subi	r16, 0xFF	; 255
    360c:	1f 4f       	sbci	r17, 0xFF	; 255
    360e:	0f 73       	andi	r16, 0x3F	; 63
    3610:	11 27       	eor	r17, r17
    3612:	e0 2e       	mov	r14, r16
    3614:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3616:	e8 12       	cpse	r14, r24
    3618:	0c c0       	rjmp	.+24     	; 0x3632 <_ZN14HardwareSerial5writeEh+0x52>
    361a:	0f b6       	in	r0, 0x3f	; 63
    361c:	07 fc       	sbrc	r0, 7
    361e:	fa cf       	rjmp	.-12     	; 0x3614 <_ZN14HardwareSerial5writeEh+0x34>
    3620:	e8 89       	ldd	r30, Y+16	; 0x10
    3622:	f9 89       	ldd	r31, Y+17	; 0x11
    3624:	80 81       	ld	r24, Z
    3626:	85 ff       	sbrs	r24, 5
    3628:	f5 cf       	rjmp	.-22     	; 0x3614 <_ZN14HardwareSerial5writeEh+0x34>
    362a:	ce 01       	movw	r24, r28
    362c:	0e 94 cf 1a 	call	0x359e	; 0x359e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3630:	f1 cf       	rjmp	.-30     	; 0x3614 <_ZN14HardwareSerial5writeEh+0x34>
    3632:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3634:	fe 01       	movw	r30, r28
    3636:	e8 0f       	add	r30, r24
    3638:	f1 1d       	adc	r31, r1
    363a:	e3 5a       	subi	r30, 0xA3	; 163
    363c:	ff 4f       	sbci	r31, 0xFF	; 255
    363e:	f0 82       	st	Z, r15
    3640:	0b 8f       	std	Y+27, r16	; 0x1b
    3642:	ea 89       	ldd	r30, Y+18	; 0x12
    3644:	fb 89       	ldd	r31, Y+19	; 0x13
    3646:	80 81       	ld	r24, Z
    3648:	80 62       	ori	r24, 0x20	; 32
    364a:	07 c0       	rjmp	.+14     	; 0x365a <_ZN14HardwareSerial5writeEh+0x7a>
    364c:	ee 89       	ldd	r30, Y+22	; 0x16
    364e:	ff 89       	ldd	r31, Y+23	; 0x17
    3650:	60 83       	st	Z, r22
    3652:	e8 89       	ldd	r30, Y+16	; 0x10
    3654:	f9 89       	ldd	r31, Y+17	; 0x11
    3656:	80 81       	ld	r24, Z
    3658:	80 64       	ori	r24, 0x40	; 64
    365a:	80 83       	st	Z, r24
    365c:	81 e0       	ldi	r24, 0x01	; 1
    365e:	90 e0       	ldi	r25, 0x00	; 0
    3660:	df 91       	pop	r29
    3662:	cf 91       	pop	r28
    3664:	1f 91       	pop	r17
    3666:	0f 91       	pop	r16
    3668:	ff 90       	pop	r15
    366a:	ef 90       	pop	r14
    366c:	08 95       	ret

0000366e <_ZN14HardwareSerial5flushEv>:
    366e:	cf 93       	push	r28
    3670:	df 93       	push	r29
    3672:	ec 01       	movw	r28, r24
    3674:	88 8d       	ldd	r24, Y+24	; 0x18
    3676:	88 23       	and	r24, r24
    3678:	c9 f0       	breq	.+50     	; 0x36ac <_ZN14HardwareSerial5flushEv+0x3e>
    367a:	ea 89       	ldd	r30, Y+18	; 0x12
    367c:	fb 89       	ldd	r31, Y+19	; 0x13
    367e:	80 81       	ld	r24, Z
    3680:	85 fd       	sbrc	r24, 5
    3682:	05 c0       	rjmp	.+10     	; 0x368e <_ZN14HardwareSerial5flushEv+0x20>
    3684:	a8 89       	ldd	r26, Y+16	; 0x10
    3686:	b9 89       	ldd	r27, Y+17	; 0x11
    3688:	8c 91       	ld	r24, X
    368a:	86 fd       	sbrc	r24, 6
    368c:	0f c0       	rjmp	.+30     	; 0x36ac <_ZN14HardwareSerial5flushEv+0x3e>
    368e:	0f b6       	in	r0, 0x3f	; 63
    3690:	07 fc       	sbrc	r0, 7
    3692:	f5 cf       	rjmp	.-22     	; 0x367e <_ZN14HardwareSerial5flushEv+0x10>
    3694:	80 81       	ld	r24, Z
    3696:	85 ff       	sbrs	r24, 5
    3698:	f2 cf       	rjmp	.-28     	; 0x367e <_ZN14HardwareSerial5flushEv+0x10>
    369a:	a8 89       	ldd	r26, Y+16	; 0x10
    369c:	b9 89       	ldd	r27, Y+17	; 0x11
    369e:	8c 91       	ld	r24, X
    36a0:	85 ff       	sbrs	r24, 5
    36a2:	ed cf       	rjmp	.-38     	; 0x367e <_ZN14HardwareSerial5flushEv+0x10>
    36a4:	ce 01       	movw	r24, r28
    36a6:	0e 94 cf 1a 	call	0x359e	; 0x359e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    36aa:	e7 cf       	rjmp	.-50     	; 0x367a <_ZN14HardwareSerial5flushEv+0xc>
    36ac:	df 91       	pop	r29
    36ae:	cf 91       	pop	r28
    36b0:	08 95       	ret

000036b2 <_ZN14HardwareSerial5beginEmh>:
    36b2:	cf 92       	push	r12
    36b4:	df 92       	push	r13
    36b6:	ef 92       	push	r14
    36b8:	ff 92       	push	r15
    36ba:	1f 93       	push	r17
    36bc:	cf 93       	push	r28
    36be:	df 93       	push	r29
    36c0:	ec 01       	movw	r28, r24
    36c2:	6a 01       	movw	r12, r20
    36c4:	7b 01       	movw	r14, r22
    36c6:	12 2f       	mov	r17, r18
    36c8:	e8 89       	ldd	r30, Y+16	; 0x10
    36ca:	f9 89       	ldd	r31, Y+17	; 0x11
    36cc:	82 e0       	ldi	r24, 0x02	; 2
    36ce:	80 83       	st	Z, r24
    36d0:	41 15       	cp	r20, r1
    36d2:	51 4e       	sbci	r21, 0xE1	; 225
    36d4:	61 05       	cpc	r22, r1
    36d6:	71 05       	cpc	r23, r1
    36d8:	b1 f0       	breq	.+44     	; 0x3706 <_ZN14HardwareSerial5beginEmh+0x54>
    36da:	60 e0       	ldi	r22, 0x00	; 0
    36dc:	79 e0       	ldi	r23, 0x09	; 9
    36de:	8d e3       	ldi	r24, 0x3D	; 61
    36e0:	90 e0       	ldi	r25, 0x00	; 0
    36e2:	a7 01       	movw	r20, r14
    36e4:	96 01       	movw	r18, r12
    36e6:	0e 94 4d 23 	call	0x469a	; 0x469a <__udivmodsi4>
    36ea:	da 01       	movw	r26, r20
    36ec:	c9 01       	movw	r24, r18
    36ee:	01 97       	sbiw	r24, 0x01	; 1
    36f0:	a1 09       	sbc	r26, r1
    36f2:	b1 09       	sbc	r27, r1
    36f4:	b6 95       	lsr	r27
    36f6:	a7 95       	ror	r26
    36f8:	97 95       	ror	r25
    36fa:	87 95       	ror	r24
    36fc:	9c 01       	movw	r18, r24
    36fe:	21 15       	cp	r18, r1
    3700:	80 e1       	ldi	r24, 0x10	; 16
    3702:	38 07       	cpc	r19, r24
    3704:	a8 f0       	brcs	.+42     	; 0x3730 <_ZN14HardwareSerial5beginEmh+0x7e>
    3706:	e8 89       	ldd	r30, Y+16	; 0x10
    3708:	f9 89       	ldd	r31, Y+17	; 0x11
    370a:	10 82       	st	Z, r1
    370c:	60 e8       	ldi	r22, 0x80	; 128
    370e:	74 e8       	ldi	r23, 0x84	; 132
    3710:	8e e1       	ldi	r24, 0x1E	; 30
    3712:	90 e0       	ldi	r25, 0x00	; 0
    3714:	a7 01       	movw	r20, r14
    3716:	96 01       	movw	r18, r12
    3718:	0e 94 4d 23 	call	0x469a	; 0x469a <__udivmodsi4>
    371c:	da 01       	movw	r26, r20
    371e:	c9 01       	movw	r24, r18
    3720:	01 97       	sbiw	r24, 0x01	; 1
    3722:	a1 09       	sbc	r26, r1
    3724:	b1 09       	sbc	r27, r1
    3726:	b6 95       	lsr	r27
    3728:	a7 95       	ror	r26
    372a:	97 95       	ror	r25
    372c:	87 95       	ror	r24
    372e:	9c 01       	movw	r18, r24
    3730:	ec 85       	ldd	r30, Y+12	; 0x0c
    3732:	fd 85       	ldd	r31, Y+13	; 0x0d
    3734:	30 83       	st	Z, r19
    3736:	ee 85       	ldd	r30, Y+14	; 0x0e
    3738:	ff 85       	ldd	r31, Y+15	; 0x0f
    373a:	20 83       	st	Z, r18
    373c:	18 8e       	std	Y+24, r1	; 0x18
    373e:	ec 89       	ldd	r30, Y+20	; 0x14
    3740:	fd 89       	ldd	r31, Y+21	; 0x15
    3742:	10 83       	st	Z, r17
    3744:	ea 89       	ldd	r30, Y+18	; 0x12
    3746:	fb 89       	ldd	r31, Y+19	; 0x13
    3748:	80 81       	ld	r24, Z
    374a:	80 61       	ori	r24, 0x10	; 16
    374c:	80 83       	st	Z, r24
    374e:	ea 89       	ldd	r30, Y+18	; 0x12
    3750:	fb 89       	ldd	r31, Y+19	; 0x13
    3752:	80 81       	ld	r24, Z
    3754:	88 60       	ori	r24, 0x08	; 8
    3756:	80 83       	st	Z, r24
    3758:	ea 89       	ldd	r30, Y+18	; 0x12
    375a:	fb 89       	ldd	r31, Y+19	; 0x13
    375c:	80 81       	ld	r24, Z
    375e:	80 68       	ori	r24, 0x80	; 128
    3760:	80 83       	st	Z, r24
    3762:	ea 89       	ldd	r30, Y+18	; 0x12
    3764:	fb 89       	ldd	r31, Y+19	; 0x13
    3766:	80 81       	ld	r24, Z
    3768:	8f 7d       	andi	r24, 0xDF	; 223
    376a:	80 83       	st	Z, r24
    376c:	df 91       	pop	r29
    376e:	cf 91       	pop	r28
    3770:	1f 91       	pop	r17
    3772:	ff 90       	pop	r15
    3774:	ef 90       	pop	r14
    3776:	df 90       	pop	r13
    3778:	cf 90       	pop	r12
    377a:	08 95       	ret

0000377c <__vector_18>:
    377c:	1f 92       	push	r1
    377e:	0f 92       	push	r0
    3780:	0f b6       	in	r0, 0x3f	; 63
    3782:	0f 92       	push	r0
    3784:	11 24       	eor	r1, r1
    3786:	2f 93       	push	r18
    3788:	8f 93       	push	r24
    378a:	9f 93       	push	r25
    378c:	ef 93       	push	r30
    378e:	ff 93       	push	r31
    3790:	e0 91 ae 03 	lds	r30, 0x03AE	; 0x8003ae <Serial+0x10>
    3794:	f0 91 af 03 	lds	r31, 0x03AF	; 0x8003af <Serial+0x11>
    3798:	80 81       	ld	r24, Z
    379a:	e0 91 b4 03 	lds	r30, 0x03B4	; 0x8003b4 <Serial+0x16>
    379e:	f0 91 b5 03 	lds	r31, 0x03B5	; 0x8003b5 <Serial+0x17>
    37a2:	82 fd       	sbrc	r24, 2
    37a4:	12 c0       	rjmp	.+36     	; 0x37ca <__vector_18+0x4e>
    37a6:	90 81       	ld	r25, Z
    37a8:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <Serial+0x19>
    37ac:	8f 5f       	subi	r24, 0xFF	; 255
    37ae:	8f 73       	andi	r24, 0x3F	; 63
    37b0:	20 91 b8 03 	lds	r18, 0x03B8	; 0x8003b8 <Serial+0x1a>
    37b4:	82 17       	cp	r24, r18
    37b6:	51 f0       	breq	.+20     	; 0x37cc <__vector_18+0x50>
    37b8:	e0 91 b7 03 	lds	r30, 0x03B7	; 0x8003b7 <Serial+0x19>
    37bc:	f0 e0       	ldi	r31, 0x00	; 0
    37be:	e2 56       	subi	r30, 0x62	; 98
    37c0:	fc 4f       	sbci	r31, 0xFC	; 252
    37c2:	95 8f       	std	Z+29, r25	; 0x1d
    37c4:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <Serial+0x19>
    37c8:	01 c0       	rjmp	.+2      	; 0x37cc <__vector_18+0x50>
    37ca:	80 81       	ld	r24, Z
    37cc:	ff 91       	pop	r31
    37ce:	ef 91       	pop	r30
    37d0:	9f 91       	pop	r25
    37d2:	8f 91       	pop	r24
    37d4:	2f 91       	pop	r18
    37d6:	0f 90       	pop	r0
    37d8:	0f be       	out	0x3f, r0	; 63
    37da:	0f 90       	pop	r0
    37dc:	1f 90       	pop	r1
    37de:	18 95       	reti

000037e0 <__vector_19>:
    37e0:	1f 92       	push	r1
    37e2:	0f 92       	push	r0
    37e4:	0f b6       	in	r0, 0x3f	; 63
    37e6:	0f 92       	push	r0
    37e8:	11 24       	eor	r1, r1
    37ea:	2f 93       	push	r18
    37ec:	3f 93       	push	r19
    37ee:	4f 93       	push	r20
    37f0:	5f 93       	push	r21
    37f2:	6f 93       	push	r22
    37f4:	7f 93       	push	r23
    37f6:	8f 93       	push	r24
    37f8:	9f 93       	push	r25
    37fa:	af 93       	push	r26
    37fc:	bf 93       	push	r27
    37fe:	ef 93       	push	r30
    3800:	ff 93       	push	r31
    3802:	8e e9       	ldi	r24, 0x9E	; 158
    3804:	93 e0       	ldi	r25, 0x03	; 3
    3806:	0e 94 cf 1a 	call	0x359e	; 0x359e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    380a:	ff 91       	pop	r31
    380c:	ef 91       	pop	r30
    380e:	bf 91       	pop	r27
    3810:	af 91       	pop	r26
    3812:	9f 91       	pop	r25
    3814:	8f 91       	pop	r24
    3816:	7f 91       	pop	r23
    3818:	6f 91       	pop	r22
    381a:	5f 91       	pop	r21
    381c:	4f 91       	pop	r20
    381e:	3f 91       	pop	r19
    3820:	2f 91       	pop	r18
    3822:	0f 90       	pop	r0
    3824:	0f be       	out	0x3f, r0	; 63
    3826:	0f 90       	pop	r0
    3828:	1f 90       	pop	r1
    382a:	18 95       	reti

0000382c <_Z17Serial0_availablev>:
    382c:	8e e9       	ldi	r24, 0x9E	; 158
    382e:	93 e0       	ldi	r25, 0x03	; 3
    3830:	0e 94 93 1a 	call	0x3526	; 0x3526 <_ZN14HardwareSerial9availableEv>
    3834:	21 e0       	ldi	r18, 0x01	; 1
    3836:	89 2b       	or	r24, r25
    3838:	09 f4       	brne	.+2      	; 0x383c <_Z17Serial0_availablev+0x10>
    383a:	20 e0       	ldi	r18, 0x00	; 0
    383c:	82 2f       	mov	r24, r18
    383e:	08 95       	ret

00003840 <_GLOBAL__sub_I___vector_18>:
    3840:	ee e9       	ldi	r30, 0x9E	; 158
    3842:	f3 e0       	ldi	r31, 0x03	; 3
    3844:	13 82       	std	Z+3, r1	; 0x03
    3846:	12 82       	std	Z+2, r1	; 0x02
    3848:	88 ee       	ldi	r24, 0xE8	; 232
    384a:	93 e0       	ldi	r25, 0x03	; 3
    384c:	a0 e0       	ldi	r26, 0x00	; 0
    384e:	b0 e0       	ldi	r27, 0x00	; 0
    3850:	84 83       	std	Z+4, r24	; 0x04
    3852:	95 83       	std	Z+5, r25	; 0x05
    3854:	a6 83       	std	Z+6, r26	; 0x06
    3856:	b7 83       	std	Z+7, r27	; 0x07
    3858:	8e e6       	ldi	r24, 0x6E	; 110
    385a:	91 e0       	ldi	r25, 0x01	; 1
    385c:	91 83       	std	Z+1, r25	; 0x01
    385e:	80 83       	st	Z, r24
    3860:	85 ec       	ldi	r24, 0xC5	; 197
    3862:	90 e0       	ldi	r25, 0x00	; 0
    3864:	95 87       	std	Z+13, r25	; 0x0d
    3866:	84 87       	std	Z+12, r24	; 0x0c
    3868:	84 ec       	ldi	r24, 0xC4	; 196
    386a:	90 e0       	ldi	r25, 0x00	; 0
    386c:	97 87       	std	Z+15, r25	; 0x0f
    386e:	86 87       	std	Z+14, r24	; 0x0e
    3870:	80 ec       	ldi	r24, 0xC0	; 192
    3872:	90 e0       	ldi	r25, 0x00	; 0
    3874:	91 8b       	std	Z+17, r25	; 0x11
    3876:	80 8b       	std	Z+16, r24	; 0x10
    3878:	81 ec       	ldi	r24, 0xC1	; 193
    387a:	90 e0       	ldi	r25, 0x00	; 0
    387c:	93 8b       	std	Z+19, r25	; 0x13
    387e:	82 8b       	std	Z+18, r24	; 0x12
    3880:	82 ec       	ldi	r24, 0xC2	; 194
    3882:	90 e0       	ldi	r25, 0x00	; 0
    3884:	95 8b       	std	Z+21, r25	; 0x15
    3886:	84 8b       	std	Z+20, r24	; 0x14
    3888:	86 ec       	ldi	r24, 0xC6	; 198
    388a:	90 e0       	ldi	r25, 0x00	; 0
    388c:	97 8b       	std	Z+23, r25	; 0x17
    388e:	86 8b       	std	Z+22, r24	; 0x16
    3890:	11 8e       	std	Z+25, r1	; 0x19
    3892:	12 8e       	std	Z+26, r1	; 0x1a
    3894:	13 8e       	std	Z+27, r1	; 0x1b
    3896:	14 8e       	std	Z+28, r1	; 0x1c
    3898:	08 95       	ret

0000389a <initVariant>:
    389a:	08 95       	ret

0000389c <main>:
    389c:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <init>
    38a0:	0e 94 4d 1c 	call	0x389a	; 0x389a <initVariant>
    38a4:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <setup>
    38a8:	c1 ec       	ldi	r28, 0xC1	; 193
    38aa:	da e1       	ldi	r29, 0x1A	; 26
    38ac:	0e 94 4e 14 	call	0x289c	; 0x289c <loop>
    38b0:	20 97       	sbiw	r28, 0x00	; 0
    38b2:	e1 f3       	breq	.-8      	; 0x38ac <main+0x10>
    38b4:	0e 94 c1 1a 	call	0x3582	; 0x3582 <_Z14serialEventRunv>
    38b8:	f9 cf       	rjmp	.-14     	; 0x38ac <main+0x10>

000038ba <_Znwj>:
    38ba:	0c 94 94 23 	jmp	0x4728	; 0x4728 <malloc>

000038be <_ZN5Print5writeEPKhj>:
    38be:	cf 92       	push	r12
    38c0:	df 92       	push	r13
    38c2:	ef 92       	push	r14
    38c4:	ff 92       	push	r15
    38c6:	0f 93       	push	r16
    38c8:	1f 93       	push	r17
    38ca:	cf 93       	push	r28
    38cc:	df 93       	push	r29
    38ce:	6c 01       	movw	r12, r24
    38d0:	7a 01       	movw	r14, r20
    38d2:	8b 01       	movw	r16, r22
    38d4:	c0 e0       	ldi	r28, 0x00	; 0
    38d6:	d0 e0       	ldi	r29, 0x00	; 0
    38d8:	ce 15       	cp	r28, r14
    38da:	df 05       	cpc	r29, r15
    38dc:	81 f0       	breq	.+32     	; 0x38fe <_ZN5Print5writeEPKhj+0x40>
    38de:	d8 01       	movw	r26, r16
    38e0:	6d 91       	ld	r22, X+
    38e2:	8d 01       	movw	r16, r26
    38e4:	d6 01       	movw	r26, r12
    38e6:	ed 91       	ld	r30, X+
    38e8:	fc 91       	ld	r31, X
    38ea:	01 90       	ld	r0, Z+
    38ec:	f0 81       	ld	r31, Z
    38ee:	e0 2d       	mov	r30, r0
    38f0:	c6 01       	movw	r24, r12
    38f2:	09 95       	icall
    38f4:	89 2b       	or	r24, r25
    38f6:	11 f0       	breq	.+4      	; 0x38fc <_ZN5Print5writeEPKhj+0x3e>
    38f8:	21 96       	adiw	r28, 0x01	; 1
    38fa:	ee cf       	rjmp	.-36     	; 0x38d8 <_ZN5Print5writeEPKhj+0x1a>
    38fc:	7e 01       	movw	r14, r28
    38fe:	c7 01       	movw	r24, r14
    3900:	df 91       	pop	r29
    3902:	cf 91       	pop	r28
    3904:	1f 91       	pop	r17
    3906:	0f 91       	pop	r16
    3908:	ff 90       	pop	r15
    390a:	ef 90       	pop	r14
    390c:	df 90       	pop	r13
    390e:	cf 90       	pop	r12
    3910:	08 95       	ret

00003912 <_ZN5Print5writeEPKc>:
    3912:	61 15       	cp	r22, r1
    3914:	71 05       	cpc	r23, r1
    3916:	79 f0       	breq	.+30     	; 0x3936 <_ZN5Print5writeEPKc+0x24>
    3918:	fb 01       	movw	r30, r22
    391a:	01 90       	ld	r0, Z+
    391c:	00 20       	and	r0, r0
    391e:	e9 f7       	brne	.-6      	; 0x391a <_ZN5Print5writeEPKc+0x8>
    3920:	31 97       	sbiw	r30, 0x01	; 1
    3922:	af 01       	movw	r20, r30
    3924:	46 1b       	sub	r20, r22
    3926:	57 0b       	sbc	r21, r23
    3928:	dc 01       	movw	r26, r24
    392a:	ed 91       	ld	r30, X+
    392c:	fc 91       	ld	r31, X
    392e:	02 80       	ldd	r0, Z+2	; 0x02
    3930:	f3 81       	ldd	r31, Z+3	; 0x03
    3932:	e0 2d       	mov	r30, r0
    3934:	09 94       	ijmp
    3936:	80 e0       	ldi	r24, 0x00	; 0
    3938:	90 e0       	ldi	r25, 0x00	; 0
    393a:	08 95       	ret

0000393c <_ZN5Print5printEPK19__FlashStringHelper>:
    393c:	ef 92       	push	r14
    393e:	ff 92       	push	r15
    3940:	0f 93       	push	r16
    3942:	1f 93       	push	r17
    3944:	cf 93       	push	r28
    3946:	df 93       	push	r29
    3948:	8c 01       	movw	r16, r24
    394a:	7b 01       	movw	r14, r22
    394c:	c0 e0       	ldi	r28, 0x00	; 0
    394e:	d0 e0       	ldi	r29, 0x00	; 0
    3950:	f7 01       	movw	r30, r14
    3952:	ec 0f       	add	r30, r28
    3954:	fd 1f       	adc	r31, r29
    3956:	64 91       	lpm	r22, Z
    3958:	66 23       	and	r22, r22
    395a:	61 f0       	breq	.+24     	; 0x3974 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    395c:	d8 01       	movw	r26, r16
    395e:	ed 91       	ld	r30, X+
    3960:	fc 91       	ld	r31, X
    3962:	01 90       	ld	r0, Z+
    3964:	f0 81       	ld	r31, Z
    3966:	e0 2d       	mov	r30, r0
    3968:	c8 01       	movw	r24, r16
    396a:	09 95       	icall
    396c:	89 2b       	or	r24, r25
    396e:	11 f0       	breq	.+4      	; 0x3974 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    3970:	21 96       	adiw	r28, 0x01	; 1
    3972:	ee cf       	rjmp	.-36     	; 0x3950 <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    3974:	ce 01       	movw	r24, r28
    3976:	df 91       	pop	r29
    3978:	cf 91       	pop	r28
    397a:	1f 91       	pop	r17
    397c:	0f 91       	pop	r16
    397e:	ff 90       	pop	r15
    3980:	ef 90       	pop	r14
    3982:	08 95       	ret

00003984 <_ZN5Print5printERK6String>:
    3984:	db 01       	movw	r26, r22
    3986:	14 96       	adiw	r26, 0x04	; 4
    3988:	4d 91       	ld	r20, X+
    398a:	5c 91       	ld	r21, X
    398c:	15 97       	sbiw	r26, 0x05	; 5
    398e:	6d 91       	ld	r22, X+
    3990:	7c 91       	ld	r23, X
    3992:	dc 01       	movw	r26, r24
    3994:	ed 91       	ld	r30, X+
    3996:	fc 91       	ld	r31, X
    3998:	02 80       	ldd	r0, Z+2	; 0x02
    399a:	f3 81       	ldd	r31, Z+3	; 0x03
    399c:	e0 2d       	mov	r30, r0
    399e:	09 94       	ijmp

000039a0 <_ZN5Print5printEPKc>:
    39a0:	0c 94 89 1c 	jmp	0x3912	; 0x3912 <_ZN5Print5writeEPKc>

000039a4 <_ZN5Print5printEc>:
    39a4:	dc 01       	movw	r26, r24
    39a6:	ed 91       	ld	r30, X+
    39a8:	fc 91       	ld	r31, X
    39aa:	01 90       	ld	r0, Z+
    39ac:	f0 81       	ld	r31, Z
    39ae:	e0 2d       	mov	r30, r0
    39b0:	09 94       	ijmp

000039b2 <_ZN5Print7printlnEv>:
    39b2:	6a e7       	ldi	r22, 0x7A	; 122
    39b4:	71 e0       	ldi	r23, 0x01	; 1
    39b6:	0c 94 89 1c 	jmp	0x3912	; 0x3912 <_ZN5Print5writeEPKc>

000039ba <_ZN5Print7printlnEPK19__FlashStringHelper>:
    39ba:	0f 93       	push	r16
    39bc:	1f 93       	push	r17
    39be:	cf 93       	push	r28
    39c0:	df 93       	push	r29
    39c2:	ec 01       	movw	r28, r24
    39c4:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN5Print5printEPK19__FlashStringHelper>
    39c8:	8c 01       	movw	r16, r24
    39ca:	ce 01       	movw	r24, r28
    39cc:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    39d0:	80 0f       	add	r24, r16
    39d2:	91 1f       	adc	r25, r17
    39d4:	df 91       	pop	r29
    39d6:	cf 91       	pop	r28
    39d8:	1f 91       	pop	r17
    39da:	0f 91       	pop	r16
    39dc:	08 95       	ret

000039de <_ZN5Print7printlnEPKc>:
    39de:	0f 93       	push	r16
    39e0:	1f 93       	push	r17
    39e2:	cf 93       	push	r28
    39e4:	df 93       	push	r29
    39e6:	ec 01       	movw	r28, r24
    39e8:	0e 94 89 1c 	call	0x3912	; 0x3912 <_ZN5Print5writeEPKc>
    39ec:	8c 01       	movw	r16, r24
    39ee:	ce 01       	movw	r24, r28
    39f0:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    39f4:	80 0f       	add	r24, r16
    39f6:	91 1f       	adc	r25, r17
    39f8:	df 91       	pop	r29
    39fa:	cf 91       	pop	r28
    39fc:	1f 91       	pop	r17
    39fe:	0f 91       	pop	r16
    3a00:	08 95       	ret

00003a02 <_ZN5Print7printlnEc>:
    3a02:	0f 93       	push	r16
    3a04:	1f 93       	push	r17
    3a06:	cf 93       	push	r28
    3a08:	df 93       	push	r29
    3a0a:	ec 01       	movw	r28, r24
    3a0c:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <_ZN5Print5printEc>
    3a10:	8c 01       	movw	r16, r24
    3a12:	ce 01       	movw	r24, r28
    3a14:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    3a18:	80 0f       	add	r24, r16
    3a1a:	91 1f       	adc	r25, r17
    3a1c:	df 91       	pop	r29
    3a1e:	cf 91       	pop	r28
    3a20:	1f 91       	pop	r17
    3a22:	0f 91       	pop	r16
    3a24:	08 95       	ret

00003a26 <_ZN5Print11printNumberEmh>:
    3a26:	8f 92       	push	r8
    3a28:	9f 92       	push	r9
    3a2a:	af 92       	push	r10
    3a2c:	bf 92       	push	r11
    3a2e:	ef 92       	push	r14
    3a30:	ff 92       	push	r15
    3a32:	0f 93       	push	r16
    3a34:	1f 93       	push	r17
    3a36:	cf 93       	push	r28
    3a38:	df 93       	push	r29
    3a3a:	cd b7       	in	r28, 0x3d	; 61
    3a3c:	de b7       	in	r29, 0x3e	; 62
    3a3e:	a1 97       	sbiw	r28, 0x21	; 33
    3a40:	0f b6       	in	r0, 0x3f	; 63
    3a42:	f8 94       	cli
    3a44:	de bf       	out	0x3e, r29	; 62
    3a46:	0f be       	out	0x3f, r0	; 63
    3a48:	cd bf       	out	0x3d, r28	; 61
    3a4a:	7c 01       	movw	r14, r24
    3a4c:	fa 01       	movw	r30, r20
    3a4e:	cb 01       	movw	r24, r22
    3a50:	19 a2       	std	Y+33, r1	; 0x21
    3a52:	22 30       	cpi	r18, 0x02	; 2
    3a54:	08 f4       	brcc	.+2      	; 0x3a58 <_ZN5Print11printNumberEmh+0x32>
    3a56:	2a e0       	ldi	r18, 0x0A	; 10
    3a58:	8e 01       	movw	r16, r28
    3a5a:	0f 5d       	subi	r16, 0xDF	; 223
    3a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    3a5e:	82 2e       	mov	r8, r18
    3a60:	91 2c       	mov	r9, r1
    3a62:	a1 2c       	mov	r10, r1
    3a64:	b1 2c       	mov	r11, r1
    3a66:	bf 01       	movw	r22, r30
    3a68:	a5 01       	movw	r20, r10
    3a6a:	94 01       	movw	r18, r8
    3a6c:	0e 94 4d 23 	call	0x469a	; 0x469a <__udivmodsi4>
    3a70:	f9 01       	movw	r30, r18
    3a72:	ca 01       	movw	r24, r20
    3a74:	01 50       	subi	r16, 0x01	; 1
    3a76:	11 09       	sbc	r17, r1
    3a78:	6a 30       	cpi	r22, 0x0A	; 10
    3a7a:	10 f4       	brcc	.+4      	; 0x3a80 <_ZN5Print11printNumberEmh+0x5a>
    3a7c:	60 5d       	subi	r22, 0xD0	; 208
    3a7e:	01 c0       	rjmp	.+2      	; 0x3a82 <_ZN5Print11printNumberEmh+0x5c>
    3a80:	69 5c       	subi	r22, 0xC9	; 201
    3a82:	d8 01       	movw	r26, r16
    3a84:	6c 93       	st	X, r22
    3a86:	23 2b       	or	r18, r19
    3a88:	24 2b       	or	r18, r20
    3a8a:	25 2b       	or	r18, r21
    3a8c:	61 f7       	brne	.-40     	; 0x3a66 <_ZN5Print11printNumberEmh+0x40>
    3a8e:	b8 01       	movw	r22, r16
    3a90:	c7 01       	movw	r24, r14
    3a92:	0e 94 89 1c 	call	0x3912	; 0x3912 <_ZN5Print5writeEPKc>
    3a96:	a1 96       	adiw	r28, 0x21	; 33
    3a98:	0f b6       	in	r0, 0x3f	; 63
    3a9a:	f8 94       	cli
    3a9c:	de bf       	out	0x3e, r29	; 62
    3a9e:	0f be       	out	0x3f, r0	; 63
    3aa0:	cd bf       	out	0x3d, r28	; 61
    3aa2:	df 91       	pop	r29
    3aa4:	cf 91       	pop	r28
    3aa6:	1f 91       	pop	r17
    3aa8:	0f 91       	pop	r16
    3aaa:	ff 90       	pop	r15
    3aac:	ef 90       	pop	r14
    3aae:	bf 90       	pop	r11
    3ab0:	af 90       	pop	r10
    3ab2:	9f 90       	pop	r9
    3ab4:	8f 90       	pop	r8
    3ab6:	08 95       	ret

00003ab8 <_ZN5Print5printEmi>:
    3ab8:	21 15       	cp	r18, r1
    3aba:	31 05       	cpc	r19, r1
    3abc:	41 f4       	brne	.+16     	; 0x3ace <_ZN5Print5printEmi+0x16>
    3abe:	dc 01       	movw	r26, r24
    3ac0:	ed 91       	ld	r30, X+
    3ac2:	fc 91       	ld	r31, X
    3ac4:	01 90       	ld	r0, Z+
    3ac6:	f0 81       	ld	r31, Z
    3ac8:	e0 2d       	mov	r30, r0
    3aca:	64 2f       	mov	r22, r20
    3acc:	09 94       	ijmp
    3ace:	0c 94 13 1d 	jmp	0x3a26	; 0x3a26 <_ZN5Print11printNumberEmh>

00003ad2 <_ZN5Print5printEhi>:
    3ad2:	9a 01       	movw	r18, r20
    3ad4:	46 2f       	mov	r20, r22
    3ad6:	50 e0       	ldi	r21, 0x00	; 0
    3ad8:	60 e0       	ldi	r22, 0x00	; 0
    3ada:	70 e0       	ldi	r23, 0x00	; 0
    3adc:	0c 94 5c 1d 	jmp	0x3ab8	; 0x3ab8 <_ZN5Print5printEmi>

00003ae0 <_ZN5Print7printlnEhi>:
    3ae0:	0f 93       	push	r16
    3ae2:	1f 93       	push	r17
    3ae4:	cf 93       	push	r28
    3ae6:	df 93       	push	r29
    3ae8:	ec 01       	movw	r28, r24
    3aea:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <_ZN5Print5printEhi>
    3aee:	8c 01       	movw	r16, r24
    3af0:	ce 01       	movw	r24, r28
    3af2:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    3af6:	80 0f       	add	r24, r16
    3af8:	91 1f       	adc	r25, r17
    3afa:	df 91       	pop	r29
    3afc:	cf 91       	pop	r28
    3afe:	1f 91       	pop	r17
    3b00:	0f 91       	pop	r16
    3b02:	08 95       	ret

00003b04 <_ZN5Print5printEji>:
    3b04:	9a 01       	movw	r18, r20
    3b06:	ab 01       	movw	r20, r22
    3b08:	60 e0       	ldi	r22, 0x00	; 0
    3b0a:	70 e0       	ldi	r23, 0x00	; 0
    3b0c:	0c 94 5c 1d 	jmp	0x3ab8	; 0x3ab8 <_ZN5Print5printEmi>

00003b10 <_ZN5Print7printlnEji>:
    3b10:	0f 93       	push	r16
    3b12:	1f 93       	push	r17
    3b14:	cf 93       	push	r28
    3b16:	df 93       	push	r29
    3b18:	ec 01       	movw	r28, r24
    3b1a:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN5Print5printEji>
    3b1e:	8c 01       	movw	r16, r24
    3b20:	ce 01       	movw	r24, r28
    3b22:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    3b26:	80 0f       	add	r24, r16
    3b28:	91 1f       	adc	r25, r17
    3b2a:	df 91       	pop	r29
    3b2c:	cf 91       	pop	r28
    3b2e:	1f 91       	pop	r17
    3b30:	0f 91       	pop	r16
    3b32:	08 95       	ret

00003b34 <_ZN5Print7printlnEmi>:
    3b34:	0f 93       	push	r16
    3b36:	1f 93       	push	r17
    3b38:	cf 93       	push	r28
    3b3a:	df 93       	push	r29
    3b3c:	ec 01       	movw	r28, r24
    3b3e:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <_ZN5Print5printEmi>
    3b42:	8c 01       	movw	r16, r24
    3b44:	ce 01       	movw	r24, r28
    3b46:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    3b4a:	80 0f       	add	r24, r16
    3b4c:	91 1f       	adc	r25, r17
    3b4e:	df 91       	pop	r29
    3b50:	cf 91       	pop	r28
    3b52:	1f 91       	pop	r17
    3b54:	0f 91       	pop	r16
    3b56:	08 95       	ret

00003b58 <_ZN5Print5printEli>:
    3b58:	cf 92       	push	r12
    3b5a:	df 92       	push	r13
    3b5c:	ef 92       	push	r14
    3b5e:	ff 92       	push	r15
    3b60:	0f 93       	push	r16
    3b62:	1f 93       	push	r17
    3b64:	cf 93       	push	r28
    3b66:	df 93       	push	r29
    3b68:	21 15       	cp	r18, r1
    3b6a:	31 05       	cpc	r19, r1
    3b6c:	81 f4       	brne	.+32     	; 0x3b8e <_ZN5Print5printEli+0x36>
    3b6e:	dc 01       	movw	r26, r24
    3b70:	ed 91       	ld	r30, X+
    3b72:	fc 91       	ld	r31, X
    3b74:	01 90       	ld	r0, Z+
    3b76:	f0 81       	ld	r31, Z
    3b78:	e0 2d       	mov	r30, r0
    3b7a:	64 2f       	mov	r22, r20
    3b7c:	df 91       	pop	r29
    3b7e:	cf 91       	pop	r28
    3b80:	1f 91       	pop	r17
    3b82:	0f 91       	pop	r16
    3b84:	ff 90       	pop	r15
    3b86:	ef 90       	pop	r14
    3b88:	df 90       	pop	r13
    3b8a:	cf 90       	pop	r12
    3b8c:	09 94       	ijmp
    3b8e:	2a 30       	cpi	r18, 0x0A	; 10
    3b90:	31 05       	cpc	r19, r1
    3b92:	01 f5       	brne	.+64     	; 0x3bd4 <_ZN5Print5printEli+0x7c>
    3b94:	77 ff       	sbrs	r23, 7
    3b96:	1d c0       	rjmp	.+58     	; 0x3bd2 <_ZN5Print5printEli+0x7a>
    3b98:	6a 01       	movw	r12, r20
    3b9a:	7b 01       	movw	r14, r22
    3b9c:	ec 01       	movw	r28, r24
    3b9e:	6d e2       	ldi	r22, 0x2D	; 45
    3ba0:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <_ZN5Print5printEc>
    3ba4:	8c 01       	movw	r16, r24
    3ba6:	44 27       	eor	r20, r20
    3ba8:	55 27       	eor	r21, r21
    3baa:	ba 01       	movw	r22, r20
    3bac:	4c 19       	sub	r20, r12
    3bae:	5d 09       	sbc	r21, r13
    3bb0:	6e 09       	sbc	r22, r14
    3bb2:	7f 09       	sbc	r23, r15
    3bb4:	2a e0       	ldi	r18, 0x0A	; 10
    3bb6:	ce 01       	movw	r24, r28
    3bb8:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <_ZN5Print11printNumberEmh>
    3bbc:	80 0f       	add	r24, r16
    3bbe:	91 1f       	adc	r25, r17
    3bc0:	df 91       	pop	r29
    3bc2:	cf 91       	pop	r28
    3bc4:	1f 91       	pop	r17
    3bc6:	0f 91       	pop	r16
    3bc8:	ff 90       	pop	r15
    3bca:	ef 90       	pop	r14
    3bcc:	df 90       	pop	r13
    3bce:	cf 90       	pop	r12
    3bd0:	08 95       	ret
    3bd2:	2a e0       	ldi	r18, 0x0A	; 10
    3bd4:	df 91       	pop	r29
    3bd6:	cf 91       	pop	r28
    3bd8:	1f 91       	pop	r17
    3bda:	0f 91       	pop	r16
    3bdc:	ff 90       	pop	r15
    3bde:	ef 90       	pop	r14
    3be0:	df 90       	pop	r13
    3be2:	cf 90       	pop	r12
    3be4:	0c 94 13 1d 	jmp	0x3a26	; 0x3a26 <_ZN5Print11printNumberEmh>

00003be8 <_ZN5Print5printEii>:
    3be8:	9a 01       	movw	r18, r20
    3bea:	ab 01       	movw	r20, r22
    3bec:	77 0f       	add	r23, r23
    3bee:	66 0b       	sbc	r22, r22
    3bf0:	77 0b       	sbc	r23, r23
    3bf2:	0c 94 ac 1d 	jmp	0x3b58	; 0x3b58 <_ZN5Print5printEli>

00003bf6 <_ZN5Print7printlnEii>:
    3bf6:	0f 93       	push	r16
    3bf8:	1f 93       	push	r17
    3bfa:	cf 93       	push	r28
    3bfc:	df 93       	push	r29
    3bfe:	ec 01       	movw	r28, r24
    3c00:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <_ZN5Print5printEii>
    3c04:	8c 01       	movw	r16, r24
    3c06:	ce 01       	movw	r24, r28
    3c08:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    3c0c:	80 0f       	add	r24, r16
    3c0e:	91 1f       	adc	r25, r17
    3c10:	df 91       	pop	r29
    3c12:	cf 91       	pop	r28
    3c14:	1f 91       	pop	r17
    3c16:	0f 91       	pop	r16
    3c18:	08 95       	ret

00003c1a <_ZN5Print7printlnEli>:
    3c1a:	0f 93       	push	r16
    3c1c:	1f 93       	push	r17
    3c1e:	cf 93       	push	r28
    3c20:	df 93       	push	r29
    3c22:	ec 01       	movw	r28, r24
    3c24:	0e 94 ac 1d 	call	0x3b58	; 0x3b58 <_ZN5Print5printEli>
    3c28:	8c 01       	movw	r16, r24
    3c2a:	ce 01       	movw	r24, r28
    3c2c:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN5Print7printlnEv>
    3c30:	80 0f       	add	r24, r16
    3c32:	91 1f       	adc	r25, r17
    3c34:	df 91       	pop	r29
    3c36:	cf 91       	pop	r28
    3c38:	1f 91       	pop	r17
    3c3a:	0f 91       	pop	r16
    3c3c:	08 95       	ret

00003c3e <__vector_16>:
    3c3e:	1f 92       	push	r1
    3c40:	0f 92       	push	r0
    3c42:	0f b6       	in	r0, 0x3f	; 63
    3c44:	0f 92       	push	r0
    3c46:	11 24       	eor	r1, r1
    3c48:	2f 93       	push	r18
    3c4a:	3f 93       	push	r19
    3c4c:	8f 93       	push	r24
    3c4e:	9f 93       	push	r25
    3c50:	af 93       	push	r26
    3c52:	bf 93       	push	r27
    3c54:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <timer0_millis>
    3c58:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <timer0_millis+0x1>
    3c5c:	a0 91 3e 04 	lds	r26, 0x043E	; 0x80043e <timer0_millis+0x2>
    3c60:	b0 91 3f 04 	lds	r27, 0x043F	; 0x80043f <timer0_millis+0x3>
    3c64:	30 91 3b 04 	lds	r19, 0x043B	; 0x80043b <timer0_fract>
    3c68:	23 e0       	ldi	r18, 0x03	; 3
    3c6a:	23 0f       	add	r18, r19
    3c6c:	2d 37       	cpi	r18, 0x7D	; 125
    3c6e:	20 f4       	brcc	.+8      	; 0x3c78 <__vector_16+0x3a>
    3c70:	01 96       	adiw	r24, 0x01	; 1
    3c72:	a1 1d       	adc	r26, r1
    3c74:	b1 1d       	adc	r27, r1
    3c76:	05 c0       	rjmp	.+10     	; 0x3c82 <__vector_16+0x44>
    3c78:	26 e8       	ldi	r18, 0x86	; 134
    3c7a:	23 0f       	add	r18, r19
    3c7c:	02 96       	adiw	r24, 0x02	; 2
    3c7e:	a1 1d       	adc	r26, r1
    3c80:	b1 1d       	adc	r27, r1
    3c82:	20 93 3b 04 	sts	0x043B, r18	; 0x80043b <timer0_fract>
    3c86:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <timer0_millis>
    3c8a:	90 93 3d 04 	sts	0x043D, r25	; 0x80043d <timer0_millis+0x1>
    3c8e:	a0 93 3e 04 	sts	0x043E, r26	; 0x80043e <timer0_millis+0x2>
    3c92:	b0 93 3f 04 	sts	0x043F, r27	; 0x80043f <timer0_millis+0x3>
    3c96:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <timer0_overflow_count>
    3c9a:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <timer0_overflow_count+0x1>
    3c9e:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <timer0_overflow_count+0x2>
    3ca2:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <timer0_overflow_count+0x3>
    3ca6:	01 96       	adiw	r24, 0x01	; 1
    3ca8:	a1 1d       	adc	r26, r1
    3caa:	b1 1d       	adc	r27, r1
    3cac:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <timer0_overflow_count>
    3cb0:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <timer0_overflow_count+0x1>
    3cb4:	a0 93 42 04 	sts	0x0442, r26	; 0x800442 <timer0_overflow_count+0x2>
    3cb8:	b0 93 43 04 	sts	0x0443, r27	; 0x800443 <timer0_overflow_count+0x3>
    3cbc:	bf 91       	pop	r27
    3cbe:	af 91       	pop	r26
    3cc0:	9f 91       	pop	r25
    3cc2:	8f 91       	pop	r24
    3cc4:	3f 91       	pop	r19
    3cc6:	2f 91       	pop	r18
    3cc8:	0f 90       	pop	r0
    3cca:	0f be       	out	0x3f, r0	; 63
    3ccc:	0f 90       	pop	r0
    3cce:	1f 90       	pop	r1
    3cd0:	18 95       	reti

00003cd2 <micros>:
    3cd2:	3f b7       	in	r19, 0x3f	; 63
    3cd4:	f8 94       	cli
    3cd6:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <timer0_overflow_count>
    3cda:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <timer0_overflow_count+0x1>
    3cde:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <timer0_overflow_count+0x2>
    3ce2:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <timer0_overflow_count+0x3>
    3ce6:	26 b5       	in	r18, 0x26	; 38
    3ce8:	a8 9b       	sbis	0x15, 0	; 21
    3cea:	05 c0       	rjmp	.+10     	; 0x3cf6 <micros+0x24>
    3cec:	2f 3f       	cpi	r18, 0xFF	; 255
    3cee:	19 f0       	breq	.+6      	; 0x3cf6 <micros+0x24>
    3cf0:	01 96       	adiw	r24, 0x01	; 1
    3cf2:	a1 1d       	adc	r26, r1
    3cf4:	b1 1d       	adc	r27, r1
    3cf6:	3f bf       	out	0x3f, r19	; 63
    3cf8:	ba 2f       	mov	r27, r26
    3cfa:	a9 2f       	mov	r26, r25
    3cfc:	98 2f       	mov	r25, r24
    3cfe:	88 27       	eor	r24, r24
    3d00:	82 0f       	add	r24, r18
    3d02:	91 1d       	adc	r25, r1
    3d04:	a1 1d       	adc	r26, r1
    3d06:	b1 1d       	adc	r27, r1
    3d08:	bc 01       	movw	r22, r24
    3d0a:	cd 01       	movw	r24, r26
    3d0c:	42 e0       	ldi	r20, 0x02	; 2
    3d0e:	66 0f       	add	r22, r22
    3d10:	77 1f       	adc	r23, r23
    3d12:	88 1f       	adc	r24, r24
    3d14:	99 1f       	adc	r25, r25
    3d16:	4a 95       	dec	r20
    3d18:	d1 f7       	brne	.-12     	; 0x3d0e <micros+0x3c>
    3d1a:	08 95       	ret

00003d1c <delay>:
    3d1c:	8f 92       	push	r8
    3d1e:	9f 92       	push	r9
    3d20:	af 92       	push	r10
    3d22:	bf 92       	push	r11
    3d24:	cf 92       	push	r12
    3d26:	df 92       	push	r13
    3d28:	ef 92       	push	r14
    3d2a:	ff 92       	push	r15
    3d2c:	6b 01       	movw	r12, r22
    3d2e:	7c 01       	movw	r14, r24
    3d30:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <micros>
    3d34:	4b 01       	movw	r8, r22
    3d36:	5c 01       	movw	r10, r24
    3d38:	c1 14       	cp	r12, r1
    3d3a:	d1 04       	cpc	r13, r1
    3d3c:	e1 04       	cpc	r14, r1
    3d3e:	f1 04       	cpc	r15, r1
    3d40:	01 f1       	breq	.+64     	; 0x3d82 <delay+0x66>
    3d42:	0e 94 18 23 	call	0x4630	; 0x4630 <yield>
    3d46:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <micros>
    3d4a:	dc 01       	movw	r26, r24
    3d4c:	cb 01       	movw	r24, r22
    3d4e:	88 19       	sub	r24, r8
    3d50:	99 09       	sbc	r25, r9
    3d52:	aa 09       	sbc	r26, r10
    3d54:	bb 09       	sbc	r27, r11
    3d56:	88 3e       	cpi	r24, 0xE8	; 232
    3d58:	93 40       	sbci	r25, 0x03	; 3
    3d5a:	a1 05       	cpc	r26, r1
    3d5c:	b1 05       	cpc	r27, r1
    3d5e:	60 f3       	brcs	.-40     	; 0x3d38 <delay+0x1c>
    3d60:	21 e0       	ldi	r18, 0x01	; 1
    3d62:	c2 1a       	sub	r12, r18
    3d64:	d1 08       	sbc	r13, r1
    3d66:	e1 08       	sbc	r14, r1
    3d68:	f1 08       	sbc	r15, r1
    3d6a:	88 ee       	ldi	r24, 0xE8	; 232
    3d6c:	88 0e       	add	r8, r24
    3d6e:	83 e0       	ldi	r24, 0x03	; 3
    3d70:	98 1e       	adc	r9, r24
    3d72:	a1 1c       	adc	r10, r1
    3d74:	b1 1c       	adc	r11, r1
    3d76:	c1 14       	cp	r12, r1
    3d78:	d1 04       	cpc	r13, r1
    3d7a:	e1 04       	cpc	r14, r1
    3d7c:	f1 04       	cpc	r15, r1
    3d7e:	19 f7       	brne	.-58     	; 0x3d46 <delay+0x2a>
    3d80:	db cf       	rjmp	.-74     	; 0x3d38 <delay+0x1c>
    3d82:	ff 90       	pop	r15
    3d84:	ef 90       	pop	r14
    3d86:	df 90       	pop	r13
    3d88:	cf 90       	pop	r12
    3d8a:	bf 90       	pop	r11
    3d8c:	af 90       	pop	r10
    3d8e:	9f 90       	pop	r9
    3d90:	8f 90       	pop	r8
    3d92:	08 95       	ret

00003d94 <init>:
    3d94:	78 94       	sei
    3d96:	84 b5       	in	r24, 0x24	; 36
    3d98:	82 60       	ori	r24, 0x02	; 2
    3d9a:	84 bd       	out	0x24, r24	; 36
    3d9c:	84 b5       	in	r24, 0x24	; 36
    3d9e:	81 60       	ori	r24, 0x01	; 1
    3da0:	84 bd       	out	0x24, r24	; 36
    3da2:	85 b5       	in	r24, 0x25	; 37
    3da4:	82 60       	ori	r24, 0x02	; 2
    3da6:	85 bd       	out	0x25, r24	; 37
    3da8:	85 b5       	in	r24, 0x25	; 37
    3daa:	81 60       	ori	r24, 0x01	; 1
    3dac:	85 bd       	out	0x25, r24	; 37
    3dae:	ee e6       	ldi	r30, 0x6E	; 110
    3db0:	f0 e0       	ldi	r31, 0x00	; 0
    3db2:	80 81       	ld	r24, Z
    3db4:	81 60       	ori	r24, 0x01	; 1
    3db6:	80 83       	st	Z, r24
    3db8:	e1 e8       	ldi	r30, 0x81	; 129
    3dba:	f0 e0       	ldi	r31, 0x00	; 0
    3dbc:	10 82       	st	Z, r1
    3dbe:	80 81       	ld	r24, Z
    3dc0:	82 60       	ori	r24, 0x02	; 2
    3dc2:	80 83       	st	Z, r24
    3dc4:	80 81       	ld	r24, Z
    3dc6:	81 60       	ori	r24, 0x01	; 1
    3dc8:	80 83       	st	Z, r24
    3dca:	e0 e8       	ldi	r30, 0x80	; 128
    3dcc:	f0 e0       	ldi	r31, 0x00	; 0
    3dce:	80 81       	ld	r24, Z
    3dd0:	81 60       	ori	r24, 0x01	; 1
    3dd2:	80 83       	st	Z, r24
    3dd4:	e1 eb       	ldi	r30, 0xB1	; 177
    3dd6:	f0 e0       	ldi	r31, 0x00	; 0
    3dd8:	80 81       	ld	r24, Z
    3dda:	84 60       	ori	r24, 0x04	; 4
    3ddc:	80 83       	st	Z, r24
    3dde:	e0 eb       	ldi	r30, 0xB0	; 176
    3de0:	f0 e0       	ldi	r31, 0x00	; 0
    3de2:	80 81       	ld	r24, Z
    3de4:	81 60       	ori	r24, 0x01	; 1
    3de6:	80 83       	st	Z, r24
    3de8:	ea e7       	ldi	r30, 0x7A	; 122
    3dea:	f0 e0       	ldi	r31, 0x00	; 0
    3dec:	80 81       	ld	r24, Z
    3dee:	84 60       	ori	r24, 0x04	; 4
    3df0:	80 83       	st	Z, r24
    3df2:	80 81       	ld	r24, Z
    3df4:	82 60       	ori	r24, 0x02	; 2
    3df6:	80 83       	st	Z, r24
    3df8:	80 81       	ld	r24, Z
    3dfa:	81 60       	ori	r24, 0x01	; 1
    3dfc:	80 83       	st	Z, r24
    3dfe:	80 81       	ld	r24, Z
    3e00:	80 68       	ori	r24, 0x80	; 128
    3e02:	80 83       	st	Z, r24
    3e04:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3e08:	08 95       	ret

00003e0a <analogRead>:
    3e0a:	8e 30       	cpi	r24, 0x0E	; 14
    3e0c:	08 f0       	brcs	.+2      	; 0x3e10 <analogRead+0x6>
    3e0e:	8e 50       	subi	r24, 0x0E	; 14
    3e10:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <analog_reference>
    3e14:	90 e4       	ldi	r25, 0x40	; 64
    3e16:	29 9f       	mul	r18, r25
    3e18:	90 01       	movw	r18, r0
    3e1a:	11 24       	eor	r1, r1
    3e1c:	87 70       	andi	r24, 0x07	; 7
    3e1e:	82 2b       	or	r24, r18
    3e20:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3e24:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e28:	80 64       	ori	r24, 0x40	; 64
    3e2a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e2e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e32:	86 fd       	sbrc	r24, 6
    3e34:	fc cf       	rjmp	.-8      	; 0x3e2e <analogRead+0x24>
    3e36:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    3e3a:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    3e3e:	90 e0       	ldi	r25, 0x00	; 0
    3e40:	92 2b       	or	r25, r18
    3e42:	08 95       	ret

00003e44 <turnOffPWM>:
    3e44:	83 30       	cpi	r24, 0x03	; 3
    3e46:	81 f0       	breq	.+32     	; 0x3e68 <turnOffPWM+0x24>
    3e48:	28 f4       	brcc	.+10     	; 0x3e54 <turnOffPWM+0x10>
    3e4a:	81 30       	cpi	r24, 0x01	; 1
    3e4c:	99 f0       	breq	.+38     	; 0x3e74 <turnOffPWM+0x30>
    3e4e:	82 30       	cpi	r24, 0x02	; 2
    3e50:	a1 f0       	breq	.+40     	; 0x3e7a <turnOffPWM+0x36>
    3e52:	08 95       	ret
    3e54:	87 30       	cpi	r24, 0x07	; 7
    3e56:	a9 f0       	breq	.+42     	; 0x3e82 <turnOffPWM+0x3e>
    3e58:	88 30       	cpi	r24, 0x08	; 8
    3e5a:	b9 f0       	breq	.+46     	; 0x3e8a <turnOffPWM+0x46>
    3e5c:	84 30       	cpi	r24, 0x04	; 4
    3e5e:	d1 f4       	brne	.+52     	; 0x3e94 <turnOffPWM+0x50>
    3e60:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e64:	8f 7d       	andi	r24, 0xDF	; 223
    3e66:	03 c0       	rjmp	.+6      	; 0x3e6e <turnOffPWM+0x2a>
    3e68:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e6c:	8f 77       	andi	r24, 0x7F	; 127
    3e6e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e72:	08 95       	ret
    3e74:	84 b5       	in	r24, 0x24	; 36
    3e76:	8f 77       	andi	r24, 0x7F	; 127
    3e78:	02 c0       	rjmp	.+4      	; 0x3e7e <turnOffPWM+0x3a>
    3e7a:	84 b5       	in	r24, 0x24	; 36
    3e7c:	8f 7d       	andi	r24, 0xDF	; 223
    3e7e:	84 bd       	out	0x24, r24	; 36
    3e80:	08 95       	ret
    3e82:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3e86:	8f 77       	andi	r24, 0x7F	; 127
    3e88:	03 c0       	rjmp	.+6      	; 0x3e90 <turnOffPWM+0x4c>
    3e8a:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3e8e:	8f 7d       	andi	r24, 0xDF	; 223
    3e90:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3e94:	08 95       	ret

00003e96 <pinMode>:
    3e96:	cf 93       	push	r28
    3e98:	df 93       	push	r29
    3e9a:	90 e0       	ldi	r25, 0x00	; 0
    3e9c:	fc 01       	movw	r30, r24
    3e9e:	e2 53       	subi	r30, 0x32	; 50
    3ea0:	f8 4f       	sbci	r31, 0xF8	; 248
    3ea2:	24 91       	lpm	r18, Z
    3ea4:	fc 01       	movw	r30, r24
    3ea6:	ee 51       	subi	r30, 0x1E	; 30
    3ea8:	f8 4f       	sbci	r31, 0xF8	; 248
    3eaa:	84 91       	lpm	r24, Z
    3eac:	88 23       	and	r24, r24
    3eae:	61 f1       	breq	.+88     	; 0x3f08 <pinMode+0x72>
    3eb0:	90 e0       	ldi	r25, 0x00	; 0
    3eb2:	88 0f       	add	r24, r24
    3eb4:	99 1f       	adc	r25, r25
    3eb6:	fc 01       	movw	r30, r24
    3eb8:	e6 5f       	subi	r30, 0xF6	; 246
    3eba:	f7 4f       	sbci	r31, 0xF7	; 247
    3ebc:	c5 91       	lpm	r28, Z+
    3ebe:	d4 91       	lpm	r29, Z
    3ec0:	fc 01       	movw	r30, r24
    3ec2:	e0 50       	subi	r30, 0x00	; 0
    3ec4:	f8 4f       	sbci	r31, 0xF8	; 248
    3ec6:	a5 91       	lpm	r26, Z+
    3ec8:	b4 91       	lpm	r27, Z
    3eca:	61 11       	cpse	r22, r1
    3ecc:	09 c0       	rjmp	.+18     	; 0x3ee0 <pinMode+0x4a>
    3ece:	9f b7       	in	r25, 0x3f	; 63
    3ed0:	f8 94       	cli
    3ed2:	88 81       	ld	r24, Y
    3ed4:	20 95       	com	r18
    3ed6:	82 23       	and	r24, r18
    3ed8:	88 83       	st	Y, r24
    3eda:	ec 91       	ld	r30, X
    3edc:	2e 23       	and	r18, r30
    3ede:	0b c0       	rjmp	.+22     	; 0x3ef6 <pinMode+0x60>
    3ee0:	62 30       	cpi	r22, 0x02	; 2
    3ee2:	61 f4       	brne	.+24     	; 0x3efc <pinMode+0x66>
    3ee4:	9f b7       	in	r25, 0x3f	; 63
    3ee6:	f8 94       	cli
    3ee8:	88 81       	ld	r24, Y
    3eea:	32 2f       	mov	r19, r18
    3eec:	30 95       	com	r19
    3eee:	83 23       	and	r24, r19
    3ef0:	88 83       	st	Y, r24
    3ef2:	ec 91       	ld	r30, X
    3ef4:	2e 2b       	or	r18, r30
    3ef6:	2c 93       	st	X, r18
    3ef8:	9f bf       	out	0x3f, r25	; 63
    3efa:	06 c0       	rjmp	.+12     	; 0x3f08 <pinMode+0x72>
    3efc:	8f b7       	in	r24, 0x3f	; 63
    3efe:	f8 94       	cli
    3f00:	e8 81       	ld	r30, Y
    3f02:	2e 2b       	or	r18, r30
    3f04:	28 83       	st	Y, r18
    3f06:	8f bf       	out	0x3f, r24	; 63
    3f08:	df 91       	pop	r29
    3f0a:	cf 91       	pop	r28
    3f0c:	08 95       	ret

00003f0e <digitalWrite>:
    3f0e:	1f 93       	push	r17
    3f10:	cf 93       	push	r28
    3f12:	df 93       	push	r29
    3f14:	28 2f       	mov	r18, r24
    3f16:	30 e0       	ldi	r19, 0x00	; 0
    3f18:	f9 01       	movw	r30, r18
    3f1a:	e6 54       	subi	r30, 0x46	; 70
    3f1c:	f8 4f       	sbci	r31, 0xF8	; 248
    3f1e:	84 91       	lpm	r24, Z
    3f20:	f9 01       	movw	r30, r18
    3f22:	e2 53       	subi	r30, 0x32	; 50
    3f24:	f8 4f       	sbci	r31, 0xF8	; 248
    3f26:	d4 91       	lpm	r29, Z
    3f28:	f9 01       	movw	r30, r18
    3f2a:	ee 51       	subi	r30, 0x1E	; 30
    3f2c:	f8 4f       	sbci	r31, 0xF8	; 248
    3f2e:	c4 91       	lpm	r28, Z
    3f30:	cc 23       	and	r28, r28
    3f32:	c1 f0       	breq	.+48     	; 0x3f64 <digitalWrite+0x56>
    3f34:	16 2f       	mov	r17, r22
    3f36:	81 11       	cpse	r24, r1
    3f38:	0e 94 22 1f 	call	0x3e44	; 0x3e44 <turnOffPWM>
    3f3c:	ec 2f       	mov	r30, r28
    3f3e:	f0 e0       	ldi	r31, 0x00	; 0
    3f40:	ee 0f       	add	r30, r30
    3f42:	ff 1f       	adc	r31, r31
    3f44:	e0 50       	subi	r30, 0x00	; 0
    3f46:	f8 4f       	sbci	r31, 0xF8	; 248
    3f48:	a5 91       	lpm	r26, Z+
    3f4a:	b4 91       	lpm	r27, Z
    3f4c:	9f b7       	in	r25, 0x3f	; 63
    3f4e:	f8 94       	cli
    3f50:	11 11       	cpse	r17, r1
    3f52:	04 c0       	rjmp	.+8      	; 0x3f5c <digitalWrite+0x4e>
    3f54:	8c 91       	ld	r24, X
    3f56:	d0 95       	com	r29
    3f58:	d8 23       	and	r29, r24
    3f5a:	02 c0       	rjmp	.+4      	; 0x3f60 <digitalWrite+0x52>
    3f5c:	ec 91       	ld	r30, X
    3f5e:	de 2b       	or	r29, r30
    3f60:	dc 93       	st	X, r29
    3f62:	9f bf       	out	0x3f, r25	; 63
    3f64:	df 91       	pop	r29
    3f66:	cf 91       	pop	r28
    3f68:	1f 91       	pop	r17
    3f6a:	08 95       	ret

00003f6c <_ZN6StringD1Ev>:
    3f6c:	fc 01       	movw	r30, r24
    3f6e:	80 81       	ld	r24, Z
    3f70:	91 81       	ldd	r25, Z+1	; 0x01
    3f72:	0c 94 2c 24 	jmp	0x4858	; 0x4858 <free>

00003f76 <_ZN6String10invalidateEv>:
    3f76:	cf 93       	push	r28
    3f78:	df 93       	push	r29
    3f7a:	ec 01       	movw	r28, r24
    3f7c:	88 81       	ld	r24, Y
    3f7e:	99 81       	ldd	r25, Y+1	; 0x01
    3f80:	00 97       	sbiw	r24, 0x00	; 0
    3f82:	11 f0       	breq	.+4      	; 0x3f88 <_ZN6String10invalidateEv+0x12>
    3f84:	0e 94 2c 24 	call	0x4858	; 0x4858 <free>
    3f88:	19 82       	std	Y+1, r1	; 0x01
    3f8a:	18 82       	st	Y, r1
    3f8c:	1d 82       	std	Y+5, r1	; 0x05
    3f8e:	1c 82       	std	Y+4, r1	; 0x04
    3f90:	1b 82       	std	Y+3, r1	; 0x03
    3f92:	1a 82       	std	Y+2, r1	; 0x02
    3f94:	df 91       	pop	r29
    3f96:	cf 91       	pop	r28
    3f98:	08 95       	ret

00003f9a <_ZN6String12changeBufferEj>:
    3f9a:	0f 93       	push	r16
    3f9c:	1f 93       	push	r17
    3f9e:	cf 93       	push	r28
    3fa0:	df 93       	push	r29
    3fa2:	ec 01       	movw	r28, r24
    3fa4:	8b 01       	movw	r16, r22
    3fa6:	6f 5f       	subi	r22, 0xFF	; 255
    3fa8:	7f 4f       	sbci	r23, 0xFF	; 255
    3faa:	88 81       	ld	r24, Y
    3fac:	99 81       	ldd	r25, Y+1	; 0x01
    3fae:	0e 94 b5 24 	call	0x496a	; 0x496a <realloc>
    3fb2:	00 97       	sbiw	r24, 0x00	; 0
    3fb4:	31 f0       	breq	.+12     	; 0x3fc2 <_ZN6String12changeBufferEj+0x28>
    3fb6:	99 83       	std	Y+1, r25	; 0x01
    3fb8:	88 83       	st	Y, r24
    3fba:	1b 83       	std	Y+3, r17	; 0x03
    3fbc:	0a 83       	std	Y+2, r16	; 0x02
    3fbe:	81 e0       	ldi	r24, 0x01	; 1
    3fc0:	01 c0       	rjmp	.+2      	; 0x3fc4 <_ZN6String12changeBufferEj+0x2a>
    3fc2:	80 e0       	ldi	r24, 0x00	; 0
    3fc4:	df 91       	pop	r29
    3fc6:	cf 91       	pop	r28
    3fc8:	1f 91       	pop	r17
    3fca:	0f 91       	pop	r16
    3fcc:	08 95       	ret

00003fce <_ZN6String7reserveEj>:
    3fce:	cf 93       	push	r28
    3fd0:	df 93       	push	r29
    3fd2:	ec 01       	movw	r28, r24
    3fd4:	88 81       	ld	r24, Y
    3fd6:	99 81       	ldd	r25, Y+1	; 0x01
    3fd8:	89 2b       	or	r24, r25
    3fda:	29 f0       	breq	.+10     	; 0x3fe6 <_ZN6String7reserveEj+0x18>
    3fdc:	8a 81       	ldd	r24, Y+2	; 0x02
    3fde:	9b 81       	ldd	r25, Y+3	; 0x03
    3fe0:	86 17       	cp	r24, r22
    3fe2:	97 07       	cpc	r25, r23
    3fe4:	60 f4       	brcc	.+24     	; 0x3ffe <_ZN6String7reserveEj+0x30>
    3fe6:	ce 01       	movw	r24, r28
    3fe8:	0e 94 cd 1f 	call	0x3f9a	; 0x3f9a <_ZN6String12changeBufferEj>
    3fec:	88 23       	and	r24, r24
    3fee:	41 f0       	breq	.+16     	; 0x4000 <_ZN6String7reserveEj+0x32>
    3ff0:	8c 81       	ldd	r24, Y+4	; 0x04
    3ff2:	9d 81       	ldd	r25, Y+5	; 0x05
    3ff4:	89 2b       	or	r24, r25
    3ff6:	19 f4       	brne	.+6      	; 0x3ffe <_ZN6String7reserveEj+0x30>
    3ff8:	e8 81       	ld	r30, Y
    3ffa:	f9 81       	ldd	r31, Y+1	; 0x01
    3ffc:	10 82       	st	Z, r1
    3ffe:	81 e0       	ldi	r24, 0x01	; 1
    4000:	df 91       	pop	r29
    4002:	cf 91       	pop	r28
    4004:	08 95       	ret

00004006 <_ZN6String4copyEPKcj>:
    4006:	ef 92       	push	r14
    4008:	ff 92       	push	r15
    400a:	0f 93       	push	r16
    400c:	1f 93       	push	r17
    400e:	cf 93       	push	r28
    4010:	df 93       	push	r29
    4012:	ec 01       	movw	r28, r24
    4014:	7b 01       	movw	r14, r22
    4016:	8a 01       	movw	r16, r20
    4018:	ba 01       	movw	r22, r20
    401a:	0e 94 e7 1f 	call	0x3fce	; 0x3fce <_ZN6String7reserveEj>
    401e:	81 11       	cpse	r24, r1
    4020:	04 c0       	rjmp	.+8      	; 0x402a <_ZN6String4copyEPKcj+0x24>
    4022:	ce 01       	movw	r24, r28
    4024:	0e 94 bb 1f 	call	0x3f76	; 0x3f76 <_ZN6String10invalidateEv>
    4028:	07 c0       	rjmp	.+14     	; 0x4038 <_ZN6String4copyEPKcj+0x32>
    402a:	1d 83       	std	Y+5, r17	; 0x05
    402c:	0c 83       	std	Y+4, r16	; 0x04
    402e:	b7 01       	movw	r22, r14
    4030:	88 81       	ld	r24, Y
    4032:	99 81       	ldd	r25, Y+1	; 0x01
    4034:	0e 94 d9 25 	call	0x4bb2	; 0x4bb2 <strcpy>
    4038:	ce 01       	movw	r24, r28
    403a:	df 91       	pop	r29
    403c:	cf 91       	pop	r28
    403e:	1f 91       	pop	r17
    4040:	0f 91       	pop	r16
    4042:	ff 90       	pop	r15
    4044:	ef 90       	pop	r14
    4046:	08 95       	ret

00004048 <_ZN6StringC1EPKc>:
    4048:	fc 01       	movw	r30, r24
    404a:	11 82       	std	Z+1, r1	; 0x01
    404c:	10 82       	st	Z, r1
    404e:	13 82       	std	Z+3, r1	; 0x03
    4050:	12 82       	std	Z+2, r1	; 0x02
    4052:	15 82       	std	Z+5, r1	; 0x05
    4054:	14 82       	std	Z+4, r1	; 0x04
    4056:	61 15       	cp	r22, r1
    4058:	71 05       	cpc	r23, r1
    405a:	51 f0       	breq	.+20     	; 0x4070 <_ZN6StringC1EPKc+0x28>
    405c:	fb 01       	movw	r30, r22
    405e:	01 90       	ld	r0, Z+
    4060:	00 20       	and	r0, r0
    4062:	e9 f7       	brne	.-6      	; 0x405e <_ZN6StringC1EPKc+0x16>
    4064:	31 97       	sbiw	r30, 0x01	; 1
    4066:	af 01       	movw	r20, r30
    4068:	46 1b       	sub	r20, r22
    406a:	57 0b       	sbc	r21, r23
    406c:	0c 94 03 20 	jmp	0x4006	; 0x4006 <_ZN6String4copyEPKcj>
    4070:	08 95       	ret

00004072 <_ZN6StringaSERKS_>:
    4072:	cf 93       	push	r28
    4074:	df 93       	push	r29
    4076:	ec 01       	movw	r28, r24
    4078:	fb 01       	movw	r30, r22
    407a:	86 17       	cp	r24, r22
    407c:	97 07       	cpc	r25, r23
    407e:	61 f0       	breq	.+24     	; 0x4098 <_ZN6StringaSERKS_+0x26>
    4080:	60 81       	ld	r22, Z
    4082:	71 81       	ldd	r23, Z+1	; 0x01
    4084:	61 15       	cp	r22, r1
    4086:	71 05       	cpc	r23, r1
    4088:	29 f0       	breq	.+10     	; 0x4094 <_ZN6StringaSERKS_+0x22>
    408a:	44 81       	ldd	r20, Z+4	; 0x04
    408c:	55 81       	ldd	r21, Z+5	; 0x05
    408e:	0e 94 03 20 	call	0x4006	; 0x4006 <_ZN6String4copyEPKcj>
    4092:	02 c0       	rjmp	.+4      	; 0x4098 <_ZN6StringaSERKS_+0x26>
    4094:	0e 94 bb 1f 	call	0x3f76	; 0x3f76 <_ZN6String10invalidateEv>
    4098:	ce 01       	movw	r24, r28
    409a:	df 91       	pop	r29
    409c:	cf 91       	pop	r28
    409e:	08 95       	ret

000040a0 <_ZN6StringC1ERKS_>:
    40a0:	fc 01       	movw	r30, r24
    40a2:	11 82       	std	Z+1, r1	; 0x01
    40a4:	10 82       	st	Z, r1
    40a6:	13 82       	std	Z+3, r1	; 0x03
    40a8:	12 82       	std	Z+2, r1	; 0x02
    40aa:	15 82       	std	Z+5, r1	; 0x05
    40ac:	14 82       	std	Z+4, r1	; 0x04
    40ae:	0c 94 39 20 	jmp	0x4072	; 0x4072 <_ZN6StringaSERKS_>

000040b2 <_ZN6String6concatEPKcj>:
    40b2:	ef 92       	push	r14
    40b4:	ff 92       	push	r15
    40b6:	0f 93       	push	r16
    40b8:	1f 93       	push	r17
    40ba:	cf 93       	push	r28
    40bc:	df 93       	push	r29
    40be:	61 15       	cp	r22, r1
    40c0:	71 05       	cpc	r23, r1
    40c2:	11 f4       	brne	.+4      	; 0x40c8 <_ZN6String6concatEPKcj+0x16>
    40c4:	80 e0       	ldi	r24, 0x00	; 0
    40c6:	1c c0       	rjmp	.+56     	; 0x4100 <_ZN6String6concatEPKcj+0x4e>
    40c8:	41 15       	cp	r20, r1
    40ca:	51 05       	cpc	r21, r1
    40cc:	c1 f0       	breq	.+48     	; 0x40fe <_ZN6String6concatEPKcj+0x4c>
    40ce:	7b 01       	movw	r14, r22
    40d0:	ec 01       	movw	r28, r24
    40d2:	8c 81       	ldd	r24, Y+4	; 0x04
    40d4:	9d 81       	ldd	r25, Y+5	; 0x05
    40d6:	8a 01       	movw	r16, r20
    40d8:	08 0f       	add	r16, r24
    40da:	19 1f       	adc	r17, r25
    40dc:	b8 01       	movw	r22, r16
    40de:	ce 01       	movw	r24, r28
    40e0:	0e 94 e7 1f 	call	0x3fce	; 0x3fce <_ZN6String7reserveEj>
    40e4:	88 23       	and	r24, r24
    40e6:	71 f3       	breq	.-36     	; 0x40c4 <_ZN6String6concatEPKcj+0x12>
    40e8:	28 81       	ld	r18, Y
    40ea:	39 81       	ldd	r19, Y+1	; 0x01
    40ec:	8c 81       	ldd	r24, Y+4	; 0x04
    40ee:	9d 81       	ldd	r25, Y+5	; 0x05
    40f0:	b7 01       	movw	r22, r14
    40f2:	82 0f       	add	r24, r18
    40f4:	93 1f       	adc	r25, r19
    40f6:	0e 94 d9 25 	call	0x4bb2	; 0x4bb2 <strcpy>
    40fa:	1d 83       	std	Y+5, r17	; 0x05
    40fc:	0c 83       	std	Y+4, r16	; 0x04
    40fe:	81 e0       	ldi	r24, 0x01	; 1
    4100:	df 91       	pop	r29
    4102:	cf 91       	pop	r28
    4104:	1f 91       	pop	r17
    4106:	0f 91       	pop	r16
    4108:	ff 90       	pop	r15
    410a:	ef 90       	pop	r14
    410c:	08 95       	ret

0000410e <_ZN6String6concatEh>:
    410e:	ef 92       	push	r14
    4110:	ff 92       	push	r15
    4112:	0f 93       	push	r16
    4114:	1f 93       	push	r17
    4116:	cf 93       	push	r28
    4118:	df 93       	push	r29
    411a:	00 d0       	rcall	.+0      	; 0x411c <_ZN6String6concatEh+0xe>
    411c:	00 d0       	rcall	.+0      	; 0x411e <_ZN6String6concatEh+0x10>
    411e:	cd b7       	in	r28, 0x3d	; 61
    4120:	de b7       	in	r29, 0x3e	; 62
    4122:	7c 01       	movw	r14, r24
    4124:	86 2f       	mov	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    4126:	4a e0       	ldi	r20, 0x0A	; 10
    4128:	8e 01       	movw	r16, r28
    412a:	0f 5f       	subi	r16, 0xFF	; 255
    412c:	1f 4f       	sbci	r17, 0xFF	; 255
    412e:	b8 01       	movw	r22, r16
    4130:	90 e0       	ldi	r25, 0x00	; 0
    4132:	0e 94 e0 25 	call	0x4bc0	; 0x4bc0 <__itoa_ncheck>
    4136:	f8 01       	movw	r30, r16
    4138:	01 90       	ld	r0, Z+
    413a:	00 20       	and	r0, r0
    413c:	e9 f7       	brne	.-6      	; 0x4138 <_ZN6String6concatEh+0x2a>
    413e:	31 97       	sbiw	r30, 0x01	; 1
    4140:	af 01       	movw	r20, r30
    4142:	40 1b       	sub	r20, r16
    4144:	51 0b       	sbc	r21, r17
    4146:	b8 01       	movw	r22, r16
    4148:	c7 01       	movw	r24, r14
    414a:	0e 94 59 20 	call	0x40b2	; 0x40b2 <_ZN6String6concatEPKcj>
    414e:	0f 90       	pop	r0
    4150:	0f 90       	pop	r0
    4152:	0f 90       	pop	r0
    4154:	0f 90       	pop	r0
    4156:	df 91       	pop	r29
    4158:	cf 91       	pop	r28
    415a:	1f 91       	pop	r17
    415c:	0f 91       	pop	r16
    415e:	ff 90       	pop	r15
    4160:	ef 90       	pop	r14
    4162:	08 95       	ret

00004164 <_ZN14SoftwareSerial4readEv>:
    4164:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4168:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    416c:	28 17       	cp	r18, r24
    416e:	39 07       	cpc	r19, r25
    4170:	b9 f4       	brne	.+46     	; 0x41a0 <_ZN14SoftwareSerial4readEv+0x3c>
    4172:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4176:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    417a:	98 17       	cp	r25, r24
    417c:	89 f0       	breq	.+34     	; 0x41a0 <_ZN14SoftwareSerial4readEv+0x3c>
    417e:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4182:	f0 e0       	ldi	r31, 0x00	; 0
    4184:	ea 5b       	subi	r30, 0xBA	; 186
    4186:	fb 4f       	sbci	r31, 0xFB	; 251
    4188:	80 81       	ld	r24, Z
    418a:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    418e:	30 e0       	ldi	r19, 0x00	; 0
    4190:	2f 5f       	subi	r18, 0xFF	; 255
    4192:	3f 4f       	sbci	r19, 0xFF	; 255
    4194:	2f 73       	andi	r18, 0x3F	; 63
    4196:	33 27       	eor	r19, r19
    4198:	20 93 44 04 	sts	0x0444, r18	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	08 95       	ret
    41a0:	8f ef       	ldi	r24, 0xFF	; 255
    41a2:	9f ef       	ldi	r25, 0xFF	; 255
    41a4:	08 95       	ret

000041a6 <_ZN14SoftwareSerial5writeEh>:
    41a6:	1f 93       	push	r17
    41a8:	cf 93       	push	r28
    41aa:	df 93       	push	r29
    41ac:	dc 01       	movw	r26, r24
    41ae:	5c 96       	adiw	r26, 0x1c	; 28
    41b0:	8d 91       	ld	r24, X+
    41b2:	9c 91       	ld	r25, X
    41b4:	5d 97       	sbiw	r26, 0x1d	; 29
    41b6:	00 97       	sbiw	r24, 0x00	; 0
    41b8:	39 f4       	brne	.+14     	; 0x41c8 <_ZN14SoftwareSerial5writeEh+0x22>
    41ba:	21 e0       	ldi	r18, 0x01	; 1
    41bc:	30 e0       	ldi	r19, 0x00	; 0
    41be:	13 96       	adiw	r26, 0x03	; 3
    41c0:	3c 93       	st	X, r19
    41c2:	2e 93       	st	-X, r18
    41c4:	12 97       	sbiw	r26, 0x02	; 2
    41c6:	3b c0       	rjmp	.+118    	; 0x423e <_ZN14SoftwareSerial5writeEh+0x98>
    41c8:	51 96       	adiw	r26, 0x11	; 17
    41ca:	ed 91       	ld	r30, X+
    41cc:	fc 91       	ld	r31, X
    41ce:	52 97       	sbiw	r26, 0x12	; 18
    41d0:	50 96       	adiw	r26, 0x10	; 16
    41d2:	2c 91       	ld	r18, X
    41d4:	50 97       	sbiw	r26, 0x10	; 16
    41d6:	32 2f       	mov	r19, r18
    41d8:	30 95       	com	r19
    41da:	1f b7       	in	r17, 0x3f	; 63
    41dc:	5e 96       	adiw	r26, 0x1e	; 30
    41de:	4c 91       	ld	r20, X
    41e0:	5e 97       	sbiw	r26, 0x1e	; 30
    41e2:	74 2f       	mov	r23, r20
    41e4:	72 70       	andi	r23, 0x02	; 2
    41e6:	41 fd       	sbrc	r20, 1
    41e8:	60 95       	com	r22
    41ea:	f8 94       	cli
    41ec:	40 81       	ld	r20, Z
    41ee:	77 23       	and	r23, r23
    41f0:	11 f0       	breq	.+4      	; 0x41f6 <_ZN14SoftwareSerial5writeEh+0x50>
    41f2:	42 2b       	or	r20, r18
    41f4:	01 c0       	rjmp	.+2      	; 0x41f8 <_ZN14SoftwareSerial5writeEh+0x52>
    41f6:	43 23       	and	r20, r19
    41f8:	40 83       	st	Z, r20
    41fa:	ec 01       	movw	r28, r24
    41fc:	21 97       	sbiw	r28, 0x01	; 1
    41fe:	f1 f7       	brne	.-4      	; 0x41fc <_ZN14SoftwareSerial5writeEh+0x56>
    4200:	48 e0       	ldi	r20, 0x08	; 8
    4202:	50 81       	ld	r21, Z
    4204:	60 ff       	sbrs	r22, 0
    4206:	02 c0       	rjmp	.+4      	; 0x420c <_ZN14SoftwareSerial5writeEh+0x66>
    4208:	52 2b       	or	r21, r18
    420a:	01 c0       	rjmp	.+2      	; 0x420e <_ZN14SoftwareSerial5writeEh+0x68>
    420c:	53 23       	and	r21, r19
    420e:	50 83       	st	Z, r21
    4210:	ec 01       	movw	r28, r24
    4212:	21 97       	sbiw	r28, 0x01	; 1
    4214:	f1 f7       	brne	.-4      	; 0x4212 <_ZN14SoftwareSerial5writeEh+0x6c>
    4216:	66 95       	lsr	r22
    4218:	41 50       	subi	r20, 0x01	; 1
    421a:	99 f7       	brne	.-26     	; 0x4202 <_ZN14SoftwareSerial5writeEh+0x5c>
    421c:	80 81       	ld	r24, Z
    421e:	77 23       	and	r23, r23
    4220:	19 f0       	breq	.+6      	; 0x4228 <_ZN14SoftwareSerial5writeEh+0x82>
    4222:	83 23       	and	r24, r19
    4224:	80 83       	st	Z, r24
    4226:	02 c0       	rjmp	.+4      	; 0x422c <_ZN14SoftwareSerial5writeEh+0x86>
    4228:	28 2b       	or	r18, r24
    422a:	20 83       	st	Z, r18
    422c:	1f bf       	out	0x3f, r17	; 63
    422e:	5c 96       	adiw	r26, 0x1c	; 28
    4230:	8d 91       	ld	r24, X+
    4232:	9c 91       	ld	r25, X
    4234:	5d 97       	sbiw	r26, 0x1d	; 29
    4236:	01 97       	sbiw	r24, 0x01	; 1
    4238:	f1 f7       	brne	.-4      	; 0x4236 <_ZN14SoftwareSerial5writeEh+0x90>
    423a:	81 e0       	ldi	r24, 0x01	; 1
    423c:	90 e0       	ldi	r25, 0x00	; 0
    423e:	df 91       	pop	r29
    4240:	cf 91       	pop	r28
    4242:	1f 91       	pop	r17
    4244:	08 95       	ret

00004246 <_ZN14SoftwareSerial5flushEv>:
    4246:	08 95       	ret

00004248 <_ZN14SoftwareSerial4peekEv>:
    4248:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    424c:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4250:	28 17       	cp	r18, r24
    4252:	39 07       	cpc	r19, r25
    4254:	71 f4       	brne	.+28     	; 0x4272 <_ZN14SoftwareSerial4peekEv+0x2a>
    4256:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    425a:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    425e:	98 17       	cp	r25, r24
    4260:	41 f0       	breq	.+16     	; 0x4272 <_ZN14SoftwareSerial4peekEv+0x2a>
    4262:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4266:	f0 e0       	ldi	r31, 0x00	; 0
    4268:	ea 5b       	subi	r30, 0xBA	; 186
    426a:	fb 4f       	sbci	r31, 0xFB	; 251
    426c:	80 81       	ld	r24, Z
    426e:	90 e0       	ldi	r25, 0x00	; 0
    4270:	08 95       	ret
    4272:	8f ef       	ldi	r24, 0xFF	; 255
    4274:	9f ef       	ldi	r25, 0xFF	; 255
    4276:	08 95       	ret

00004278 <_ZN14SoftwareSerial9availableEv>:
    4278:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    427c:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4280:	28 17       	cp	r18, r24
    4282:	39 07       	cpc	r19, r25
    4284:	71 f4       	brne	.+28     	; 0x42a2 <_ZN14SoftwareSerial9availableEv+0x2a>
    4286:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    428a:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    428e:	90 e0       	ldi	r25, 0x00	; 0
    4290:	80 5c       	subi	r24, 0xC0	; 192
    4292:	9f 4f       	sbci	r25, 0xFF	; 255
    4294:	82 1b       	sub	r24, r18
    4296:	91 09       	sbc	r25, r1
    4298:	60 e4       	ldi	r22, 0x40	; 64
    429a:	70 e0       	ldi	r23, 0x00	; 0
    429c:	0e 94 39 23 	call	0x4672	; 0x4672 <__divmodhi4>
    42a0:	08 95       	ret
    42a2:	80 e0       	ldi	r24, 0x00	; 0
    42a4:	90 e0       	ldi	r25, 0x00	; 0
    42a6:	08 95       	ret

000042a8 <_ZN14SoftwareSerial13stopListeningEv>:
    42a8:	e0 91 86 04 	lds	r30, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42ac:	f0 91 87 04 	lds	r31, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42b0:	e8 17       	cp	r30, r24
    42b2:	f9 07       	cpc	r31, r25
    42b4:	69 f4       	brne	.+26     	; 0x42d0 <_ZN14SoftwareSerial13stopListeningEv+0x28>
    42b6:	a3 89       	ldd	r26, Z+19	; 0x13
    42b8:	b4 89       	ldd	r27, Z+20	; 0x14
    42ba:	9c 91       	ld	r25, X
    42bc:	85 89       	ldd	r24, Z+21	; 0x15
    42be:	80 95       	com	r24
    42c0:	89 23       	and	r24, r25
    42c2:	8c 93       	st	X, r24
    42c4:	10 92 87 04 	sts	0x0487, r1	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42c8:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42cc:	81 e0       	ldi	r24, 0x01	; 1
    42ce:	08 95       	ret
    42d0:	80 e0       	ldi	r24, 0x00	; 0
    42d2:	08 95       	ret

000042d4 <_ZN14SoftwareSerial6listenEv>:
    42d4:	cf 93       	push	r28
    42d6:	df 93       	push	r29
    42d8:	ec 01       	movw	r28, r24
    42da:	8a 8d       	ldd	r24, Y+26	; 0x1a
    42dc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    42de:	89 2b       	or	r24, r25
    42e0:	f1 f0       	breq	.+60     	; 0x431e <_ZN14SoftwareSerial6listenEv+0x4a>
    42e2:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42e6:	90 91 87 04 	lds	r25, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42ea:	c8 17       	cp	r28, r24
    42ec:	d9 07       	cpc	r29, r25
    42ee:	b9 f0       	breq	.+46     	; 0x431e <_ZN14SoftwareSerial6listenEv+0x4a>
    42f0:	00 97       	sbiw	r24, 0x00	; 0
    42f2:	11 f0       	breq	.+4      	; 0x42f8 <_ZN14SoftwareSerial6listenEv+0x24>
    42f4:	0e 94 54 21 	call	0x42a8	; 0x42a8 <_ZN14SoftwareSerial13stopListeningEv>
    42f8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    42fa:	8e 7f       	andi	r24, 0xFE	; 254
    42fc:	8e 8f       	std	Y+30, r24	; 0x1e
    42fe:	10 92 45 04 	sts	0x0445, r1	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4302:	10 92 44 04 	sts	0x0444, r1	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4306:	d0 93 87 04 	sts	0x0487, r29	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    430a:	c0 93 86 04 	sts	0x0486, r28	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    430e:	eb 89       	ldd	r30, Y+19	; 0x13
    4310:	fc 89       	ldd	r31, Y+20	; 0x14
    4312:	90 81       	ld	r25, Z
    4314:	8d 89       	ldd	r24, Y+21	; 0x15
    4316:	89 2b       	or	r24, r25
    4318:	80 83       	st	Z, r24
    431a:	81 e0       	ldi	r24, 0x01	; 1
    431c:	01 c0       	rjmp	.+2      	; 0x4320 <_ZN14SoftwareSerial6listenEv+0x4c>
    431e:	80 e0       	ldi	r24, 0x00	; 0
    4320:	df 91       	pop	r29
    4322:	cf 91       	pop	r28
    4324:	08 95       	ret

00004326 <__vector_3>:
    4326:	1f 92       	push	r1
    4328:	0f 92       	push	r0
    432a:	0f b6       	in	r0, 0x3f	; 63
    432c:	0f 92       	push	r0
    432e:	11 24       	eor	r1, r1
    4330:	2f 93       	push	r18
    4332:	3f 93       	push	r19
    4334:	4f 93       	push	r20
    4336:	5f 93       	push	r21
    4338:	6f 93       	push	r22
    433a:	7f 93       	push	r23
    433c:	8f 93       	push	r24
    433e:	9f 93       	push	r25
    4340:	af 93       	push	r26
    4342:	bf 93       	push	r27
    4344:	ef 93       	push	r30
    4346:	ff 93       	push	r31
    4348:	e0 91 86 04 	lds	r30, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    434c:	f0 91 87 04 	lds	r31, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4350:	30 97       	sbiw	r30, 0x00	; 0
    4352:	09 f4       	brne	.+2      	; 0x4356 <__vector_3+0x30>
    4354:	51 c0       	rjmp	.+162    	; 0x43f8 <__vector_3+0xd2>
    4356:	96 8d       	ldd	r25, Z+30	; 0x1e
    4358:	a6 85       	ldd	r26, Z+14	; 0x0e
    435a:	b7 85       	ldd	r27, Z+15	; 0x0f
    435c:	85 85       	ldd	r24, Z+13	; 0x0d
    435e:	91 ff       	sbrs	r25, 1
    4360:	04 c0       	rjmp	.+8      	; 0x436a <__vector_3+0x44>
    4362:	9c 91       	ld	r25, X
    4364:	89 23       	and	r24, r25
    4366:	29 f4       	brne	.+10     	; 0x4372 <__vector_3+0x4c>
    4368:	47 c0       	rjmp	.+142    	; 0x43f8 <__vector_3+0xd2>
    436a:	9c 91       	ld	r25, X
    436c:	89 23       	and	r24, r25
    436e:	09 f0       	breq	.+2      	; 0x4372 <__vector_3+0x4c>
    4370:	43 c0       	rjmp	.+134    	; 0x43f8 <__vector_3+0xd2>
    4372:	a3 89       	ldd	r26, Z+19	; 0x13
    4374:	b4 89       	ldd	r27, Z+20	; 0x14
    4376:	9c 91       	ld	r25, X
    4378:	85 89       	ldd	r24, Z+21	; 0x15
    437a:	80 95       	com	r24
    437c:	89 23       	and	r24, r25
    437e:	8c 93       	st	X, r24
    4380:	86 89       	ldd	r24, Z+22	; 0x16
    4382:	97 89       	ldd	r25, Z+23	; 0x17
    4384:	01 97       	sbiw	r24, 0x01	; 1
    4386:	f1 f7       	brne	.-4      	; 0x4384 <__vector_3+0x5e>
    4388:	60 8d       	ldd	r22, Z+24	; 0x18
    438a:	71 8d       	ldd	r23, Z+25	; 0x19
    438c:	a6 85       	ldd	r26, Z+14	; 0x0e
    438e:	b7 85       	ldd	r27, Z+15	; 0x0f
    4390:	55 85       	ldd	r21, Z+13	; 0x0d
    4392:	38 e0       	ldi	r19, 0x08	; 8
    4394:	20 e0       	ldi	r18, 0x00	; 0
    4396:	cb 01       	movw	r24, r22
    4398:	01 97       	sbiw	r24, 0x01	; 1
    439a:	f1 f7       	brne	.-4      	; 0x4398 <__vector_3+0x72>
    439c:	82 2f       	mov	r24, r18
    439e:	90 e0       	ldi	r25, 0x00	; 0
    43a0:	95 95       	asr	r25
    43a2:	87 95       	ror	r24
    43a4:	28 2f       	mov	r18, r24
    43a6:	4c 91       	ld	r20, X
    43a8:	45 23       	and	r20, r21
    43aa:	09 f0       	breq	.+2      	; 0x43ae <__vector_3+0x88>
    43ac:	20 68       	ori	r18, 0x80	; 128
    43ae:	31 50       	subi	r19, 0x01	; 1
    43b0:	91 f7       	brne	.-28     	; 0x4396 <__vector_3+0x70>
    43b2:	86 8d       	ldd	r24, Z+30	; 0x1e
    43b4:	81 fd       	sbrc	r24, 1
    43b6:	20 95       	com	r18
    43b8:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    43bc:	90 e0       	ldi	r25, 0x00	; 0
    43be:	01 96       	adiw	r24, 0x01	; 1
    43c0:	8f 73       	andi	r24, 0x3F	; 63
    43c2:	99 27       	eor	r25, r25
    43c4:	30 91 44 04 	lds	r19, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    43c8:	38 17       	cp	r19, r24
    43ca:	49 f0       	breq	.+18     	; 0x43de <__vector_3+0xb8>
    43cc:	a0 91 45 04 	lds	r26, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    43d0:	b0 e0       	ldi	r27, 0x00	; 0
    43d2:	aa 5b       	subi	r26, 0xBA	; 186
    43d4:	bb 4f       	sbci	r27, 0xFB	; 251
    43d6:	2c 93       	st	X, r18
    43d8:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    43dc:	03 c0       	rjmp	.+6      	; 0x43e4 <__vector_3+0xbe>
    43de:	86 8d       	ldd	r24, Z+30	; 0x1e
    43e0:	81 60       	ori	r24, 0x01	; 1
    43e2:	86 8f       	std	Z+30, r24	; 0x1e
    43e4:	82 8d       	ldd	r24, Z+26	; 0x1a
    43e6:	93 8d       	ldd	r25, Z+27	; 0x1b
    43e8:	01 97       	sbiw	r24, 0x01	; 1
    43ea:	f1 f7       	brne	.-4      	; 0x43e8 <__vector_3+0xc2>
    43ec:	a3 89       	ldd	r26, Z+19	; 0x13
    43ee:	b4 89       	ldd	r27, Z+20	; 0x14
    43f0:	9c 91       	ld	r25, X
    43f2:	85 89       	ldd	r24, Z+21	; 0x15
    43f4:	89 2b       	or	r24, r25
    43f6:	8c 93       	st	X, r24
    43f8:	ff 91       	pop	r31
    43fa:	ef 91       	pop	r30
    43fc:	bf 91       	pop	r27
    43fe:	af 91       	pop	r26
    4400:	9f 91       	pop	r25
    4402:	8f 91       	pop	r24
    4404:	7f 91       	pop	r23
    4406:	6f 91       	pop	r22
    4408:	5f 91       	pop	r21
    440a:	4f 91       	pop	r20
    440c:	3f 91       	pop	r19
    440e:	2f 91       	pop	r18
    4410:	0f 90       	pop	r0
    4412:	0f be       	out	0x3f, r0	; 63
    4414:	0f 90       	pop	r0
    4416:	1f 90       	pop	r1
    4418:	18 95       	reti

0000441a <_ZN14SoftwareSerial5setTXEh>:
    441a:	1f 93       	push	r17
    441c:	cf 93       	push	r28
    441e:	df 93       	push	r29
    4420:	ec 01       	movw	r28, r24
    4422:	16 2f       	mov	r17, r22
    4424:	6e 8d       	ldd	r22, Y+30	; 0x1e
    4426:	66 95       	lsr	r22
    4428:	61 70       	andi	r22, 0x01	; 1
    442a:	81 e0       	ldi	r24, 0x01	; 1
    442c:	68 27       	eor	r22, r24
    442e:	81 2f       	mov	r24, r17
    4430:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
    4434:	61 e0       	ldi	r22, 0x01	; 1
    4436:	81 2f       	mov	r24, r17
    4438:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <pinMode>
    443c:	81 2f       	mov	r24, r17
    443e:	90 e0       	ldi	r25, 0x00	; 0
    4440:	fc 01       	movw	r30, r24
    4442:	e2 53       	subi	r30, 0x32	; 50
    4444:	f8 4f       	sbci	r31, 0xF8	; 248
    4446:	e4 91       	lpm	r30, Z
    4448:	e8 8b       	std	Y+16, r30	; 0x10
    444a:	fc 01       	movw	r30, r24
    444c:	ee 51       	subi	r30, 0x1E	; 30
    444e:	f8 4f       	sbci	r31, 0xF8	; 248
    4450:	e4 91       	lpm	r30, Z
    4452:	f0 e0       	ldi	r31, 0x00	; 0
    4454:	ee 0f       	add	r30, r30
    4456:	ff 1f       	adc	r31, r31
    4458:	e0 50       	subi	r30, 0x00	; 0
    445a:	f8 4f       	sbci	r31, 0xF8	; 248
    445c:	85 91       	lpm	r24, Z+
    445e:	94 91       	lpm	r25, Z
    4460:	9a 8b       	std	Y+18, r25	; 0x12
    4462:	89 8b       	std	Y+17, r24	; 0x11
    4464:	df 91       	pop	r29
    4466:	cf 91       	pop	r28
    4468:	1f 91       	pop	r17
    446a:	08 95       	ret

0000446c <_ZN14SoftwareSerial5setRXEh>:
    446c:	1f 93       	push	r17
    446e:	cf 93       	push	r28
    4470:	df 93       	push	r29
    4472:	ec 01       	movw	r28, r24
    4474:	16 2f       	mov	r17, r22
    4476:	60 e0       	ldi	r22, 0x00	; 0
    4478:	81 2f       	mov	r24, r17
    447a:	0e 94 4b 1f 	call	0x3e96	; 0x3e96 <pinMode>
    447e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4480:	81 fd       	sbrc	r24, 1
    4482:	04 c0       	rjmp	.+8      	; 0x448c <_ZN14SoftwareSerial5setRXEh+0x20>
    4484:	61 e0       	ldi	r22, 0x01	; 1
    4486:	81 2f       	mov	r24, r17
    4488:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <digitalWrite>
    448c:	1c 87       	std	Y+12, r17	; 0x0c
    448e:	81 2f       	mov	r24, r17
    4490:	90 e0       	ldi	r25, 0x00	; 0
    4492:	fc 01       	movw	r30, r24
    4494:	e2 53       	subi	r30, 0x32	; 50
    4496:	f8 4f       	sbci	r31, 0xF8	; 248
    4498:	e4 91       	lpm	r30, Z
    449a:	ed 87       	std	Y+13, r30	; 0x0d
    449c:	fc 01       	movw	r30, r24
    449e:	ee 51       	subi	r30, 0x1E	; 30
    44a0:	f8 4f       	sbci	r31, 0xF8	; 248
    44a2:	e4 91       	lpm	r30, Z
    44a4:	f0 e0       	ldi	r31, 0x00	; 0
    44a6:	ee 0f       	add	r30, r30
    44a8:	ff 1f       	adc	r31, r31
    44aa:	ea 50       	subi	r30, 0x0A	; 10
    44ac:	f8 4f       	sbci	r31, 0xF8	; 248
    44ae:	85 91       	lpm	r24, Z+
    44b0:	94 91       	lpm	r25, Z
    44b2:	9f 87       	std	Y+15, r25	; 0x0f
    44b4:	8e 87       	std	Y+14, r24	; 0x0e
    44b6:	df 91       	pop	r29
    44b8:	cf 91       	pop	r28
    44ba:	1f 91       	pop	r17
    44bc:	08 95       	ret

000044be <_ZN14SoftwareSerialC1Ehhb>:
    44be:	1f 93       	push	r17
    44c0:	cf 93       	push	r28
    44c2:	df 93       	push	r29
    44c4:	ec 01       	movw	r28, r24
    44c6:	16 2f       	mov	r17, r22
    44c8:	1b 82       	std	Y+3, r1	; 0x03
    44ca:	1a 82       	std	Y+2, r1	; 0x02
    44cc:	88 ee       	ldi	r24, 0xE8	; 232
    44ce:	93 e0       	ldi	r25, 0x03	; 3
    44d0:	a0 e0       	ldi	r26, 0x00	; 0
    44d2:	b0 e0       	ldi	r27, 0x00	; 0
    44d4:	8c 83       	std	Y+4, r24	; 0x04
    44d6:	9d 83       	std	Y+5, r25	; 0x05
    44d8:	ae 83       	std	Y+6, r26	; 0x06
    44da:	bf 83       	std	Y+7, r27	; 0x07
    44dc:	8d e8       	ldi	r24, 0x8D	; 141
    44de:	91 e0       	ldi	r25, 0x01	; 1
    44e0:	99 83       	std	Y+1, r25	; 0x01
    44e2:	88 83       	st	Y, r24
    44e4:	1f 8a       	std	Y+23, r1	; 0x17
    44e6:	1e 8a       	std	Y+22, r1	; 0x16
    44e8:	19 8e       	std	Y+25, r1	; 0x19
    44ea:	18 8e       	std	Y+24, r1	; 0x18
    44ec:	1b 8e       	std	Y+27, r1	; 0x1b
    44ee:	1a 8e       	std	Y+26, r1	; 0x1a
    44f0:	1d 8e       	std	Y+29, r1	; 0x1d
    44f2:	1c 8e       	std	Y+28, r1	; 0x1c
    44f4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    44f6:	8e 7f       	andi	r24, 0xFE	; 254
    44f8:	20 fb       	bst	r18, 0
    44fa:	81 f9       	bld	r24, 1
    44fc:	8e 8f       	std	Y+30, r24	; 0x1e
    44fe:	64 2f       	mov	r22, r20
    4500:	ce 01       	movw	r24, r28
    4502:	0e 94 0d 22 	call	0x441a	; 0x441a <_ZN14SoftwareSerial5setTXEh>
    4506:	61 2f       	mov	r22, r17
    4508:	ce 01       	movw	r24, r28
    450a:	df 91       	pop	r29
    450c:	cf 91       	pop	r28
    450e:	1f 91       	pop	r17
    4510:	0c 94 36 22 	jmp	0x446c	; 0x446c <_ZN14SoftwareSerial5setRXEh>

00004514 <_ZN14SoftwareSerial5beginEl>:
    4514:	cf 93       	push	r28
    4516:	df 93       	push	r29
    4518:	ec 01       	movw	r28, r24
    451a:	9a 01       	movw	r18, r20
    451c:	ab 01       	movw	r20, r22
    451e:	1b 8e       	std	Y+27, r1	; 0x1b
    4520:	1a 8e       	std	Y+26, r1	; 0x1a
    4522:	19 8e       	std	Y+25, r1	; 0x19
    4524:	18 8e       	std	Y+24, r1	; 0x18
    4526:	1f 8a       	std	Y+23, r1	; 0x17
    4528:	1e 8a       	std	Y+22, r1	; 0x16
    452a:	60 e0       	ldi	r22, 0x00	; 0
    452c:	79 e0       	ldi	r23, 0x09	; 9
    452e:	8d e3       	ldi	r24, 0x3D	; 61
    4530:	90 e0       	ldi	r25, 0x00	; 0
    4532:	0e 94 6f 23 	call	0x46de	; 0x46de <__divmodsi4>
    4536:	f9 01       	movw	r30, r18
    4538:	24 30       	cpi	r18, 0x04	; 4
    453a:	31 05       	cpc	r19, r1
    453c:	18 f0       	brcs	.+6      	; 0x4544 <_ZN14SoftwareSerial5beginEl+0x30>
    453e:	c9 01       	movw	r24, r18
    4540:	03 97       	sbiw	r24, 0x03	; 3
    4542:	02 c0       	rjmp	.+4      	; 0x4548 <_ZN14SoftwareSerial5beginEl+0x34>
    4544:	81 e0       	ldi	r24, 0x01	; 1
    4546:	90 e0       	ldi	r25, 0x00	; 0
    4548:	9d 8f       	std	Y+29, r25	; 0x1d
    454a:	8c 8f       	std	Y+28, r24	; 0x1c
    454c:	6c 85       	ldd	r22, Y+12	; 0x0c
    454e:	66 31       	cpi	r22, 0x16	; 22
    4550:	08 f0       	brcs	.+2      	; 0x4554 <_ZN14SoftwareSerial5beginEl+0x40>
    4552:	69 c0       	rjmp	.+210    	; 0x4626 <_ZN14SoftwareSerial5beginEl+0x112>
    4554:	c9 01       	movw	r24, r18
    4556:	96 95       	lsr	r25
    4558:	87 95       	ror	r24
    455a:	84 31       	cpi	r24, 0x14	; 20
    455c:	91 05       	cpc	r25, r1
    455e:	10 f0       	brcs	.+4      	; 0x4564 <_ZN14SoftwareSerial5beginEl+0x50>
    4560:	43 97       	sbiw	r24, 0x13	; 19
    4562:	02 c0       	rjmp	.+4      	; 0x4568 <_ZN14SoftwareSerial5beginEl+0x54>
    4564:	81 e0       	ldi	r24, 0x01	; 1
    4566:	90 e0       	ldi	r25, 0x00	; 0
    4568:	9f 8b       	std	Y+23, r25	; 0x17
    456a:	8e 8b       	std	Y+22, r24	; 0x16
    456c:	36 97       	sbiw	r30, 0x06	; 6
    456e:	18 f0       	brcs	.+6      	; 0x4576 <_ZN14SoftwareSerial5beginEl+0x62>
    4570:	c9 01       	movw	r24, r18
    4572:	05 97       	sbiw	r24, 0x05	; 5
    4574:	02 c0       	rjmp	.+4      	; 0x457a <_ZN14SoftwareSerial5beginEl+0x66>
    4576:	81 e0       	ldi	r24, 0x01	; 1
    4578:	90 e0       	ldi	r25, 0x00	; 0
    457a:	99 8f       	std	Y+25, r25	; 0x19
    457c:	88 8f       	std	Y+24, r24	; 0x18
    457e:	c9 01       	movw	r24, r18
    4580:	88 0f       	add	r24, r24
    4582:	99 1f       	adc	r25, r25
    4584:	28 0f       	add	r18, r24
    4586:	39 1f       	adc	r19, r25
    4588:	36 95       	lsr	r19
    458a:	27 95       	ror	r18
    458c:	36 95       	lsr	r19
    458e:	27 95       	ror	r18
    4590:	2d 30       	cpi	r18, 0x0D	; 13
    4592:	31 05       	cpc	r19, r1
    4594:	18 f0       	brcs	.+6      	; 0x459c <_ZN14SoftwareSerial5beginEl+0x88>
    4596:	2c 50       	subi	r18, 0x0C	; 12
    4598:	31 09       	sbc	r19, r1
    459a:	02 c0       	rjmp	.+4      	; 0x45a0 <_ZN14SoftwareSerial5beginEl+0x8c>
    459c:	21 e0       	ldi	r18, 0x01	; 1
    459e:	30 e0       	ldi	r19, 0x00	; 0
    45a0:	3b 8f       	std	Y+27, r19	; 0x1b
    45a2:	2a 8f       	std	Y+26, r18	; 0x1a
    45a4:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    45a8:	68 30       	cpi	r22, 0x08	; 8
    45aa:	50 f0       	brcs	.+20     	; 0x45c0 <_ZN14SoftwareSerial5beginEl+0xac>
    45ac:	21 e0       	ldi	r18, 0x01	; 1
    45ae:	6e 30       	cpi	r22, 0x0E	; 14
    45b0:	08 f4       	brcc	.+2      	; 0x45b4 <_ZN14SoftwareSerial5beginEl+0xa0>
    45b2:	20 e0       	ldi	r18, 0x00	; 0
    45b4:	81 e0       	ldi	r24, 0x01	; 1
    45b6:	01 c0       	rjmp	.+2      	; 0x45ba <_ZN14SoftwareSerial5beginEl+0xa6>
    45b8:	88 0f       	add	r24, r24
    45ba:	2a 95       	dec	r18
    45bc:	ea f7       	brpl	.-6      	; 0x45b8 <_ZN14SoftwareSerial5beginEl+0xa4>
    45be:	01 c0       	rjmp	.+2      	; 0x45c2 <_ZN14SoftwareSerial5beginEl+0xae>
    45c0:	84 e0       	ldi	r24, 0x04	; 4
    45c2:	89 2b       	or	r24, r25
    45c4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    45c8:	9c 85       	ldd	r25, Y+12	; 0x0c
    45ca:	98 30       	cpi	r25, 0x08	; 8
    45cc:	38 f0       	brcs	.+14     	; 0x45dc <_ZN14SoftwareSerial5beginEl+0xc8>
    45ce:	9e 30       	cpi	r25, 0x0E	; 14
    45d0:	40 f0       	brcs	.+16     	; 0x45e2 <_ZN14SoftwareSerial5beginEl+0xce>
    45d2:	96 31       	cpi	r25, 0x16	; 22
    45d4:	48 f0       	brcs	.+18     	; 0x45e8 <_ZN14SoftwareSerial5beginEl+0xd4>
    45d6:	20 e0       	ldi	r18, 0x00	; 0
    45d8:	30 e0       	ldi	r19, 0x00	; 0
    45da:	08 c0       	rjmp	.+16     	; 0x45ec <_ZN14SoftwareSerial5beginEl+0xd8>
    45dc:	2d e6       	ldi	r18, 0x6D	; 109
    45de:	30 e0       	ldi	r19, 0x00	; 0
    45e0:	05 c0       	rjmp	.+10     	; 0x45ec <_ZN14SoftwareSerial5beginEl+0xd8>
    45e2:	2b e6       	ldi	r18, 0x6B	; 107
    45e4:	30 e0       	ldi	r19, 0x00	; 0
    45e6:	02 c0       	rjmp	.+4      	; 0x45ec <_ZN14SoftwareSerial5beginEl+0xd8>
    45e8:	2c e6       	ldi	r18, 0x6C	; 108
    45ea:	30 e0       	ldi	r19, 0x00	; 0
    45ec:	3c 8b       	std	Y+20, r19	; 0x14
    45ee:	2b 8b       	std	Y+19, r18	; 0x13
    45f0:	98 30       	cpi	r25, 0x08	; 8
    45f2:	30 f4       	brcc	.+12     	; 0x4600 <_ZN14SoftwareSerial5beginEl+0xec>
    45f4:	81 e0       	ldi	r24, 0x01	; 1
    45f6:	01 c0       	rjmp	.+2      	; 0x45fa <_ZN14SoftwareSerial5beginEl+0xe6>
    45f8:	88 0f       	add	r24, r24
    45fa:	9a 95       	dec	r25
    45fc:	ea f7       	brpl	.-6      	; 0x45f8 <_ZN14SoftwareSerial5beginEl+0xe4>
    45fe:	0e c0       	rjmp	.+28     	; 0x461c <_ZN14SoftwareSerial5beginEl+0x108>
    4600:	29 2f       	mov	r18, r25
    4602:	30 e0       	ldi	r19, 0x00	; 0
    4604:	9e 30       	cpi	r25, 0x0E	; 14
    4606:	18 f4       	brcc	.+6      	; 0x460e <_ZN14SoftwareSerial5beginEl+0xfa>
    4608:	28 50       	subi	r18, 0x08	; 8
    460a:	31 09       	sbc	r19, r1
    460c:	02 c0       	rjmp	.+4      	; 0x4612 <_ZN14SoftwareSerial5beginEl+0xfe>
    460e:	2e 50       	subi	r18, 0x0E	; 14
    4610:	31 09       	sbc	r19, r1
    4612:	81 e0       	ldi	r24, 0x01	; 1
    4614:	01 c0       	rjmp	.+2      	; 0x4618 <_ZN14SoftwareSerial5beginEl+0x104>
    4616:	88 0f       	add	r24, r24
    4618:	2a 95       	dec	r18
    461a:	ea f7       	brpl	.-6      	; 0x4616 <_ZN14SoftwareSerial5beginEl+0x102>
    461c:	8d 8b       	std	Y+21, r24	; 0x15
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    461e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4620:	9d 8d       	ldd	r25, Y+29	; 0x1d
    4622:	01 97       	sbiw	r24, 0x01	; 1
    4624:	f1 f7       	brne	.-4      	; 0x4622 <_ZN14SoftwareSerial5beginEl+0x10e>
    4626:	ce 01       	movw	r24, r28
    4628:	df 91       	pop	r29
    462a:	cf 91       	pop	r28
    462c:	0c 94 6a 21 	jmp	0x42d4	; 0x42d4 <_ZN14SoftwareSerial6listenEv>

00004630 <yield>:
    4630:	08 95       	ret

00004632 <__udivmodqi4>:
    4632:	99 1b       	sub	r25, r25
    4634:	79 e0       	ldi	r23, 0x09	; 9
    4636:	04 c0       	rjmp	.+8      	; 0x4640 <__udivmodqi4_ep>

00004638 <__udivmodqi4_loop>:
    4638:	99 1f       	adc	r25, r25
    463a:	96 17       	cp	r25, r22
    463c:	08 f0       	brcs	.+2      	; 0x4640 <__udivmodqi4_ep>
    463e:	96 1b       	sub	r25, r22

00004640 <__udivmodqi4_ep>:
    4640:	88 1f       	adc	r24, r24
    4642:	7a 95       	dec	r23
    4644:	c9 f7       	brne	.-14     	; 0x4638 <__udivmodqi4_loop>
    4646:	80 95       	com	r24
    4648:	08 95       	ret

0000464a <__udivmodhi4>:
    464a:	aa 1b       	sub	r26, r26
    464c:	bb 1b       	sub	r27, r27
    464e:	51 e1       	ldi	r21, 0x11	; 17
    4650:	07 c0       	rjmp	.+14     	; 0x4660 <__udivmodhi4_ep>

00004652 <__udivmodhi4_loop>:
    4652:	aa 1f       	adc	r26, r26
    4654:	bb 1f       	adc	r27, r27
    4656:	a6 17       	cp	r26, r22
    4658:	b7 07       	cpc	r27, r23
    465a:	10 f0       	brcs	.+4      	; 0x4660 <__udivmodhi4_ep>
    465c:	a6 1b       	sub	r26, r22
    465e:	b7 0b       	sbc	r27, r23

00004660 <__udivmodhi4_ep>:
    4660:	88 1f       	adc	r24, r24
    4662:	99 1f       	adc	r25, r25
    4664:	5a 95       	dec	r21
    4666:	a9 f7       	brne	.-22     	; 0x4652 <__udivmodhi4_loop>
    4668:	80 95       	com	r24
    466a:	90 95       	com	r25
    466c:	bc 01       	movw	r22, r24
    466e:	cd 01       	movw	r24, r26
    4670:	08 95       	ret

00004672 <__divmodhi4>:
    4672:	97 fb       	bst	r25, 7
    4674:	07 2e       	mov	r0, r23
    4676:	16 f4       	brtc	.+4      	; 0x467c <__divmodhi4+0xa>
    4678:	00 94       	com	r0
    467a:	07 d0       	rcall	.+14     	; 0x468a <__divmodhi4_neg1>
    467c:	77 fd       	sbrc	r23, 7
    467e:	09 d0       	rcall	.+18     	; 0x4692 <__divmodhi4_neg2>
    4680:	0e 94 25 23 	call	0x464a	; 0x464a <__udivmodhi4>
    4684:	07 fc       	sbrc	r0, 7
    4686:	05 d0       	rcall	.+10     	; 0x4692 <__divmodhi4_neg2>
    4688:	3e f4       	brtc	.+14     	; 0x4698 <__divmodhi4_exit>

0000468a <__divmodhi4_neg1>:
    468a:	90 95       	com	r25
    468c:	81 95       	neg	r24
    468e:	9f 4f       	sbci	r25, 0xFF	; 255
    4690:	08 95       	ret

00004692 <__divmodhi4_neg2>:
    4692:	70 95       	com	r23
    4694:	61 95       	neg	r22
    4696:	7f 4f       	sbci	r23, 0xFF	; 255

00004698 <__divmodhi4_exit>:
    4698:	08 95       	ret

0000469a <__udivmodsi4>:
    469a:	a1 e2       	ldi	r26, 0x21	; 33
    469c:	1a 2e       	mov	r1, r26
    469e:	aa 1b       	sub	r26, r26
    46a0:	bb 1b       	sub	r27, r27
    46a2:	fd 01       	movw	r30, r26
    46a4:	0d c0       	rjmp	.+26     	; 0x46c0 <__udivmodsi4_ep>

000046a6 <__udivmodsi4_loop>:
    46a6:	aa 1f       	adc	r26, r26
    46a8:	bb 1f       	adc	r27, r27
    46aa:	ee 1f       	adc	r30, r30
    46ac:	ff 1f       	adc	r31, r31
    46ae:	a2 17       	cp	r26, r18
    46b0:	b3 07       	cpc	r27, r19
    46b2:	e4 07       	cpc	r30, r20
    46b4:	f5 07       	cpc	r31, r21
    46b6:	20 f0       	brcs	.+8      	; 0x46c0 <__udivmodsi4_ep>
    46b8:	a2 1b       	sub	r26, r18
    46ba:	b3 0b       	sbc	r27, r19
    46bc:	e4 0b       	sbc	r30, r20
    46be:	f5 0b       	sbc	r31, r21

000046c0 <__udivmodsi4_ep>:
    46c0:	66 1f       	adc	r22, r22
    46c2:	77 1f       	adc	r23, r23
    46c4:	88 1f       	adc	r24, r24
    46c6:	99 1f       	adc	r25, r25
    46c8:	1a 94       	dec	r1
    46ca:	69 f7       	brne	.-38     	; 0x46a6 <__udivmodsi4_loop>
    46cc:	60 95       	com	r22
    46ce:	70 95       	com	r23
    46d0:	80 95       	com	r24
    46d2:	90 95       	com	r25
    46d4:	9b 01       	movw	r18, r22
    46d6:	ac 01       	movw	r20, r24
    46d8:	bd 01       	movw	r22, r26
    46da:	cf 01       	movw	r24, r30
    46dc:	08 95       	ret

000046de <__divmodsi4>:
    46de:	05 2e       	mov	r0, r21
    46e0:	97 fb       	bst	r25, 7
    46e2:	1e f4       	brtc	.+6      	; 0x46ea <__divmodsi4+0xc>
    46e4:	00 94       	com	r0
    46e6:	0e 94 86 23 	call	0x470c	; 0x470c <__negsi2>
    46ea:	57 fd       	sbrc	r21, 7
    46ec:	07 d0       	rcall	.+14     	; 0x46fc <__divmodsi4_neg2>
    46ee:	0e 94 4d 23 	call	0x469a	; 0x469a <__udivmodsi4>
    46f2:	07 fc       	sbrc	r0, 7
    46f4:	03 d0       	rcall	.+6      	; 0x46fc <__divmodsi4_neg2>
    46f6:	4e f4       	brtc	.+18     	; 0x470a <__divmodsi4_exit>
    46f8:	0c 94 86 23 	jmp	0x470c	; 0x470c <__negsi2>

000046fc <__divmodsi4_neg2>:
    46fc:	50 95       	com	r21
    46fe:	40 95       	com	r20
    4700:	30 95       	com	r19
    4702:	21 95       	neg	r18
    4704:	3f 4f       	sbci	r19, 0xFF	; 255
    4706:	4f 4f       	sbci	r20, 0xFF	; 255
    4708:	5f 4f       	sbci	r21, 0xFF	; 255

0000470a <__divmodsi4_exit>:
    470a:	08 95       	ret

0000470c <__negsi2>:
    470c:	90 95       	com	r25
    470e:	80 95       	com	r24
    4710:	70 95       	com	r23
    4712:	61 95       	neg	r22
    4714:	7f 4f       	sbci	r23, 0xFF	; 255
    4716:	8f 4f       	sbci	r24, 0xFF	; 255
    4718:	9f 4f       	sbci	r25, 0xFF	; 255
    471a:	08 95       	ret

0000471c <__tablejump2__>:
    471c:	ee 0f       	add	r30, r30
    471e:	ff 1f       	adc	r31, r31
    4720:	05 90       	lpm	r0, Z+
    4722:	f4 91       	lpm	r31, Z
    4724:	e0 2d       	mov	r30, r0
    4726:	09 94       	ijmp

00004728 <malloc>:
    4728:	0f 93       	push	r16
    472a:	1f 93       	push	r17
    472c:	cf 93       	push	r28
    472e:	df 93       	push	r29
    4730:	82 30       	cpi	r24, 0x02	; 2
    4732:	91 05       	cpc	r25, r1
    4734:	10 f4       	brcc	.+4      	; 0x473a <malloc+0x12>
    4736:	82 e0       	ldi	r24, 0x02	; 2
    4738:	90 e0       	ldi	r25, 0x00	; 0
    473a:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <__flp>
    473e:	f0 91 8b 04 	lds	r31, 0x048B	; 0x80048b <__flp+0x1>
    4742:	20 e0       	ldi	r18, 0x00	; 0
    4744:	30 e0       	ldi	r19, 0x00	; 0
    4746:	a0 e0       	ldi	r26, 0x00	; 0
    4748:	b0 e0       	ldi	r27, 0x00	; 0
    474a:	30 97       	sbiw	r30, 0x00	; 0
    474c:	19 f1       	breq	.+70     	; 0x4794 <malloc+0x6c>
    474e:	40 81       	ld	r20, Z
    4750:	51 81       	ldd	r21, Z+1	; 0x01
    4752:	02 81       	ldd	r16, Z+2	; 0x02
    4754:	13 81       	ldd	r17, Z+3	; 0x03
    4756:	48 17       	cp	r20, r24
    4758:	59 07       	cpc	r21, r25
    475a:	c8 f0       	brcs	.+50     	; 0x478e <malloc+0x66>
    475c:	84 17       	cp	r24, r20
    475e:	95 07       	cpc	r25, r21
    4760:	69 f4       	brne	.+26     	; 0x477c <malloc+0x54>
    4762:	10 97       	sbiw	r26, 0x00	; 0
    4764:	31 f0       	breq	.+12     	; 0x4772 <malloc+0x4a>
    4766:	12 96       	adiw	r26, 0x02	; 2
    4768:	0c 93       	st	X, r16
    476a:	12 97       	sbiw	r26, 0x02	; 2
    476c:	13 96       	adiw	r26, 0x03	; 3
    476e:	1c 93       	st	X, r17
    4770:	27 c0       	rjmp	.+78     	; 0x47c0 <malloc+0x98>
    4772:	00 93 8a 04 	sts	0x048A, r16	; 0x80048a <__flp>
    4776:	10 93 8b 04 	sts	0x048B, r17	; 0x80048b <__flp+0x1>
    477a:	22 c0       	rjmp	.+68     	; 0x47c0 <malloc+0x98>
    477c:	21 15       	cp	r18, r1
    477e:	31 05       	cpc	r19, r1
    4780:	19 f0       	breq	.+6      	; 0x4788 <malloc+0x60>
    4782:	42 17       	cp	r20, r18
    4784:	53 07       	cpc	r21, r19
    4786:	18 f4       	brcc	.+6      	; 0x478e <malloc+0x66>
    4788:	9a 01       	movw	r18, r20
    478a:	bd 01       	movw	r22, r26
    478c:	ef 01       	movw	r28, r30
    478e:	df 01       	movw	r26, r30
    4790:	f8 01       	movw	r30, r16
    4792:	db cf       	rjmp	.-74     	; 0x474a <malloc+0x22>
    4794:	21 15       	cp	r18, r1
    4796:	31 05       	cpc	r19, r1
    4798:	f9 f0       	breq	.+62     	; 0x47d8 <malloc+0xb0>
    479a:	28 1b       	sub	r18, r24
    479c:	39 0b       	sbc	r19, r25
    479e:	24 30       	cpi	r18, 0x04	; 4
    47a0:	31 05       	cpc	r19, r1
    47a2:	80 f4       	brcc	.+32     	; 0x47c4 <malloc+0x9c>
    47a4:	8a 81       	ldd	r24, Y+2	; 0x02
    47a6:	9b 81       	ldd	r25, Y+3	; 0x03
    47a8:	61 15       	cp	r22, r1
    47aa:	71 05       	cpc	r23, r1
    47ac:	21 f0       	breq	.+8      	; 0x47b6 <malloc+0x8e>
    47ae:	fb 01       	movw	r30, r22
    47b0:	93 83       	std	Z+3, r25	; 0x03
    47b2:	82 83       	std	Z+2, r24	; 0x02
    47b4:	04 c0       	rjmp	.+8      	; 0x47be <malloc+0x96>
    47b6:	90 93 8b 04 	sts	0x048B, r25	; 0x80048b <__flp+0x1>
    47ba:	80 93 8a 04 	sts	0x048A, r24	; 0x80048a <__flp>
    47be:	fe 01       	movw	r30, r28
    47c0:	32 96       	adiw	r30, 0x02	; 2
    47c2:	44 c0       	rjmp	.+136    	; 0x484c <malloc+0x124>
    47c4:	fe 01       	movw	r30, r28
    47c6:	e2 0f       	add	r30, r18
    47c8:	f3 1f       	adc	r31, r19
    47ca:	81 93       	st	Z+, r24
    47cc:	91 93       	st	Z+, r25
    47ce:	22 50       	subi	r18, 0x02	; 2
    47d0:	31 09       	sbc	r19, r1
    47d2:	39 83       	std	Y+1, r19	; 0x01
    47d4:	28 83       	st	Y, r18
    47d6:	3a c0       	rjmp	.+116    	; 0x484c <malloc+0x124>
    47d8:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    47dc:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    47e0:	23 2b       	or	r18, r19
    47e2:	41 f4       	brne	.+16     	; 0x47f4 <malloc+0xcc>
    47e4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    47e8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    47ec:	30 93 89 04 	sts	0x0489, r19	; 0x800489 <__brkval+0x1>
    47f0:	20 93 88 04 	sts	0x0488, r18	; 0x800488 <__brkval>
    47f4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    47f8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    47fc:	21 15       	cp	r18, r1
    47fe:	31 05       	cpc	r19, r1
    4800:	41 f4       	brne	.+16     	; 0x4812 <malloc+0xea>
    4802:	2d b7       	in	r18, 0x3d	; 61
    4804:	3e b7       	in	r19, 0x3e	; 62
    4806:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    480a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    480e:	24 1b       	sub	r18, r20
    4810:	35 0b       	sbc	r19, r21
    4812:	e0 91 88 04 	lds	r30, 0x0488	; 0x800488 <__brkval>
    4816:	f0 91 89 04 	lds	r31, 0x0489	; 0x800489 <__brkval+0x1>
    481a:	e2 17       	cp	r30, r18
    481c:	f3 07       	cpc	r31, r19
    481e:	a0 f4       	brcc	.+40     	; 0x4848 <malloc+0x120>
    4820:	2e 1b       	sub	r18, r30
    4822:	3f 0b       	sbc	r19, r31
    4824:	28 17       	cp	r18, r24
    4826:	39 07       	cpc	r19, r25
    4828:	78 f0       	brcs	.+30     	; 0x4848 <malloc+0x120>
    482a:	ac 01       	movw	r20, r24
    482c:	4e 5f       	subi	r20, 0xFE	; 254
    482e:	5f 4f       	sbci	r21, 0xFF	; 255
    4830:	24 17       	cp	r18, r20
    4832:	35 07       	cpc	r19, r21
    4834:	48 f0       	brcs	.+18     	; 0x4848 <malloc+0x120>
    4836:	4e 0f       	add	r20, r30
    4838:	5f 1f       	adc	r21, r31
    483a:	50 93 89 04 	sts	0x0489, r21	; 0x800489 <__brkval+0x1>
    483e:	40 93 88 04 	sts	0x0488, r20	; 0x800488 <__brkval>
    4842:	81 93       	st	Z+, r24
    4844:	91 93       	st	Z+, r25
    4846:	02 c0       	rjmp	.+4      	; 0x484c <malloc+0x124>
    4848:	e0 e0       	ldi	r30, 0x00	; 0
    484a:	f0 e0       	ldi	r31, 0x00	; 0
    484c:	cf 01       	movw	r24, r30
    484e:	df 91       	pop	r29
    4850:	cf 91       	pop	r28
    4852:	1f 91       	pop	r17
    4854:	0f 91       	pop	r16
    4856:	08 95       	ret

00004858 <free>:
    4858:	cf 93       	push	r28
    485a:	df 93       	push	r29
    485c:	00 97       	sbiw	r24, 0x00	; 0
    485e:	09 f4       	brne	.+2      	; 0x4862 <free+0xa>
    4860:	81 c0       	rjmp	.+258    	; 0x4964 <free+0x10c>
    4862:	fc 01       	movw	r30, r24
    4864:	32 97       	sbiw	r30, 0x02	; 2
    4866:	13 82       	std	Z+3, r1	; 0x03
    4868:	12 82       	std	Z+2, r1	; 0x02
    486a:	a0 91 8a 04 	lds	r26, 0x048A	; 0x80048a <__flp>
    486e:	b0 91 8b 04 	lds	r27, 0x048B	; 0x80048b <__flp+0x1>
    4872:	10 97       	sbiw	r26, 0x00	; 0
    4874:	81 f4       	brne	.+32     	; 0x4896 <free+0x3e>
    4876:	20 81       	ld	r18, Z
    4878:	31 81       	ldd	r19, Z+1	; 0x01
    487a:	82 0f       	add	r24, r18
    487c:	93 1f       	adc	r25, r19
    487e:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    4882:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    4886:	28 17       	cp	r18, r24
    4888:	39 07       	cpc	r19, r25
    488a:	51 f5       	brne	.+84     	; 0x48e0 <free+0x88>
    488c:	f0 93 89 04 	sts	0x0489, r31	; 0x800489 <__brkval+0x1>
    4890:	e0 93 88 04 	sts	0x0488, r30	; 0x800488 <__brkval>
    4894:	67 c0       	rjmp	.+206    	; 0x4964 <free+0x10c>
    4896:	ed 01       	movw	r28, r26
    4898:	20 e0       	ldi	r18, 0x00	; 0
    489a:	30 e0       	ldi	r19, 0x00	; 0
    489c:	ce 17       	cp	r28, r30
    489e:	df 07       	cpc	r29, r31
    48a0:	40 f4       	brcc	.+16     	; 0x48b2 <free+0x5a>
    48a2:	4a 81       	ldd	r20, Y+2	; 0x02
    48a4:	5b 81       	ldd	r21, Y+3	; 0x03
    48a6:	9e 01       	movw	r18, r28
    48a8:	41 15       	cp	r20, r1
    48aa:	51 05       	cpc	r21, r1
    48ac:	f1 f0       	breq	.+60     	; 0x48ea <free+0x92>
    48ae:	ea 01       	movw	r28, r20
    48b0:	f5 cf       	rjmp	.-22     	; 0x489c <free+0x44>
    48b2:	d3 83       	std	Z+3, r29	; 0x03
    48b4:	c2 83       	std	Z+2, r28	; 0x02
    48b6:	40 81       	ld	r20, Z
    48b8:	51 81       	ldd	r21, Z+1	; 0x01
    48ba:	84 0f       	add	r24, r20
    48bc:	95 1f       	adc	r25, r21
    48be:	c8 17       	cp	r28, r24
    48c0:	d9 07       	cpc	r29, r25
    48c2:	59 f4       	brne	.+22     	; 0x48da <free+0x82>
    48c4:	88 81       	ld	r24, Y
    48c6:	99 81       	ldd	r25, Y+1	; 0x01
    48c8:	84 0f       	add	r24, r20
    48ca:	95 1f       	adc	r25, r21
    48cc:	02 96       	adiw	r24, 0x02	; 2
    48ce:	91 83       	std	Z+1, r25	; 0x01
    48d0:	80 83       	st	Z, r24
    48d2:	8a 81       	ldd	r24, Y+2	; 0x02
    48d4:	9b 81       	ldd	r25, Y+3	; 0x03
    48d6:	93 83       	std	Z+3, r25	; 0x03
    48d8:	82 83       	std	Z+2, r24	; 0x02
    48da:	21 15       	cp	r18, r1
    48dc:	31 05       	cpc	r19, r1
    48de:	29 f4       	brne	.+10     	; 0x48ea <free+0x92>
    48e0:	f0 93 8b 04 	sts	0x048B, r31	; 0x80048b <__flp+0x1>
    48e4:	e0 93 8a 04 	sts	0x048A, r30	; 0x80048a <__flp>
    48e8:	3d c0       	rjmp	.+122    	; 0x4964 <free+0x10c>
    48ea:	e9 01       	movw	r28, r18
    48ec:	fb 83       	std	Y+3, r31	; 0x03
    48ee:	ea 83       	std	Y+2, r30	; 0x02
    48f0:	49 91       	ld	r20, Y+
    48f2:	59 91       	ld	r21, Y+
    48f4:	c4 0f       	add	r28, r20
    48f6:	d5 1f       	adc	r29, r21
    48f8:	ec 17       	cp	r30, r28
    48fa:	fd 07       	cpc	r31, r29
    48fc:	61 f4       	brne	.+24     	; 0x4916 <free+0xbe>
    48fe:	80 81       	ld	r24, Z
    4900:	91 81       	ldd	r25, Z+1	; 0x01
    4902:	84 0f       	add	r24, r20
    4904:	95 1f       	adc	r25, r21
    4906:	02 96       	adiw	r24, 0x02	; 2
    4908:	e9 01       	movw	r28, r18
    490a:	99 83       	std	Y+1, r25	; 0x01
    490c:	88 83       	st	Y, r24
    490e:	82 81       	ldd	r24, Z+2	; 0x02
    4910:	93 81       	ldd	r25, Z+3	; 0x03
    4912:	9b 83       	std	Y+3, r25	; 0x03
    4914:	8a 83       	std	Y+2, r24	; 0x02
    4916:	e0 e0       	ldi	r30, 0x00	; 0
    4918:	f0 e0       	ldi	r31, 0x00	; 0
    491a:	12 96       	adiw	r26, 0x02	; 2
    491c:	8d 91       	ld	r24, X+
    491e:	9c 91       	ld	r25, X
    4920:	13 97       	sbiw	r26, 0x03	; 3
    4922:	00 97       	sbiw	r24, 0x00	; 0
    4924:	19 f0       	breq	.+6      	; 0x492c <free+0xd4>
    4926:	fd 01       	movw	r30, r26
    4928:	dc 01       	movw	r26, r24
    492a:	f7 cf       	rjmp	.-18     	; 0x491a <free+0xc2>
    492c:	8d 91       	ld	r24, X+
    492e:	9c 91       	ld	r25, X
    4930:	11 97       	sbiw	r26, 0x01	; 1
    4932:	9d 01       	movw	r18, r26
    4934:	2e 5f       	subi	r18, 0xFE	; 254
    4936:	3f 4f       	sbci	r19, 0xFF	; 255
    4938:	82 0f       	add	r24, r18
    493a:	93 1f       	adc	r25, r19
    493c:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    4940:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    4944:	28 17       	cp	r18, r24
    4946:	39 07       	cpc	r19, r25
    4948:	69 f4       	brne	.+26     	; 0x4964 <free+0x10c>
    494a:	30 97       	sbiw	r30, 0x00	; 0
    494c:	29 f4       	brne	.+10     	; 0x4958 <free+0x100>
    494e:	10 92 8b 04 	sts	0x048B, r1	; 0x80048b <__flp+0x1>
    4952:	10 92 8a 04 	sts	0x048A, r1	; 0x80048a <__flp>
    4956:	02 c0       	rjmp	.+4      	; 0x495c <free+0x104>
    4958:	13 82       	std	Z+3, r1	; 0x03
    495a:	12 82       	std	Z+2, r1	; 0x02
    495c:	b0 93 89 04 	sts	0x0489, r27	; 0x800489 <__brkval+0x1>
    4960:	a0 93 88 04 	sts	0x0488, r26	; 0x800488 <__brkval>
    4964:	df 91       	pop	r29
    4966:	cf 91       	pop	r28
    4968:	08 95       	ret

0000496a <realloc>:
    496a:	a0 e0       	ldi	r26, 0x00	; 0
    496c:	b0 e0       	ldi	r27, 0x00	; 0
    496e:	eb eb       	ldi	r30, 0xBB	; 187
    4970:	f4 e2       	ldi	r31, 0x24	; 36
    4972:	0c 94 21 26 	jmp	0x4c42	; 0x4c42 <__prologue_saves__+0x8>
    4976:	ec 01       	movw	r28, r24
    4978:	00 97       	sbiw	r24, 0x00	; 0
    497a:	21 f4       	brne	.+8      	; 0x4984 <realloc+0x1a>
    497c:	cb 01       	movw	r24, r22
    497e:	0e 94 94 23 	call	0x4728	; 0x4728 <malloc>
    4982:	b4 c0       	rjmp	.+360    	; 0x4aec <realloc+0x182>
    4984:	fc 01       	movw	r30, r24
    4986:	e6 0f       	add	r30, r22
    4988:	f7 1f       	adc	r31, r23
    498a:	9c 01       	movw	r18, r24
    498c:	22 50       	subi	r18, 0x02	; 2
    498e:	31 09       	sbc	r19, r1
    4990:	e2 17       	cp	r30, r18
    4992:	f3 07       	cpc	r31, r19
    4994:	08 f4       	brcc	.+2      	; 0x4998 <realloc+0x2e>
    4996:	a8 c0       	rjmp	.+336    	; 0x4ae8 <realloc+0x17e>
    4998:	d9 01       	movw	r26, r18
    499a:	0d 91       	ld	r16, X+
    499c:	1c 91       	ld	r17, X
    499e:	11 97       	sbiw	r26, 0x01	; 1
    49a0:	06 17       	cp	r16, r22
    49a2:	17 07       	cpc	r17, r23
    49a4:	b0 f0       	brcs	.+44     	; 0x49d2 <realloc+0x68>
    49a6:	05 30       	cpi	r16, 0x05	; 5
    49a8:	11 05       	cpc	r17, r1
    49aa:	08 f4       	brcc	.+2      	; 0x49ae <realloc+0x44>
    49ac:	9b c0       	rjmp	.+310    	; 0x4ae4 <realloc+0x17a>
    49ae:	c8 01       	movw	r24, r16
    49b0:	04 97       	sbiw	r24, 0x04	; 4
    49b2:	86 17       	cp	r24, r22
    49b4:	97 07       	cpc	r25, r23
    49b6:	08 f4       	brcc	.+2      	; 0x49ba <realloc+0x50>
    49b8:	95 c0       	rjmp	.+298    	; 0x4ae4 <realloc+0x17a>
    49ba:	02 50       	subi	r16, 0x02	; 2
    49bc:	11 09       	sbc	r17, r1
    49be:	06 1b       	sub	r16, r22
    49c0:	17 0b       	sbc	r17, r23
    49c2:	01 93       	st	Z+, r16
    49c4:	11 93       	st	Z+, r17
    49c6:	6d 93       	st	X+, r22
    49c8:	7c 93       	st	X, r23
    49ca:	cf 01       	movw	r24, r30
    49cc:	0e 94 2c 24 	call	0x4858	; 0x4858 <free>
    49d0:	89 c0       	rjmp	.+274    	; 0x4ae4 <realloc+0x17a>
    49d2:	5b 01       	movw	r10, r22
    49d4:	a0 1a       	sub	r10, r16
    49d6:	b1 0a       	sbc	r11, r17
    49d8:	4c 01       	movw	r8, r24
    49da:	80 0e       	add	r8, r16
    49dc:	91 1e       	adc	r9, r17
    49de:	a0 91 8a 04 	lds	r26, 0x048A	; 0x80048a <__flp>
    49e2:	b0 91 8b 04 	lds	r27, 0x048B	; 0x80048b <__flp+0x1>
    49e6:	61 2c       	mov	r6, r1
    49e8:	71 2c       	mov	r7, r1
    49ea:	e1 2c       	mov	r14, r1
    49ec:	f1 2c       	mov	r15, r1
    49ee:	10 97       	sbiw	r26, 0x00	; 0
    49f0:	09 f4       	brne	.+2      	; 0x49f4 <realloc+0x8a>
    49f2:	46 c0       	rjmp	.+140    	; 0x4a80 <realloc+0x116>
    49f4:	8d 91       	ld	r24, X+
    49f6:	9c 91       	ld	r25, X
    49f8:	11 97       	sbiw	r26, 0x01	; 1
    49fa:	a8 15       	cp	r26, r8
    49fc:	b9 05       	cpc	r27, r9
    49fe:	b1 f5       	brne	.+108    	; 0x4a6c <realloc+0x102>
    4a00:	6c 01       	movw	r12, r24
    4a02:	42 e0       	ldi	r20, 0x02	; 2
    4a04:	c4 0e       	add	r12, r20
    4a06:	d1 1c       	adc	r13, r1
    4a08:	ca 14       	cp	r12, r10
    4a0a:	db 04       	cpc	r13, r11
    4a0c:	78 f1       	brcs	.+94     	; 0x4a6c <realloc+0x102>
    4a0e:	4c 01       	movw	r8, r24
    4a10:	8a 18       	sub	r8, r10
    4a12:	9b 08       	sbc	r9, r11
    4a14:	64 01       	movw	r12, r8
    4a16:	42 e0       	ldi	r20, 0x02	; 2
    4a18:	c4 0e       	add	r12, r20
    4a1a:	d1 1c       	adc	r13, r1
    4a1c:	12 96       	adiw	r26, 0x02	; 2
    4a1e:	bc 90       	ld	r11, X
    4a20:	12 97       	sbiw	r26, 0x02	; 2
    4a22:	13 96       	adiw	r26, 0x03	; 3
    4a24:	ac 91       	ld	r26, X
    4a26:	b5 e0       	ldi	r27, 0x05	; 5
    4a28:	cb 16       	cp	r12, r27
    4a2a:	d1 04       	cpc	r13, r1
    4a2c:	40 f0       	brcs	.+16     	; 0x4a3e <realloc+0xd4>
    4a2e:	b2 82       	std	Z+2, r11	; 0x02
    4a30:	a3 83       	std	Z+3, r26	; 0x03
    4a32:	91 82       	std	Z+1, r9	; 0x01
    4a34:	80 82       	st	Z, r8
    4a36:	d9 01       	movw	r26, r18
    4a38:	6d 93       	st	X+, r22
    4a3a:	7c 93       	st	X, r23
    4a3c:	09 c0       	rjmp	.+18     	; 0x4a50 <realloc+0xe6>
    4a3e:	0e 5f       	subi	r16, 0xFE	; 254
    4a40:	1f 4f       	sbci	r17, 0xFF	; 255
    4a42:	80 0f       	add	r24, r16
    4a44:	91 1f       	adc	r25, r17
    4a46:	f9 01       	movw	r30, r18
    4a48:	91 83       	std	Z+1, r25	; 0x01
    4a4a:	80 83       	st	Z, r24
    4a4c:	eb 2d       	mov	r30, r11
    4a4e:	fa 2f       	mov	r31, r26
    4a50:	e1 14       	cp	r14, r1
    4a52:	f1 04       	cpc	r15, r1
    4a54:	31 f0       	breq	.+12     	; 0x4a62 <realloc+0xf8>
    4a56:	d7 01       	movw	r26, r14
    4a58:	13 96       	adiw	r26, 0x03	; 3
    4a5a:	fc 93       	st	X, r31
    4a5c:	ee 93       	st	-X, r30
    4a5e:	12 97       	sbiw	r26, 0x02	; 2
    4a60:	41 c0       	rjmp	.+130    	; 0x4ae4 <realloc+0x17a>
    4a62:	f0 93 8b 04 	sts	0x048B, r31	; 0x80048b <__flp+0x1>
    4a66:	e0 93 8a 04 	sts	0x048A, r30	; 0x80048a <__flp>
    4a6a:	3c c0       	rjmp	.+120    	; 0x4ae4 <realloc+0x17a>
    4a6c:	68 16       	cp	r6, r24
    4a6e:	79 06       	cpc	r7, r25
    4a70:	08 f4       	brcc	.+2      	; 0x4a74 <realloc+0x10a>
    4a72:	3c 01       	movw	r6, r24
    4a74:	7d 01       	movw	r14, r26
    4a76:	12 96       	adiw	r26, 0x02	; 2
    4a78:	0d 90       	ld	r0, X+
    4a7a:	bc 91       	ld	r27, X
    4a7c:	a0 2d       	mov	r26, r0
    4a7e:	b7 cf       	rjmp	.-146    	; 0x49ee <realloc+0x84>
    4a80:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__brkval>
    4a84:	90 91 89 04 	lds	r25, 0x0489	; 0x800489 <__brkval+0x1>
    4a88:	88 16       	cp	r8, r24
    4a8a:	99 06       	cpc	r9, r25
    4a8c:	e1 f4       	brne	.+56     	; 0x4ac6 <realloc+0x15c>
    4a8e:	66 16       	cp	r6, r22
    4a90:	77 06       	cpc	r7, r23
    4a92:	c8 f4       	brcc	.+50     	; 0x4ac6 <realloc+0x15c>
    4a94:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    4a98:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    4a9c:	00 97       	sbiw	r24, 0x00	; 0
    4a9e:	41 f4       	brne	.+16     	; 0x4ab0 <realloc+0x146>
    4aa0:	8d b7       	in	r24, 0x3d	; 61
    4aa2:	9e b7       	in	r25, 0x3e	; 62
    4aa4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    4aa8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    4aac:	84 1b       	sub	r24, r20
    4aae:	95 0b       	sbc	r25, r21
    4ab0:	e8 17       	cp	r30, r24
    4ab2:	f9 07       	cpc	r31, r25
    4ab4:	c8 f4       	brcc	.+50     	; 0x4ae8 <realloc+0x17e>
    4ab6:	f0 93 89 04 	sts	0x0489, r31	; 0x800489 <__brkval+0x1>
    4aba:	e0 93 88 04 	sts	0x0488, r30	; 0x800488 <__brkval>
    4abe:	f9 01       	movw	r30, r18
    4ac0:	71 83       	std	Z+1, r23	; 0x01
    4ac2:	60 83       	st	Z, r22
    4ac4:	0f c0       	rjmp	.+30     	; 0x4ae4 <realloc+0x17a>
    4ac6:	cb 01       	movw	r24, r22
    4ac8:	0e 94 94 23 	call	0x4728	; 0x4728 <malloc>
    4acc:	7c 01       	movw	r14, r24
    4ace:	00 97       	sbiw	r24, 0x00	; 0
    4ad0:	59 f0       	breq	.+22     	; 0x4ae8 <realloc+0x17e>
    4ad2:	a8 01       	movw	r20, r16
    4ad4:	be 01       	movw	r22, r28
    4ad6:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <memcpy>
    4ada:	ce 01       	movw	r24, r28
    4adc:	0e 94 2c 24 	call	0x4858	; 0x4858 <free>
    4ae0:	c7 01       	movw	r24, r14
    4ae2:	04 c0       	rjmp	.+8      	; 0x4aec <realloc+0x182>
    4ae4:	ce 01       	movw	r24, r28
    4ae6:	02 c0       	rjmp	.+4      	; 0x4aec <realloc+0x182>
    4ae8:	80 e0       	ldi	r24, 0x00	; 0
    4aea:	90 e0       	ldi	r25, 0x00	; 0
    4aec:	cd b7       	in	r28, 0x3d	; 61
    4aee:	de b7       	in	r29, 0x3e	; 62
    4af0:	ee e0       	ldi	r30, 0x0E	; 14
    4af2:	0c 94 3d 26 	jmp	0x4c7a	; 0x4c7a <__epilogue_restores__+0x8>

00004af6 <atoi>:
    4af6:	fc 01       	movw	r30, r24
    4af8:	88 27       	eor	r24, r24
    4afa:	99 27       	eor	r25, r25
    4afc:	e8 94       	clt
    4afe:	21 91       	ld	r18, Z+
    4b00:	20 32       	cpi	r18, 0x20	; 32
    4b02:	e9 f3       	breq	.-6      	; 0x4afe <atoi+0x8>
    4b04:	29 30       	cpi	r18, 0x09	; 9
    4b06:	10 f0       	brcs	.+4      	; 0x4b0c <atoi+0x16>
    4b08:	2e 30       	cpi	r18, 0x0E	; 14
    4b0a:	c8 f3       	brcs	.-14     	; 0x4afe <atoi+0x8>
    4b0c:	2b 32       	cpi	r18, 0x2B	; 43
    4b0e:	41 f0       	breq	.+16     	; 0x4b20 <atoi+0x2a>
    4b10:	2d 32       	cpi	r18, 0x2D	; 45
    4b12:	39 f4       	brne	.+14     	; 0x4b22 <atoi+0x2c>
    4b14:	68 94       	set
    4b16:	04 c0       	rjmp	.+8      	; 0x4b20 <atoi+0x2a>
    4b18:	0e 94 eb 25 	call	0x4bd6	; 0x4bd6 <__mulhi_const_10>
    4b1c:	82 0f       	add	r24, r18
    4b1e:	91 1d       	adc	r25, r1
    4b20:	21 91       	ld	r18, Z+
    4b22:	20 53       	subi	r18, 0x30	; 48
    4b24:	2a 30       	cpi	r18, 0x0A	; 10
    4b26:	c0 f3       	brcs	.-16     	; 0x4b18 <atoi+0x22>
    4b28:	1e f4       	brtc	.+6      	; 0x4b30 <atoi+0x3a>
    4b2a:	90 95       	com	r25
    4b2c:	81 95       	neg	r24
    4b2e:	9f 4f       	sbci	r25, 0xFF	; 255
    4b30:	08 95       	ret

00004b32 <strcmp_P>:
    4b32:	fb 01       	movw	r30, r22
    4b34:	dc 01       	movw	r26, r24
    4b36:	8d 91       	ld	r24, X+
    4b38:	05 90       	lpm	r0, Z+
    4b3a:	80 19       	sub	r24, r0
    4b3c:	01 10       	cpse	r0, r1
    4b3e:	d9 f3       	breq	.-10     	; 0x4b36 <strcmp_P+0x4>
    4b40:	99 0b       	sbc	r25, r25
    4b42:	08 95       	ret

00004b44 <__strlen_P>:
    4b44:	fc 01       	movw	r30, r24
    4b46:	05 90       	lpm	r0, Z+
    4b48:	00 20       	and	r0, r0
    4b4a:	e9 f7       	brne	.-6      	; 0x4b46 <__strlen_P+0x2>
    4b4c:	80 95       	com	r24
    4b4e:	90 95       	com	r25
    4b50:	8e 0f       	add	r24, r30
    4b52:	9f 1f       	adc	r25, r31
    4b54:	08 95       	ret

00004b56 <strstr_P>:
    4b56:	fb 01       	movw	r30, r22
    4b58:	55 91       	lpm	r21, Z+
    4b5a:	55 23       	and	r21, r21
    4b5c:	a9 f0       	breq	.+42     	; 0x4b88 <strstr_P+0x32>
    4b5e:	bf 01       	movw	r22, r30
    4b60:	dc 01       	movw	r26, r24
    4b62:	4d 91       	ld	r20, X+
    4b64:	45 17       	cp	r20, r21
    4b66:	41 11       	cpse	r20, r1
    4b68:	e1 f7       	brne	.-8      	; 0x4b62 <strstr_P+0xc>
    4b6a:	59 f4       	brne	.+22     	; 0x4b82 <strstr_P+0x2c>
    4b6c:	cd 01       	movw	r24, r26
    4b6e:	05 90       	lpm	r0, Z+
    4b70:	00 20       	and	r0, r0
    4b72:	49 f0       	breq	.+18     	; 0x4b86 <strstr_P+0x30>
    4b74:	4d 91       	ld	r20, X+
    4b76:	40 15       	cp	r20, r0
    4b78:	41 11       	cpse	r20, r1
    4b7a:	c9 f3       	breq	.-14     	; 0x4b6e <strstr_P+0x18>
    4b7c:	fb 01       	movw	r30, r22
    4b7e:	41 11       	cpse	r20, r1
    4b80:	ef cf       	rjmp	.-34     	; 0x4b60 <strstr_P+0xa>
    4b82:	81 e0       	ldi	r24, 0x01	; 1
    4b84:	90 e0       	ldi	r25, 0x00	; 0
    4b86:	01 97       	sbiw	r24, 0x01	; 1
    4b88:	08 95       	ret

00004b8a <memcpy>:
    4b8a:	fb 01       	movw	r30, r22
    4b8c:	dc 01       	movw	r26, r24
    4b8e:	02 c0       	rjmp	.+4      	; 0x4b94 <memcpy+0xa>
    4b90:	01 90       	ld	r0, Z+
    4b92:	0d 92       	st	X+, r0
    4b94:	41 50       	subi	r20, 0x01	; 1
    4b96:	50 40       	sbci	r21, 0x00	; 0
    4b98:	d8 f7       	brcc	.-10     	; 0x4b90 <memcpy+0x6>
    4b9a:	08 95       	ret

00004b9c <strchr>:
    4b9c:	fc 01       	movw	r30, r24
    4b9e:	81 91       	ld	r24, Z+
    4ba0:	86 17       	cp	r24, r22
    4ba2:	21 f0       	breq	.+8      	; 0x4bac <strchr+0x10>
    4ba4:	88 23       	and	r24, r24
    4ba6:	d9 f7       	brne	.-10     	; 0x4b9e <strchr+0x2>
    4ba8:	99 27       	eor	r25, r25
    4baa:	08 95       	ret
    4bac:	31 97       	sbiw	r30, 0x01	; 1
    4bae:	cf 01       	movw	r24, r30
    4bb0:	08 95       	ret

00004bb2 <strcpy>:
    4bb2:	fb 01       	movw	r30, r22
    4bb4:	dc 01       	movw	r26, r24
    4bb6:	01 90       	ld	r0, Z+
    4bb8:	0d 92       	st	X+, r0
    4bba:	00 20       	and	r0, r0
    4bbc:	e1 f7       	brne	.-8      	; 0x4bb6 <strcpy+0x4>
    4bbe:	08 95       	ret

00004bc0 <__itoa_ncheck>:
    4bc0:	bb 27       	eor	r27, r27
    4bc2:	4a 30       	cpi	r20, 0x0A	; 10
    4bc4:	31 f4       	brne	.+12     	; 0x4bd2 <__itoa_ncheck+0x12>
    4bc6:	99 23       	and	r25, r25
    4bc8:	22 f4       	brpl	.+8      	; 0x4bd2 <__itoa_ncheck+0x12>
    4bca:	bd e2       	ldi	r27, 0x2D	; 45
    4bcc:	90 95       	com	r25
    4bce:	81 95       	neg	r24
    4bd0:	9f 4f       	sbci	r25, 0xFF	; 255
    4bd2:	0c 94 f4 25 	jmp	0x4be8	; 0x4be8 <__utoa_common>

00004bd6 <__mulhi_const_10>:
    4bd6:	7a e0       	ldi	r23, 0x0A	; 10
    4bd8:	97 9f       	mul	r25, r23
    4bda:	90 2d       	mov	r25, r0
    4bdc:	87 9f       	mul	r24, r23
    4bde:	80 2d       	mov	r24, r0
    4be0:	91 0d       	add	r25, r1
    4be2:	11 24       	eor	r1, r1
    4be4:	08 95       	ret

00004be6 <__utoa_ncheck>:
    4be6:	bb 27       	eor	r27, r27

00004be8 <__utoa_common>:
    4be8:	fb 01       	movw	r30, r22
    4bea:	55 27       	eor	r21, r21
    4bec:	aa 27       	eor	r26, r26
    4bee:	88 0f       	add	r24, r24
    4bf0:	99 1f       	adc	r25, r25
    4bf2:	aa 1f       	adc	r26, r26
    4bf4:	a4 17       	cp	r26, r20
    4bf6:	10 f0       	brcs	.+4      	; 0x4bfc <__utoa_common+0x14>
    4bf8:	a4 1b       	sub	r26, r20
    4bfa:	83 95       	inc	r24
    4bfc:	50 51       	subi	r21, 0x10	; 16
    4bfe:	b9 f7       	brne	.-18     	; 0x4bee <__utoa_common+0x6>
    4c00:	a0 5d       	subi	r26, 0xD0	; 208
    4c02:	aa 33       	cpi	r26, 0x3A	; 58
    4c04:	08 f0       	brcs	.+2      	; 0x4c08 <__utoa_common+0x20>
    4c06:	a9 5d       	subi	r26, 0xD9	; 217
    4c08:	a1 93       	st	Z+, r26
    4c0a:	00 97       	sbiw	r24, 0x00	; 0
    4c0c:	79 f7       	brne	.-34     	; 0x4bec <__utoa_common+0x4>
    4c0e:	b1 11       	cpse	r27, r1
    4c10:	b1 93       	st	Z+, r27
    4c12:	11 92       	st	Z+, r1
    4c14:	cb 01       	movw	r24, r22
    4c16:	0c 94 0d 26 	jmp	0x4c1a	; 0x4c1a <strrev>

00004c1a <strrev>:
    4c1a:	dc 01       	movw	r26, r24
    4c1c:	fc 01       	movw	r30, r24
    4c1e:	67 2f       	mov	r22, r23
    4c20:	71 91       	ld	r23, Z+
    4c22:	77 23       	and	r23, r23
    4c24:	e1 f7       	brne	.-8      	; 0x4c1e <strrev+0x4>
    4c26:	32 97       	sbiw	r30, 0x02	; 2
    4c28:	04 c0       	rjmp	.+8      	; 0x4c32 <strrev+0x18>
    4c2a:	7c 91       	ld	r23, X
    4c2c:	6d 93       	st	X+, r22
    4c2e:	70 83       	st	Z, r23
    4c30:	62 91       	ld	r22, -Z
    4c32:	ae 17       	cp	r26, r30
    4c34:	bf 07       	cpc	r27, r31
    4c36:	c8 f3       	brcs	.-14     	; 0x4c2a <strrev+0x10>
    4c38:	08 95       	ret

00004c3a <__prologue_saves__>:
    4c3a:	2f 92       	push	r2
    4c3c:	3f 92       	push	r3
    4c3e:	4f 92       	push	r4
    4c40:	5f 92       	push	r5
    4c42:	6f 92       	push	r6
    4c44:	7f 92       	push	r7
    4c46:	8f 92       	push	r8
    4c48:	9f 92       	push	r9
    4c4a:	af 92       	push	r10
    4c4c:	bf 92       	push	r11
    4c4e:	cf 92       	push	r12
    4c50:	df 92       	push	r13
    4c52:	ef 92       	push	r14
    4c54:	ff 92       	push	r15
    4c56:	0f 93       	push	r16
    4c58:	1f 93       	push	r17
    4c5a:	cf 93       	push	r28
    4c5c:	df 93       	push	r29
    4c5e:	cd b7       	in	r28, 0x3d	; 61
    4c60:	de b7       	in	r29, 0x3e	; 62
    4c62:	ca 1b       	sub	r28, r26
    4c64:	db 0b       	sbc	r29, r27
    4c66:	0f b6       	in	r0, 0x3f	; 63
    4c68:	f8 94       	cli
    4c6a:	de bf       	out	0x3e, r29	; 62
    4c6c:	0f be       	out	0x3f, r0	; 63
    4c6e:	cd bf       	out	0x3d, r28	; 61
    4c70:	09 94       	ijmp

00004c72 <__epilogue_restores__>:
    4c72:	2a 88       	ldd	r2, Y+18	; 0x12
    4c74:	39 88       	ldd	r3, Y+17	; 0x11
    4c76:	48 88       	ldd	r4, Y+16	; 0x10
    4c78:	5f 84       	ldd	r5, Y+15	; 0x0f
    4c7a:	6e 84       	ldd	r6, Y+14	; 0x0e
    4c7c:	7d 84       	ldd	r7, Y+13	; 0x0d
    4c7e:	8c 84       	ldd	r8, Y+12	; 0x0c
    4c80:	9b 84       	ldd	r9, Y+11	; 0x0b
    4c82:	aa 84       	ldd	r10, Y+10	; 0x0a
    4c84:	b9 84       	ldd	r11, Y+9	; 0x09
    4c86:	c8 84       	ldd	r12, Y+8	; 0x08
    4c88:	df 80       	ldd	r13, Y+7	; 0x07
    4c8a:	ee 80       	ldd	r14, Y+6	; 0x06
    4c8c:	fd 80       	ldd	r15, Y+5	; 0x05
    4c8e:	0c 81       	ldd	r16, Y+4	; 0x04
    4c90:	1b 81       	ldd	r17, Y+3	; 0x03
    4c92:	aa 81       	ldd	r26, Y+2	; 0x02
    4c94:	b9 81       	ldd	r27, Y+1	; 0x01
    4c96:	ce 0f       	add	r28, r30
    4c98:	d1 1d       	adc	r29, r1
    4c9a:	0f b6       	in	r0, 0x3f	; 63
    4c9c:	f8 94       	cli
    4c9e:	de bf       	out	0x3e, r29	; 62
    4ca0:	0f be       	out	0x3f, r0	; 63
    4ca2:	cd bf       	out	0x3d, r28	; 61
    4ca4:	ed 01       	movw	r28, r26
    4ca6:	08 95       	ret

00004ca8 <__do_global_dtors>:
    4ca8:	14 e0       	ldi	r17, 0x04	; 4
    4caa:	cd e0       	ldi	r28, 0x0D	; 13
    4cac:	d4 e0       	ldi	r29, 0x04	; 4
    4cae:	04 c0       	rjmp	.+8      	; 0x4cb8 <__do_global_dtors+0x10>
    4cb0:	fe 01       	movw	r30, r28
    4cb2:	0e 94 8e 23 	call	0x471c	; 0x471c <__tablejump2__>
    4cb6:	21 96       	adiw	r28, 0x01	; 1
    4cb8:	ce 30       	cpi	r28, 0x0E	; 14
    4cba:	d1 07       	cpc	r29, r17
    4cbc:	c9 f7       	brne	.-14     	; 0x4cb0 <__do_global_dtors+0x8>
    4cbe:	f8 94       	cli

00004cc0 <__stop_program>:
    4cc0:	ff cf       	rjmp	.-2      	; 0x4cc0 <__stop_program>
