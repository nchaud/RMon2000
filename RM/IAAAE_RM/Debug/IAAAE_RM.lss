
IAAAE_RM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800100  00004cf8  00004d8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004cf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002f2  0080019a  0080019a  00004e26  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00004e26  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004e88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000d00  00000000  00000000  00004ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002142c  00000000  00000000  00005bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004a34  00000000  00000000  00026ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00007337  00000000  00000000  0002ba28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000030c4  00000000  00000000  00032d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005f5d  00000000  00000000  00035e24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00011bce  00000000  00000000  0003bd81  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000d00  00000000  00000000  0004d94f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 0d 04 	jmp	0x81a	; 0x81a <__dtors_end>
       4:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
       8:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
       c:	0c 94 ae 21 	jmp	0x435c	; 0x435c <__vector_3>
      10:	0c 94 ae 21 	jmp	0x435c	; 0x435c <__vector_3>
      14:	0c 94 ae 21 	jmp	0x435c	; 0x435c <__vector_3>
      18:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      1c:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      20:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      24:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      28:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      2c:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      30:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      34:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      38:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      3c:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      40:	0c 94 3a 1e 	jmp	0x3c74	; 0x3c74 <__vector_16>
      44:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      48:	0c 94 d9 1b 	jmp	0x37b2	; 0x37b2 <__vector_18>
      4c:	0c 94 0b 1c 	jmp	0x3816	; 0x3816 <__vector_19>
      50:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      54:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      58:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      5c:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>
      60:	0c 94 97 17 	jmp	0x2f2e	; 0x2f2e <__vector_24>
      64:	0c 94 35 04 	jmp	0x86a	; 0x86a <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	09 3c       	cpi	r16, 0xC9	; 201
      6a:	2d 2d       	mov	r18, r13
      6c:	2d 20       	and	r2, r13
	...

0000006f <_ZZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_jE3__c>:
      6f:	09 2d 2d 2d 3e 20 00                                .---> .

00000076 <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperljE3__c_0>:
      76:	09 3c 2d 2d 2d 20 00                                .<--- .

0000007d <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperljE3__c>:
      7d:	09 2d 2d 2d 3e 20 00                                .---> .

00000084 <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperjE3__c_0>:
      84:	09 3c 2d 2d 2d 20 00                                .<--- .

0000008b <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperjE3__c>:
      8b:	09 2d 2d 2d 3e 20 00                                .---> .

00000092 <_ZZN13Adafruit_FONA8readlineEjbE3__c>:
      92:	53 50 41 43 45 00                                   SPACE.

00000098 <_ZZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperjE3__c>:
      98:	09 3c 2d 2d 2d 20 00                                .<--- .

0000009f <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c_1>:
      9f:	55 41 00                                            UA.

000000a2 <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c_0>:
      a2:	55 52 4c 00                                         URL.

000000a6 <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c>:
      a6:	43 49 44 00                                         CID.

000000aa <_ZZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_PcE3__c>:
      aa:	43 4f 4e 54 45 4e 54 00                             CONTENT.

000000b2 <_ZZN13Adafruit_FONA12HTTP_readallEjPcE3__c_0>:
      b2:	2b 48 54 54 50 52 45 41 44 3a 20 00                 +HTTPREAD: .

000000be <_ZZN13Adafruit_FONA12HTTP_readallEjPcE3__c>:
      be:	41 54 2b 48 54 54 50 52 45 41 44 3d 30 2c 00        AT+HTTPREAD=0,.

000000cd <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c_1>:
      cd:	2b 48 54 54 50 41 43 54 49 4f 4e 3a 00              +HTTPACTION:.

000000da <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c_0>:
      da:	2b 48 54 54 50 41 43 54 49 4f 4e 3a 00              +HTTPACTION:.

000000e7 <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c>:
      e7:	41 54 2b 48 54 54 50 41 43 54 49 4f 4e 3d 00        AT+HTTPACTION=.

000000f6 <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_2>:
      f6:	44 4f 57 4e 4c 4f 41 44 00                          DOWNLOAD.

000000ff <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_1>:
      ff:	41 54 2b 48 54 54 50 44 41 54 41 3d 00              AT+HTTPDATA=.

0000010c <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_0>:
     10c:	41 54 2b 48 54 54 50 44 41 54 41 3d 00              AT+HTTPDATA=.

00000119 <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c>:
     119:	09 2d 2d 2d 3e 20 00                                .---> .

00000120 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_3>:
     120:	22 2c 00                                            ",.

00000123 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_2>:
     123:	22 2c 22 00                                         ",".

00000127 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_1>:
     127:	41 54 2b 48 54 54 50 50 41 52 41 3d 22 00           AT+HTTPPARA=".

00000135 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_0>:
     135:	41 54 2b 48 54 54 50 50 41 52 41 3d 22 00           AT+HTTPPARA=".

00000143 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c>:
     143:	09 2d 2d 2d 3e 20 00                                .---> .

0000014a <_ZZN13Adafruit_FONA9HTTP_termEvE3__c>:
     14a:	41 54 2b 48 54 54 50 54 45 52 4d 00                 AT+HTTPTERM.

00000156 <_ZZN13Adafruit_FONA9HTTP_initEvE3__c>:
     156:	41 54 2b 48 54 54 50 49 4e 49 54 00                 AT+HTTPINIT.

00000162 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_4>:
     162:	2c 20 77 65 27 76 65 20 72 65 61 64 20 00           , we've read .

00000170 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_3>:
     170:	2c 20 77 69 74 68 20 6f 75 72 20 6d 61 78 20 6f     , with our max o
     180:	66 20 00                                            f .

00000183 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_2>:
     183:	52 65 63 65 69 76 65 64 20 72 65 73 70 6f 6e 73     Received respons
     193:	65 20 6f 66 20 6c 65 6e 67 74 68 20 00              e of length .

000001a0 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_1>:
     1a0:	46 61 69 6c 65 64 20 74 6f 20 73 65 6e 64 20 64     Failed to send d
     1b0:	61 74 61 2c 20 73 74 61 74 75 73 20 63 6f 64 65     ata, status code
     1c0:	3a 20 00                                            : .

000001c3 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_0>:
     1c3:	74 65 78 74 2f 70 6c 61 69 6e 00                    text/plain.

000001ce <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c>:
     1ce:	68 74 74 70 3a 2f 2f 72 6d 6f 6e 2e 6b 68 75 64     http://rmon.khud
     1de:	64 61 6d 2e 6f 72 67 2e 75 6b 2f 3f 61 3d 61 64     dam.org.uk/?a=ad
     1ee:	64 00                                               d.

000001f0 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_14>:
     1f0:	41 54 2b 43 47 41 54 54 3d 30 00                    AT+CGATT=0.

000001fb <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_13>:
     1fb:	41 54 2b 53 41 50 42 52 3d 30 2c 31 00              AT+SAPBR=0,1.

00000208 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_11>:
     208:	41 54 2b 43 49 50 53 48 55 54 00                    AT+CIPSHUT.

00000213 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_12>:
     213:	53 48 55 54 20 4f 4b 00                             SHUT OK.

0000021b <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_10>:
     21b:	41 54 2b 43 49 49 43 52 00                          AT+CIICR.

00000224 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_9>:
     224:	41 54 2b 53 41 50 42 52 3d 31 2c 31 00              AT+SAPBR=1,1.

00000231 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_8>:
     231:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 50 57     AT+SAPBR=3,1,"PW
     241:	44 22 2c 00                                         D",.

00000245 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_7>:
     245:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 55 53     AT+SAPBR=3,1,"US
     255:	45 52 22 2c 00                                      ER",.

0000025a <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_6>:
     25a:	41 54 2b 43 53 54 54 3d 22 00                       AT+CSTT=".

00000264 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_5>:
     264:	09 2d 2d 2d 3e 20 00                                .---> .

0000026b <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_4>:
     26b:	41 54 2b 43 53 54 54 3d 22 00                       AT+CSTT=".

00000275 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_3>:
     275:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 41 50     AT+SAPBR=3,1,"AP
     285:	4e 22 2c 00                                         N",.

00000289 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_2>:
     289:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 43 4f     AT+SAPBR=3,1,"CO
     299:	4e 54 59 50 45 22 2c 22 47 50 52 53 22 00           NTYPE","GPRS".

000002a7 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_1>:
     2a7:	41 54 2b 43 47 41 54 54 3d 31 00                    AT+CGATT=1.

000002b2 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c>:
     2b2:	41 54 2b 43 49 50 53 48 55 54 00                    AT+CIPSHUT.

000002bd <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_0>:
     2bd:	53 48 55 54 20 4f 4b 00                             SHUT OK.

000002c5 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_5>:
     2c5:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000002ce <_ZZN13Adafruit_FONA7getRSSIEvE3__c_6>:
     2ce:	2b 43 52 45 47 3a 20 00                             +CREG: .

000002d6 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_3>:
     2d6:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000002df <_ZZN13Adafruit_FONA7getRSSIEvE3__c_4>:
     2df:	2b 43 52 45 47 3a 20 00                             +CREG: .

000002e7 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_1>:
     2e7:	41 54 2b 43 53 51 00                                AT+CSQ.

000002ee <_ZZN13Adafruit_FONA7getRSSIEvE3__c_2>:
     2ee:	2b 43 53 51 3a 20 00                                +CSQ: .

000002f5 <_ZZN13Adafruit_FONA7getRSSIEvE3__c>:
     2f5:	41 54 2b 43 53 51 00                                AT+CSQ.

000002fc <_ZZN13Adafruit_FONA7getRSSIEvE3__c_0>:
     2fc:	2b 43 53 51 3a 20 00                                +CSQ: .

00000303 <_ZZN13Adafruit_FONA14getBattPercentEPjE3__c>:
     303:	41 54 2b 43 42 43 00                                AT+CBC.

0000030a <_ZZN13Adafruit_FONA14getBattPercentEPjE3__c_0>:
     30a:	2b 43 42 43 3a 20 00                                +CBC: .

00000311 <_ZZN13Adafruit_FONA5beginEhhE3__c_11>:
     311:	53 49 4d 38 30 38 20 52 31 34 00                    SIM808 R14.

0000031c <_ZZN13Adafruit_FONA5beginEhhE3__c_10>:
     31c:	09 3c 2d 2d 2d 20 00                                .<--- .

00000323 <_ZZN13Adafruit_FONA5beginEhhE3__c_9>:
     323:	09 2d 2d 2d 3e 20 00                                .---> .

0000032a <_ZZN13Adafruit_FONA5beginEhhE3__c_8>:
     32a:	41 54 45 30 00                                      ATE0.

0000032f <_ZZN13Adafruit_FONA5beginEhhE3__c_7>:
     32f:	41 54 45 30 00                                      ATE0.

00000334 <_ZZN13Adafruit_FONA5beginEhhE3__c_6>:
     334:	41 54 20 46 61 69 6c 2e 2e 2e 20 6c 61 73 74 20     AT Fail... last 
     344:	64 69 74 63 68 20 61 74 74 65 6d 70 74 2e 00        ditch attempt..

00000353 <_ZZN13Adafruit_FONA5beginEhhE3__c_5>:
     353:	41 54 00                                            AT.

00000356 <_ZZN13Adafruit_FONA5beginEhhE3__c_4>:
     356:	41 54 00                                            AT.

00000359 <_ZZN13Adafruit_FONA5beginEhhE3__c_3>:
     359:	41 54 00                                            AT.

0000035c <_ZZN13Adafruit_FONA5beginEhhE3__c_1>:
     35c:	41 54 00                                            AT.

0000035f <_ZZN13Adafruit_FONA5beginEhhE3__c_2>:
     35f:	41 54 00                                            AT.

00000362 <_ZZN13Adafruit_FONA5beginEhhE3__c_0>:
     362:	41 54 00                                            AT.

00000365 <_ZZN13Adafruit_FONA5beginEhhE3__c>:
     365:	41 74 74 65 6d 70 74 69 6e 67 20 74 6f 20 6f 70     Attempting to op
     375:	65 6e 20 63 6f 6d 6d 20 77 69 74 68 20 41 54 73     en comm with ATs
	...

00000386 <_ZZN13Adafruit_FONAC4EabE3__c_0>:
     386:	4f 4b 00                                            OK.

00000389 <_ZZN13Adafruit_FONAC4EabE3__c>:
     389:	46 4f 4e 41 6e 65 74 00                             FONAnet.

00000391 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_17>:
     391:	20 7c 20 00                                          | .

00000395 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_16>:
     395:	52 65 73 70 6f 6e 73 65 20 43 6f 64 65 3d 00        Response Code=.

000003a4 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_15>:
     3a4:	20 7c 20 00                                          | .

000003a8 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_14>:
     3a8:	52 65 73 70 6f 6e 73 65 20 4c 65 6e 3d 00           Response Len=.

000003b6 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_13>:
     3b6:	20 7c 20 00                                          | .

000003ba <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_12>:
     3ba:	09 52 65 73 70 6f 6e 73 65 20 49 64 3d 00           .Response Id=.

000003c8 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_11>:
     3c8:	20 7c 20 00                                          | .

000003cc <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_10>:
     3cc:	53 65 6e 64 20 53 74 61 74 75 73 3d 00              Send Status=.

000003d9 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_9>:
     3d9:	20 7c 20 00                                          | .

000003dd <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_8>:
     3dd:	47 50 52 53 20 53 74 61 74 75 73 3d 00              GPRS Status=.

000003ea <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_7>:
     3ea:	20 7c 20 00                                          | .

000003ee <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_6>:
     3ee:	09 49 6e 69 74 20 53 74 61 74 75 73 3d 00           .Init Status=.

000003fc <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_5>:
     3fc:	09 00                                               ..

000003fe <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_4>:
     3fe:	20 7c 20 00                                          | .

00000402 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_3>:
     402:	42 61 74 74 25 3d 00                                Batt%=.

00000409 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_2>:
     409:	20 7c 20 00                                          | .

0000040d <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_1>:
     40d:	23 52 65 61 64 69 6e 67 73 3d 00                    #Readings=.

00000418 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_0>:
     418:	20 7c 20 00                                          | .

0000041c <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c>:
     41c:	09 42 6f 6f 74 23 3d 00                             .Boot#=.

00000424 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_7>:
     424:	45 72 72 6f 72 3d 00                                Error=.

0000042b <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_6>:
     42b:	20 7c 20 00                                          | .

0000042f <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_5>:
     42f:	54 65 6d 70 3d 00                                   Temp=.

00000435 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_4>:
     435:	20 7c 20 00                                          | .

00000439 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_3>:
     439:	43 75 72 72 65 6e 74 3d 00                          Current=.

00000442 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_2>:
     442:	20 7c 20 00                                          | .

00000446 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_1>:
     446:	50 56 2d 56 3d 00                                   PV-V=.

0000044c <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_0>:
     44c:	20 7c 20 00                                          | .

00000450 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c>:
     450:	42 61 74 74 2d 56 3d 00                             Batt-V=.

00000458 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_7>:
     458:	52 53 53 49 20 45 72 72 6f 72 3f 3d 00              RSSI Error?=.

00000465 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_6>:
     465:	20 7c 20 00                                          | .

00000469 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_5>:
     469:	2c 20 45 72 72 6f 72 3d 00                          , Error=.

00000472 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_4>:
     472:	2c 20 53 74 61 74 75 73 3d 00                       , Status=.

0000047c <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_3>:
     47c:	4e 65 74 77 6f 72 6b 2d 52 65 67 20 52 65 73 43     Network-Reg ResC
     48c:	6f 64 65 3d 00                                      ode=.

00000491 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_2>:
     491:	20 7c 20 00                                          | .

00000495 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_1>:
     495:	42 45 52 3d 00                                      BER=.

0000049a <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_0>:
     49a:	20 7c 20 00                                          | .

0000049e <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c>:
     49e:	52 53 53 49 3d 00                                   RSSI=.

000004a4 <_ZL12b64_alphabet>:
     4a4:	41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50     ABCDEFGHIJKLMNOP
     4b4:	51 52 53 54 55 56 57 58 59 5a 61 62 63 64 65 66     QRSTUVWXYZabcdef
     4c4:	67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76     ghijklmnopqrstuv
     4d4:	77 78 79 7a 30 31 32 33 34 35 36 37 38 39 2b 2f     wxyz0123456789+/
	...

000004e5 <_ZZ4loopE3__c>:
     4e5:	42 65 68 61 76 69 6f 75 72 00                       Behaviour.

000004ef <_ZZ8sendDatavE3__c_3>:
     4ef:	53 65 6e 64 2d 44 61 74 61 20 53 74 61 74 75 73     Send-Data Status
     4ff:	20 53 6c 6f 74 3a 00                                 Slot:.

00000506 <_ZZ8sendDatavE3__c_2>:
     506:	45 6e 63 6f 64 65 64 20 64 61 74 61 20 63 72 65     Encoded data cre
     516:	61 74 65 64 20 61 6e 64 20 72 65 61 64 79 20 66     ated and ready f
     526:	6f 72 20 73 65 6e 64 3a 00                          or send:.

0000052f <_ZZ8sendDatavE3__c_1>:
     52f:	09 28 46 6f 6e 61 20 49 6e 69 74 20 45 52 52 4f     .(Fona Init ERRO
     53f:	52 29 00                                            R).

00000542 <_ZZ8sendDatavE3__c_0>:
     542:	09 28 46 6f 6e 61 20 49 6e 69 74 20 50 65 6e 64     .(Fona Init Pend
     552:	69 6e 67 2e 2e 2e 29 00                             ing...).

0000055a <_ZZ8sendDatavE3__c>:
     55a:	49 6e 69 74 69 61 6c 69 73 69 6e 67 20 46 6f 6e     Initialising Fon
     56a:	61 20 74 6f 20 73 65 6e 64 20 64 61 74 61 00        a to send data.

00000579 <_ZZ17createEncodedDataPcPhh13FONA_GET_RSSIE3__c>:
     579:	2a 2a 2a 2a 20 54 6f 6f 20 6c 69 74 74 6c 65 20     **** Too little 
     589:	52 41 4d 20 62 65 66 6f 72 65 20 70 61 79 6c 6f     RAM before paylo
     599:	61 64 20 63 72 65 61 74 69 6f 6e 20 2a 2a 2a 00     ad creation ***.

000005a9 <_ZZ12takeReadingsvE3__c>:
     5a9:	54 61 6b 69 6e 67 20 72 65 61 64 69 6e 67 73 2e     Taking readings.
     5b9:	2e 2e 00                                            ...

000005bc <_ZZ21ensureFonaInitialisedbE3__c_10>:
     5bc:	09 20 28 47 6f 6f 64 2d 52 53 53 49 20 2d 20 73     . (Good-RSSI - s
     5cc:	75 63 63 65 73 73 66 75 6c 6c 2c 20 61 6c 6c 20     uccessfull, all 
     5dc:	64 6f 6e 65 29 00                                   done).

000005e2 <_ZZ21ensureFonaInitialisedbE3__c_9>:
     5e2:	09 20 28 57 61 69 74 69 6e 67 20 46 6f 72 20 47     . (Waiting For G
     5f2:	6f 6f 64 2d 52 53 53 49 20 54 69 6d 65 64 20 4f     ood-RSSI Timed O
     602:	75 74 20 2d 20 77 69 6c 6c 20 63 6f 6e 74 69 6e     ut - will contin
     612:	75 65 20 6e 6f 77 29 00                             ue now).

0000061a <_ZZ21ensureFonaInitialisedbE3__c_8>:
     61a:	09 20 28 42 61 64 2d 52 53 53 49 20 2d 20 77 69     . (Bad-RSSI - wi
     62a:	6c 6c 20 63 68 65 63 6b 20 61 67 61 69 6e 20 61     ll check again a
     63a:	66 74 65 72 20 69 6e 74 65 72 76 61 6c 29 00        fter interval).

00000649 <_ZZ21ensureFonaInitialisedbE3__c_7>:
     649:	43 68 65 63 6b 69 6e 67 20 52 53 53 49 20 2d 20     Checking RSSI - 
     659:	63 75 72 72 65 6e 74 6c 79 3a 00                    currently:.

00000664 <_ZZ21ensureFonaInitialisedbE3__c_6>:
     664:	47 50 52 53 20 69 6e 69 74 69 61 6c 69 73 65 64     GPRS initialised
     674:	20 73 75 63 63 65 73 73 66 75 6c 6c 79 20 21 00      successfully !.

00000684 <_ZZ21ensureFonaInitialisedbE3__c_5>:
     684:	41 6c 6c 20 61 74 74 65 6d 70 74 73 20 74 6f 20     All attempts to 
     694:	65 6e 61 62 6c 65 20 47 50 52 53 20 66 61 69 6c     enable GPRS fail
     6a4:	65 64 00                                            ed.

000006a7 <_ZZ21ensureFonaInitialisedbE3__c_4>:
     6a7:	57 69 6c 6c 20 74 72 79 20 74 6f 20 65 6e 61 62     Will try to enab
     6b7:	6c 65 20 47 50 52 53 20 61 67 61 69 6e 20 73 68     le GPRS again sh
     6c7:	6f 72 74 6c 79 00                                   ortly.

000006cd <_ZZ21ensureFonaInitialisedbE3__c_3>:
     6cd:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 73 69     Error initialisi
     6dd:	6e 67 20 47 50 52 53 00                             ng GPRS.

000006e5 <_ZZ21ensureFonaInitialisedbE3__c_2>:
     6e5:	41 74 74 65 6d 70 74 69 6e 67 20 74 6f 20 65 6e     Attempting to en
     6f5:	61 62 6c 65 20 47 50 52 53 2e 2e 2e 00              able GPRS....

00000702 <_ZZ21ensureFonaInitialisedbE3__c_1>:
     702:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 73 69     Error initialisi
     712:	6e 67 20 66 6f 6e 61 2e 2e 2e 00                    ng fona....

0000071d <_ZZ21ensureFonaInitialisedbE3__c_0>:
     71d:	49 6e 69 74 69 61 6c 69 73 69 6e 67 20 66 6f 6e     Initialising fon
     72d:	61 2e 2e 2e 00                                      a....

00000732 <_ZZ21ensureFonaInitialisedbE3__c>:
     732:	53 77 69 74 63 68 69 6e 67 20 6f 6e 20 66 6f 6e     Switching on fon
     742:	61 2e 2e 2e 00                                      a....

00000747 <_ZZ5setupE3__c>:
     747:	53 74 61 72 74 69 6e 67 2e 2e 2e 00                 Starting....

00000753 <_ZZN13ExtendedTests20startExtendedGsmTestEP12RmMemManagerE3__c_0>:
     753:	53 65 6e 73 6f 72 2d 44 61 74 61 73 20 67 6f 69     Sensor-Datas goi
     763:	6e 67 20 66 6f 72 20 74 72 61 6e 73 6d 69 73 73     ng for transmiss
     773:	69 6f 6e 3a 00                                      ion:.

00000778 <_ZZN13ExtendedTests20startExtendedGsmTestEP12RmMemManagerE3__c>:
     778:	2a 2a 2a 2a 00                                      ****.

0000077d <_ZZN13ExtendedTests18endExtendedGsmTestEvE3__c>:
     77d:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 20     ~~~~~~~~~~~~~~~ 
     78d:	45 78 74 65 6e 64 65 64 20 47 53 4d 20 54 65 73     Extended GSM Tes
     79d:	74 20 43 6f 6d 70 6c 65 74 65 7e 7e 7e 7e 7e 7e     t Complete~~~~~~
     7ad:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 00                    ~~~~~~~~~~.

000007b8 <digital_pin_to_timer_PGM>:
     7b8:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
     7c8:	00 00 00 00                                         ....

000007cc <digital_pin_to_bit_mask_PGM>:
     7cc:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     7dc:	04 08 10 20                                         ... 

000007e0 <digital_pin_to_port_PGM>:
     7e0:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     7f0:	03 03 03 03                                         ....

000007f4 <port_to_input_PGM>:
     7f4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000007fe <port_to_output_PGM>:
     7fe:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00000808 <port_to_mode_PGM>:
     808:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

00000812 <__ctors_start>:
     812:	aa 14       	cp	r10, r10
     814:	2d 1a       	sub	r2, r29
     816:	3b 1c       	adc	r3, r11

00000818 <__ctors_end>:
     818:	c5 14       	cp	r12, r5

0000081a <__dtors_end>:
     81a:	11 24       	eor	r1, r1
     81c:	1f be       	out	0x3f, r1	; 63
     81e:	cf ef       	ldi	r28, 0xFF	; 255
     820:	d8 e0       	ldi	r29, 0x08	; 8
     822:	de bf       	out	0x3e, r29	; 62
     824:	cd bf       	out	0x3d, r28	; 61

00000826 <__do_copy_data>:
     826:	11 e0       	ldi	r17, 0x01	; 1
     828:	a0 e0       	ldi	r26, 0x00	; 0
     82a:	b1 e0       	ldi	r27, 0x01	; 1
     82c:	e8 ef       	ldi	r30, 0xF8	; 248
     82e:	fc e4       	ldi	r31, 0x4C	; 76
     830:	02 c0       	rjmp	.+4      	; 0x836 <__do_copy_data+0x10>
     832:	05 90       	lpm	r0, Z+
     834:	0d 92       	st	X+, r0
     836:	aa 39       	cpi	r26, 0x9A	; 154
     838:	b1 07       	cpc	r27, r17
     83a:	d9 f7       	brne	.-10     	; 0x832 <__do_copy_data+0xc>

0000083c <__do_clear_bss>:
     83c:	24 e0       	ldi	r18, 0x04	; 4
     83e:	aa e9       	ldi	r26, 0x9A	; 154
     840:	b1 e0       	ldi	r27, 0x01	; 1
     842:	01 c0       	rjmp	.+2      	; 0x846 <.do_clear_bss_start>

00000844 <.do_clear_bss_loop>:
     844:	1d 92       	st	X+, r1

00000846 <.do_clear_bss_start>:
     846:	ac 38       	cpi	r26, 0x8C	; 140
     848:	b2 07       	cpc	r27, r18
     84a:	e1 f7       	brne	.-8      	; 0x844 <.do_clear_bss_loop>

0000084c <__do_global_ctors>:
     84c:	14 e0       	ldi	r17, 0x04	; 4
     84e:	cc e0       	ldi	r28, 0x0C	; 12
     850:	d4 e0       	ldi	r29, 0x04	; 4
     852:	04 c0       	rjmp	.+8      	; 0x85c <__do_global_ctors+0x10>
     854:	21 97       	sbiw	r28, 0x01	; 1
     856:	fe 01       	movw	r30, r28
     858:	0e 94 a9 23 	call	0x4752	; 0x4752 <__tablejump2__>
     85c:	c9 30       	cpi	r28, 0x09	; 9
     85e:	d1 07       	cpc	r29, r17
     860:	c9 f7       	brne	.-14     	; 0x854 <__do_global_ctors+0x8>
     862:	0e 94 69 1c 	call	0x38d2	; 0x38d2 <main>
     866:	0c 94 6f 26 	jmp	0x4cde	; 0x4cde <__do_global_dtors>

0000086a <__bad_interrupt>:
     86a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000086e <_ZN13Adafruit_FONA9availableEv>:
  return sendParseReply(F("AT+CBC"), F("+CBC: "), p, ',', 1);
}

boolean Adafruit_FONA::getADCVoltage(uint16_t *v) {
  return sendParseReply(F("AT+CADC?"), F("+CADC: 1,"), v);
}
     86e:	83 5e       	subi	r24, 0xE3	; 227
     870:	9e 4f       	sbci	r25, 0xFE	; 254
     872:	dc 01       	movw	r26, r24
     874:	8d 91       	ld	r24, X+
     876:	9c 91       	ld	r25, X
     878:	dc 01       	movw	r26, r24
     87a:	ed 91       	ld	r30, X+
     87c:	fc 91       	ld	r31, X
     87e:	04 80       	ldd	r0, Z+4	; 0x04
     880:	f5 81       	ldd	r31, Z+5	; 0x05
     882:	e0 2d       	mov	r30, r0
     884:	09 94       	ijmp

00000886 <_ZN13Adafruit_FONA5writeEh>:
     886:	83 5e       	subi	r24, 0xE3	; 227
     888:	9e 4f       	sbci	r25, 0xFE	; 254
     88a:	dc 01       	movw	r26, r24
     88c:	8d 91       	ld	r24, X+
     88e:	9c 91       	ld	r25, X
     890:	dc 01       	movw	r26, r24
     892:	ed 91       	ld	r30, X+
     894:	fc 91       	ld	r31, X
     896:	01 90       	ld	r0, Z+
     898:	f0 81       	ld	r31, Z
     89a:	e0 2d       	mov	r30, r0
     89c:	09 94       	ijmp

0000089e <_ZN13Adafruit_FONA4readEv>:
     89e:	83 5e       	subi	r24, 0xE3	; 227
     8a0:	9e 4f       	sbci	r25, 0xFE	; 254
     8a2:	dc 01       	movw	r26, r24
     8a4:	8d 91       	ld	r24, X+
     8a6:	9c 91       	ld	r25, X
     8a8:	dc 01       	movw	r26, r24
     8aa:	ed 91       	ld	r30, X+
     8ac:	fc 91       	ld	r31, X
     8ae:	06 80       	ldd	r0, Z+6	; 0x06
     8b0:	f7 81       	ldd	r31, Z+7	; 0x07
     8b2:	e0 2d       	mov	r30, r0
     8b4:	09 94       	ijmp

000008b6 <_ZN13Adafruit_FONA4peekEv>:
     8b6:	83 5e       	subi	r24, 0xE3	; 227
     8b8:	9e 4f       	sbci	r25, 0xFE	; 254
     8ba:	dc 01       	movw	r26, r24
     8bc:	8d 91       	ld	r24, X+
     8be:	9c 91       	ld	r25, X
     8c0:	dc 01       	movw	r26, r24
     8c2:	ed 91       	ld	r30, X+
     8c4:	fc 91       	ld	r31, X
     8c6:	00 84       	ldd	r0, Z+8	; 0x08
     8c8:	f1 85       	ldd	r31, Z+9	; 0x09
     8ca:	e0 2d       	mov	r30, r0
     8cc:	09 94       	ijmp

000008ce <_ZN13Adafruit_FONA5flushEv>:
     8ce:	83 5e       	subi	r24, 0xE3	; 227
     8d0:	9e 4f       	sbci	r25, 0xFE	; 254
     8d2:	dc 01       	movw	r26, r24
     8d4:	8d 91       	ld	r24, X+
     8d6:	9c 91       	ld	r25, X
     8d8:	dc 01       	movw	r26, r24
     8da:	ed 91       	ld	r30, X+
     8dc:	fc 91       	ld	r31, X
     8de:	02 84       	ldd	r0, Z+10	; 0x0a
     8e0:	f3 85       	ldd	r31, Z+11	; 0x0b
     8e2:	e0 2d       	mov	r30, r0
     8e4:	09 94       	ijmp

000008e6 <_ZN13Adafruit_FONAC1Eab>:
     8e6:	0f 93       	push	r16
     8e8:	1f 93       	push	r17
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	ec 01       	movw	r28, r24
     8f0:	06 2f       	mov	r16, r22
     8f2:	14 2f       	mov	r17, r20
     8f4:	1b 82       	std	Y+3, r1	; 0x03
     8f6:	1a 82       	std	Y+2, r1	; 0x02
     8f8:	88 ee       	ldi	r24, 0xE8	; 232
     8fa:	93 e0       	ldi	r25, 0x03	; 3
     8fc:	a0 e0       	ldi	r26, 0x00	; 0
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	8c 83       	std	Y+4, r24	; 0x04
     902:	9d 83       	std	Y+5, r25	; 0x05
     904:	ae 83       	std	Y+6, r26	; 0x06
     906:	bf 83       	std	Y+7, r27	; 0x07
     908:	8d e2       	ldi	r24, 0x2D	; 45
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	99 83       	std	Y+1, r25	; 0x01
     90e:	88 83       	st	Y, r24
     910:	83 e0       	ldi	r24, 0x03	; 3
     912:	8e 87       	std	Y+14, r24	; 0x0e
     914:	6c e7       	ldi	r22, 0x7C	; 124
     916:	71 e0       	ldi	r23, 0x01	; 1
     918:	ce 01       	movw	r24, r28
     91a:	8b 5e       	subi	r24, 0xEB	; 235
     91c:	9e 4f       	sbci	r25, 0xFE	; 254
     91e:	0e 94 3f 20 	call	0x407e	; 0x407e <_ZN6StringC1EPKc>
     922:	0c 87       	std	Y+12, r16	; 0x0c
     924:	1d 87       	std	Y+13, r17	; 0x0d
     926:	fe 01       	movw	r30, r28
     928:	e2 5f       	subi	r30, 0xF2	; 242
     92a:	fe 4f       	sbci	r31, 0xFE	; 254
     92c:	89 e8       	ldi	r24, 0x89	; 137
     92e:	93 e0       	ldi	r25, 0x03	; 3
     930:	91 83       	std	Z+1, r25	; 0x01
     932:	80 83       	st	Z, r24
     934:	32 96       	adiw	r30, 0x02	; 2
     936:	11 82       	std	Z+1, r1	; 0x01
     938:	10 82       	st	Z, r1
     93a:	32 96       	adiw	r30, 0x02	; 2
     93c:	11 82       	std	Z+1, r1	; 0x01
     93e:	10 82       	st	Z, r1
     940:	3b 96       	adiw	r30, 0x0b	; 11
     942:	11 82       	std	Z+1, r1	; 0x01
     944:	10 82       	st	Z, r1
     946:	39 97       	sbiw	r30, 0x09	; 9
     948:	10 82       	st	Z, r1
     94a:	c5 5e       	subi	r28, 0xE5	; 229
     94c:	de 4f       	sbci	r29, 0xFE	; 254
     94e:	86 e8       	ldi	r24, 0x86	; 134
     950:	93 e0       	ldi	r25, 0x03	; 3
     952:	99 83       	std	Y+1, r25	; 0x01
     954:	88 83       	st	Y, r24
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	1f 91       	pop	r17
     95c:	0f 91       	pop	r16
     95e:	08 95       	ret

00000960 <_ZN13Adafruit_FONA19internalReadRawDataEPcj>:
     960:	af 92       	push	r10
     962:	bf 92       	push	r11
     964:	cf 92       	push	r12
     966:	df 92       	push	r13
     968:	ef 92       	push	r14
     96a:	ff 92       	push	r15
     96c:	0f 93       	push	r16
     96e:	1f 93       	push	r17
     970:	cf 93       	push	r28
     972:	df 93       	push	r29
     974:	8c 01       	movw	r16, r24
     976:	5b 01       	movw	r10, r22
     978:	7a 01       	movw	r14, r20
     97a:	c1 2c       	mov	r12, r1
     97c:	d1 2c       	mov	r13, r1
     97e:	e5 01       	movw	r28, r10
     980:	cc 0d       	add	r28, r12
     982:	dd 1d       	adc	r29, r13
     984:	e1 14       	cp	r14, r1
     986:	f1 04       	cpc	r15, r1
     988:	09 f1       	breq	.+66     	; 0x9cc <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x6c>
     98a:	d8 01       	movw	r26, r16
     98c:	ed 91       	ld	r30, X+
     98e:	fc 91       	ld	r31, X
     990:	04 80       	ldd	r0, Z+4	; 0x04
     992:	f5 81       	ldd	r31, Z+5	; 0x05
     994:	e0 2d       	mov	r30, r0
     996:	c8 01       	movw	r24, r16
     998:	09 95       	icall
     99a:	89 2b       	or	r24, r25
     99c:	81 f3       	breq	.-32     	; 0x97e <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x1e>
     99e:	d8 01       	movw	r26, r16
     9a0:	ed 91       	ld	r30, X+
     9a2:	fc 91       	ld	r31, X
     9a4:	06 80       	ldd	r0, Z+6	; 0x06
     9a6:	f7 81       	ldd	r31, Z+7	; 0x07
     9a8:	e0 2d       	mov	r30, r0
     9aa:	c8 01       	movw	r24, r16
     9ac:	09 95       	icall
     9ae:	89 93       	st	Y+, r24
     9b0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     9b4:	95 ff       	sbrs	r25, 5
     9b6:	fc cf       	rjmp	.-8      	; 0x9b0 <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x50>
     9b8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     9bc:	bf ef       	ldi	r27, 0xFF	; 255
     9be:	cb 1a       	sub	r12, r27
     9c0:	db 0a       	sbc	r13, r27
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	e8 1a       	sub	r14, r24
     9c6:	f1 08       	sbc	r15, r1
     9c8:	01 f7       	brne	.-64     	; 0x98a <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x2a>
     9ca:	d9 cf       	rjmp	.-78     	; 0x97e <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x1e>
     9cc:	18 82       	st	Y, r1
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	1f 91       	pop	r17
     9d4:	0f 91       	pop	r16
     9d6:	ff 90       	pop	r15
     9d8:	ef 90       	pop	r14
     9da:	df 90       	pop	r13
     9dc:	cf 90       	pop	r12
     9de:	bf 90       	pop	r11
     9e0:	af 90       	pop	r10
     9e2:	08 95       	ret

000009e4 <_ZN13Adafruit_FONA12setUserAgentE6String>:
     9e4:	8b 5e       	subi	r24, 0xEB	; 235
     9e6:	9e 4f       	sbci	r25, 0xFE	; 254
     9e8:	0c 94 54 20 	jmp	0x40a8	; 0x40a8 <_ZN6StringaSERKS_>

000009ec <_ZN13Adafruit_FONA10flushInputEv>:
     9ec:	0f 93       	push	r16
     9ee:	1f 93       	push	r17
     9f0:	cf 93       	push	r28
     9f2:	df 93       	push	r29
     9f4:	ec 01       	movw	r28, r24
     9f6:	80 e0       	ldi	r24, 0x00	; 0
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	8c 01       	movw	r16, r24
     9fc:	0f 5f       	subi	r16, 0xFF	; 255
     9fe:	1f 4f       	sbci	r17, 0xFF	; 255
     a00:	88 97       	sbiw	r24, 0x28	; 40
     a02:	d8 f4       	brcc	.+54     	; 0xa3a <_ZN13Adafruit_FONA10flushInputEv+0x4e>
     a04:	e8 81       	ld	r30, Y
     a06:	f9 81       	ldd	r31, Y+1	; 0x01
     a08:	04 80       	ldd	r0, Z+4	; 0x04
     a0a:	f5 81       	ldd	r31, Z+5	; 0x05
     a0c:	e0 2d       	mov	r30, r0
     a0e:	ce 01       	movw	r24, r28
     a10:	09 95       	icall
     a12:	89 2b       	or	r24, r25
     a14:	51 f0       	breq	.+20     	; 0xa2a <_ZN13Adafruit_FONA10flushInputEv+0x3e>
     a16:	e8 81       	ld	r30, Y
     a18:	f9 81       	ldd	r31, Y+1	; 0x01
     a1a:	06 80       	ldd	r0, Z+6	; 0x06
     a1c:	f7 81       	ldd	r31, Z+7	; 0x07
     a1e:	e0 2d       	mov	r30, r0
     a20:	ce 01       	movw	r24, r28
     a22:	09 95       	icall
     a24:	00 e0       	ldi	r16, 0x00	; 0
     a26:	10 e0       	ldi	r17, 0x00	; 0
     a28:	ed cf       	rjmp	.-38     	; 0xa04 <_ZN13Adafruit_FONA10flushInputEv+0x18>
     a2a:	61 e0       	ldi	r22, 0x01	; 1
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
     a36:	c8 01       	movw	r24, r16
     a38:	e0 cf       	rjmp	.-64     	; 0x9fa <_ZN13Adafruit_FONA10flushInputEv+0xe>
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	1f 91       	pop	r17
     a40:	0f 91       	pop	r16
     a42:	08 95       	ret

00000a44 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>:
     a44:	ff 92       	push	r15
     a46:	0f 93       	push	r16
     a48:	1f 93       	push	r17
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	ec 01       	movw	r28, r24
     a50:	8b 01       	movw	r16, r22
     a52:	f4 2e       	mov	r15, r20
     a54:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
     a58:	63 e4       	ldi	r22, 0x43	; 67
     a5a:	71 e0       	ldi	r23, 0x01	; 1
     a5c:	8e e9       	ldi	r24, 0x9E	; 158
     a5e:	93 e0       	ldi	r25, 0x03	; 3
     a60:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     a64:	65 e3       	ldi	r22, 0x35	; 53
     a66:	71 e0       	ldi	r23, 0x01	; 1
     a68:	8e e9       	ldi	r24, 0x9E	; 158
     a6a:	93 e0       	ldi	r25, 0x03	; 3
     a6c:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     a70:	b8 01       	movw	r22, r16
     a72:	8e e9       	ldi	r24, 0x9E	; 158
     a74:	93 e0       	ldi	r25, 0x03	; 3
     a76:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     a7a:	62 e2       	ldi	r22, 0x22	; 34
     a7c:	8e e9       	ldi	r24, 0x9E	; 158
     a7e:	93 e0       	ldi	r25, 0x03	; 3
     a80:	0e 94 1c 1d 	call	0x3a38	; 0x3a38 <_ZN5Print7printlnEc>
     a84:	c3 5e       	subi	r28, 0xE3	; 227
     a86:	de 4f       	sbci	r29, 0xFE	; 254
     a88:	67 e2       	ldi	r22, 0x27	; 39
     a8a:	71 e0       	ldi	r23, 0x01	; 1
     a8c:	88 81       	ld	r24, Y
     a8e:	99 81       	ldd	r25, Y+1	; 0x01
     a90:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     a94:	b8 01       	movw	r22, r16
     a96:	88 81       	ld	r24, Y
     a98:	99 81       	ldd	r25, Y+1	; 0x01
     a9a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     a9e:	88 81       	ld	r24, Y
     aa0:	99 81       	ldd	r25, Y+1	; 0x01
     aa2:	ff 20       	and	r15, r15
     aa4:	19 f0       	breq	.+6      	; 0xaac <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb+0x68>
     aa6:	63 e2       	ldi	r22, 0x23	; 35
     aa8:	71 e0       	ldi	r23, 0x01	; 1
     aaa:	02 c0       	rjmp	.+4      	; 0xab0 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb+0x6c>
     aac:	60 e2       	ldi	r22, 0x20	; 32
     aae:	71 e0       	ldi	r23, 0x01	; 1
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	ff 90       	pop	r15
     aba:	0c 94 b9 1c 	jmp	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>

00000abe <_ZN13Adafruit_FONA8readlineEjb>:
     abe:	bf 92       	push	r11
     ac0:	cf 92       	push	r12
     ac2:	df 92       	push	r13
     ac4:	ef 92       	push	r14
     ac6:	ff 92       	push	r15
     ac8:	0f 93       	push	r16
     aca:	1f 93       	push	r17
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	7c 01       	movw	r14, r24
     ad2:	b4 2e       	mov	r11, r20
     ad4:	8b 01       	movw	r16, r22
     ad6:	00 0f       	add	r16, r16
     ad8:	11 1f       	adc	r17, r17
     ada:	00 0f       	add	r16, r16
     adc:	11 1f       	adc	r17, r17
     ade:	c0 e0       	ldi	r28, 0x00	; 0
     ae0:	d0 e0       	ldi	r29, 0x00	; 0
     ae2:	67 01       	movw	r12, r14
     ae4:	83 ee       	ldi	r24, 0xE3	; 227
     ae6:	c8 1a       	sub	r12, r24
     ae8:	8e ef       	ldi	r24, 0xFE	; 254
     aea:	d8 0a       	sbc	r13, r24
     aec:	01 15       	cp	r16, r1
     aee:	11 05       	cpc	r17, r1
     af0:	c9 f1       	breq	.+114    	; 0xb64 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     af2:	ce 3f       	cpi	r28, 0xFE	; 254
     af4:	d1 05       	cpc	r29, r1
     af6:	98 f0       	brcs	.+38     	; 0xb1e <_ZN13Adafruit_FONA8readlineEjb+0x60>
     af8:	62 e9       	ldi	r22, 0x92	; 146
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	8e e9       	ldi	r24, 0x9E	; 158
     afe:	93 e0       	ldi	r25, 0x03	; 3
     b00:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
     b04:	2f c0       	rjmp	.+94     	; 0xb64 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b06:	f6 01       	movw	r30, r12
     b08:	80 81       	ld	r24, Z
     b0a:	91 81       	ldd	r25, Z+1	; 0x01
     b0c:	dc 01       	movw	r26, r24
     b0e:	ed 91       	ld	r30, X+
     b10:	fc 91       	ld	r31, X
     b12:	06 80       	ldd	r0, Z+6	; 0x06
     b14:	f7 81       	ldd	r31, Z+7	; 0x07
     b16:	e0 2d       	mov	r30, r0
     b18:	09 95       	icall
     b1a:	8d 30       	cpi	r24, 0x0D	; 13
     b1c:	69 f4       	brne	.+26     	; 0xb38 <_ZN13Adafruit_FONA8readlineEjb+0x7a>
     b1e:	d6 01       	movw	r26, r12
     b20:	8d 91       	ld	r24, X+
     b22:	9c 91       	ld	r25, X
     b24:	dc 01       	movw	r26, r24
     b26:	ed 91       	ld	r30, X+
     b28:	fc 91       	ld	r31, X
     b2a:	04 80       	ldd	r0, Z+4	; 0x04
     b2c:	f5 81       	ldd	r31, Z+5	; 0x05
     b2e:	e0 2d       	mov	r30, r0
     b30:	09 95       	icall
     b32:	89 2b       	or	r24, r25
     b34:	41 f7       	brne	.-48     	; 0xb06 <_ZN13Adafruit_FONA8readlineEjb+0x48>
     b36:	0c c0       	rjmp	.+24     	; 0xb50 <_ZN13Adafruit_FONA8readlineEjb+0x92>
     b38:	8a 30       	cpi	r24, 0x0A	; 10
     b3a:	21 f4       	brne	.+8      	; 0xb44 <_ZN13Adafruit_FONA8readlineEjb+0x86>
     b3c:	20 97       	sbiw	r28, 0x00	; 0
     b3e:	79 f3       	breq	.-34     	; 0xb1e <_ZN13Adafruit_FONA8readlineEjb+0x60>
     b40:	bb 20       	and	r11, r11
     b42:	81 f0       	breq	.+32     	; 0xb64 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b44:	f7 01       	movw	r30, r14
     b46:	ec 0f       	add	r30, r28
     b48:	fd 1f       	adc	r31, r29
     b4a:	87 87       	std	Z+15, r24	; 0x0f
     b4c:	21 96       	adiw	r28, 0x01	; 1
     b4e:	e7 cf       	rjmp	.-50     	; 0xb1e <_ZN13Adafruit_FONA8readlineEjb+0x60>
     b50:	01 50       	subi	r16, 0x01	; 1
     b52:	11 09       	sbc	r17, r1
     b54:	39 f0       	breq	.+14     	; 0xb64 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b56:	61 e0       	ldi	r22, 0x01	; 1
     b58:	70 e0       	ldi	r23, 0x00	; 0
     b5a:	80 e0       	ldi	r24, 0x00	; 0
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
     b62:	c4 cf       	rjmp	.-120    	; 0xaec <_ZN13Adafruit_FONA8readlineEjb+0x2e>
     b64:	f7 01       	movw	r30, r14
     b66:	ec 0f       	add	r30, r28
     b68:	fd 1f       	adc	r31, r29
     b6a:	17 86       	std	Z+15, r1	; 0x0f
     b6c:	8c 2f       	mov	r24, r28
     b6e:	df 91       	pop	r29
     b70:	cf 91       	pop	r28
     b72:	1f 91       	pop	r17
     b74:	0f 91       	pop	r16
     b76:	ff 90       	pop	r15
     b78:	ef 90       	pop	r14
     b7a:	df 90       	pop	r13
     b7c:	cf 90       	pop	r12
     b7e:	bf 90       	pop	r11
     b80:	08 95       	ret

00000b82 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>:
     b82:	0f 93       	push	r16
     b84:	1f 93       	push	r17
     b86:	cf 93       	push	r28
     b88:	df 93       	push	r29
     b8a:	ec 01       	movw	r28, r24
     b8c:	8b 01       	movw	r16, r22
     b8e:	ba 01       	movw	r22, r20
     b90:	40 e0       	ldi	r20, 0x00	; 0
     b92:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
     b96:	68 e9       	ldi	r22, 0x98	; 152
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	8e e9       	ldi	r24, 0x9E	; 158
     b9c:	93 e0       	ldi	r25, 0x03	; 3
     b9e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     ba2:	2f 96       	adiw	r28, 0x0f	; 15
     ba4:	be 01       	movw	r22, r28
     ba6:	8e e9       	ldi	r24, 0x9E	; 158
     ba8:	93 e0       	ldi	r25, 0x03	; 3
     baa:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
     bae:	b8 01       	movw	r22, r16
     bb0:	ce 01       	movw	r24, r28
     bb2:	0e 94 b4 25 	call	0x4b68	; 0x4b68 <strcmp_P>
     bb6:	21 e0       	ldi	r18, 0x01	; 1
     bb8:	89 2b       	or	r24, r25
     bba:	09 f0       	breq	.+2      	; 0xbbe <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj+0x3c>
     bbc:	20 e0       	ldi	r18, 0x00	; 0
     bbe:	82 2f       	mov	r24, r18
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	1f 91       	pop	r17
     bc6:	0f 91       	pop	r16
     bc8:	08 95       	ret

00000bca <_ZN13Adafruit_FONA13HTTP_para_endEb>:
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	ec 01       	movw	r28, r24
     bd0:	fc 01       	movw	r30, r24
     bd2:	e3 5e       	subi	r30, 0xE3	; 227
     bd4:	fe 4f       	sbci	r31, 0xFE	; 254
     bd6:	66 23       	and	r22, r22
     bd8:	31 f0       	breq	.+12     	; 0xbe6 <_ZN13Adafruit_FONA13HTTP_para_endEb+0x1c>
     bda:	62 e2       	ldi	r22, 0x22	; 34
     bdc:	80 81       	ld	r24, Z
     bde:	91 81       	ldd	r25, Z+1	; 0x01
     be0:	0e 94 1c 1d 	call	0x3a38	; 0x3a38 <_ZN5Print7printlnEc>
     be4:	04 c0       	rjmp	.+8      	; 0xbee <_ZN13Adafruit_FONA13HTTP_para_endEb+0x24>
     be6:	80 81       	ld	r24, Z
     be8:	91 81       	ldd	r25, Z+1	; 0x01
     bea:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
     bee:	fe 01       	movw	r30, r28
     bf0:	e5 5e       	subi	r30, 0xE5	; 229
     bf2:	fe 4f       	sbci	r31, 0xFE	; 254
     bf4:	60 81       	ld	r22, Z
     bf6:	71 81       	ldd	r23, Z+1	; 0x01
     bf8:	40 e1       	ldi	r20, 0x10	; 16
     bfa:	57 e2       	ldi	r21, 0x27	; 39
     bfc:	ce 01       	movw	r24, r28
     bfe:	df 91       	pop	r29
     c00:	cf 91       	pop	r28
     c02:	0c 94 c1 05 	jmp	0xb82	; 0xb82 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>

00000c06 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelper6String>:
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	ec 01       	movw	r28, r24
     c10:	8a 01       	movw	r16, r20
     c12:	41 e0       	ldi	r20, 0x01	; 1
     c14:	0e 94 22 05 	call	0xa44	; 0xa44 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c18:	fe 01       	movw	r30, r28
     c1a:	e3 5e       	subi	r30, 0xE3	; 227
     c1c:	fe 4f       	sbci	r31, 0xFE	; 254
     c1e:	b8 01       	movw	r22, r16
     c20:	80 81       	ld	r24, Z
     c22:	91 81       	ldd	r25, Z+1	; 0x01
     c24:	0e 94 dd 1c 	call	0x39ba	; 0x39ba <_ZN5Print5printERK6String>
     c28:	61 e0       	ldi	r22, 0x01	; 1
     c2a:	ce 01       	movw	r24, r28
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	1f 91       	pop	r17
     c32:	0f 91       	pop	r16
     c34:	0c 94 e5 05 	jmp	0xbca	; 0xbca <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c38 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>:
     c38:	0f 93       	push	r16
     c3a:	1f 93       	push	r17
     c3c:	cf 93       	push	r28
     c3e:	df 93       	push	r29
     c40:	ec 01       	movw	r28, r24
     c42:	8a 01       	movw	r16, r20
     c44:	41 e0       	ldi	r20, 0x01	; 1
     c46:	0e 94 22 05 	call	0xa44	; 0xa44 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c4a:	fe 01       	movw	r30, r28
     c4c:	e3 5e       	subi	r30, 0xE3	; 227
     c4e:	fe 4f       	sbci	r31, 0xFE	; 254
     c50:	b8 01       	movw	r22, r16
     c52:	80 81       	ld	r24, Z
     c54:	91 81       	ldd	r25, Z+1	; 0x01
     c56:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     c5a:	61 e0       	ldi	r22, 0x01	; 1
     c5c:	ce 01       	movw	r24, r28
     c5e:	df 91       	pop	r29
     c60:	cf 91       	pop	r28
     c62:	1f 91       	pop	r17
     c64:	0f 91       	pop	r16
     c66:	0c 94 e5 05 	jmp	0xbca	; 0xbca <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c6a <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperl>:
     c6a:	cf 92       	push	r12
     c6c:	df 92       	push	r13
     c6e:	ef 92       	push	r14
     c70:	ff 92       	push	r15
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	ec 01       	movw	r28, r24
     c78:	69 01       	movw	r12, r18
     c7a:	7a 01       	movw	r14, r20
     c7c:	40 e0       	ldi	r20, 0x00	; 0
     c7e:	0e 94 22 05 	call	0xa44	; 0xa44 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c82:	fe 01       	movw	r30, r28
     c84:	e3 5e       	subi	r30, 0xE3	; 227
     c86:	fe 4f       	sbci	r31, 0xFE	; 254
     c88:	2a e0       	ldi	r18, 0x0A	; 10
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	b7 01       	movw	r22, r14
     c8e:	a6 01       	movw	r20, r12
     c90:	80 81       	ld	r24, Z
     c92:	91 81       	ldd	r25, Z+1	; 0x01
     c94:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <_ZN5Print5printEli>
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	ce 01       	movw	r24, r28
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	ff 90       	pop	r15
     ca2:	ef 90       	pop	r14
     ca4:	df 90       	pop	r13
     ca6:	cf 90       	pop	r12
     ca8:	0c 94 e5 05 	jmp	0xbca	; 0xbca <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000cac <_ZN13Adafruit_FONA9HTTP_dataEmm>:
     cac:	4f 92       	push	r4
     cae:	5f 92       	push	r5
     cb0:	6f 92       	push	r6
     cb2:	7f 92       	push	r7
     cb4:	8f 92       	push	r8
     cb6:	9f 92       	push	r9
     cb8:	af 92       	push	r10
     cba:	bf 92       	push	r11
     cbc:	ef 92       	push	r14
     cbe:	ff 92       	push	r15
     cc0:	0f 93       	push	r16
     cc2:	1f 93       	push	r17
     cc4:	cf 93       	push	r28
     cc6:	df 93       	push	r29
     cc8:	7c 01       	movw	r14, r24
     cca:	2a 01       	movw	r4, r20
     ccc:	3b 01       	movw	r6, r22
     cce:	48 01       	movw	r8, r16
     cd0:	59 01       	movw	r10, r18
     cd2:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
     cd6:	69 e1       	ldi	r22, 0x19	; 25
     cd8:	71 e0       	ldi	r23, 0x01	; 1
     cda:	8e e9       	ldi	r24, 0x9E	; 158
     cdc:	93 e0       	ldi	r25, 0x03	; 3
     cde:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     ce2:	6c e0       	ldi	r22, 0x0C	; 12
     ce4:	71 e0       	ldi	r23, 0x01	; 1
     ce6:	8e e9       	ldi	r24, 0x9E	; 158
     ce8:	93 e0       	ldi	r25, 0x03	; 3
     cea:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     cee:	2a e0       	ldi	r18, 0x0A	; 10
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	b3 01       	movw	r22, r6
     cf4:	a2 01       	movw	r20, r4
     cf6:	8e e9       	ldi	r24, 0x9E	; 158
     cf8:	93 e0       	ldi	r25, 0x03	; 3
     cfa:	0e 94 77 1d 	call	0x3aee	; 0x3aee <_ZN5Print5printEmi>
     cfe:	6c e2       	ldi	r22, 0x2C	; 44
     d00:	8e e9       	ldi	r24, 0x9E	; 158
     d02:	93 e0       	ldi	r25, 0x03	; 3
     d04:	0e 94 ed 1c 	call	0x39da	; 0x39da <_ZN5Print5printEc>
     d08:	2a e0       	ldi	r18, 0x0A	; 10
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	b5 01       	movw	r22, r10
     d0e:	a4 01       	movw	r20, r8
     d10:	8e e9       	ldi	r24, 0x9E	; 158
     d12:	93 e0       	ldi	r25, 0x03	; 3
     d14:	0e 94 b5 1d 	call	0x3b6a	; 0x3b6a <_ZN5Print7printlnEmi>
     d18:	e7 01       	movw	r28, r14
     d1a:	c3 5e       	subi	r28, 0xE3	; 227
     d1c:	de 4f       	sbci	r29, 0xFE	; 254
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	88 81       	ld	r24, Y
     d24:	99 81       	ldd	r25, Y+1	; 0x01
     d26:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     d2a:	2a e0       	ldi	r18, 0x0A	; 10
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	b3 01       	movw	r22, r6
     d30:	a2 01       	movw	r20, r4
     d32:	88 81       	ld	r24, Y
     d34:	99 81       	ldd	r25, Y+1	; 0x01
     d36:	0e 94 77 1d 	call	0x3aee	; 0x3aee <_ZN5Print5printEmi>
     d3a:	67 e0       	ldi	r22, 0x07	; 7
     d3c:	71 e0       	ldi	r23, 0x01	; 1
     d3e:	88 81       	ld	r24, Y
     d40:	99 81       	ldd	r25, Y+1	; 0x01
     d42:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
     d46:	2a e0       	ldi	r18, 0x0A	; 10
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	b5 01       	movw	r22, r10
     d4c:	a4 01       	movw	r20, r8
     d4e:	88 81       	ld	r24, Y
     d50:	99 81       	ldd	r25, Y+1	; 0x01
     d52:	0e 94 b5 1d 	call	0x3b6a	; 0x3b6a <_ZN5Print7printlnEmi>
     d56:	40 e1       	ldi	r20, 0x10	; 16
     d58:	57 e2       	ldi	r21, 0x27	; 39
     d5a:	66 ef       	ldi	r22, 0xF6	; 246
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	c7 01       	movw	r24, r14
     d60:	df 91       	pop	r29
     d62:	cf 91       	pop	r28
     d64:	1f 91       	pop	r17
     d66:	0f 91       	pop	r16
     d68:	ff 90       	pop	r15
     d6a:	ef 90       	pop	r14
     d6c:	bf 90       	pop	r11
     d6e:	af 90       	pop	r10
     d70:	9f 90       	pop	r9
     d72:	8f 90       	pop	r8
     d74:	7f 90       	pop	r7
     d76:	6f 90       	pop	r6
     d78:	5f 90       	pop	r5
     d7a:	4f 90       	pop	r4
     d7c:	0c 94 c1 05 	jmp	0xb82	; 0xb82 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>

00000d80 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>:
     d80:	ef 92       	push	r14
     d82:	ff 92       	push	r15
     d84:	0f 93       	push	r16
     d86:	1f 93       	push	r17
     d88:	cf 93       	push	r28
     d8a:	df 93       	push	r29
     d8c:	ec 01       	movw	r28, r24
     d8e:	8b 01       	movw	r16, r22
     d90:	7a 01       	movw	r14, r20
     d92:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
     d96:	6b e8       	ldi	r22, 0x8B	; 139
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	8e e9       	ldi	r24, 0x9E	; 158
     d9c:	93 e0       	ldi	r25, 0x03	; 3
     d9e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     da2:	b8 01       	movw	r22, r16
     da4:	8e e9       	ldi	r24, 0x9E	; 158
     da6:	93 e0       	ldi	r25, 0x03	; 3
     da8:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
     dac:	fe 01       	movw	r30, r28
     dae:	e3 5e       	subi	r30, 0xE3	; 227
     db0:	fe 4f       	sbci	r31, 0xFE	; 254
     db2:	b8 01       	movw	r22, r16
     db4:	80 81       	ld	r24, Z
     db6:	91 81       	ldd	r25, Z+1	; 0x01
     db8:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
     dbc:	40 e0       	ldi	r20, 0x00	; 0
     dbe:	b7 01       	movw	r22, r14
     dc0:	ce 01       	movw	r24, r28
     dc2:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
     dc6:	18 2f       	mov	r17, r24
     dc8:	64 e8       	ldi	r22, 0x84	; 132
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	8e e9       	ldi	r24, 0x9E	; 158
     dce:	93 e0       	ldi	r25, 0x03	; 3
     dd0:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     dd4:	be 01       	movw	r22, r28
     dd6:	61 5f       	subi	r22, 0xF1	; 241
     dd8:	7f 4f       	sbci	r23, 0xFF	; 255
     dda:	8e e9       	ldi	r24, 0x9E	; 158
     ddc:	93 e0       	ldi	r25, 0x03	; 3
     dde:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
     de2:	81 2f       	mov	r24, r17
     de4:	df 91       	pop	r29
     de6:	cf 91       	pop	r28
     de8:	1f 91       	pop	r17
     dea:	0f 91       	pop	r16
     dec:	ff 90       	pop	r15
     dee:	ef 90       	pop	r14
     df0:	08 95       	ret

00000df2 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>:
     df2:	8f 92       	push	r8
     df4:	9f 92       	push	r9
     df6:	af 92       	push	r10
     df8:	bf 92       	push	r11
     dfa:	cf 92       	push	r12
     dfc:	df 92       	push	r13
     dfe:	ef 92       	push	r14
     e00:	ff 92       	push	r15
     e02:	0f 93       	push	r16
     e04:	1f 93       	push	r17
     e06:	cf 93       	push	r28
     e08:	df 93       	push	r29
     e0a:	ec 01       	movw	r28, r24
     e0c:	6b 01       	movw	r12, r22
     e0e:	49 01       	movw	r8, r18
     e10:	5a 01       	movw	r10, r20
     e12:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
     e16:	6d e7       	ldi	r22, 0x7D	; 125
     e18:	70 e0       	ldi	r23, 0x00	; 0
     e1a:	8e e9       	ldi	r24, 0x9E	; 158
     e1c:	93 e0       	ldi	r25, 0x03	; 3
     e1e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     e22:	b6 01       	movw	r22, r12
     e24:	8e e9       	ldi	r24, 0x9E	; 158
     e26:	93 e0       	ldi	r25, 0x03	; 3
     e28:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     e2c:	2a e0       	ldi	r18, 0x0A	; 10
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	b5 01       	movw	r22, r10
     e32:	a4 01       	movw	r20, r8
     e34:	8e e9       	ldi	r24, 0x9E	; 158
     e36:	93 e0       	ldi	r25, 0x03	; 3
     e38:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <_ZN5Print7printlnEli>
     e3c:	7e 01       	movw	r14, r28
     e3e:	83 ee       	ldi	r24, 0xE3	; 227
     e40:	e8 1a       	sub	r14, r24
     e42:	8e ef       	ldi	r24, 0xFE	; 254
     e44:	f8 0a       	sbc	r15, r24
     e46:	b6 01       	movw	r22, r12
     e48:	f7 01       	movw	r30, r14
     e4a:	80 81       	ld	r24, Z
     e4c:	91 81       	ldd	r25, Z+1	; 0x01
     e4e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     e52:	2a e0       	ldi	r18, 0x0A	; 10
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	b5 01       	movw	r22, r10
     e58:	a4 01       	movw	r20, r8
     e5a:	f7 01       	movw	r30, r14
     e5c:	80 81       	ld	r24, Z
     e5e:	91 81       	ldd	r25, Z+1	; 0x01
     e60:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <_ZN5Print7printlnEli>
     e64:	40 e0       	ldi	r20, 0x00	; 0
     e66:	b8 01       	movw	r22, r16
     e68:	ce 01       	movw	r24, r28
     e6a:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
     e6e:	18 2f       	mov	r17, r24
     e70:	66 e7       	ldi	r22, 0x76	; 118
     e72:	70 e0       	ldi	r23, 0x00	; 0
     e74:	8e e9       	ldi	r24, 0x9E	; 158
     e76:	93 e0       	ldi	r25, 0x03	; 3
     e78:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     e7c:	be 01       	movw	r22, r28
     e7e:	61 5f       	subi	r22, 0xF1	; 241
     e80:	7f 4f       	sbci	r23, 0xFF	; 255
     e82:	8e e9       	ldi	r24, 0x9E	; 158
     e84:	93 e0       	ldi	r25, 0x03	; 3
     e86:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
     e8a:	81 2f       	mov	r24, r17
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	1f 91       	pop	r17
     e92:	0f 91       	pop	r16
     e94:	ff 90       	pop	r15
     e96:	ef 90       	pop	r14
     e98:	df 90       	pop	r13
     e9a:	cf 90       	pop	r12
     e9c:	bf 90       	pop	r11
     e9e:	af 90       	pop	r10
     ea0:	9f 90       	pop	r9
     ea2:	8f 90       	pop	r8
     ea4:	08 95       	ret

00000ea6 <_ZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_j>:
     ea6:	af 92       	push	r10
     ea8:	bf 92       	push	r11
     eaa:	cf 92       	push	r12
     eac:	df 92       	push	r13
     eae:	ef 92       	push	r14
     eb0:	ff 92       	push	r15
     eb2:	0f 93       	push	r16
     eb4:	1f 93       	push	r17
     eb6:	cf 93       	push	r28
     eb8:	df 93       	push	r29
     eba:	ec 01       	movw	r28, r24
     ebc:	6b 01       	movw	r12, r22
     ebe:	7a 01       	movw	r14, r20
     ec0:	59 01       	movw	r10, r18
     ec2:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
     ec6:	6f e6       	ldi	r22, 0x6F	; 111
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	8e e9       	ldi	r24, 0x9E	; 158
     ecc:	93 e0       	ldi	r25, 0x03	; 3
     ece:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     ed2:	b6 01       	movw	r22, r12
     ed4:	8e e9       	ldi	r24, 0x9E	; 158
     ed6:	93 e0       	ldi	r25, 0x03	; 3
     ed8:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     edc:	62 e2       	ldi	r22, 0x22	; 34
     ede:	8e e9       	ldi	r24, 0x9E	; 158
     ee0:	93 e0       	ldi	r25, 0x03	; 3
     ee2:	0e 94 ed 1c 	call	0x39da	; 0x39da <_ZN5Print5printEc>
     ee6:	b7 01       	movw	r22, r14
     ee8:	8e e9       	ldi	r24, 0x9E	; 158
     eea:	93 e0       	ldi	r25, 0x03	; 3
     eec:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     ef0:	62 e2       	ldi	r22, 0x22	; 34
     ef2:	8e e9       	ldi	r24, 0x9E	; 158
     ef4:	93 e0       	ldi	r25, 0x03	; 3
     ef6:	0e 94 1c 1d 	call	0x3a38	; 0x3a38 <_ZN5Print7printlnEc>
     efa:	8e 01       	movw	r16, r28
     efc:	03 5e       	subi	r16, 0xE3	; 227
     efe:	1e 4f       	sbci	r17, 0xFE	; 254
     f00:	b6 01       	movw	r22, r12
     f02:	f8 01       	movw	r30, r16
     f04:	80 81       	ld	r24, Z
     f06:	91 81       	ldd	r25, Z+1	; 0x01
     f08:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     f0c:	62 e2       	ldi	r22, 0x22	; 34
     f0e:	f8 01       	movw	r30, r16
     f10:	80 81       	ld	r24, Z
     f12:	91 81       	ldd	r25, Z+1	; 0x01
     f14:	0e 94 ed 1c 	call	0x39da	; 0x39da <_ZN5Print5printEc>
     f18:	b7 01       	movw	r22, r14
     f1a:	f8 01       	movw	r30, r16
     f1c:	80 81       	ld	r24, Z
     f1e:	91 81       	ldd	r25, Z+1	; 0x01
     f20:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     f24:	62 e2       	ldi	r22, 0x22	; 34
     f26:	f8 01       	movw	r30, r16
     f28:	80 81       	ld	r24, Z
     f2a:	91 81       	ldd	r25, Z+1	; 0x01
     f2c:	0e 94 1c 1d 	call	0x3a38	; 0x3a38 <_ZN5Print7printlnEc>
     f30:	40 e0       	ldi	r20, 0x00	; 0
     f32:	b5 01       	movw	r22, r10
     f34:	ce 01       	movw	r24, r28
     f36:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
     f3a:	18 2f       	mov	r17, r24
     f3c:	68 e6       	ldi	r22, 0x68	; 104
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	8e e9       	ldi	r24, 0x9E	; 158
     f42:	93 e0       	ldi	r25, 0x03	; 3
     f44:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
     f48:	be 01       	movw	r22, r28
     f4a:	61 5f       	subi	r22, 0xF1	; 241
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	8e e9       	ldi	r24, 0x9E	; 158
     f50:	93 e0       	ldi	r25, 0x03	; 3
     f52:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
     f56:	81 2f       	mov	r24, r17
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	1f 91       	pop	r17
     f5e:	0f 91       	pop	r16
     f60:	ff 90       	pop	r15
     f62:	ef 90       	pop	r14
     f64:	df 90       	pop	r13
     f66:	cf 90       	pop	r12
     f68:	bf 90       	pop	r11
     f6a:	af 90       	pop	r10
     f6c:	08 95       	ret

00000f6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>:
     f6e:	0f 93       	push	r16
     f70:	1f 93       	push	r17
     f72:	cf 93       	push	r28
     f74:	df 93       	push	r29
     f76:	ec 01       	movw	r28, r24
     f78:	8a 01       	movw	r16, r20
     f7a:	a9 01       	movw	r20, r18
     f7c:	0e 94 c0 06 	call	0xd80	; 0xd80 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>
     f80:	88 23       	and	r24, r24
     f82:	41 f0       	breq	.+16     	; 0xf94 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j+0x26>
     f84:	b8 01       	movw	r22, r16
     f86:	ce 01       	movw	r24, r28
     f88:	0f 96       	adiw	r24, 0x0f	; 15
     f8a:	0e 94 b4 25 	call	0x4b68	; 0x4b68 <strcmp_P>
     f8e:	21 e0       	ldi	r18, 0x01	; 1
     f90:	89 2b       	or	r24, r25
     f92:	09 f0       	breq	.+2      	; 0xf96 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j+0x28>
     f94:	20 e0       	ldi	r18, 0x00	; 0
     f96:	82 2f       	mov	r24, r18
     f98:	df 91       	pop	r29
     f9a:	cf 91       	pop	r28
     f9c:	1f 91       	pop	r17
     f9e:	0f 91       	pop	r16
     fa0:	08 95       	ret

00000fa2 <_ZN13Adafruit_FONA5beginEhh>:
     fa2:	cf 92       	push	r12
     fa4:	df 92       	push	r13
     fa6:	ef 92       	push	r14
     fa8:	ff 92       	push	r15
     faa:	0f 93       	push	r16
     fac:	1f 93       	push	r17
     fae:	cf 93       	push	r28
     fb0:	df 93       	push	r29
     fb2:	ec 01       	movw	r28, r24
     fb4:	f6 2e       	mov	r15, r22
     fb6:	e4 2e       	mov	r14, r20
     fb8:	8f e1       	ldi	r24, 0x1F	; 31
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 78 1c 	call	0x38f0	; 0x38f0 <_Znwj>
     fc0:	8c 01       	movw	r16, r24
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	4e 2d       	mov	r20, r14
     fc6:	6f 2d       	mov	r22, r15
     fc8:	0e 94 7a 22 	call	0x44f4	; 0x44f4 <_ZN14SoftwareSerialC1Ehhb>
     fcc:	7e 01       	movw	r14, r28
     fce:	83 ee       	ldi	r24, 0xE3	; 227
     fd0:	e8 1a       	sub	r14, r24
     fd2:	8e ef       	ldi	r24, 0xFE	; 254
     fd4:	f8 0a       	sbc	r15, r24
     fd6:	d7 01       	movw	r26, r14
     fd8:	0d 93       	st	X+, r16
     fda:	1c 93       	st	X, r17
     fdc:	40 ec       	ldi	r20, 0xC0	; 192
     fde:	52 e1       	ldi	r21, 0x12	; 18
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	c8 01       	movw	r24, r16
     fe6:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN14SoftwareSerial5beginEl>
     fea:	61 e0       	ldi	r22, 0x01	; 1
     fec:	8c 85       	ldd	r24, Y+12	; 0x0c
     fee:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <pinMode>
     ff2:	61 e0       	ldi	r22, 0x01	; 1
     ff4:	8c 85       	ldd	r24, Y+12	; 0x0c
     ff6:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
     ffa:	6a e0       	ldi	r22, 0x0A	; 10
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    1006:	60 e0       	ldi	r22, 0x00	; 0
    1008:	8c 85       	ldd	r24, Y+12	; 0x0c
    100a:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
    100e:	64 e6       	ldi	r22, 0x64	; 100
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    101a:	61 e0       	ldi	r22, 0x01	; 1
    101c:	8c 85       	ldd	r24, Y+12	; 0x0c
    101e:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
    1022:	65 e6       	ldi	r22, 0x65	; 101
    1024:	73 e0       	ldi	r23, 0x03	; 3
    1026:	8e e9       	ldi	r24, 0x9E	; 158
    1028:	93 e0       	ldi	r25, 0x03	; 3
    102a:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    102e:	8e e0       	ldi	r24, 0x0E	; 14
    1030:	c8 2e       	mov	r12, r24
    1032:	d1 2c       	mov	r13, r1
    1034:	8e 01       	movw	r16, r28
    1036:	05 5e       	subi	r16, 0xE5	; 229
    1038:	1e 4f       	sbci	r17, 0xFE	; 254
    103a:	f7 01       	movw	r30, r14
    103c:	80 81       	ld	r24, Z
    103e:	91 81       	ldd	r25, Z+1	; 0x01
    1040:	dc 01       	movw	r26, r24
    1042:	ed 91       	ld	r30, X+
    1044:	fc 91       	ld	r31, X
    1046:	04 80       	ldd	r0, Z+4	; 0x04
    1048:	f5 81       	ldd	r31, Z+5	; 0x05
    104a:	e0 2d       	mov	r30, r0
    104c:	09 95       	icall
    104e:	89 2b       	or	r24, r25
    1050:	59 f0       	breq	.+22     	; 0x1068 <_ZN13Adafruit_FONA5beginEhh+0xc6>
    1052:	f7 01       	movw	r30, r14
    1054:	80 81       	ld	r24, Z
    1056:	91 81       	ldd	r25, Z+1	; 0x01
    1058:	dc 01       	movw	r26, r24
    105a:	ed 91       	ld	r30, X+
    105c:	fc 91       	ld	r31, X
    105e:	06 80       	ldd	r0, Z+6	; 0x06
    1060:	f7 81       	ldd	r31, Z+7	; 0x07
    1062:	e0 2d       	mov	r30, r0
    1064:	09 95       	icall
    1066:	e9 cf       	rjmp	.-46     	; 0x103a <_ZN13Adafruit_FONA5beginEhh+0x98>
    1068:	f8 01       	movw	r30, r16
    106a:	40 81       	ld	r20, Z
    106c:	51 81       	ldd	r21, Z+1	; 0x01
    106e:	24 ef       	ldi	r18, 0xF4	; 244
    1070:	31 e0       	ldi	r19, 0x01	; 1
    1072:	62 e6       	ldi	r22, 0x62	; 98
    1074:	73 e0       	ldi	r23, 0x03	; 3
    1076:	ce 01       	movw	r24, r28
    1078:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    107c:	81 11       	cpse	r24, r1
    107e:	34 c0       	rjmp	.+104    	; 0x10e8 <_ZN13Adafruit_FONA5beginEhh+0x146>
    1080:	d7 01       	movw	r26, r14
    1082:	8d 91       	ld	r24, X+
    1084:	9c 91       	ld	r25, X
    1086:	dc 01       	movw	r26, r24
    1088:	ed 91       	ld	r30, X+
    108a:	fc 91       	ld	r31, X
    108c:	04 80       	ldd	r0, Z+4	; 0x04
    108e:	f5 81       	ldd	r31, Z+5	; 0x05
    1090:	e0 2d       	mov	r30, r0
    1092:	09 95       	icall
    1094:	89 2b       	or	r24, r25
    1096:	59 f0       	breq	.+22     	; 0x10ae <_ZN13Adafruit_FONA5beginEhh+0x10c>
    1098:	f7 01       	movw	r30, r14
    109a:	80 81       	ld	r24, Z
    109c:	91 81       	ldd	r25, Z+1	; 0x01
    109e:	dc 01       	movw	r26, r24
    10a0:	ed 91       	ld	r30, X+
    10a2:	fc 91       	ld	r31, X
    10a4:	06 80       	ldd	r0, Z+6	; 0x06
    10a6:	f7 81       	ldd	r31, Z+7	; 0x07
    10a8:	e0 2d       	mov	r30, r0
    10aa:	09 95       	icall
    10ac:	e9 cf       	rjmp	.-46     	; 0x1080 <_ZN13Adafruit_FONA5beginEhh+0xde>
    10ae:	24 ef       	ldi	r18, 0xF4	; 244
    10b0:	31 e0       	ldi	r19, 0x01	; 1
    10b2:	4f e5       	ldi	r20, 0x5F	; 95
    10b4:	53 e0       	ldi	r21, 0x03	; 3
    10b6:	6c e5       	ldi	r22, 0x5C	; 92
    10b8:	73 e0       	ldi	r23, 0x03	; 3
    10ba:	ce 01       	movw	r24, r28
    10bc:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    10c0:	81 11       	cpse	r24, r1
    10c2:	12 c0       	rjmp	.+36     	; 0x10e8 <_ZN13Adafruit_FONA5beginEhh+0x146>
    10c4:	64 ef       	ldi	r22, 0xF4	; 244
    10c6:	71 e0       	ldi	r23, 0x01	; 1
    10c8:	80 e0       	ldi	r24, 0x00	; 0
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    10d0:	b1 e0       	ldi	r27, 0x01	; 1
    10d2:	cb 1a       	sub	r12, r27
    10d4:	d1 08       	sbc	r13, r1
    10d6:	09 f0       	breq	.+2      	; 0x10da <_ZN13Adafruit_FONA5beginEhh+0x138>
    10d8:	b0 cf       	rjmp	.-160    	; 0x103a <_ZN13Adafruit_FONA5beginEhh+0x98>
    10da:	5e c0       	rjmp	.+188    	; 0x1198 <_ZN13Adafruit_FONA5beginEhh+0x1f6>
    10dc:	64 e6       	ldi	r22, 0x64	; 100
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	80 e0       	ldi	r24, 0x00	; 0
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    10e8:	f8 01       	movw	r30, r16
    10ea:	40 81       	ld	r20, Z
    10ec:	51 81       	ldd	r21, Z+1	; 0x01
    10ee:	24 ef       	ldi	r18, 0xF4	; 244
    10f0:	31 e0       	ldi	r19, 0x01	; 1
    10f2:	6f e2       	ldi	r22, 0x2F	; 47
    10f4:	73 e0       	ldi	r23, 0x03	; 3
    10f6:	ce 01       	movw	r24, r28
    10f8:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    10fc:	64 e6       	ldi	r22, 0x64	; 100
    10fe:	70 e0       	ldi	r23, 0x00	; 0
    1100:	80 e0       	ldi	r24, 0x00	; 0
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    1108:	d8 01       	movw	r26, r16
    110a:	4d 91       	ld	r20, X+
    110c:	5c 91       	ld	r21, X
    110e:	24 ef       	ldi	r18, 0xF4	; 244
    1110:	31 e0       	ldi	r19, 0x01	; 1
    1112:	6a e2       	ldi	r22, 0x2A	; 42
    1114:	73 e0       	ldi	r23, 0x03	; 3
    1116:	ce 01       	movw	r24, r28
    1118:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    111c:	81 11       	cpse	r24, r1
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <_ZN13Adafruit_FONA5beginEhh+0x182>
    1120:	12 e0       	ldi	r17, 0x02	; 2
    1122:	01 c0       	rjmp	.+2      	; 0x1126 <_ZN13Adafruit_FONA5beginEhh+0x184>
    1124:	11 e0       	ldi	r17, 0x01	; 1
    1126:	64 e6       	ldi	r22, 0x64	; 100
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	80 e0       	ldi	r24, 0x00	; 0
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    1132:	ce 01       	movw	r24, r28
    1134:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
    1138:	63 e2       	ldi	r22, 0x23	; 35
    113a:	73 e0       	ldi	r23, 0x03	; 3
    113c:	8e e9       	ldi	r24, 0x9E	; 158
    113e:	93 e0       	ldi	r25, 0x03	; 3
    1140:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1144:	69 e0       	ldi	r22, 0x09	; 9
    1146:	71 e0       	ldi	r23, 0x01	; 1
    1148:	8e e9       	ldi	r24, 0x9E	; 158
    114a:	93 e0       	ldi	r25, 0x03	; 3
    114c:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
    1150:	69 e0       	ldi	r22, 0x09	; 9
    1152:	71 e0       	ldi	r23, 0x01	; 1
    1154:	f7 01       	movw	r30, r14
    1156:	80 81       	ld	r24, Z
    1158:	91 81       	ldd	r25, Z+1	; 0x01
    115a:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
    115e:	41 e0       	ldi	r20, 0x01	; 1
    1160:	64 ef       	ldi	r22, 0xF4	; 244
    1162:	71 e0       	ldi	r23, 0x01	; 1
    1164:	ce 01       	movw	r24, r28
    1166:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
    116a:	6c e1       	ldi	r22, 0x1C	; 28
    116c:	73 e0       	ldi	r23, 0x03	; 3
    116e:	8e e9       	ldi	r24, 0x9E	; 158
    1170:	93 e0       	ldi	r25, 0x03	; 3
    1172:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1176:	2f 96       	adiw	r28, 0x0f	; 15
    1178:	be 01       	movw	r22, r28
    117a:	8e e9       	ldi	r24, 0x9E	; 158
    117c:	93 e0       	ldi	r25, 0x03	; 3
    117e:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
    1182:	61 e1       	ldi	r22, 0x11	; 17
    1184:	73 e0       	ldi	r23, 0x03	; 3
    1186:	ce 01       	movw	r24, r28
    1188:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <strstr_P>
    118c:	89 2b       	or	r24, r25
    118e:	11 f4       	brne	.+4      	; 0x1194 <_ZN13Adafruit_FONA5beginEhh+0x1f2>
    1190:	84 e0       	ldi	r24, 0x04	; 4
    1192:	35 c0       	rjmp	.+106    	; 0x11fe <_ZN13Adafruit_FONA5beginEhh+0x25c>
    1194:	81 2f       	mov	r24, r17
    1196:	33 c0       	rjmp	.+102    	; 0x11fe <_ZN13Adafruit_FONA5beginEhh+0x25c>
    1198:	d8 01       	movw	r26, r16
    119a:	4d 91       	ld	r20, X+
    119c:	5c 91       	ld	r21, X
    119e:	24 ef       	ldi	r18, 0xF4	; 244
    11a0:	31 e0       	ldi	r19, 0x01	; 1
    11a2:	69 e5       	ldi	r22, 0x59	; 89
    11a4:	73 e0       	ldi	r23, 0x03	; 3
    11a6:	ce 01       	movw	r24, r28
    11a8:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11ac:	64 e6       	ldi	r22, 0x64	; 100
    11ae:	70 e0       	ldi	r23, 0x00	; 0
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    11b8:	f8 01       	movw	r30, r16
    11ba:	40 81       	ld	r20, Z
    11bc:	51 81       	ldd	r21, Z+1	; 0x01
    11be:	24 ef       	ldi	r18, 0xF4	; 244
    11c0:	31 e0       	ldi	r19, 0x01	; 1
    11c2:	66 e5       	ldi	r22, 0x56	; 86
    11c4:	73 e0       	ldi	r23, 0x03	; 3
    11c6:	ce 01       	movw	r24, r28
    11c8:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11cc:	64 e6       	ldi	r22, 0x64	; 100
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	80 e0       	ldi	r24, 0x00	; 0
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    11d8:	d8 01       	movw	r26, r16
    11da:	4d 91       	ld	r20, X+
    11dc:	5c 91       	ld	r21, X
    11de:	24 ef       	ldi	r18, 0xF4	; 244
    11e0:	31 e0       	ldi	r19, 0x01	; 1
    11e2:	63 e5       	ldi	r22, 0x53	; 83
    11e4:	73 e0       	ldi	r23, 0x03	; 3
    11e6:	ce 01       	movw	r24, r28
    11e8:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11ec:	81 11       	cpse	r24, r1
    11ee:	76 cf       	rjmp	.-276    	; 0x10dc <_ZN13Adafruit_FONA5beginEhh+0x13a>
    11f0:	64 e3       	ldi	r22, 0x34	; 52
    11f2:	73 e0       	ldi	r23, 0x03	; 3
    11f4:	8e e9       	ldi	r24, 0x9E	; 158
    11f6:	93 e0       	ldi	r25, 0x03	; 3
    11f8:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    11fc:	83 e0       	ldi	r24, 0x03	; 3
    11fe:	df 91       	pop	r29
    1200:	cf 91       	pop	r28
    1202:	1f 91       	pop	r17
    1204:	0f 91       	pop	r16
    1206:	ff 90       	pop	r15
    1208:	ef 90       	pop	r14
    120a:	df 90       	pop	r13
    120c:	cf 90       	pop	r12
    120e:	08 95       	ret

00001210 <_ZN13Adafruit_FONA9HTTP_initEv>:
    1210:	fc 01       	movw	r30, r24
    1212:	e5 5e       	subi	r30, 0xE5	; 229
    1214:	fe 4f       	sbci	r31, 0xFE	; 254
    1216:	40 81       	ld	r20, Z
    1218:	51 81       	ldd	r21, Z+1	; 0x01
    121a:	24 ef       	ldi	r18, 0xF4	; 244
    121c:	31 e0       	ldi	r19, 0x01	; 1
    121e:	66 e5       	ldi	r22, 0x56	; 86
    1220:	71 e0       	ldi	r23, 0x01	; 1
    1222:	0c 94 b7 07 	jmp	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>

00001226 <_ZN13Adafruit_FONA9HTTP_termEv>:
    1226:	fc 01       	movw	r30, r24
    1228:	e5 5e       	subi	r30, 0xE5	; 229
    122a:	fe 4f       	sbci	r31, 0xFE	; 254
    122c:	40 81       	ld	r20, Z
    122e:	51 81       	ldd	r21, Z+1	; 0x01
    1230:	24 ef       	ldi	r18, 0xF4	; 244
    1232:	31 e0       	ldi	r19, 0x01	; 1
    1234:	6a e4       	ldi	r22, 0x4A	; 74
    1236:	71 e0       	ldi	r23, 0x01	; 1
    1238:	0c 94 b7 07 	jmp	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>

0000123c <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper>:
    123c:	ef 92       	push	r14
    123e:	ff 92       	push	r15
    1240:	0f 93       	push	r16
    1242:	1f 93       	push	r17
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	00 d0       	rcall	.+0      	; 0x124a <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0xe>
    124a:	00 d0       	rcall	.+0      	; 0x124c <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x10>
    124c:	00 d0       	rcall	.+0      	; 0x124e <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x12>
    124e:	cd b7       	in	r28, 0x3d	; 61
    1250:	de b7       	in	r29, 0x3e	; 62
    1252:	8c 01       	movw	r16, r24
    1254:	7b 01       	movw	r14, r22
    1256:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN13Adafruit_FONA9HTTP_termEv>
    125a:	c8 01       	movw	r24, r16
    125c:	0e 94 08 09 	call	0x1210	; 0x1210 <_ZN13Adafruit_FONA9HTTP_initEv>
    1260:	88 23       	and	r24, r24
    1262:	59 f1       	breq	.+86     	; 0x12ba <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x7e>
    1264:	21 e0       	ldi	r18, 0x01	; 1
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	40 e0       	ldi	r20, 0x00	; 0
    126a:	50 e0       	ldi	r21, 0x00	; 0
    126c:	66 ea       	ldi	r22, 0xA6	; 166
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	c8 01       	movw	r24, r16
    1272:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperl>
    1276:	88 23       	and	r24, r24
    1278:	11 f1       	breq	.+68     	; 0x12be <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x82>
    127a:	a7 01       	movw	r20, r14
    127c:	62 ea       	ldi	r22, 0xA2	; 162
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	c8 01       	movw	r24, r16
    1282:	0e 94 1c 06 	call	0xc38	; 0xc38 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>
    1286:	88 23       	and	r24, r24
    1288:	e1 f0       	breq	.+56     	; 0x12c2 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x86>
    128a:	b8 01       	movw	r22, r16
    128c:	6b 5e       	subi	r22, 0xEB	; 235
    128e:	7e 4f       	sbci	r23, 0xFE	; 254
    1290:	ce 01       	movw	r24, r28
    1292:	01 96       	adiw	r24, 0x01	; 1
    1294:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <_ZN6StringC1ERKS_>
    1298:	ae 01       	movw	r20, r28
    129a:	4f 5f       	subi	r20, 0xFF	; 255
    129c:	5f 4f       	sbci	r21, 0xFF	; 255
    129e:	6f e9       	ldi	r22, 0x9F	; 159
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	c8 01       	movw	r24, r16
    12a4:	0e 94 03 06 	call	0xc06	; 0xc06 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelper6String>
    12a8:	18 2f       	mov	r17, r24
    12aa:	ce 01       	movw	r24, r28
    12ac:	01 96       	adiw	r24, 0x01	; 1
    12ae:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <_ZN6StringD1Ev>
    12b2:	11 23       	and	r17, r17
    12b4:	41 f0       	breq	.+16     	; 0x12c6 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8a>
    12b6:	80 e0       	ldi	r24, 0x00	; 0
    12b8:	07 c0       	rjmp	.+14     	; 0x12c8 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12ba:	82 e0       	ldi	r24, 0x02	; 2
    12bc:	05 c0       	rjmp	.+10     	; 0x12c8 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12be:	83 e0       	ldi	r24, 0x03	; 3
    12c0:	03 c0       	rjmp	.+6      	; 0x12c8 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12c2:	84 e0       	ldi	r24, 0x04	; 4
    12c4:	01 c0       	rjmp	.+2      	; 0x12c8 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12c6:	80 e4       	ldi	r24, 0x40	; 64
    12c8:	26 96       	adiw	r28, 0x06	; 6
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	df 91       	pop	r29
    12d6:	cf 91       	pop	r28
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	ff 90       	pop	r15
    12de:	ef 90       	pop	r14
    12e0:	08 95       	ret

000012e2 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j>:
    12e2:	cf 92       	push	r12
    12e4:	df 92       	push	r13
    12e6:	ef 92       	push	r14
    12e8:	ff 92       	push	r15
    12ea:	0f 93       	push	r16
    12ec:	1f 93       	push	r17
    12ee:	cf 93       	push	r28
    12f0:	df 93       	push	r29
    12f2:	ec 01       	movw	r28, r24
    12f4:	68 01       	movw	r12, r16
    12f6:	87 01       	movw	r16, r14
    12f8:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>
    12fc:	b6 01       	movw	r22, r12
    12fe:	ce 01       	movw	r24, r28
    1300:	0f 96       	adiw	r24, 0x0f	; 15
    1302:	0e 94 b4 25 	call	0x4b68	; 0x4b68 <strcmp_P>
    1306:	21 e0       	ldi	r18, 0x01	; 1
    1308:	89 2b       	or	r24, r25
    130a:	09 f0       	breq	.+2      	; 0x130e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j+0x2c>
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	82 2f       	mov	r24, r18
    1310:	df 91       	pop	r29
    1312:	cf 91       	pop	r28
    1314:	1f 91       	pop	r17
    1316:	0f 91       	pop	r16
    1318:	ff 90       	pop	r15
    131a:	ef 90       	pop	r14
    131c:	df 90       	pop	r13
    131e:	cf 90       	pop	r12
    1320:	08 95       	ret

00001322 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>:
    1322:	ef 92       	push	r14
    1324:	ff 92       	push	r15
    1326:	0f 93       	push	r16
    1328:	1f 93       	push	r17
    132a:	cf 93       	push	r28
    132c:	df 93       	push	r29
    132e:	ec 01       	movw	r28, r24
    1330:	79 01       	movw	r14, r18
    1332:	98 01       	movw	r18, r16
    1334:	0e 94 53 07 	call	0xea6	; 0xea6 <_ZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_j>
    1338:	b7 01       	movw	r22, r14
    133a:	ce 01       	movw	r24, r28
    133c:	0f 96       	adiw	r24, 0x0f	; 15
    133e:	0e 94 b4 25 	call	0x4b68	; 0x4b68 <strcmp_P>
    1342:	21 e0       	ldi	r18, 0x01	; 1
    1344:	89 2b       	or	r24, r25
    1346:	09 f0       	breq	.+2      	; 0x134a <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j+0x28>
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	82 2f       	mov	r24, r18
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	ff 90       	pop	r15
    1356:	ef 90       	pop	r14
    1358:	08 95       	ret

0000135a <_ZN13Adafruit_FONA10enableGPRSEb>:
    135a:	7f 92       	push	r7
    135c:	8f 92       	push	r8
    135e:	9f 92       	push	r9
    1360:	af 92       	push	r10
    1362:	bf 92       	push	r11
    1364:	cf 92       	push	r12
    1366:	df 92       	push	r13
    1368:	ef 92       	push	r14
    136a:	ff 92       	push	r15
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	ec 01       	movw	r28, r24
    1376:	28 ee       	ldi	r18, 0xE8	; 232
    1378:	3d ef       	ldi	r19, 0xFD	; 253
    137a:	66 23       	and	r22, r22
    137c:	09 f4       	brne	.+2      	; 0x1380 <_ZN13Adafruit_FONA10enableGPRSEb+0x26>
    137e:	1f c1       	rjmp	.+574    	; 0x15be <_ZN13Adafruit_FONA10enableGPRSEb+0x264>
    1380:	4d eb       	ldi	r20, 0xBD	; 189
    1382:	52 e0       	ldi	r21, 0x02	; 2
    1384:	62 eb       	ldi	r22, 0xB2	; 178
    1386:	72 e0       	ldi	r23, 0x02	; 2
    1388:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    138c:	81 11       	cpse	r24, r1
    138e:	03 c0       	rjmp	.+6      	; 0x1396 <_ZN13Adafruit_FONA10enableGPRSEb+0x3c>
    1390:	82 e0       	ldi	r24, 0x02	; 2
    1392:	78 2e       	mov	r7, r24
    1394:	02 c0       	rjmp	.+4      	; 0x139a <_ZN13Adafruit_FONA10enableGPRSEb+0x40>
    1396:	77 24       	eor	r7, r7
    1398:	73 94       	inc	r7
    139a:	7e 01       	movw	r14, r28
    139c:	85 ee       	ldi	r24, 0xE5	; 229
    139e:	e8 1a       	sub	r14, r24
    13a0:	8e ef       	ldi	r24, 0xFE	; 254
    13a2:	f8 0a       	sbc	r15, r24
    13a4:	f7 01       	movw	r30, r14
    13a6:	40 81       	ld	r20, Z
    13a8:	51 81       	ldd	r21, Z+1	; 0x01
    13aa:	20 e1       	ldi	r18, 0x10	; 16
    13ac:	37 e2       	ldi	r19, 0x27	; 39
    13ae:	67 ea       	ldi	r22, 0xA7	; 167
    13b0:	72 e0       	ldi	r23, 0x02	; 2
    13b2:	ce 01       	movw	r24, r28
    13b4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13b8:	88 23       	and	r24, r24
    13ba:	09 f4       	brne	.+2      	; 0x13be <_ZN13Adafruit_FONA10enableGPRSEb+0x64>
    13bc:	25 c1       	rjmp	.+586    	; 0x1608 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ae>
    13be:	f7 01       	movw	r30, r14
    13c0:	40 81       	ld	r20, Z
    13c2:	51 81       	ldd	r21, Z+1	; 0x01
    13c4:	20 e1       	ldi	r18, 0x10	; 16
    13c6:	37 e2       	ldi	r19, 0x27	; 39
    13c8:	69 e8       	ldi	r22, 0x89	; 137
    13ca:	72 e0       	ldi	r23, 0x02	; 2
    13cc:	ce 01       	movw	r24, r28
    13ce:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13d2:	88 23       	and	r24, r24
    13d4:	09 f4       	brne	.+2      	; 0x13d8 <_ZN13Adafruit_FONA10enableGPRSEb+0x7e>
    13d6:	1a c1       	rjmp	.+564    	; 0x160c <_ZN13Adafruit_FONA10enableGPRSEb+0x2b2>
    13d8:	4e 01       	movw	r8, r28
    13da:	f2 ef       	ldi	r31, 0xF2	; 242
    13dc:	8f 1a       	sub	r8, r31
    13de:	fe ef       	ldi	r31, 0xFE	; 254
    13e0:	9f 0a       	sbc	r9, r31
    13e2:	f4 01       	movw	r30, r8
    13e4:	40 81       	ld	r20, Z
    13e6:	51 81       	ldd	r21, Z+1	; 0x01
    13e8:	41 15       	cp	r20, r1
    13ea:	51 05       	cpc	r21, r1
    13ec:	71 f4       	brne	.+28     	; 0x140a <_ZN13Adafruit_FONA10enableGPRSEb+0xb0>
    13ee:	f7 01       	movw	r30, r14
    13f0:	40 81       	ld	r20, Z
    13f2:	51 81       	ldd	r21, Z+1	; 0x01
    13f4:	2f ef       	ldi	r18, 0xFF	; 255
    13f6:	3f ef       	ldi	r19, 0xFF	; 255
    13f8:	64 e2       	ldi	r22, 0x24	; 36
    13fa:	72 e0       	ldi	r23, 0x02	; 2
    13fc:	ce 01       	movw	r24, r28
    13fe:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    1402:	81 11       	cpse	r24, r1
    1404:	ce c0       	rjmp	.+412    	; 0x15a2 <_ZN13Adafruit_FONA10enableGPRSEb+0x248>
    1406:	89 e0       	ldi	r24, 0x09	; 9
    1408:	0e c1       	rjmp	.+540    	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    140a:	f7 01       	movw	r30, r14
    140c:	20 81       	ld	r18, Z
    140e:	31 81       	ldd	r19, Z+1	; 0x01
    1410:	00 e1       	ldi	r16, 0x10	; 16
    1412:	17 e2       	ldi	r17, 0x27	; 39
    1414:	65 e7       	ldi	r22, 0x75	; 117
    1416:	72 e0       	ldi	r23, 0x02	; 2
    1418:	ce 01       	movw	r24, r28
    141a:	0e 94 91 09 	call	0x1322	; 0x1322 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    141e:	88 23       	and	r24, r24
    1420:	09 f4       	brne	.+2      	; 0x1424 <_ZN13Adafruit_FONA10enableGPRSEb+0xca>
    1422:	f6 c0       	rjmp	.+492    	; 0x1610 <_ZN13Adafruit_FONA10enableGPRSEb+0x2b6>
    1424:	ce 01       	movw	r24, r28
    1426:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN13Adafruit_FONA10flushInputEv>
    142a:	8e 01       	movw	r16, r28
    142c:	03 5e       	subi	r16, 0xE3	; 227
    142e:	1e 4f       	sbci	r17, 0xFE	; 254
    1430:	6b e6       	ldi	r22, 0x6B	; 107
    1432:	72 e0       	ldi	r23, 0x02	; 2
    1434:	f8 01       	movw	r30, r16
    1436:	80 81       	ld	r24, Z
    1438:	91 81       	ldd	r25, Z+1	; 0x01
    143a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    143e:	f4 01       	movw	r30, r8
    1440:	60 81       	ld	r22, Z
    1442:	71 81       	ldd	r23, Z+1	; 0x01
    1444:	f8 01       	movw	r30, r16
    1446:	80 81       	ld	r24, Z
    1448:	91 81       	ldd	r25, Z+1	; 0x01
    144a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    144e:	5e 01       	movw	r10, r28
    1450:	f0 ef       	ldi	r31, 0xF0	; 240
    1452:	af 1a       	sub	r10, r31
    1454:	fe ef       	ldi	r31, 0xFE	; 254
    1456:	bf 0a       	sbc	r11, r31
    1458:	f5 01       	movw	r30, r10
    145a:	80 81       	ld	r24, Z
    145c:	91 81       	ldd	r25, Z+1	; 0x01
    145e:	89 2b       	or	r24, r25
    1460:	79 f0       	breq	.+30     	; 0x1480 <_ZN13Adafruit_FONA10enableGPRSEb+0x126>
    1462:	65 e2       	ldi	r22, 0x25	; 37
    1464:	71 e0       	ldi	r23, 0x01	; 1
    1466:	f8 01       	movw	r30, r16
    1468:	80 81       	ld	r24, Z
    146a:	91 81       	ldd	r25, Z+1	; 0x01
    146c:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    1470:	f5 01       	movw	r30, r10
    1472:	60 81       	ld	r22, Z
    1474:	71 81       	ldd	r23, Z+1	; 0x01
    1476:	f8 01       	movw	r30, r16
    1478:	80 81       	ld	r24, Z
    147a:	91 81       	ldd	r25, Z+1	; 0x01
    147c:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1480:	6e 01       	movw	r12, r28
    1482:	fe ee       	ldi	r31, 0xEE	; 238
    1484:	cf 1a       	sub	r12, r31
    1486:	fe ef       	ldi	r31, 0xFE	; 254
    1488:	df 0a       	sbc	r13, r31
    148a:	f6 01       	movw	r30, r12
    148c:	80 81       	ld	r24, Z
    148e:	91 81       	ldd	r25, Z+1	; 0x01
    1490:	89 2b       	or	r24, r25
    1492:	79 f0       	breq	.+30     	; 0x14b2 <_ZN13Adafruit_FONA10enableGPRSEb+0x158>
    1494:	65 e2       	ldi	r22, 0x25	; 37
    1496:	71 e0       	ldi	r23, 0x01	; 1
    1498:	f8 01       	movw	r30, r16
    149a:	80 81       	ld	r24, Z
    149c:	91 81       	ldd	r25, Z+1	; 0x01
    149e:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    14a2:	f6 01       	movw	r30, r12
    14a4:	60 81       	ld	r22, Z
    14a6:	71 81       	ldd	r23, Z+1	; 0x01
    14a8:	f8 01       	movw	r30, r16
    14aa:	80 81       	ld	r24, Z
    14ac:	91 81       	ldd	r25, Z+1	; 0x01
    14ae:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    14b2:	67 e2       	ldi	r22, 0x27	; 39
    14b4:	71 e0       	ldi	r23, 0x01	; 1
    14b6:	f8 01       	movw	r30, r16
    14b8:	80 81       	ld	r24, Z
    14ba:	91 81       	ldd	r25, Z+1	; 0x01
    14bc:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
    14c0:	64 e6       	ldi	r22, 0x64	; 100
    14c2:	72 e0       	ldi	r23, 0x02	; 2
    14c4:	8e e9       	ldi	r24, 0x9E	; 158
    14c6:	93 e0       	ldi	r25, 0x03	; 3
    14c8:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    14cc:	6a e5       	ldi	r22, 0x5A	; 90
    14ce:	72 e0       	ldi	r23, 0x02	; 2
    14d0:	8e e9       	ldi	r24, 0x9E	; 158
    14d2:	93 e0       	ldi	r25, 0x03	; 3
    14d4:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    14d8:	f4 01       	movw	r30, r8
    14da:	60 81       	ld	r22, Z
    14dc:	71 81       	ldd	r23, Z+1	; 0x01
    14de:	8e e9       	ldi	r24, 0x9E	; 158
    14e0:	93 e0       	ldi	r25, 0x03	; 3
    14e2:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    14e6:	f5 01       	movw	r30, r10
    14e8:	80 81       	ld	r24, Z
    14ea:	91 81       	ldd	r25, Z+1	; 0x01
    14ec:	89 2b       	or	r24, r25
    14ee:	69 f0       	breq	.+26     	; 0x150a <_ZN13Adafruit_FONA10enableGPRSEb+0x1b0>
    14f0:	65 e2       	ldi	r22, 0x25	; 37
    14f2:	71 e0       	ldi	r23, 0x01	; 1
    14f4:	8e e9       	ldi	r24, 0x9E	; 158
    14f6:	93 e0       	ldi	r25, 0x03	; 3
    14f8:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    14fc:	f5 01       	movw	r30, r10
    14fe:	60 81       	ld	r22, Z
    1500:	71 81       	ldd	r23, Z+1	; 0x01
    1502:	8e e9       	ldi	r24, 0x9E	; 158
    1504:	93 e0       	ldi	r25, 0x03	; 3
    1506:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    150a:	f6 01       	movw	r30, r12
    150c:	80 81       	ld	r24, Z
    150e:	91 81       	ldd	r25, Z+1	; 0x01
    1510:	89 2b       	or	r24, r25
    1512:	69 f0       	breq	.+26     	; 0x152e <_ZN13Adafruit_FONA10enableGPRSEb+0x1d4>
    1514:	65 e2       	ldi	r22, 0x25	; 37
    1516:	71 e0       	ldi	r23, 0x01	; 1
    1518:	8e e9       	ldi	r24, 0x9E	; 158
    151a:	93 e0       	ldi	r25, 0x03	; 3
    151c:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    1520:	f6 01       	movw	r30, r12
    1522:	60 81       	ld	r22, Z
    1524:	71 81       	ldd	r23, Z+1	; 0x01
    1526:	8e e9       	ldi	r24, 0x9E	; 158
    1528:	93 e0       	ldi	r25, 0x03	; 3
    152a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    152e:	67 e2       	ldi	r22, 0x27	; 39
    1530:	71 e0       	ldi	r23, 0x01	; 1
    1532:	8e e9       	ldi	r24, 0x9E	; 158
    1534:	93 e0       	ldi	r25, 0x03	; 3
    1536:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
    153a:	f7 01       	movw	r30, r14
    153c:	60 81       	ld	r22, Z
    153e:	71 81       	ldd	r23, Z+1	; 0x01
    1540:	40 e1       	ldi	r20, 0x10	; 16
    1542:	57 e2       	ldi	r21, 0x27	; 39
    1544:	ce 01       	movw	r24, r28
    1546:	0e 94 c1 05 	call	0xb82	; 0xb82 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>
    154a:	88 23       	and	r24, r24
    154c:	09 f4       	brne	.+2      	; 0x1550 <_ZN13Adafruit_FONA10enableGPRSEb+0x1f6>
    154e:	62 c0       	rjmp	.+196    	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ba>
    1550:	f5 01       	movw	r30, r10
    1552:	40 81       	ld	r20, Z
    1554:	51 81       	ldd	r21, Z+1	; 0x01
    1556:	41 15       	cp	r20, r1
    1558:	51 05       	cpc	r21, r1
    155a:	39 f4       	brne	.+14     	; 0x156a <_ZN13Adafruit_FONA10enableGPRSEb+0x210>
    155c:	f6 01       	movw	r30, r12
    155e:	40 81       	ld	r20, Z
    1560:	51 81       	ldd	r21, Z+1	; 0x01
    1562:	41 15       	cp	r20, r1
    1564:	51 05       	cpc	r21, r1
    1566:	79 f4       	brne	.+30     	; 0x1586 <_ZN13Adafruit_FONA10enableGPRSEb+0x22c>
    1568:	42 cf       	rjmp	.-380    	; 0x13ee <_ZN13Adafruit_FONA10enableGPRSEb+0x94>
    156a:	f7 01       	movw	r30, r14
    156c:	20 81       	ld	r18, Z
    156e:	31 81       	ldd	r19, Z+1	; 0x01
    1570:	00 e1       	ldi	r16, 0x10	; 16
    1572:	17 e2       	ldi	r17, 0x27	; 39
    1574:	65 e4       	ldi	r22, 0x45	; 69
    1576:	72 e0       	ldi	r23, 0x02	; 2
    1578:	ce 01       	movw	r24, r28
    157a:	0e 94 91 09 	call	0x1322	; 0x1322 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    157e:	81 11       	cpse	r24, r1
    1580:	ed cf       	rjmp	.-38     	; 0x155c <_ZN13Adafruit_FONA10enableGPRSEb+0x202>
    1582:	87 e0       	ldi	r24, 0x07	; 7
    1584:	50 c0       	rjmp	.+160    	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1586:	f7 01       	movw	r30, r14
    1588:	20 81       	ld	r18, Z
    158a:	31 81       	ldd	r19, Z+1	; 0x01
    158c:	00 e1       	ldi	r16, 0x10	; 16
    158e:	17 e2       	ldi	r17, 0x27	; 39
    1590:	61 e3       	ldi	r22, 0x31	; 49
    1592:	72 e0       	ldi	r23, 0x02	; 2
    1594:	ce 01       	movw	r24, r28
    1596:	0e 94 91 09 	call	0x1322	; 0x1322 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    159a:	81 11       	cpse	r24, r1
    159c:	28 cf       	rjmp	.-432    	; 0x13ee <_ZN13Adafruit_FONA10enableGPRSEb+0x94>
    159e:	88 e0       	ldi	r24, 0x08	; 8
    15a0:	42 c0       	rjmp	.+132    	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15a2:	f7 01       	movw	r30, r14
    15a4:	40 81       	ld	r20, Z
    15a6:	51 81       	ldd	r21, Z+1	; 0x01
    15a8:	2f ef       	ldi	r18, 0xFF	; 255
    15aa:	3f ef       	ldi	r19, 0xFF	; 255
    15ac:	6b e1       	ldi	r22, 0x1B	; 27
    15ae:	72 e0       	ldi	r23, 0x02	; 2
    15b0:	ce 01       	movw	r24, r28
    15b2:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15b6:	88 23       	and	r24, r24
    15b8:	79 f1       	breq	.+94     	; 0x1618 <_ZN13Adafruit_FONA10enableGPRSEb+0x2be>
    15ba:	87 2d       	mov	r24, r7
    15bc:	34 c0       	rjmp	.+104    	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15be:	43 e1       	ldi	r20, 0x13	; 19
    15c0:	52 e0       	ldi	r21, 0x02	; 2
    15c2:	68 e0       	ldi	r22, 0x08	; 8
    15c4:	72 e0       	ldi	r23, 0x02	; 2
    15c6:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15ca:	88 23       	and	r24, r24
    15cc:	39 f1       	breq	.+78     	; 0x161c <_ZN13Adafruit_FONA10enableGPRSEb+0x2c2>
    15ce:	8e 01       	movw	r16, r28
    15d0:	05 5e       	subi	r16, 0xE5	; 229
    15d2:	1e 4f       	sbci	r17, 0xFE	; 254
    15d4:	f8 01       	movw	r30, r16
    15d6:	40 81       	ld	r20, Z
    15d8:	51 81       	ldd	r21, Z+1	; 0x01
    15da:	20 e1       	ldi	r18, 0x10	; 16
    15dc:	37 e2       	ldi	r19, 0x27	; 39
    15de:	6b ef       	ldi	r22, 0xFB	; 251
    15e0:	71 e0       	ldi	r23, 0x01	; 1
    15e2:	ce 01       	movw	r24, r28
    15e4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15e8:	88 23       	and	r24, r24
    15ea:	d1 f0       	breq	.+52     	; 0x1620 <_ZN13Adafruit_FONA10enableGPRSEb+0x2c6>
    15ec:	f8 01       	movw	r30, r16
    15ee:	40 81       	ld	r20, Z
    15f0:	51 81       	ldd	r21, Z+1	; 0x01
    15f2:	20 e1       	ldi	r18, 0x10	; 16
    15f4:	37 e2       	ldi	r19, 0x27	; 39
    15f6:	60 ef       	ldi	r22, 0xF0	; 240
    15f8:	71 e0       	ldi	r23, 0x01	; 1
    15fa:	ce 01       	movw	r24, r28
    15fc:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    1600:	88 23       	and	r24, r24
    1602:	81 f0       	breq	.+32     	; 0x1624 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ca>
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	0f c0       	rjmp	.+30     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1608:	83 e0       	ldi	r24, 0x03	; 3
    160a:	0d c0       	rjmp	.+26     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    160c:	84 e0       	ldi	r24, 0x04	; 4
    160e:	0b c0       	rjmp	.+22     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1610:	85 e0       	ldi	r24, 0x05	; 5
    1612:	09 c0       	rjmp	.+18     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1614:	86 e0       	ldi	r24, 0x06	; 6
    1616:	07 c0       	rjmp	.+14     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1618:	8a e0       	ldi	r24, 0x0A	; 10
    161a:	05 c0       	rjmp	.+10     	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    161c:	8b e0       	ldi	r24, 0x0B	; 11
    161e:	03 c0       	rjmp	.+6      	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1620:	8c e0       	ldi	r24, 0x0C	; 12
    1622:	01 c0       	rjmp	.+2      	; 0x1626 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1624:	8d e0       	ldi	r24, 0x0D	; 13
    1626:	df 91       	pop	r29
    1628:	cf 91       	pop	r28
    162a:	1f 91       	pop	r17
    162c:	0f 91       	pop	r16
    162e:	ff 90       	pop	r15
    1630:	ef 90       	pop	r14
    1632:	df 90       	pop	r13
    1634:	cf 90       	pop	r12
    1636:	bf 90       	pop	r11
    1638:	af 90       	pop	r10
    163a:	9f 90       	pop	r9
    163c:	8f 90       	pop	r8
    163e:	7f 90       	pop	r7
    1640:	08 95       	ret

00001642 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>:
    1642:	af 92       	push	r10
    1644:	bf 92       	push	r11
    1646:	cf 92       	push	r12
    1648:	df 92       	push	r13
    164a:	ef 92       	push	r14
    164c:	ff 92       	push	r15
    164e:	0f 93       	push	r16
    1650:	cf 93       	push	r28
    1652:	df 93       	push	r29
    1654:	5b 01       	movw	r10, r22
    1656:	6a 01       	movw	r12, r20
    1658:	e2 2e       	mov	r14, r18
    165a:	0f 96       	adiw	r24, 0x0f	; 15
    165c:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <strstr_P>
    1660:	ec 01       	movw	r28, r24
    1662:	89 2b       	or	r24, r25
    1664:	c1 f0       	breq	.+48     	; 0x1696 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x54>
    1666:	c5 01       	movw	r24, r10
    1668:	0e 94 bd 25 	call	0x4b7a	; 0x4b7a <__strlen_P>
    166c:	8c 0f       	add	r24, r28
    166e:	9d 1f       	adc	r25, r29
    1670:	c0 e0       	ldi	r28, 0x00	; 0
    1672:	f1 2c       	mov	r15, r1
    1674:	c0 17       	cp	r28, r16
    1676:	41 f0       	breq	.+16     	; 0x1688 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x46>
    1678:	b7 01       	movw	r22, r14
    167a:	0e 94 e9 25 	call	0x4bd2	; 0x4bd2 <strchr>
    167e:	00 97       	sbiw	r24, 0x00	; 0
    1680:	51 f0       	breq	.+20     	; 0x1696 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x54>
    1682:	01 96       	adiw	r24, 0x01	; 1
    1684:	cf 5f       	subi	r28, 0xFF	; 255
    1686:	f6 cf       	rjmp	.-20     	; 0x1674 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x32>
    1688:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <atoi>
    168c:	f6 01       	movw	r30, r12
    168e:	91 83       	std	Z+1, r25	; 0x01
    1690:	80 83       	st	Z, r24
    1692:	81 e0       	ldi	r24, 0x01	; 1
    1694:	01 c0       	rjmp	.+2      	; 0x1698 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x56>
    1696:	80 e0       	ldi	r24, 0x00	; 0
    1698:	df 91       	pop	r29
    169a:	cf 91       	pop	r28
    169c:	0f 91       	pop	r16
    169e:	ff 90       	pop	r15
    16a0:	ef 90       	pop	r14
    16a2:	df 90       	pop	r13
    16a4:	cf 90       	pop	r12
    16a6:	bf 90       	pop	r11
    16a8:	af 90       	pop	r10
    16aa:	08 95       	ret

000016ac <_ZN13Adafruit_FONA12HTTP_readallEjPc>:
    16ac:	cf 92       	push	r12
    16ae:	df 92       	push	r13
    16b0:	ef 92       	push	r14
    16b2:	ff 92       	push	r15
    16b4:	0f 93       	push	r16
    16b6:	1f 93       	push	r17
    16b8:	cf 93       	push	r28
    16ba:	df 93       	push	r29
    16bc:	00 d0       	rcall	.+0      	; 0x16be <_ZN13Adafruit_FONA12HTTP_readallEjPc+0x12>
    16be:	cd b7       	in	r28, 0x3d	; 61
    16c0:	de b7       	in	r29, 0x3e	; 62
    16c2:	7c 01       	movw	r14, r24
    16c4:	6a 01       	movw	r12, r20
    16c6:	9b 01       	movw	r18, r22
    16c8:	21 50       	subi	r18, 0x01	; 1
    16ca:	31 09       	sbc	r19, r1
    16cc:	40 e0       	ldi	r20, 0x00	; 0
    16ce:	50 e0       	ldi	r21, 0x00	; 0
    16d0:	04 ef       	ldi	r16, 0xF4	; 244
    16d2:	11 e0       	ldi	r17, 0x01	; 1
    16d4:	6e eb       	ldi	r22, 0xBE	; 190
    16d6:	70 e0       	ldi	r23, 0x00	; 0
    16d8:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>
    16dc:	00 e0       	ldi	r16, 0x00	; 0
    16de:	2c e2       	ldi	r18, 0x2C	; 44
    16e0:	ae 01       	movw	r20, r28
    16e2:	4f 5f       	subi	r20, 0xFF	; 255
    16e4:	5f 4f       	sbci	r21, 0xFF	; 255
    16e6:	62 eb       	ldi	r22, 0xB2	; 178
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	c7 01       	movw	r24, r14
    16ec:	0e 94 21 0b 	call	0x1642	; 0x1642 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    16f0:	88 23       	and	r24, r24
    16f2:	61 f0       	breq	.+24     	; 0x170c <_ZN13Adafruit_FONA12HTTP_readallEjPc+0x60>
    16f4:	49 81       	ldd	r20, Y+1	; 0x01
    16f6:	5a 81       	ldd	r21, Y+2	; 0x02
    16f8:	b6 01       	movw	r22, r12
    16fa:	c7 01       	movw	r24, r14
    16fc:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN13Adafruit_FONA19internalReadRawDataEPcj>
    1700:	40 e0       	ldi	r20, 0x00	; 0
    1702:	64 ef       	ldi	r22, 0xF4	; 244
    1704:	71 e0       	ldi	r23, 0x01	; 1
    1706:	c7 01       	movw	r24, r14
    1708:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
    170c:	0f 90       	pop	r0
    170e:	0f 90       	pop	r0
    1710:	df 91       	pop	r29
    1712:	cf 91       	pop	r28
    1714:	1f 91       	pop	r17
    1716:	0f 91       	pop	r16
    1718:	ff 90       	pop	r15
    171a:	ef 90       	pop	r14
    171c:	df 90       	pop	r13
    171e:	cf 90       	pop	r12
    1720:	08 95       	ret

00001722 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l>:
    1722:	4f 92       	push	r4
    1724:	5f 92       	push	r5
    1726:	6f 92       	push	r6
    1728:	7f 92       	push	r7
    172a:	af 92       	push	r10
    172c:	bf 92       	push	r11
    172e:	cf 92       	push	r12
    1730:	df 92       	push	r13
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	cf 93       	push	r28
    173c:	df 93       	push	r29
    173e:	ec 01       	movw	r28, r24
    1740:	6a 01       	movw	r12, r20
    1742:	59 01       	movw	r10, r18
    1744:	27 01       	movw	r4, r14
    1746:	38 01       	movw	r6, r16
    1748:	fc 01       	movw	r30, r24
    174a:	e5 5e       	subi	r30, 0xE5	; 229
    174c:	fe 4f       	sbci	r31, 0xFE	; 254
    174e:	00 81       	ld	r16, Z
    1750:	11 81       	ldd	r17, Z+1	; 0x01
    1752:	26 2f       	mov	r18, r22
    1754:	30 e0       	ldi	r19, 0x00	; 0
    1756:	40 e0       	ldi	r20, 0x00	; 0
    1758:	50 e0       	ldi	r21, 0x00	; 0
    175a:	84 ef       	ldi	r24, 0xF4	; 244
    175c:	e8 2e       	mov	r14, r24
    175e:	ff 24       	eor	r15, r15
    1760:	f3 94       	inc	r15
    1762:	67 ee       	ldi	r22, 0xE7	; 231
    1764:	70 e0       	ldi	r23, 0x00	; 0
    1766:	ce 01       	movw	r24, r28
    1768:	0e 94 71 09 	call	0x12e2	; 0x12e2 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j>
    176c:	88 23       	and	r24, r24
    176e:	09 f1       	breq	.+66     	; 0x17b2 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x90>
    1770:	40 e0       	ldi	r20, 0x00	; 0
    1772:	b2 01       	movw	r22, r4
    1774:	ce 01       	movw	r24, r28
    1776:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
    177a:	01 e0       	ldi	r16, 0x01	; 1
    177c:	2c e2       	ldi	r18, 0x2C	; 44
    177e:	a6 01       	movw	r20, r12
    1780:	6a ed       	ldi	r22, 0xDA	; 218
    1782:	70 e0       	ldi	r23, 0x00	; 0
    1784:	ce 01       	movw	r24, r28
    1786:	0e 94 21 0b 	call	0x1642	; 0x1642 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    178a:	88 23       	and	r24, r24
    178c:	a1 f0       	breq	.+40     	; 0x17b6 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x94>
    178e:	02 e0       	ldi	r16, 0x02	; 2
    1790:	2c e2       	ldi	r18, 0x2C	; 44
    1792:	a5 01       	movw	r20, r10
    1794:	6d ec       	ldi	r22, 0xCD	; 205
    1796:	70 e0       	ldi	r23, 0x00	; 0
    1798:	ce 01       	movw	r24, r28
    179a:	0e 94 21 0b 	call	0x1642	; 0x1642 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    179e:	88 23       	and	r24, r24
    17a0:	61 f0       	breq	.+24     	; 0x17ba <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x98>
    17a2:	f6 01       	movw	r30, r12
    17a4:	80 81       	ld	r24, Z
    17a6:	91 81       	ldd	r25, Z+1	; 0x01
    17a8:	88 3c       	cpi	r24, 0xC8	; 200
    17aa:	91 05       	cpc	r25, r1
    17ac:	41 f4       	brne	.+16     	; 0x17be <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9c>
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	07 c0       	rjmp	.+14     	; 0x17c0 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17b2:	87 e0       	ldi	r24, 0x07	; 7
    17b4:	05 c0       	rjmp	.+10     	; 0x17c0 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17b6:	88 e0       	ldi	r24, 0x08	; 8
    17b8:	03 c0       	rjmp	.+6      	; 0x17c0 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17ba:	89 e0       	ldi	r24, 0x09	; 9
    17bc:	01 c0       	rjmp	.+2      	; 0x17c0 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17be:	80 e8       	ldi	r24, 0x80	; 128
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	1f 91       	pop	r17
    17c6:	0f 91       	pop	r16
    17c8:	ff 90       	pop	r15
    17ca:	ef 90       	pop	r14
    17cc:	df 90       	pop	r13
    17ce:	cf 90       	pop	r12
    17d0:	bf 90       	pop	r11
    17d2:	af 90       	pop	r10
    17d4:	7f 90       	pop	r7
    17d6:	6f 90       	pop	r6
    17d8:	5f 90       	pop	r5
    17da:	4f 90       	pop	r4
    17dc:	08 95       	ret

000017de <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc>:
    17de:	2f 92       	push	r2
    17e0:	3f 92       	push	r3
    17e2:	4f 92       	push	r4
    17e4:	5f 92       	push	r5
    17e6:	6f 92       	push	r6
    17e8:	7f 92       	push	r7
    17ea:	8f 92       	push	r8
    17ec:	9f 92       	push	r9
    17ee:	af 92       	push	r10
    17f0:	bf 92       	push	r11
    17f2:	cf 92       	push	r12
    17f4:	df 92       	push	r13
    17f6:	ef 92       	push	r14
    17f8:	ff 92       	push	r15
    17fa:	0f 93       	push	r16
    17fc:	1f 93       	push	r17
    17fe:	cf 93       	push	r28
    1800:	df 93       	push	r29
    1802:	00 d0       	rcall	.+0      	; 0x1804 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x26>
    1804:	00 d0       	rcall	.+0      	; 0x1806 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x28>
    1806:	1f 92       	push	r1
    1808:	cd b7       	in	r28, 0x3d	; 61
    180a:	de b7       	in	r29, 0x3e	; 62
    180c:	3c 01       	movw	r6, r24
    180e:	5b 83       	std	Y+3, r21	; 0x03
    1810:	4a 83       	std	Y+2, r20	; 0x02
    1812:	19 01       	movw	r2, r18
    1814:	28 01       	movw	r4, r16
    1816:	fd 82       	std	Y+5, r15	; 0x05
    1818:	ec 82       	std	Y+4, r14	; 0x04
    181a:	0e 94 1e 09 	call	0x123c	; 0x123c <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper>
    181e:	89 83       	std	Y+1, r24	; 0x01
    1820:	8f 70       	andi	r24, 0x0F	; 15
    1822:	82 30       	cpi	r24, 0x02	; 2
    1824:	08 f0       	brcs	.+2      	; 0x1828 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x4a>
    1826:	59 c0       	rjmp	.+178    	; 0x18da <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfc>
    1828:	4a 81       	ldd	r20, Y+2	; 0x02
    182a:	5b 81       	ldd	r21, Y+3	; 0x03
    182c:	6a ea       	ldi	r22, 0xAA	; 170
    182e:	70 e0       	ldi	r23, 0x00	; 0
    1830:	c3 01       	movw	r24, r6
    1832:	0e 94 1c 06 	call	0xc38	; 0xc38 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>
    1836:	81 11       	cpse	r24, r1
    1838:	03 c0       	rjmp	.+6      	; 0x1840 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x62>
    183a:	89 81       	ldd	r24, Y+1	; 0x01
    183c:	80 61       	ori	r24, 0x10	; 16
    183e:	89 83       	std	Y+1, r24	; 0x01
    1840:	a2 01       	movw	r20, r4
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	00 ec       	ldi	r16, 0xC0	; 192
    1848:	14 ed       	ldi	r17, 0xD4	; 212
    184a:	21 e0       	ldi	r18, 0x01	; 1
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	c3 01       	movw	r24, r6
    1850:	0e 94 56 06 	call	0xcac	; 0xcac <_ZN13Adafruit_FONA9HTTP_dataEmm>
    1854:	81 11       	cpse	r24, r1
    1856:	03 c0       	rjmp	.+6      	; 0x185e <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x80>
    1858:	89 81       	ldd	r24, Y+1	; 0x01
    185a:	85 60       	ori	r24, 0x05	; 5
    185c:	3f c0       	rjmp	.+126    	; 0x18dc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    185e:	f3 01       	movw	r30, r6
    1860:	e3 5e       	subi	r30, 0xE3	; 227
    1862:	fe 4f       	sbci	r31, 0xFE	; 254
    1864:	80 81       	ld	r24, Z
    1866:	91 81       	ldd	r25, Z+1	; 0x01
    1868:	dc 01       	movw	r26, r24
    186a:	ed 91       	ld	r30, X+
    186c:	fc 91       	ld	r31, X
    186e:	02 80       	ldd	r0, Z+2	; 0x02
    1870:	f3 81       	ldd	r31, Z+3	; 0x03
    1872:	e0 2d       	mov	r30, r0
    1874:	a2 01       	movw	r20, r4
    1876:	b1 01       	movw	r22, r2
    1878:	09 95       	icall
    187a:	f3 01       	movw	r30, r6
    187c:	e5 5e       	subi	r30, 0xE5	; 229
    187e:	fe 4f       	sbci	r31, 0xFE	; 254
    1880:	60 81       	ld	r22, Z
    1882:	71 81       	ldd	r23, Z+1	; 0x01
    1884:	40 e1       	ldi	r20, 0x10	; 16
    1886:	57 e2       	ldi	r21, 0x27	; 39
    1888:	c3 01       	movw	r24, r6
    188a:	0e 94 c1 05 	call	0xb82	; 0xb82 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>
    188e:	81 11       	cpse	r24, r1
    1890:	03 c0       	rjmp	.+6      	; 0x1898 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xba>
    1892:	89 81       	ldd	r24, Y+1	; 0x01
    1894:	86 60       	ori	r24, 0x06	; 6
    1896:	22 c0       	rjmp	.+68     	; 0x18dc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    1898:	10 e1       	ldi	r17, 0x10	; 16
    189a:	e1 2e       	mov	r14, r17
    189c:	17 e2       	ldi	r17, 0x27	; 39
    189e:	f1 2e       	mov	r15, r17
    18a0:	00 e0       	ldi	r16, 0x00	; 0
    18a2:	10 e0       	ldi	r17, 0x00	; 0
    18a4:	95 01       	movw	r18, r10
    18a6:	4c 81       	ldd	r20, Y+4	; 0x04
    18a8:	5d 81       	ldd	r21, Y+5	; 0x05
    18aa:	61 e0       	ldi	r22, 0x01	; 1
    18ac:	c3 01       	movw	r24, r6
    18ae:	0e 94 91 0b 	call	0x1722	; 0x1722 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l>
    18b2:	98 2f       	mov	r25, r24
    18b4:	9f 70       	andi	r25, 0x0F	; 15
    18b6:	92 30       	cpi	r25, 0x02	; 2
    18b8:	18 f0       	brcs	.+6      	; 0x18c0 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xe2>
    18ba:	b9 81       	ldd	r27, Y+1	; 0x01
    18bc:	8b 2b       	or	r24, r27
    18be:	0e c0       	rjmp	.+28     	; 0x18dc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    18c0:	a4 01       	movw	r20, r8
    18c2:	b6 01       	movw	r22, r12
    18c4:	c3 01       	movw	r24, r6
    18c6:	0e 94 56 0b 	call	0x16ac	; 0x16ac <_ZN13Adafruit_FONA12HTTP_readallEjPc>
    18ca:	81 11       	cpse	r24, r1
    18cc:	03 c0       	rjmp	.+6      	; 0x18d4 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xf6>
    18ce:	89 81       	ldd	r24, Y+1	; 0x01
    18d0:	80 62       	ori	r24, 0x20	; 32
    18d2:	89 83       	std	Y+1, r24	; 0x01
    18d4:	89 81       	ldd	r24, Y+1	; 0x01
    18d6:	81 60       	ori	r24, 0x01	; 1
    18d8:	01 c0       	rjmp	.+2      	; 0x18dc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    18da:	89 81       	ldd	r24, Y+1	; 0x01
    18dc:	0f 90       	pop	r0
    18de:	0f 90       	pop	r0
    18e0:	0f 90       	pop	r0
    18e2:	0f 90       	pop	r0
    18e4:	0f 90       	pop	r0
    18e6:	df 91       	pop	r29
    18e8:	cf 91       	pop	r28
    18ea:	1f 91       	pop	r17
    18ec:	0f 91       	pop	r16
    18ee:	ff 90       	pop	r15
    18f0:	ef 90       	pop	r14
    18f2:	df 90       	pop	r13
    18f4:	cf 90       	pop	r12
    18f6:	bf 90       	pop	r11
    18f8:	af 90       	pop	r10
    18fa:	9f 90       	pop	r9
    18fc:	8f 90       	pop	r8
    18fe:	7f 90       	pop	r7
    1900:	6f 90       	pop	r6
    1902:	5f 90       	pop	r5
    1904:	4f 90       	pop	r4
    1906:	3f 90       	pop	r3
    1908:	2f 90       	pop	r2
    190a:	08 95       	ret

0000190c <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_>:
    190c:	2f 92       	push	r2
    190e:	3f 92       	push	r3
    1910:	4f 92       	push	r4
    1912:	5f 92       	push	r5
    1914:	6f 92       	push	r6
    1916:	7f 92       	push	r7
    1918:	8f 92       	push	r8
    191a:	9f 92       	push	r9
    191c:	af 92       	push	r10
    191e:	bf 92       	push	r11
    1920:	cf 92       	push	r12
    1922:	df 92       	push	r13
    1924:	ef 92       	push	r14
    1926:	ff 92       	push	r15
    1928:	0f 93       	push	r16
    192a:	1f 93       	push	r17
    192c:	cf 93       	push	r28
    192e:	df 93       	push	r29
    1930:	3c 01       	movw	r6, r24
    1932:	e9 01       	movw	r28, r18
    1934:	28 01       	movw	r4, r16
    1936:	17 01       	movw	r2, r14
    1938:	76 01       	movw	r14, r12
    193a:	49 01       	movw	r8, r18
    193c:	51 01       	movw	r10, r2
    193e:	68 01       	movw	r12, r16
    1940:	8a 01       	movw	r16, r20
    1942:	9b 01       	movw	r18, r22
    1944:	43 ec       	ldi	r20, 0xC3	; 195
    1946:	51 e0       	ldi	r21, 0x01	; 1
    1948:	6e ec       	ldi	r22, 0xCE	; 206
    194a:	71 e0       	ldi	r23, 0x01	; 1
    194c:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc>
    1950:	18 2f       	mov	r17, r24
    1952:	8f 70       	andi	r24, 0x0F	; 15
    1954:	82 30       	cpi	r24, 0x02	; 2
    1956:	78 f0       	brcs	.+30     	; 0x1976 <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0x6a>
    1958:	60 ea       	ldi	r22, 0xA0	; 160
    195a:	71 e0       	ldi	r23, 0x01	; 1
    195c:	8e e9       	ldi	r24, 0x9E	; 158
    195e:	93 e0       	ldi	r25, 0x03	; 3
    1960:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1964:	61 2f       	mov	r22, r17
    1966:	70 e0       	ldi	r23, 0x00	; 0
    1968:	4a e0       	ldi	r20, 0x0A	; 10
    196a:	50 e0       	ldi	r21, 0x00	; 0
    196c:	8e e9       	ldi	r24, 0x9E	; 158
    196e:	93 e0       	ldi	r25, 0x03	; 3
    1970:	0e 94 16 1e 	call	0x3c2c	; 0x3c2c <_ZN5Print7printlnEii>
    1974:	33 c0       	rjmp	.+102    	; 0x19dc <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0xd0>
    1976:	63 e8       	ldi	r22, 0x83	; 131
    1978:	71 e0       	ldi	r23, 0x01	; 1
    197a:	8e e9       	ldi	r24, 0x9E	; 158
    197c:	93 e0       	ldi	r25, 0x03	; 3
    197e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1982:	f1 01       	movw	r30, r2
    1984:	60 81       	ld	r22, Z
    1986:	71 81       	ldd	r23, Z+1	; 0x01
    1988:	4a e0       	ldi	r20, 0x0A	; 10
    198a:	50 e0       	ldi	r21, 0x00	; 0
    198c:	8e e9       	ldi	r24, 0x9E	; 158
    198e:	93 e0       	ldi	r25, 0x03	; 3
    1990:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1994:	60 e7       	ldi	r22, 0x70	; 112
    1996:	71 e0       	ldi	r23, 0x01	; 1
    1998:	8e e9       	ldi	r24, 0x9E	; 158
    199a:	93 e0       	ldi	r25, 0x03	; 3
    199c:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    19a0:	4a e0       	ldi	r20, 0x0A	; 10
    19a2:	50 e0       	ldi	r21, 0x00	; 0
    19a4:	b2 01       	movw	r22, r4
    19a6:	8e e9       	ldi	r24, 0x9E	; 158
    19a8:	93 e0       	ldi	r25, 0x03	; 3
    19aa:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    19ae:	62 e6       	ldi	r22, 0x62	; 98
    19b0:	71 e0       	ldi	r23, 0x01	; 1
    19b2:	8e e9       	ldi	r24, 0x9E	; 158
    19b4:	93 e0       	ldi	r25, 0x03	; 3
    19b6:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    19ba:	fe 01       	movw	r30, r28
    19bc:	01 90       	ld	r0, Z+
    19be:	00 20       	and	r0, r0
    19c0:	e9 f7       	brne	.-6      	; 0x19bc <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0xb0>
    19c2:	31 97       	sbiw	r30, 0x01	; 1
    19c4:	bf 01       	movw	r22, r30
    19c6:	6c 1b       	sub	r22, r28
    19c8:	7d 0b       	sbc	r23, r29
    19ca:	4a e0       	ldi	r20, 0x0A	; 10
    19cc:	50 e0       	ldi	r21, 0x00	; 0
    19ce:	8e e9       	ldi	r24, 0x9E	; 158
    19d0:	93 e0       	ldi	r25, 0x03	; 3
    19d2:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <_ZN5Print7printlnEji>
    19d6:	c3 01       	movw	r24, r6
    19d8:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN13Adafruit_FONA9HTTP_termEv>
    19dc:	81 2f       	mov	r24, r17
    19de:	df 91       	pop	r29
    19e0:	cf 91       	pop	r28
    19e2:	1f 91       	pop	r17
    19e4:	0f 91       	pop	r16
    19e6:	ff 90       	pop	r15
    19e8:	ef 90       	pop	r14
    19ea:	df 90       	pop	r13
    19ec:	cf 90       	pop	r12
    19ee:	bf 90       	pop	r11
    19f0:	af 90       	pop	r10
    19f2:	9f 90       	pop	r9
    19f4:	8f 90       	pop	r8
    19f6:	7f 90       	pop	r7
    19f8:	6f 90       	pop	r6
    19fa:	5f 90       	pop	r5
    19fc:	4f 90       	pop	r4
    19fe:	3f 90       	pop	r3
    1a00:	2f 90       	pop	r2
    1a02:	08 95       	ret

00001a04 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>:
    1a04:	af 92       	push	r10
    1a06:	bf 92       	push	r11
    1a08:	cf 92       	push	r12
    1a0a:	df 92       	push	r13
    1a0c:	ef 92       	push	r14
    1a0e:	0f 93       	push	r16
    1a10:	1f 93       	push	r17
    1a12:	cf 93       	push	r28
    1a14:	df 93       	push	r29
    1a16:	ec 01       	movw	r28, r24
    1a18:	6a 01       	movw	r12, r20
    1a1a:	59 01       	movw	r10, r18
    1a1c:	10 2f       	mov	r17, r16
    1a1e:	0e 2d       	mov	r16, r14
    1a20:	44 ef       	ldi	r20, 0xF4	; 244
    1a22:	51 e0       	ldi	r21, 0x01	; 1
    1a24:	0e 94 c0 06 	call	0xd80	; 0xd80 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>
    1a28:	21 2f       	mov	r18, r17
    1a2a:	a5 01       	movw	r20, r10
    1a2c:	b6 01       	movw	r22, r12
    1a2e:	ce 01       	movw	r24, r28
    1a30:	0e 94 21 0b 	call	0x1642	; 0x1642 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    1a34:	18 2f       	mov	r17, r24
    1a36:	88 23       	and	r24, r24
    1a38:	31 f0       	breq	.+12     	; 0x1a46 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch+0x42>
    1a3a:	40 e0       	ldi	r20, 0x00	; 0
    1a3c:	64 ef       	ldi	r22, 0xF4	; 244
    1a3e:	71 e0       	ldi	r23, 0x01	; 1
    1a40:	ce 01       	movw	r24, r28
    1a42:	0e 94 5f 05 	call	0xabe	; 0xabe <_ZN13Adafruit_FONA8readlineEjb>
    1a46:	81 2f       	mov	r24, r17
    1a48:	df 91       	pop	r29
    1a4a:	cf 91       	pop	r28
    1a4c:	1f 91       	pop	r17
    1a4e:	0f 91       	pop	r16
    1a50:	ef 90       	pop	r14
    1a52:	df 90       	pop	r13
    1a54:	cf 90       	pop	r12
    1a56:	bf 90       	pop	r11
    1a58:	af 90       	pop	r10
    1a5a:	08 95       	ret

00001a5c <_ZN13Adafruit_FONA14getBattPercentEPj>:
    1a5c:	ef 92       	push	r14
    1a5e:	0f 93       	push	r16
    1a60:	9b 01       	movw	r18, r22
    1a62:	ee 24       	eor	r14, r14
    1a64:	e3 94       	inc	r14
    1a66:	0c e2       	ldi	r16, 0x2C	; 44
    1a68:	4a e0       	ldi	r20, 0x0A	; 10
    1a6a:	53 e0       	ldi	r21, 0x03	; 3
    1a6c:	63 e0       	ldi	r22, 0x03	; 3
    1a6e:	73 e0       	ldi	r23, 0x03	; 3
    1a70:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1a74:	0f 91       	pop	r16
    1a76:	ef 90       	pop	r14
    1a78:	08 95       	ret

00001a7a <_ZN13Adafruit_FONA7getRSSIEv>:
  return strlen(imei);
}

/********* NETWORK *******************************************************/

FONA_GET_RSSI Adafruit_FONA::getRSSI(void) {
    1a7a:	cf 92       	push	r12
    1a7c:	df 92       	push	r13
    1a7e:	ef 92       	push	r14
    1a80:	ff 92       	push	r15
    1a82:	0f 93       	push	r16
    1a84:	1f 93       	push	r17
    1a86:	cf 93       	push	r28
    1a88:	df 93       	push	r29
    1a8a:	cd b7       	in	r28, 0x3d	; 61
    1a8c:	de b7       	in	r29, 0x3e	; 62
    1a8e:	28 97       	sbiw	r28, 0x08	; 8
    1a90:	0f b6       	in	r0, 0x3f	; 63
    1a92:	f8 94       	cli
    1a94:	de bf       	out	0x3e, r29	; 62
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	cd bf       	out	0x3d, r28	; 61
    1a9a:	6c 01       	movw	r12, r24
	
  FONA_GET_RSSI reply;
  uint16_t rssi=0, ber=0, nsPres=0, nsStat=0;
    1a9c:	18 86       	std	Y+8, r1	; 0x08
    1a9e:	1f 82       	std	Y+7, r1	; 0x07
    1aa0:	1e 82       	std	Y+6, r1	; 0x06
    1aa2:	1d 82       	std	Y+5, r1	; 0x05
    1aa4:	1c 82       	std	Y+4, r1	; 0x04
    1aa6:	1b 82       	std	Y+3, r1	; 0x03
    1aa8:	1a 82       	std	Y+2, r1	; 0x02
    1aaa:	19 82       	std	Y+1, r1	; 0x01
  uint8_t netReg=0;
  
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &rssi, ',', 0))
    1aac:	e1 2c       	mov	r14, r1
    1aae:	0c e2       	ldi	r16, 0x2C	; 44
    1ab0:	9e 01       	movw	r18, r28
    1ab2:	29 5f       	subi	r18, 0xF9	; 249
    1ab4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab6:	4c ef       	ldi	r20, 0xFC	; 252
    1ab8:	52 e0       	ldi	r21, 0x02	; 2
    1aba:	65 ef       	ldi	r22, 0xF5	; 245
    1abc:	72 e0       	ldi	r23, 0x02	; 2
    1abe:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1ac2:	f8 2e       	mov	r15, r24
	  reply.rssiErr = 1;
	
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &ber, ',', 1))
    1ac4:	ee 24       	eor	r14, r14
    1ac6:	e3 94       	inc	r14
    1ac8:	9e 01       	movw	r18, r28
    1aca:	2b 5f       	subi	r18, 0xFB	; 251
    1acc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ace:	4e ee       	ldi	r20, 0xEE	; 238
    1ad0:	52 e0       	ldi	r21, 0x02	; 2
    1ad2:	67 ee       	ldi	r22, 0xE7	; 231
    1ad4:	72 e0       	ldi	r23, 0x02	; 2
    1ad6:	c6 01       	movw	r24, r12
    1ad8:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1adc:	88 23       	and	r24, r24
    1ade:	19 f0       	breq	.+6      	; 0x1ae6 <_ZN13Adafruit_FONA7getRSSIEv+0x6c>
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    1ae0:	81 e0       	ldi	r24, 0x01	; 1
    1ae2:	f8 26       	eor	r15, r24
    1ae4:	02 c0       	rjmp	.+4      	; 0x1aea <_ZN13Adafruit_FONA7getRSSIEv+0x70>
	  reply.rssiErr = 1;
    1ae6:	ff 24       	eor	r15, r15
    1ae8:	f3 94       	inc	r15
  
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsPres, ',', 0))
    1aea:	e1 2c       	mov	r14, r1
    1aec:	0c e2       	ldi	r16, 0x2C	; 44
    1aee:	9e 01       	movw	r18, r28
    1af0:	2d 5f       	subi	r18, 0xFD	; 253
    1af2:	3f 4f       	sbci	r19, 0xFF	; 255
    1af4:	4f ed       	ldi	r20, 0xDF	; 223
    1af6:	52 e0       	ldi	r21, 0x02	; 2
    1af8:	66 ed       	ldi	r22, 0xD6	; 214
    1afa:	72 e0       	ldi	r23, 0x02	; 2
    1afc:	c6 01       	movw	r24, r12
    1afe:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1b02:	88 23       	and	r24, r24
    1b04:	11 f0       	breq	.+4      	; 0x1b0a <_ZN13Adafruit_FONA7getRSSIEv+0x90>
	  netReg |= FONA_GET_NETREG::IS_ERROR;
  else
	  netReg |= nsPres; //Is within GET_NETREG enum bounds
    1b06:	1b 81       	ldd	r17, Y+3	; 0x03
    1b08:	01 c0       	rjmp	.+2      	; 0x1b0c <_ZN13Adafruit_FONA7getRSSIEv+0x92>
	
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &ber, ',', 1))
	  reply.rssiErr = 1;
  
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsPres, ',', 0))
	  netReg |= FONA_GET_NETREG::IS_ERROR;
    1b0a:	10 e2       	ldi	r17, 0x20	; 32
  else
	  netReg |= nsPres; //Is within GET_NETREG enum bounds
	
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsStat, ',', 1))
    1b0c:	ee 24       	eor	r14, r14
    1b0e:	e3 94       	inc	r14
    1b10:	0c e2       	ldi	r16, 0x2C	; 44
    1b12:	9e 01       	movw	r18, r28
    1b14:	2f 5f       	subi	r18, 0xFF	; 255
    1b16:	3f 4f       	sbci	r19, 0xFF	; 255
    1b18:	4e ec       	ldi	r20, 0xCE	; 206
    1b1a:	52 e0       	ldi	r21, 0x02	; 2
    1b1c:	65 ec       	ldi	r22, 0xC5	; 197
    1b1e:	72 e0       	ldi	r23, 0x02	; 2
    1b20:	c6 01       	movw	r24, r12
    1b22:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1b26:	81 11       	cpse	r24, r1
    1b28:	03 c0       	rjmp	.+6      	; 0x1b30 <_ZN13Adafruit_FONA7getRSSIEv+0xb6>
	  netReg |= FONA_GET_NETREG::IS_ERROR;
    1b2a:	91 2f       	mov	r25, r17
    1b2c:	90 62       	ori	r25, 0x20	; 32
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <_ZN13Adafruit_FONA7getRSSIEv+0xba>
  else
	  netReg |= nsStat; //Is within GET_NETREG enum bounds
    1b30:	99 81       	ldd	r25, Y+1	; 0x01
    1b32:	91 2b       	or	r25, r17
  
  //Both are <= 99 so can cast&store in 1 byte fields
  reply.rssi = rssi;
  reply.ber = ber;
    1b34:	7d 81       	ldd	r23, Y+5	; 0x05
  reply.netReg = (FONA_GET_NETREG)netReg;
  
  return reply;
    1b36:	6f 81       	ldd	r22, Y+7	; 0x07
}
    1b38:	8f 2d       	mov	r24, r15
    1b3a:	28 96       	adiw	r28, 0x08	; 8
    1b3c:	0f b6       	in	r0, 0x3f	; 63
    1b3e:	f8 94       	cli
    1b40:	de bf       	out	0x3e, r29	; 62
    1b42:	0f be       	out	0x3f, r0	; 63
    1b44:	cd bf       	out	0x3d, r28	; 61
    1b46:	df 91       	pop	r29
    1b48:	cf 91       	pop	r28
    1b4a:	1f 91       	pop	r17
    1b4c:	0f 91       	pop	r16
    1b4e:	ff 90       	pop	r15
    1b50:	ef 90       	pop	r14
    1b52:	df 90       	pop	r13
    1b54:	cf 90       	pop	r12
    1b56:	08 95       	ret

00001b58 <_ZN10GsmPayloadC1Ev>:
boolean GsmPayload::hasGpsInfo(void) { return _header.hasGpsInfo; }
uint8_t GsmPayload::getModuleId(void) { return _header.moduleId; }
void GsmPayload::setModuleId(uint8_t moduleId) { _header.moduleId = moduleId; }
uint16_t GsmPayload::getBootNumber(void) { return _header.bootNumber; }
void GsmPayload::setBootNumber(uint16_t bootNumber) { _header.bootNumber = bootNumber; }
FONA_GET_RSSI GsmPayload::getRSSI(void) { return _header.rssi; }
    1b58:	fc 01       	movw	r30, r24
    1b5a:	10 82       	st	Z, r1
    1b5c:	12 82       	std	Z+2, r1	; 0x02
    1b5e:	11 82       	std	Z+1, r1	; 0x01
    1b60:	13 82       	std	Z+3, r1	; 0x03
    1b62:	14 82       	std	Z+4, r1	; 0x04
    1b64:	15 82       	std	Z+5, r1	; 0x05
    1b66:	16 82       	std	Z+6, r1	; 0x06
    1b68:	17 82       	std	Z+7, r1	; 0x07
    1b6a:	12 86       	std	Z+10, r1	; 0x0a
    1b6c:	11 86       	std	Z+9, r1	; 0x09
    1b6e:	14 86       	std	Z+12, r1	; 0x0c
    1b70:	13 86       	std	Z+11, r1	; 0x0b
    1b72:	08 95       	ret

00001b74 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>:
    1b74:	2a e0       	ldi	r18, 0x0A	; 10
    1b76:	82 9f       	mul	r24, r18
    1b78:	c0 01       	movw	r24, r0
    1b7a:	11 24       	eor	r1, r1
    1b7c:	09 96       	adiw	r24, 0x09	; 9
    1b7e:	0c 94 03 10 	jmp	0x2006	; 0x2006 <_ZN7Helpers14base64_enc_lenEi>

00001b82 <_ZN10GsmPayload16createRawPayloadEPh>:
    1b82:	cf 93       	push	r28
    1b84:	df 93       	push	r29
    1b86:	ec 01       	movw	r28, r24
    1b88:	cb 01       	movw	r24, r22
    1b8a:	29 e0       	ldi	r18, 0x09	; 9
    1b8c:	fe 01       	movw	r30, r28
    1b8e:	db 01       	movw	r26, r22
    1b90:	01 90       	ld	r0, Z+
    1b92:	0d 92       	st	X+, r0
    1b94:	2a 95       	dec	r18
    1b96:	e1 f7       	brne	.-8      	; 0x1b90 <_ZN10GsmPayload16createRawPayloadEPh+0xe>
    1b98:	4b 81       	ldd	r20, Y+3	; 0x03
    1b9a:	2a e0       	ldi	r18, 0x0A	; 10
    1b9c:	42 9f       	mul	r20, r18
    1b9e:	a0 01       	movw	r20, r0
    1ba0:	11 24       	eor	r1, r1
    1ba2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ba4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ba6:	09 96       	adiw	r24, 0x09	; 9
    1ba8:	df 91       	pop	r29
    1baa:	cf 91       	pop	r28
    1bac:	0c 94 e0 25 	jmp	0x4bc0	; 0x4bc0 <memcpy>

00001bb0 <_ZN10GsmPayload20createEncodedPayloadEPc>:
    1bb0:	af 92       	push	r10
    1bb2:	bf 92       	push	r11
    1bb4:	cf 92       	push	r12
    1bb6:	df 92       	push	r13
    1bb8:	ef 92       	push	r14
    1bba:	ff 92       	push	r15
    1bbc:	0f 93       	push	r16
    1bbe:	1f 93       	push	r17
    1bc0:	cf 93       	push	r28
    1bc2:	df 93       	push	r29
    1bc4:	cd b7       	in	r28, 0x3d	; 61
    1bc6:	de b7       	in	r29, 0x3e	; 62
    1bc8:	6b 01       	movw	r12, r22
    1bca:	ed b6       	in	r14, 0x3d	; 61
    1bcc:	fe b6       	in	r15, 0x3e	; 62
    1bce:	fc 01       	movw	r30, r24
    1bd0:	03 81       	ldd	r16, Z+3	; 0x03
    1bd2:	fa e0       	ldi	r31, 0x0A	; 10
    1bd4:	0f 9f       	mul	r16, r31
    1bd6:	80 01       	movw	r16, r0
    1bd8:	11 24       	eor	r1, r1
    1bda:	07 5f       	subi	r16, 0xF7	; 247
    1bdc:	1f 4f       	sbci	r17, 0xFF	; 255
    1bde:	2d b7       	in	r18, 0x3d	; 61
    1be0:	3e b7       	in	r19, 0x3e	; 62
    1be2:	20 1b       	sub	r18, r16
    1be4:	31 0b       	sbc	r19, r17
    1be6:	0f b6       	in	r0, 0x3f	; 63
    1be8:	f8 94       	cli
    1bea:	3e bf       	out	0x3e, r19	; 62
    1bec:	0f be       	out	0x3f, r0	; 63
    1bee:	2d bf       	out	0x3d, r18	; 61
    1bf0:	ed b7       	in	r30, 0x3d	; 61
    1bf2:	fe b7       	in	r31, 0x3e	; 62
    1bf4:	31 96       	adiw	r30, 0x01	; 1
    1bf6:	5f 01       	movw	r10, r30
    1bf8:	bf 01       	movw	r22, r30
    1bfa:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <_ZN10GsmPayload16createRawPayloadEPh>
    1bfe:	a8 01       	movw	r20, r16
    1c00:	b5 01       	movw	r22, r10
    1c02:	c6 01       	movw	r24, r12
    1c04:	0e 94 3e 10 	call	0x207c	; 0x207c <_ZN7Helpers13base64_encodeEPcPhi>
    1c08:	0f b6       	in	r0, 0x3f	; 63
    1c0a:	f8 94       	cli
    1c0c:	fe be       	out	0x3e, r15	; 62
    1c0e:	0f be       	out	0x3f, r0	; 63
    1c10:	ed be       	out	0x3d, r14	; 61
    1c12:	df 91       	pop	r29
    1c14:	cf 91       	pop	r28
    1c16:	1f 91       	pop	r17
    1c18:	0f 91       	pop	r16
    1c1a:	ff 90       	pop	r15
    1c1c:	ef 90       	pop	r14
    1c1e:	df 90       	pop	r13
    1c20:	cf 90       	pop	r12
    1c22:	bf 90       	pop	r11
    1c24:	af 90       	pop	r10
    1c26:	08 95       	ret

00001c28 <_ZN10GsmPayload13setSensorDataEP10SensorDatah>:
    1c28:	fc 01       	movw	r30, r24
    1c2a:	74 87       	std	Z+12, r23	; 0x0c
    1c2c:	63 87       	std	Z+11, r22	; 0x0b
    1c2e:	43 83       	std	Z+3, r20	; 0x03
    1c30:	08 95       	ret

00001c32 <_ZN10GsmPayload11setModuleIdEh>:
    1c32:	fc 01       	movw	r30, r24
    1c34:	60 83       	st	Z, r22
    1c36:	08 95       	ret

00001c38 <_ZN10GsmPayload13setBootNumberEj>:
    1c38:	fc 01       	movw	r30, r24
    1c3a:	72 83       	std	Z+2, r23	; 0x02
    1c3c:	61 83       	std	Z+1, r22	; 0x01
    1c3e:	08 95       	ret

00001c40 <_ZN10GsmPayload7setRSSIE13FONA_GET_RSSI>:
void GsmPayload::setRSSI(FONA_GET_RSSI rssi) { _header.rssi = rssi; }
    1c40:	fc 01       	movw	r30, r24
    1c42:	45 83       	std	Z+5, r20	; 0x05
    1c44:	56 83       	std	Z+6, r21	; 0x06
    1c46:	67 83       	std	Z+7, r22	; 0x07
    1c48:	70 87       	std	Z+8, r23	; 0x08
    1c4a:	08 95       	ret

00001c4c <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>:
	for(i = inputLen - 1; input[i] == '='; i--) {
		numEq++;
	}

	return ((6 * inputLen) / 8) - numEq;
}
    1c4c:	cf 93       	push	r28
    1c4e:	df 93       	push	r29
    1c50:	ec 01       	movw	r28, r24
    1c52:	6e e9       	ldi	r22, 0x9E	; 158
    1c54:	74 e0       	ldi	r23, 0x04	; 4
    1c56:	8e e9       	ldi	r24, 0x9E	; 158
    1c58:	93 e0       	ldi	r25, 0x03	; 3
    1c5a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1c5e:	4a e0       	ldi	r20, 0x0A	; 10
    1c60:	50 e0       	ldi	r21, 0x00	; 0
    1c62:	68 81       	ld	r22, Y
    1c64:	8e e9       	ldi	r24, 0x9E	; 158
    1c66:	93 e0       	ldi	r25, 0x03	; 3
    1c68:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <_ZN5Print5printEhi>
    1c6c:	6a e9       	ldi	r22, 0x9A	; 154
    1c6e:	74 e0       	ldi	r23, 0x04	; 4
    1c70:	8e e9       	ldi	r24, 0x9E	; 158
    1c72:	93 e0       	ldi	r25, 0x03	; 3
    1c74:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1c78:	65 e9       	ldi	r22, 0x95	; 149
    1c7a:	74 e0       	ldi	r23, 0x04	; 4
    1c7c:	8e e9       	ldi	r24, 0x9E	; 158
    1c7e:	93 e0       	ldi	r25, 0x03	; 3
    1c80:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1c84:	4a e0       	ldi	r20, 0x0A	; 10
    1c86:	50 e0       	ldi	r21, 0x00	; 0
    1c88:	69 81       	ldd	r22, Y+1	; 0x01
    1c8a:	8e e9       	ldi	r24, 0x9E	; 158
    1c8c:	93 e0       	ldi	r25, 0x03	; 3
    1c8e:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <_ZN5Print5printEhi>
    1c92:	61 e9       	ldi	r22, 0x91	; 145
    1c94:	74 e0       	ldi	r23, 0x04	; 4
    1c96:	8e e9       	ldi	r24, 0x9E	; 158
    1c98:	93 e0       	ldi	r25, 0x03	; 3
    1c9a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1c9e:	6c e7       	ldi	r22, 0x7C	; 124
    1ca0:	74 e0       	ldi	r23, 0x04	; 4
    1ca2:	8e e9       	ldi	r24, 0x9E	; 158
    1ca4:	93 e0       	ldi	r25, 0x03	; 3
    1ca6:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1caa:	6b 81       	ldd	r22, Y+3	; 0x03
    1cac:	63 70       	andi	r22, 0x03	; 3
    1cae:	70 e0       	ldi	r23, 0x00	; 0
    1cb0:	4a e0       	ldi	r20, 0x0A	; 10
    1cb2:	50 e0       	ldi	r21, 0x00	; 0
    1cb4:	8e e9       	ldi	r24, 0x9E	; 158
    1cb6:	93 e0       	ldi	r25, 0x03	; 3
    1cb8:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1cbc:	62 e7       	ldi	r22, 0x72	; 114
    1cbe:	74 e0       	ldi	r23, 0x04	; 4
    1cc0:	8e e9       	ldi	r24, 0x9E	; 158
    1cc2:	93 e0       	ldi	r25, 0x03	; 3
    1cc4:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1cc8:	6b 81       	ldd	r22, Y+3	; 0x03
    1cca:	6c 71       	andi	r22, 0x1C	; 28
    1ccc:	70 e0       	ldi	r23, 0x00	; 0
    1cce:	75 95       	asr	r23
    1cd0:	67 95       	ror	r22
    1cd2:	75 95       	asr	r23
    1cd4:	67 95       	ror	r22
    1cd6:	4a e0       	ldi	r20, 0x0A	; 10
    1cd8:	50 e0       	ldi	r21, 0x00	; 0
    1cda:	8e e9       	ldi	r24, 0x9E	; 158
    1cdc:	93 e0       	ldi	r25, 0x03	; 3
    1cde:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1ce2:	69 e6       	ldi	r22, 0x69	; 105
    1ce4:	74 e0       	ldi	r23, 0x04	; 4
    1ce6:	8e e9       	ldi	r24, 0x9E	; 158
    1ce8:	93 e0       	ldi	r25, 0x03	; 3
    1cea:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1cee:	6b 81       	ldd	r22, Y+3	; 0x03
    1cf0:	65 fb       	bst	r22, 5
    1cf2:	66 27       	eor	r22, r22
    1cf4:	60 f9       	bld	r22, 0
    1cf6:	4a e0       	ldi	r20, 0x0A	; 10
    1cf8:	50 e0       	ldi	r21, 0x00	; 0
    1cfa:	70 e0       	ldi	r23, 0x00	; 0
    1cfc:	8e e9       	ldi	r24, 0x9E	; 158
    1cfe:	93 e0       	ldi	r25, 0x03	; 3
    1d00:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1d04:	65 e6       	ldi	r22, 0x65	; 101
    1d06:	74 e0       	ldi	r23, 0x04	; 4
    1d08:	8e e9       	ldi	r24, 0x9E	; 158
    1d0a:	93 e0       	ldi	r25, 0x03	; 3
    1d0c:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1d10:	68 e5       	ldi	r22, 0x58	; 88
    1d12:	74 e0       	ldi	r23, 0x04	; 4
    1d14:	8e e9       	ldi	r24, 0x9E	; 158
    1d16:	93 e0       	ldi	r25, 0x03	; 3
    1d18:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1d1c:	4a e0       	ldi	r20, 0x0A	; 10
    1d1e:	50 e0       	ldi	r21, 0x00	; 0
    1d20:	6a 81       	ldd	r22, Y+2	; 0x02
    1d22:	8e e9       	ldi	r24, 0x9E	; 158
    1d24:	93 e0       	ldi	r25, 0x03	; 3
    1d26:	df 91       	pop	r29
    1d28:	cf 91       	pop	r28
    1d2a:	0c 94 8b 1d 	jmp	0x3b16	; 0x3b16 <_ZN5Print7printlnEhi>

00001d2e <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>:
    1d2e:	fc 01       	movw	r30, r24
    1d30:	22 81       	ldd	r18, Z+2	; 0x02
    1d32:	21 11       	cpse	r18, r1
    1d34:	06 c0       	rjmp	.+12     	; 0x1d42 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x14>
    1d36:	90 81       	ld	r25, Z
    1d38:	93 36       	cpi	r25, 0x63	; 99
    1d3a:	19 f0       	breq	.+6      	; 0x1d42 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x14>
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	97 30       	cpi	r25, 0x07	; 7
    1d40:	08 f4       	brcc	.+2      	; 0x1d44 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x16>
    1d42:	80 e0       	ldi	r24, 0x00	; 0
    1d44:	08 95       	ret

00001d46 <_ZN7Helpers15printSensorDataEP10SensorData>:
    1d46:	cf 93       	push	r28
    1d48:	df 93       	push	r29
    1d4a:	ec 01       	movw	r28, r24
    1d4c:	60 e5       	ldi	r22, 0x50	; 80
    1d4e:	74 e0       	ldi	r23, 0x04	; 4
    1d50:	8e e9       	ldi	r24, 0x9E	; 158
    1d52:	93 e0       	ldi	r25, 0x03	; 3
    1d54:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1d58:	68 81       	ld	r22, Y
    1d5a:	79 81       	ldd	r23, Y+1	; 0x01
    1d5c:	4a e0       	ldi	r20, 0x0A	; 10
    1d5e:	50 e0       	ldi	r21, 0x00	; 0
    1d60:	8e e9       	ldi	r24, 0x9E	; 158
    1d62:	93 e0       	ldi	r25, 0x03	; 3
    1d64:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1d68:	6c e4       	ldi	r22, 0x4C	; 76
    1d6a:	74 e0       	ldi	r23, 0x04	; 4
    1d6c:	8e e9       	ldi	r24, 0x9E	; 158
    1d6e:	93 e0       	ldi	r25, 0x03	; 3
    1d70:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1d74:	66 e4       	ldi	r22, 0x46	; 70
    1d76:	74 e0       	ldi	r23, 0x04	; 4
    1d78:	8e e9       	ldi	r24, 0x9E	; 158
    1d7a:	93 e0       	ldi	r25, 0x03	; 3
    1d7c:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1d80:	6a 81       	ldd	r22, Y+2	; 0x02
    1d82:	7b 81       	ldd	r23, Y+3	; 0x03
    1d84:	4a e0       	ldi	r20, 0x0A	; 10
    1d86:	50 e0       	ldi	r21, 0x00	; 0
    1d88:	8e e9       	ldi	r24, 0x9E	; 158
    1d8a:	93 e0       	ldi	r25, 0x03	; 3
    1d8c:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1d90:	62 e4       	ldi	r22, 0x42	; 66
    1d92:	74 e0       	ldi	r23, 0x04	; 4
    1d94:	8e e9       	ldi	r24, 0x9E	; 158
    1d96:	93 e0       	ldi	r25, 0x03	; 3
    1d98:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1d9c:	69 e3       	ldi	r22, 0x39	; 57
    1d9e:	74 e0       	ldi	r23, 0x04	; 4
    1da0:	8e e9       	ldi	r24, 0x9E	; 158
    1da2:	93 e0       	ldi	r25, 0x03	; 3
    1da4:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1da8:	6c 81       	ldd	r22, Y+4	; 0x04
    1daa:	7d 81       	ldd	r23, Y+5	; 0x05
    1dac:	4a e0       	ldi	r20, 0x0A	; 10
    1dae:	50 e0       	ldi	r21, 0x00	; 0
    1db0:	8e e9       	ldi	r24, 0x9E	; 158
    1db2:	93 e0       	ldi	r25, 0x03	; 3
    1db4:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1db8:	65 e3       	ldi	r22, 0x35	; 53
    1dba:	74 e0       	ldi	r23, 0x04	; 4
    1dbc:	8e e9       	ldi	r24, 0x9E	; 158
    1dbe:	93 e0       	ldi	r25, 0x03	; 3
    1dc0:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1dc4:	6f e2       	ldi	r22, 0x2F	; 47
    1dc6:	74 e0       	ldi	r23, 0x04	; 4
    1dc8:	8e e9       	ldi	r24, 0x9E	; 158
    1dca:	93 e0       	ldi	r25, 0x03	; 3
    1dcc:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1dd0:	6e 81       	ldd	r22, Y+6	; 0x06
    1dd2:	7f 81       	ldd	r23, Y+7	; 0x07
    1dd4:	4a e0       	ldi	r20, 0x0A	; 10
    1dd6:	50 e0       	ldi	r21, 0x00	; 0
    1dd8:	8e e9       	ldi	r24, 0x9E	; 158
    1dda:	93 e0       	ldi	r25, 0x03	; 3
    1ddc:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1de0:	6b e2       	ldi	r22, 0x2B	; 43
    1de2:	74 e0       	ldi	r23, 0x04	; 4
    1de4:	8e e9       	ldi	r24, 0x9E	; 158
    1de6:	93 e0       	ldi	r25, 0x03	; 3
    1de8:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1dec:	64 e2       	ldi	r22, 0x24	; 36
    1dee:	74 e0       	ldi	r23, 0x04	; 4
    1df0:	8e e9       	ldi	r24, 0x9E	; 158
    1df2:	93 e0       	ldi	r25, 0x03	; 3
    1df4:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1df8:	4a e0       	ldi	r20, 0x0A	; 10
    1dfa:	50 e0       	ldi	r21, 0x00	; 0
    1dfc:	68 85       	ldd	r22, Y+8	; 0x08
    1dfe:	8e e9       	ldi	r24, 0x9E	; 158
    1e00:	93 e0       	ldi	r25, 0x03	; 3
    1e02:	df 91       	pop	r29
    1e04:	cf 91       	pop	r28
    1e06:	0c 94 8b 1d 	jmp	0x3b16	; 0x3b16 <_ZN5Print7printlnEhi>

00001e0a <_ZN7Helpers18printDailySendDataEP14DailyCycleData>:
    1e0a:	cf 93       	push	r28
    1e0c:	df 93       	push	r29
    1e0e:	ec 01       	movw	r28, r24
    1e10:	6c e1       	ldi	r22, 0x1C	; 28
    1e12:	74 e0       	ldi	r23, 0x04	; 4
    1e14:	8e e9       	ldi	r24, 0x9E	; 158
    1e16:	93 e0       	ldi	r25, 0x03	; 3
    1e18:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1e1c:	69 81       	ldd	r22, Y+1	; 0x01
    1e1e:	7a 81       	ldd	r23, Y+2	; 0x02
    1e20:	4a e0       	ldi	r20, 0x0A	; 10
    1e22:	50 e0       	ldi	r21, 0x00	; 0
    1e24:	8e e9       	ldi	r24, 0x9E	; 158
    1e26:	93 e0       	ldi	r25, 0x03	; 3
    1e28:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1e2c:	68 e1       	ldi	r22, 0x18	; 24
    1e2e:	74 e0       	ldi	r23, 0x04	; 4
    1e30:	8e e9       	ldi	r24, 0x9E	; 158
    1e32:	93 e0       	ldi	r25, 0x03	; 3
    1e34:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1e38:	6d e0       	ldi	r22, 0x0D	; 13
    1e3a:	74 e0       	ldi	r23, 0x04	; 4
    1e3c:	8e e9       	ldi	r24, 0x9E	; 158
    1e3e:	93 e0       	ldi	r25, 0x03	; 3
    1e40:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1e44:	4a e0       	ldi	r20, 0x0A	; 10
    1e46:	50 e0       	ldi	r21, 0x00	; 0
    1e48:	6b 81       	ldd	r22, Y+3	; 0x03
    1e4a:	8e e9       	ldi	r24, 0x9E	; 158
    1e4c:	93 e0       	ldi	r25, 0x03	; 3
    1e4e:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <_ZN5Print5printEhi>
    1e52:	69 e0       	ldi	r22, 0x09	; 9
    1e54:	74 e0       	ldi	r23, 0x04	; 4
    1e56:	8e e9       	ldi	r24, 0x9E	; 158
    1e58:	93 e0       	ldi	r25, 0x03	; 3
    1e5a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1e5e:	62 e0       	ldi	r22, 0x02	; 2
    1e60:	74 e0       	ldi	r23, 0x04	; 4
    1e62:	8e e9       	ldi	r24, 0x9E	; 158
    1e64:	93 e0       	ldi	r25, 0x03	; 3
    1e66:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1e6a:	68 81       	ld	r22, Y
    1e6c:	06 2e       	mov	r0, r22
    1e6e:	00 0c       	add	r0, r0
    1e70:	77 0b       	sbc	r23, r23
    1e72:	4a e0       	ldi	r20, 0x0A	; 10
    1e74:	50 e0       	ldi	r21, 0x00	; 0
    1e76:	8e e9       	ldi	r24, 0x9E	; 158
    1e78:	93 e0       	ldi	r25, 0x03	; 3
    1e7a:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1e7e:	6e ef       	ldi	r22, 0xFE	; 254
    1e80:	73 e0       	ldi	r23, 0x03	; 3
    1e82:	8e e9       	ldi	r24, 0x9E	; 158
    1e84:	93 e0       	ldi	r25, 0x03	; 3
    1e86:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    1e8a:	6c ef       	ldi	r22, 0xFC	; 252
    1e8c:	73 e0       	ldi	r23, 0x03	; 3
    1e8e:	8e e9       	ldi	r24, 0x9E	; 158
    1e90:	93 e0       	ldi	r25, 0x03	; 3
    1e92:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1e96:	ce 01       	movw	r24, r28
    1e98:	04 96       	adiw	r24, 0x04	; 4
    1e9a:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>
    1e9e:	6e ee       	ldi	r22, 0xEE	; 238
    1ea0:	73 e0       	ldi	r23, 0x03	; 3
    1ea2:	8e e9       	ldi	r24, 0x9E	; 158
    1ea4:	93 e0       	ldi	r25, 0x03	; 3
    1ea6:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1eaa:	68 85       	ldd	r22, Y+8	; 0x08
    1eac:	70 e0       	ldi	r23, 0x00	; 0
    1eae:	42 e0       	ldi	r20, 0x02	; 2
    1eb0:	50 e0       	ldi	r21, 0x00	; 0
    1eb2:	8e e9       	ldi	r24, 0x9E	; 158
    1eb4:	93 e0       	ldi	r25, 0x03	; 3
    1eb6:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1eba:	6a ee       	ldi	r22, 0xEA	; 234
    1ebc:	73 e0       	ldi	r23, 0x03	; 3
    1ebe:	8e e9       	ldi	r24, 0x9E	; 158
    1ec0:	93 e0       	ldi	r25, 0x03	; 3
    1ec2:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1ec6:	6d ed       	ldi	r22, 0xDD	; 221
    1ec8:	73 e0       	ldi	r23, 0x03	; 3
    1eca:	8e e9       	ldi	r24, 0x9E	; 158
    1ecc:	93 e0       	ldi	r25, 0x03	; 3
    1ece:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1ed2:	69 85       	ldd	r22, Y+9	; 0x09
    1ed4:	70 e0       	ldi	r23, 0x00	; 0
    1ed6:	42 e0       	ldi	r20, 0x02	; 2
    1ed8:	50 e0       	ldi	r21, 0x00	; 0
    1eda:	8e e9       	ldi	r24, 0x9E	; 158
    1edc:	93 e0       	ldi	r25, 0x03	; 3
    1ede:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1ee2:	69 ed       	ldi	r22, 0xD9	; 217
    1ee4:	73 e0       	ldi	r23, 0x03	; 3
    1ee6:	8e e9       	ldi	r24, 0x9E	; 158
    1ee8:	93 e0       	ldi	r25, 0x03	; 3
    1eea:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1eee:	6c ec       	ldi	r22, 0xCC	; 204
    1ef0:	73 e0       	ldi	r23, 0x03	; 3
    1ef2:	8e e9       	ldi	r24, 0x9E	; 158
    1ef4:	93 e0       	ldi	r25, 0x03	; 3
    1ef6:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1efa:	6a 85       	ldd	r22, Y+10	; 0x0a
    1efc:	70 e0       	ldi	r23, 0x00	; 0
    1efe:	42 e0       	ldi	r20, 0x02	; 2
    1f00:	50 e0       	ldi	r21, 0x00	; 0
    1f02:	8e e9       	ldi	r24, 0x9E	; 158
    1f04:	93 e0       	ldi	r25, 0x03	; 3
    1f06:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    1f0a:	68 ec       	ldi	r22, 0xC8	; 200
    1f0c:	73 e0       	ldi	r23, 0x03	; 3
    1f0e:	8e e9       	ldi	r24, 0x9E	; 158
    1f10:	93 e0       	ldi	r25, 0x03	; 3
    1f12:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    1f16:	6a eb       	ldi	r22, 0xBA	; 186
    1f18:	73 e0       	ldi	r23, 0x03	; 3
    1f1a:	8e e9       	ldi	r24, 0x9E	; 158
    1f1c:	93 e0       	ldi	r25, 0x03	; 3
    1f1e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1f22:	6f 85       	ldd	r22, Y+15	; 0x0f
    1f24:	78 89       	ldd	r23, Y+16	; 0x10
    1f26:	4a e0       	ldi	r20, 0x0A	; 10
    1f28:	50 e0       	ldi	r21, 0x00	; 0
    1f2a:	8e e9       	ldi	r24, 0x9E	; 158
    1f2c:	93 e0       	ldi	r25, 0x03	; 3
    1f2e:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1f32:	66 eb       	ldi	r22, 0xB6	; 182
    1f34:	73 e0       	ldi	r23, 0x03	; 3
    1f36:	8e e9       	ldi	r24, 0x9E	; 158
    1f38:	93 e0       	ldi	r25, 0x03	; 3
    1f3a:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1f3e:	68 ea       	ldi	r22, 0xA8	; 168
    1f40:	73 e0       	ldi	r23, 0x03	; 3
    1f42:	8e e9       	ldi	r24, 0x9E	; 158
    1f44:	93 e0       	ldi	r25, 0x03	; 3
    1f46:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1f4a:	6d 85       	ldd	r22, Y+13	; 0x0d
    1f4c:	7e 85       	ldd	r23, Y+14	; 0x0e
    1f4e:	4a e0       	ldi	r20, 0x0A	; 10
    1f50:	50 e0       	ldi	r21, 0x00	; 0
    1f52:	8e e9       	ldi	r24, 0x9E	; 158
    1f54:	93 e0       	ldi	r25, 0x03	; 3
    1f56:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1f5a:	64 ea       	ldi	r22, 0xA4	; 164
    1f5c:	73 e0       	ldi	r23, 0x03	; 3
    1f5e:	8e e9       	ldi	r24, 0x9E	; 158
    1f60:	93 e0       	ldi	r25, 0x03	; 3
    1f62:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1f66:	65 e9       	ldi	r22, 0x95	; 149
    1f68:	73 e0       	ldi	r23, 0x03	; 3
    1f6a:	8e e9       	ldi	r24, 0x9E	; 158
    1f6c:	93 e0       	ldi	r25, 0x03	; 3
    1f6e:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    1f72:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f74:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f76:	4a e0       	ldi	r20, 0x0A	; 10
    1f78:	50 e0       	ldi	r21, 0x00	; 0
    1f7a:	8e e9       	ldi	r24, 0x9E	; 158
    1f7c:	93 e0       	ldi	r25, 0x03	; 3
    1f7e:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    1f82:	61 e9       	ldi	r22, 0x91	; 145
    1f84:	73 e0       	ldi	r23, 0x03	; 3
    1f86:	8e e9       	ldi	r24, 0x9E	; 158
    1f88:	93 e0       	ldi	r25, 0x03	; 3
    1f8a:	df 91       	pop	r29
    1f8c:	cf 91       	pop	r28
    1f8e:	0c 94 f8 1c 	jmp	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>

00001f92 <_ZN7Helpers12freeListSizeEv>:
    1f92:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <__flp>
    1f96:	f0 91 8b 04 	lds	r31, 0x048B	; 0x80048b <__flp+0x1>
    1f9a:	80 e0       	ldi	r24, 0x00	; 0
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	30 97       	sbiw	r30, 0x00	; 0
    1fa0:	49 f0       	breq	.+18     	; 0x1fb4 <_ZN7Helpers12freeListSizeEv+0x22>
    1fa2:	02 96       	adiw	r24, 0x02	; 2
    1fa4:	20 81       	ld	r18, Z
    1fa6:	31 81       	ldd	r19, Z+1	; 0x01
    1fa8:	82 0f       	add	r24, r18
    1faa:	93 1f       	adc	r25, r19
    1fac:	02 80       	ldd	r0, Z+2	; 0x02
    1fae:	f3 81       	ldd	r31, Z+3	; 0x03
    1fb0:	e0 2d       	mov	r30, r0
    1fb2:	f5 cf       	rjmp	.-22     	; 0x1f9e <_ZN7Helpers12freeListSizeEv+0xc>
    1fb4:	08 95       	ret

00001fb6 <_ZN7Helpers10freeMemoryEv>:
    1fb6:	0f 93       	push	r16
    1fb8:	1f 93       	push	r17
    1fba:	cf 93       	push	r28
    1fbc:	df 93       	push	r29
    1fbe:	00 d0       	rcall	.+0      	; 0x1fc0 <_ZN7Helpers10freeMemoryEv+0xa>
    1fc0:	cd b7       	in	r28, 0x3d	; 61
    1fc2:	de b7       	in	r29, 0x3e	; 62
    1fc4:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__brkval>
    1fc8:	90 91 89 04 	lds	r25, 0x0489	; 0x800489 <__brkval+0x1>
    1fcc:	8e 01       	movw	r16, r28
    1fce:	0f 5f       	subi	r16, 0xFF	; 255
    1fd0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd2:	00 97       	sbiw	r24, 0x00	; 0
    1fd4:	29 f4       	brne	.+10     	; 0x1fe0 <_ZN7Helpers10freeMemoryEv+0x2a>
    1fd6:	0c 58       	subi	r16, 0x8C	; 140
    1fd8:	14 40       	sbci	r17, 0x04	; 4
    1fda:	1a 83       	std	Y+2, r17	; 0x02
    1fdc:	09 83       	std	Y+1, r16	; 0x01
    1fde:	0a c0       	rjmp	.+20     	; 0x1ff4 <_ZN7Helpers10freeMemoryEv+0x3e>
    1fe0:	08 1b       	sub	r16, r24
    1fe2:	19 0b       	sbc	r17, r25
    1fe4:	1a 83       	std	Y+2, r17	; 0x02
    1fe6:	09 83       	std	Y+1, r16	; 0x01
    1fe8:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <_ZN7Helpers12freeListSizeEv>
    1fec:	80 0f       	add	r24, r16
    1fee:	91 1f       	adc	r25, r17
    1ff0:	9a 83       	std	Y+2, r25	; 0x02
    1ff2:	89 83       	std	Y+1, r24	; 0x01
    1ff4:	89 81       	ldd	r24, Y+1	; 0x01
    1ff6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ff8:	0f 90       	pop	r0
    1ffa:	0f 90       	pop	r0
    1ffc:	df 91       	pop	r29
    1ffe:	cf 91       	pop	r28
    2000:	1f 91       	pop	r17
    2002:	0f 91       	pop	r16
    2004:	08 95       	ret

00002006 <_ZN7Helpers14base64_enc_lenEi>:
    2006:	9c 01       	movw	r18, r24
    2008:	2e 5f       	subi	r18, 0xFE	; 254
    200a:	3f 4f       	sbci	r19, 0xFF	; 255
    200c:	e3 e0       	ldi	r30, 0x03	; 3
    200e:	f0 e0       	ldi	r31, 0x00	; 0
    2010:	c9 01       	movw	r24, r18
    2012:	bf 01       	movw	r22, r30
    2014:	0e 94 54 23 	call	0x46a8	; 0x46a8 <__divmodhi4>
    2018:	a9 01       	movw	r20, r18
    201a:	48 1b       	sub	r20, r24
    201c:	59 0b       	sbc	r21, r25
    201e:	ca 01       	movw	r24, r20
    2020:	bf 01       	movw	r22, r30
    2022:	0e 94 54 23 	call	0x46a8	; 0x46a8 <__divmodhi4>
    2026:	cb 01       	movw	r24, r22
    2028:	88 0f       	add	r24, r24
    202a:	99 1f       	adc	r25, r25
    202c:	88 0f       	add	r24, r24
    202e:	99 1f       	adc	r25, r25
    2030:	01 96       	adiw	r24, 0x01	; 1
    2032:	08 95       	ret

00002034 <_Z8a3_to_a4PhS_>:

inline void a3_to_a4(uint8_t * a4, uint8_t * a3) {
    2034:	dc 01       	movw	r26, r24
    2036:	fb 01       	movw	r30, r22
	a4[0] = (a3[0] & 0xfc) >> 2;
    2038:	80 81       	ld	r24, Z
    203a:	86 95       	lsr	r24
    203c:	86 95       	lsr	r24
    203e:	8c 93       	st	X, r24
	a4[1] = ((a3[0] & 0x03) << 4) + ((a3[1] & 0xf0) >> 4);
    2040:	80 81       	ld	r24, Z
    2042:	83 70       	andi	r24, 0x03	; 3
    2044:	91 81       	ldd	r25, Z+1	; 0x01
    2046:	92 95       	swap	r25
    2048:	9f 70       	andi	r25, 0x0F	; 15
    204a:	20 e1       	ldi	r18, 0x10	; 16
    204c:	82 9f       	mul	r24, r18
    204e:	90 0d       	add	r25, r0
    2050:	11 24       	eor	r1, r1
    2052:	11 96       	adiw	r26, 0x01	; 1
    2054:	9c 93       	st	X, r25
    2056:	11 97       	sbiw	r26, 0x01	; 1
	a4[2] = ((a3[1] & 0x0f) << 2) + ((a3[2] & 0xc0) >> 6);
    2058:	91 81       	ldd	r25, Z+1	; 0x01
    205a:	9f 70       	andi	r25, 0x0F	; 15
    205c:	99 0f       	add	r25, r25
    205e:	99 0f       	add	r25, r25
    2060:	22 81       	ldd	r18, Z+2	; 0x02
    2062:	22 95       	swap	r18
    2064:	26 95       	lsr	r18
    2066:	26 95       	lsr	r18
    2068:	23 70       	andi	r18, 0x03	; 3
    206a:	92 0f       	add	r25, r18
    206c:	12 96       	adiw	r26, 0x02	; 2
    206e:	9c 93       	st	X, r25
    2070:	12 97       	sbiw	r26, 0x02	; 2
	a4[3] = (a3[2] & 0x3f);
    2072:	82 81       	ldd	r24, Z+2	; 0x02
    2074:	8f 73       	andi	r24, 0x3F	; 63
    2076:	13 96       	adiw	r26, 0x03	; 3
    2078:	8c 93       	st	X, r24
    207a:	08 95       	ret

0000207c <_ZN7Helpers13base64_encodeEPcPhi>:

/* 
	If *input is string, trailing \0 should NOT be included in the length
	Return length DOES include trailing \0
*/
int16_t Helpers::base64_encode(char *output, uint8_t *input, int16_t inputLen) {
    207c:	6f 92       	push	r6
    207e:	7f 92       	push	r7
    2080:	8f 92       	push	r8
    2082:	9f 92       	push	r9
    2084:	af 92       	push	r10
    2086:	bf 92       	push	r11
    2088:	cf 92       	push	r12
    208a:	df 92       	push	r13
    208c:	ef 92       	push	r14
    208e:	ff 92       	push	r15
    2090:	0f 93       	push	r16
    2092:	1f 93       	push	r17
    2094:	cf 93       	push	r28
    2096:	df 93       	push	r29
    2098:	cd b7       	in	r28, 0x3d	; 61
    209a:	de b7       	in	r29, 0x3e	; 62
    209c:	27 97       	sbiw	r28, 0x07	; 7
    209e:	0f b6       	in	r0, 0x3f	; 63
    20a0:	f8 94       	cli
    20a2:	de bf       	out	0x3e, r29	; 62
    20a4:	0f be       	out	0x3f, r0	; 63
    20a6:	cd bf       	out	0x3d, r28	; 61
    20a8:	6c 01       	movw	r12, r24
    20aa:	5b 01       	movw	r10, r22
    20ac:	3b 01       	movw	r6, r22
    20ae:	64 0e       	add	r6, r20
    20b0:	75 1e       	adc	r7, r21
	
	int16_t i = 0, j = 0;
	int16_t encLen = 0;
    20b2:	e1 2c       	mov	r14, r1
    20b4:	f1 2c       	mov	r15, r1
	If *input is string, trailing \0 should NOT be included in the length
	Return length DOES include trailing \0
*/
int16_t Helpers::base64_encode(char *output, uint8_t *input, int16_t inputLen) {
	
	int16_t i = 0, j = 0;
    20b6:	00 e0       	ldi	r16, 0x00	; 0
    20b8:	10 e0       	ldi	r17, 0x00	; 0
	int16_t encLen = 0;
	uint8_t a3[3];
	uint8_t a4[4];

	while(inputLen--) {
		a3[i++] = *(input++);
    20ba:	4e 01       	movw	r8, r28
    20bc:	85 e0       	ldi	r24, 0x05	; 5
    20be:	88 0e       	add	r8, r24
    20c0:	91 1c       	adc	r9, r1
	int16_t i = 0, j = 0;
	int16_t encLen = 0;
	uint8_t a3[3];
	uint8_t a4[4];

	while(inputLen--) {
    20c2:	6a 14       	cp	r6, r10
    20c4:	7b 04       	cpc	r7, r11
    20c6:	49 f1       	breq	.+82     	; 0x211a <_ZN7Helpers13base64_encodeEPcPhi+0x9e>
		a3[i++] = *(input++);
    20c8:	c8 01       	movw	r24, r16
    20ca:	01 96       	adiw	r24, 0x01	; 1
    20cc:	f5 01       	movw	r30, r10
    20ce:	21 91       	ld	r18, Z+
    20d0:	5f 01       	movw	r10, r30
    20d2:	f4 01       	movw	r30, r8
    20d4:	e0 0f       	add	r30, r16
    20d6:	f1 1f       	adc	r31, r17
    20d8:	20 83       	st	Z, r18
		if(i == 3) {
    20da:	83 30       	cpi	r24, 0x03	; 3
    20dc:	91 05       	cpc	r25, r1
    20de:	11 f0       	breq	.+4      	; 0x20e4 <_ZN7Helpers13base64_encodeEPcPhi+0x68>

			for(i = 0; i < 4; i++) {
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
			}

			i = 0;
    20e0:	8c 01       	movw	r16, r24
    20e2:	ef cf       	rjmp	.-34     	; 0x20c2 <_ZN7Helpers13base64_encodeEPcPhi+0x46>
	uint8_t a4[4];

	while(inputLen--) {
		a3[i++] = *(input++);
		if(i == 3) {
			a3_to_a4(a4, a3);
    20e4:	b4 01       	movw	r22, r8
    20e6:	ce 01       	movw	r24, r28
    20e8:	01 96       	adiw	r24, 0x01	; 1
    20ea:	0e 94 1a 10 	call	0x2034	; 0x2034 <_Z8a3_to_a4PhS_>
    20ee:	de 01       	movw	r26, r28
    20f0:	11 96       	adiw	r26, 0x01	; 1
    20f2:	c6 01       	movw	r24, r12
    20f4:	8e 0d       	add	r24, r14
    20f6:	9f 1d       	adc	r25, r15

			for(i = 0; i < 4; i++) {
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
    20f8:	ed 91       	ld	r30, X+
    20fa:	f0 e0       	ldi	r31, 0x00	; 0
    20fc:	ec 55       	subi	r30, 0x5C	; 92
    20fe:	fb 4f       	sbci	r31, 0xFB	; 251
    2100:	24 91       	lpm	r18, Z
    2102:	fc 01       	movw	r30, r24
    2104:	21 93       	st	Z+, r18
    2106:	cf 01       	movw	r24, r30
	while(inputLen--) {
		a3[i++] = *(input++);
		if(i == 3) {
			a3_to_a4(a4, a3);

			for(i = 0; i < 4; i++) {
    2108:	a8 15       	cp	r26, r8
    210a:	b9 05       	cpc	r27, r9
    210c:	a9 f7       	brne	.-22     	; 0x20f8 <_ZN7Helpers13base64_encodeEPcPhi+0x7c>
    210e:	f4 e0       	ldi	r31, 0x04	; 4
    2110:	ef 0e       	add	r14, r31
    2112:	f1 1c       	adc	r15, r1
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
			}

			i = 0;
    2114:	80 e0       	ldi	r24, 0x00	; 0
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	e3 cf       	rjmp	.-58     	; 0x20e0 <_ZN7Helpers13base64_encodeEPcPhi+0x64>
		}
	}

	if(i) {
    211a:	01 15       	cp	r16, r1
    211c:	11 05       	cpc	r17, r1
    211e:	09 f4       	brne	.+2      	; 0x2122 <_ZN7Helpers13base64_encodeEPcPhi+0xa6>
    2120:	3c c0       	rjmp	.+120    	; 0x219a <_ZN7Helpers13base64_encodeEPcPhi+0x11e>
    2122:	be 01       	movw	r22, r28
    2124:	6b 5f       	subi	r22, 0xFB	; 251
    2126:	7f 4f       	sbci	r23, 0xFF	; 255
    2128:	fb 01       	movw	r30, r22
    212a:	e0 0f       	add	r30, r16
    212c:	f1 1f       	adc	r31, r17
		for(j = i; j < 3; j++) {
    212e:	cf 01       	movw	r24, r30
    2130:	86 1b       	sub	r24, r22
    2132:	97 0b       	sbc	r25, r23
    2134:	03 97       	sbiw	r24, 0x03	; 3
    2136:	14 f4       	brge	.+4      	; 0x213c <_ZN7Helpers13base64_encodeEPcPhi+0xc0>
			a3[j] = '\0';
    2138:	11 92       	st	Z+, r1
			i = 0;
		}
	}

	if(i) {
		for(j = i; j < 3; j++) {
    213a:	f9 cf       	rjmp	.-14     	; 0x212e <_ZN7Helpers13base64_encodeEPcPhi+0xb2>
			a3[j] = '\0';
		}

		a3_to_a4(a4, a3);
    213c:	ce 01       	movw	r24, r28
    213e:	01 96       	adiw	r24, 0x01	; 1
    2140:	5c 01       	movw	r10, r24
    2142:	0e 94 1a 10 	call	0x2034	; 0x2034 <_Z8a3_to_a4PhS_>
    2146:	c6 01       	movw	r24, r12
    2148:	8e 0d       	add	r24, r14
    214a:	9f 1d       	adc	r25, r15
    214c:	d5 01       	movw	r26, r10

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
    214e:	ed 91       	ld	r30, X+
    2150:	f0 e0       	ldi	r31, 0x00	; 0
    2152:	ec 55       	subi	r30, 0x5C	; 92
    2154:	fb 4f       	sbci	r31, 0xFB	; 251
    2156:	24 91       	lpm	r18, Z
    2158:	fc 01       	movw	r30, r24
    215a:	21 93       	st	Z+, r18
    215c:	cf 01       	movw	r24, r30
			a3[j] = '\0';
		}

		a3_to_a4(a4, a3);

		for(j = 0; j < i + 1; j++) {
    215e:	9d 01       	movw	r18, r26
    2160:	2a 19       	sub	r18, r10
    2162:	3b 09       	sbc	r19, r11
    2164:	02 17       	cp	r16, r18
    2166:	13 07       	cpc	r17, r19
    2168:	94 f7       	brge	.-28     	; 0x214e <_ZN7Helpers13base64_encodeEPcPhi+0xd2>
    216a:	ff ef       	ldi	r31, 0xFF	; 255
    216c:	ef 1a       	sub	r14, r31
    216e:	ff 0a       	sbc	r15, r31
    2170:	e0 0e       	add	r14, r16
    2172:	f1 1e       	adc	r15, r17
    2174:	f6 01       	movw	r30, r12
    2176:	ee 0d       	add	r30, r14
    2178:	ff 1d       	adc	r31, r15
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    217a:	0c 19       	sub	r16, r12
    217c:	1d 09       	sbc	r17, r13
    217e:	0e 19       	sub	r16, r14
    2180:	1f 09       	sbc	r17, r15
			output[encLen++] = '=';
    2182:	8d e3       	ldi	r24, 0x3D	; 61
    2184:	7f 01       	movw	r14, r30
    2186:	ec 18       	sub	r14, r12
    2188:	fd 08       	sbc	r15, r13

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    218a:	98 01       	movw	r18, r16
    218c:	2e 0f       	add	r18, r30
    218e:	3f 1f       	adc	r19, r31
    2190:	23 30       	cpi	r18, 0x03	; 3
    2192:	31 05       	cpc	r19, r1
    2194:	14 f4       	brge	.+4      	; 0x219a <_ZN7Helpers13base64_encodeEPcPhi+0x11e>
			output[encLen++] = '=';
    2196:	81 93       	st	Z+, r24

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    2198:	f5 cf       	rjmp	.-22     	; 0x2184 <_ZN7Helpers13base64_encodeEPcPhi+0x108>
			output[encLen++] = '=';
		}
	}
	
	output[encLen++] = '\0';
    219a:	f6 01       	movw	r30, r12
    219c:	ee 0d       	add	r30, r14
    219e:	ff 1d       	adc	r31, r15
    21a0:	10 82       	st	Z, r1
	
	return encLen;
}
    21a2:	c7 01       	movw	r24, r14
    21a4:	01 96       	adiw	r24, 0x01	; 1
    21a6:	27 96       	adiw	r28, 0x07	; 7
    21a8:	0f b6       	in	r0, 0x3f	; 63
    21aa:	f8 94       	cli
    21ac:	de bf       	out	0x3e, r29	; 62
    21ae:	0f be       	out	0x3f, r0	; 63
    21b0:	cd bf       	out	0x3d, r28	; 61
    21b2:	df 91       	pop	r29
    21b4:	cf 91       	pop	r28
    21b6:	1f 91       	pop	r17
    21b8:	0f 91       	pop	r16
    21ba:	ff 90       	pop	r15
    21bc:	ef 90       	pop	r14
    21be:	df 90       	pop	r13
    21c0:	cf 90       	pop	r12
    21c2:	bf 90       	pop	r11
    21c4:	af 90       	pop	r10
    21c6:	9f 90       	pop	r9
    21c8:	8f 90       	pop	r8
    21ca:	7f 90       	pop	r7
    21cc:	6f 90       	pop	r6
    21ce:	08 95       	ret

000021d0 <setup>:
	// the following line then redirects over SSL will be followed.
	//fona.setHTTPSRedirect(true);


	//Must immediately set this to high as this pin in LOW (the default) turns off PWR_SYS
	pinMode(PIN_SHUTDOWN, OUTPUT);
    21d0:	61 e0       	ldi	r22, 0x01	; 1
    21d2:	85 e0       	ldi	r24, 0x05	; 5
    21d4:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <pinMode>
	digitalWrite(PIN_SHUTDOWN, HIGH);
    21d8:	61 e0       	ldi	r22, 0x01	; 1
    21da:	85 e0       	ldi	r24, 0x05	; 5
    21dc:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>

	//Keep FONA powered off by default until it's required later
	pinMode(PIN_FONA_PWR, OUTPUT);
    21e0:	61 e0       	ldi	r22, 0x01	; 1
    21e2:	8c e0       	ldi	r24, 0x0C	; 12
    21e4:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <pinMode>
	digitalWrite(PIN_FONA_PWR, LOW);
    21e8:	60 e0       	ldi	r22, 0x00	; 0
    21ea:	8c e0       	ldi	r24, 0x0C	; 12
    21ec:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
	
	//Turn off redundant Arduino board notification LED controlled by pin 13
	pinMode(13, OUTPUT);
    21f0:	61 e0       	ldi	r22, 0x01	; 1
    21f2:	8d e0       	ldi	r24, 0x0D	; 13
    21f4:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <pinMode>

	delay(3000); //time for above to happen + hardware peripherals to warm up + for user's serial monitor to connect
    21f8:	68 eb       	ldi	r22, 0xB8	; 184
    21fa:	7b e0       	ldi	r23, 0x0B	; 11
    21fc:	80 e0       	ldi	r24, 0x00	; 0
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    2204:	26 e0       	ldi	r18, 0x06	; 6
    2206:	40 e8       	ldi	r20, 0x80	; 128
    2208:	55 e2       	ldi	r21, 0x25	; 37
    220a:	60 e0       	ldi	r22, 0x00	; 0
    220c:	70 e0       	ldi	r23, 0x00	; 0
    220e:	8e e9       	ldi	r24, 0x9E	; 158
    2210:	93 e0       	ldi	r25, 0x03	; 3
    2212:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN14HardwareSerial5beginEmh>
	
	#ifdef OUTPUT_DEBUG
		Serial.begin(9600); //Writes to Serial output
	#endif
	
	RM_LOGLN(F("Starting..."));
    2216:	67 e4       	ldi	r22, 0x47	; 71
    2218:	77 e0       	ldi	r23, 0x07	; 7
    221a:	8e e9       	ldi	r24, 0x9E	; 158
    221c:	93 e0       	ldi	r25, 0x03	; 3
    221e:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
		return;
	}

	if (IS_EXTENDED_GSM_TEST) {
	
		_behaviour |= SYS_BEHAVIOUR::ExtendedGsmTest;
    2222:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2226:	84 60       	ori	r24, 0x04	; 4
    2228:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
    222c:	08 95       	ret

0000222e <_Z21ensureFonaInitialisedb>:
		_behaviour |= SYS_BEHAVIOUR::SendData;
 	}
}

INITIALISING_STATE __initState;
INITIALISING_STATE* ensureFonaInitialised(boolean forDataSend) {
    222e:	0f 93       	push	r16
    2230:	1f 93       	push	r17
    2232:	cf 93       	push	r28
    2234:	df 93       	push	r29
    2236:	cd b7       	in	r28, 0x3d	; 61
    2238:	de b7       	in	r29, 0x3e	; 62
    223a:	2c 97       	sbiw	r28, 0x0c	; 12
    223c:	0f b6       	in	r0, 0x3f	; 63
    223e:	f8 94       	cli
    2240:	de bf       	out	0x3e, r29	; 62
    2242:	0f be       	out	0x3f, r0	; 63
    2244:	cd bf       	out	0x3d, r28	; 61
    2246:	18 2f       	mov	r17, r24

	//boolean isFirstLoop = _initFonaLoopCount == 0;
	++__initState._initFonaLoopCount;
    2248:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    224c:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    2250:	01 96       	adiw	r24, 0x01	; 1
    2252:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__initState+0xa>
    2256:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__initState+0x9>
	
	__initState.isComplete = true;
    225a:	21 e0       	ldi	r18, 0x01	; 1
    225c:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <__initState+0x2>
	__initState.fona = &__fona; //Assume this succeeds
    2260:	29 eb       	ldi	r18, 0xB9	; 185
    2262:	31 e0       	ldi	r19, 0x01	; 1
    2264:	30 93 9f 01 	sts	0x019F, r19	; 0x80019f <__initState+0x1>
    2268:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <__initState>
	
	//Power on and wait 5 seconds
	if (__initState._initFonaLoopCount <= 5) {
    226c:	86 30       	cpi	r24, 0x06	; 6
    226e:	91 05       	cpc	r25, r1
    2270:	78 f4       	brcc	.+30     	; 0x2290 <_Z21ensureFonaInitialisedb+0x62>
		
		if (__initState._initFonaLoopCount == 1) {
    2272:	01 97       	sbiw	r24, 0x01	; 1
    2274:	51 f4       	brne	.+20     	; 0x228a <_Z21ensureFonaInitialisedb+0x5c>
			
			RM_LOGLN(F("Switching on fona..."));
    2276:	62 e3       	ldi	r22, 0x32	; 50
    2278:	77 e0       	ldi	r23, 0x07	; 7
    227a:	8e e9       	ldi	r24, 0x9E	; 158
    227c:	93 e0       	ldi	r25, 0x03	; 3
    227e:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
			digitalWrite(PIN_FONA_PWR, HIGH);
    2282:	61 e0       	ldi	r22, 0x01	; 1
    2284:	8c e0       	ldi	r24, 0x0C	; 12
    2286:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
		}
		
		__initState.isComplete = false;
    228a:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
		return &__initState;
    228e:	05 c1       	rjmp	.+522    	; 0x249a <_Z21ensureFonaInitialisedb+0x26c>
	}
	
	if (__initState._fonaStatusInit==0) {
    2290:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__initState+0x3>
    2294:	81 11       	cpse	r24, r1
    2296:	34 c0       	rjmp	.+104    	; 0x2300 <_Z21ensureFonaInitialisedb+0xd2>
		
		RM_LOGLN(F("Initialising fona..."));
    2298:	6d e1       	ldi	r22, 0x1D	; 29
    229a:	77 e0       	ldi	r23, 0x07	; 7
    229c:	8e e9       	ldi	r24, 0x9E	; 158
    229e:	93 e0       	ldi	r25, 0x03	; 3
    22a0:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
		FONA_STATUS_INIT ret = __fona.begin(FONA_TX, FONA_RX);
    22a4:	42 e0       	ldi	r20, 0x02	; 2
    22a6:	63 e0       	ldi	r22, 0x03	; 3
    22a8:	89 eb       	ldi	r24, 0xB9	; 185
    22aa:	91 e0       	ldi	r25, 0x01	; 1
    22ac:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <_ZN13Adafruit_FONA5beginEhh>
		__initState._fonaStatusInit = ret;
    22b0:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <__initState+0x3>
		
		//TODO: TEST ! with both single-digit module IDs and double digit
		uint8_t moduleId = mem.getModuleId();
    22b4:	8e ea       	ldi	r24, 0xAE	; 174
    22b6:	91 e0       	ldi	r25, 0x01	; 1
    22b8:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <_ZN12RmMemManager11getModuleIdEv>
    22bc:	08 2f       	mov	r16, r24
		String userAgentStr = "IAAAE_RMonV3_";
    22be:	69 e3       	ldi	r22, 0x39	; 57
    22c0:	71 e0       	ldi	r23, 0x01	; 1
    22c2:	ce 01       	movw	r24, r28
    22c4:	07 96       	adiw	r24, 0x07	; 7
    22c6:	0e 94 3f 20 	call	0x407e	; 0x407e <_ZN6StringC1EPKc>
	// if there's not enough memory for the concatenated value, the string
	// will be left unchanged (but this isn't signalled in any way)
	String & operator += (const String &rhs)	{concat(rhs); return (*this);}
	String & operator += (const char *cstr)		{concat(cstr); return (*this);}
	String & operator += (char c)			{concat(c); return (*this);}
	String & operator += (unsigned char num)		{concat(num); return (*this);}
    22ca:	60 2f       	mov	r22, r16
    22cc:	ce 01       	movw	r24, r28
    22ce:	07 96       	adiw	r24, 0x07	; 7
    22d0:	0e 94 a2 20 	call	0x4144	; 0x4144 <_ZN6String6concatEh>
		userAgentStr += moduleId;
		__fona.setUserAgent(userAgentStr);
    22d4:	be 01       	movw	r22, r28
    22d6:	69 5f       	subi	r22, 0xF9	; 249
    22d8:	7f 4f       	sbci	r23, 0xFF	; 255
    22da:	ce 01       	movw	r24, r28
    22dc:	01 96       	adiw	r24, 0x01	; 1
    22de:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <_ZN6StringC1ERKS_>
    22e2:	be 01       	movw	r22, r28
    22e4:	6f 5f       	subi	r22, 0xFF	; 255
    22e6:	7f 4f       	sbci	r23, 0xFF	; 255
    22e8:	89 eb       	ldi	r24, 0xB9	; 185
    22ea:	91 e0       	ldi	r25, 0x01	; 1
    22ec:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN13Adafruit_FONA12setUserAgentE6String>
    22f0:	ce 01       	movw	r24, r28
    22f2:	01 96       	adiw	r24, 0x01	; 1
    22f4:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <_ZN6StringD1Ev>
		FONA_STATUS_INIT ret = __fona.begin(FONA_TX, FONA_RX);
		__initState._fonaStatusInit = ret;
		
		//TODO: TEST ! with both single-digit module IDs and double digit
		uint8_t moduleId = mem.getModuleId();
		String userAgentStr = "IAAAE_RMonV3_";
    22f8:	ce 01       	movw	r24, r28
    22fa:	07 96       	adiw	r24, 0x07	; 7
    22fc:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <_ZN6StringD1Ev>
		userAgentStr += moduleId;
		__fona.setUserAgent(userAgentStr);
	}

	if (IS_ERR_FSI(__initState._fonaStatusInit)) {
    2300:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__initState+0x3>
    2304:	83 50       	subi	r24, 0x03	; 3
    2306:	82 30       	cpi	r24, 0x02	; 2
    2308:	b0 f4       	brcc	.+44     	; 0x2336 <_Z21ensureFonaInitialisedb+0x108>
	
		RM_LOG2(F("Error initialising fona..."), __initState._fonaStatusInit);
    230a:	62 e0       	ldi	r22, 0x02	; 2
    230c:	77 e0       	ldi	r23, 0x07	; 7
    230e:	8e e9       	ldi	r24, 0x9E	; 158
    2310:	93 e0       	ldi	r25, 0x03	; 3
    2312:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    2316:	67 e4       	ldi	r22, 0x47	; 71
    2318:	71 e0       	ldi	r23, 0x01	; 1
    231a:	8e e9       	ldi	r24, 0x9E	; 158
    231c:	93 e0       	ldi	r25, 0x03	; 3
    231e:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    2322:	60 91 a1 01 	lds	r22, 0x01A1	; 0x8001a1 <__initState+0x3>
    2326:	70 e0       	ldi	r23, 0x00	; 0
    2328:	4a e0       	ldi	r20, 0x0A	; 10
    232a:	50 e0       	ldi	r21, 0x00	; 0
    232c:	8e e9       	ldi	r24, 0x9E	; 158
    232e:	93 e0       	ldi	r25, 0x03	; 3
    2330:	0e 94 16 1e 	call	0x3c2c	; 0x3c2c <_ZN5Print7printlnEii>
    2334:	65 c0       	rjmp	.+202    	; 0x2400 <_Z21ensureFonaInitialisedb+0x1d2>
		__initState.fona = NULL;
		return &__initState;
	}	

	
	if (forDataSend) {
    2336:	11 23       	and	r17, r17
    2338:	09 f4       	brne	.+2      	; 0x233c <_Z21ensureFonaInitialisedb+0x10e>
    233a:	af c0       	rjmp	.+350    	; 0x249a <_Z21ensureFonaInitialisedb+0x26c>
		
		//The first enable attempt will happen after GPRS_ENABLE_INTERVAL
		
		if (__initState._gprsStatusInit != 0) {
    233c:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__initState+0x4>
    2340:	81 11       	cpse	r24, r1
    2342:	49 c0       	rjmp	.+146    	; 0x23d6 <_Z21ensureFonaInitialisedb+0x1a8>
			
			//No-op, just return what was calculated the last time
		}
		else if (__initState._initFonaLoopCount % GPRS_ENABLE_INTERVAL != 0) {
    2344:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    2348:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    234c:	6a e0       	ldi	r22, 0x0A	; 10
    234e:	70 e0       	ldi	r23, 0x00	; 0
    2350:	0e 94 40 23 	call	0x4680	; 0x4680 <__udivmodhi4>
    2354:	89 2b       	or	r24, r25
    2356:	19 f0       	breq	.+6      	; 0x235e <_Z21ensureFonaInitialisedb+0x130>
			
			//Try to enable it every x seconds for a period
			__initState.isComplete = false;
    2358:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
    235c:	3c c0       	rjmp	.+120    	; 0x23d6 <_Z21ensureFonaInitialisedb+0x1a8>
		}
		else {
			
			RM_LOGLN(F("Attempting to enable GPRS..."));
    235e:	65 ee       	ldi	r22, 0xE5	; 229
    2360:	76 e0       	ldi	r23, 0x06	; 6
    2362:	8e e9       	ldi	r24, 0x9E	; 158
    2364:	93 e0       	ldi	r25, 0x03	; 3
    2366:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
		
			FONA_STATUS_GPRS_INIT gprsRet = __fona.enableGPRS(true);
    236a:	61 e0       	ldi	r22, 0x01	; 1
    236c:	89 eb       	ldi	r24, 0xB9	; 185
    236e:	91 e0       	ldi	r25, 0x01	; 1
    2370:	0e 94 ad 09 	call	0x135a	; 0x135a <_ZN13Adafruit_FONA10enableGPRSEb>
    2374:	18 2f       	mov	r17, r24
		
			if (IS_ERR_FSGI(gprsRet)) {
    2376:	8f ef       	ldi	r24, 0xFF	; 255
    2378:	81 0f       	add	r24, r17
    237a:	82 30       	cpi	r24, 0x02	; 2
    237c:	20 f1       	brcs	.+72     	; 0x23c6 <_Z21ensureFonaInitialisedb+0x198>
			
				//TODO: Log this
				//But don't log it in eeprom if running a test? Basic=non-writing test vs Extended tests?
			
				RM_LOG2(F("Error initialising GPRS"), gprsRet);
    237e:	6d ec       	ldi	r22, 0xCD	; 205
    2380:	76 e0       	ldi	r23, 0x06	; 6
    2382:	8e e9       	ldi	r24, 0x9E	; 158
    2384:	93 e0       	ldi	r25, 0x03	; 3
    2386:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    238a:	67 e4       	ldi	r22, 0x47	; 71
    238c:	71 e0       	ldi	r23, 0x01	; 1
    238e:	8e e9       	ldi	r24, 0x9E	; 158
    2390:	93 e0       	ldi	r25, 0x03	; 3
    2392:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    2396:	61 2f       	mov	r22, r17
    2398:	70 e0       	ldi	r23, 0x00	; 0
    239a:	4a e0       	ldi	r20, 0x0A	; 10
    239c:	50 e0       	ldi	r21, 0x00	; 0
    239e:	8e e9       	ldi	r24, 0x9E	; 158
    23a0:	93 e0       	ldi	r25, 0x03	; 3
    23a2:	0e 94 16 1e 	call	0x3c2c	; 0x3c2c <_ZN5Print7printlnEii>
				if (__initState._initFonaLoopCount < GPRS_MAX_ENABLE_TIME) {
    23a6:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    23aa:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    23ae:	cc 97       	sbiw	r24, 0x3c	; 60
    23b0:	28 f4       	brcc	.+10     	; 0x23bc <_Z21ensureFonaInitialisedb+0x18e>
				
					__initState.isComplete = false;
    23b2:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
					RM_LOGLN(F("Will try to enable GPRS again shortly"));
    23b6:	67 ea       	ldi	r22, 0xA7	; 167
    23b8:	76 e0       	ldi	r23, 0x06	; 6
    23ba:	09 c0       	rjmp	.+18     	; 0x23ce <_Z21ensureFonaInitialisedb+0x1a0>
				}
				else {
				
					//We've hit the last interval of trying, so all done trying
					__initState._gprsStatusInit = gprsRet;
    23bc:	10 93 a2 01 	sts	0x01A2, r17	; 0x8001a2 <__initState+0x4>
					RM_LOGLN(F("All attempts to enable GPRS failed"));
    23c0:	64 e8       	ldi	r22, 0x84	; 132
    23c2:	76 e0       	ldi	r23, 0x06	; 6
    23c4:	04 c0       	rjmp	.+8      	; 0x23ce <_Z21ensureFonaInitialisedb+0x1a0>
				}
			}
			else {
			
				//Success, we're done initialising GPRS
				__initState._gprsStatusInit = gprsRet;
    23c6:	10 93 a2 01 	sts	0x01A2, r17	; 0x8001a2 <__initState+0x4>
				RM_LOGLN(F("GPRS initialised successfully !"));
    23ca:	64 e6       	ldi	r22, 0x64	; 100
    23cc:	76 e0       	ldi	r23, 0x06	; 6
    23ce:	8e e9       	ldi	r24, 0x9E	; 158
    23d0:	93 e0       	ldi	r25, 0x03	; 3
    23d2:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
		}
		
		if (__initState._gprsStatusInit != 0) {
    23d6:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__initState+0x4>
    23da:	81 50       	subi	r24, 0x01	; 1
    23dc:	82 30       	cpi	r24, 0x02	; 2
    23de:	80 f4       	brcc	.+32     	; 0x2400 <_Z21ensureFonaInitialisedb+0x1d2>
				__initState.fona=NULL;
				return &__initState;
			}
			else { //Initialised successfully, now ensure good signal
				
				++__initState._gprsSignalLoopCount;
    23e0:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    23e4:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    23e8:	01 96       	adiw	r24, 0x01	; 1
    23ea:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <__initState+0xc>
    23ee:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <__initState+0xb>
				
				if (Helpers::isSignalGood(&__initState._rssiStatusInit)) {
    23f2:	83 ea       	ldi	r24, 0xA3	; 163
    23f4:	91 e0       	ldi	r25, 0x01	; 1
    23f6:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>
    23fa:	88 23       	and	r24, r24
    23fc:	31 f0       	breq	.+12     	; 0x240a <_Z21ensureFonaInitialisedb+0x1dc>
    23fe:	4d c0       	rjmp	.+154    	; 0x249a <_Z21ensureFonaInitialisedb+0x26c>
			}
		}
		
		if (__initState._gprsStatusInit != 0) {
			if (IS_ERR_FSGI(__initState._gprsStatusInit)) {
				__initState.fona=NULL;
    2400:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <__initState+0x1>
    2404:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__initState>
    2408:	48 c0       	rjmp	.+144    	; 0x249a <_Z21ensureFonaInitialisedb+0x26c>
				
				if (Helpers::isSignalGood(&__initState._rssiStatusInit)) {
					
					//Previously checked - it's fine
				}
				else if (__initState._gprsSignalLoopCount % GPRS_SIGNAL_CHECK_INTERVAL != 0) {
    240a:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    240e:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    2412:	6a e0       	ldi	r22, 0x0A	; 10
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	0e 94 40 23 	call	0x4680	; 0x4680 <__udivmodhi4>
    241a:	89 2b       	or	r24, r25
    241c:	09 f0       	breq	.+2      	; 0x2420 <_Z21ensureFonaInitialisedb+0x1f2>
    241e:	35 cf       	rjmp	.-406    	; 0x228a <_Z21ensureFonaInitialisedb+0x5c>
					//Try to enable it every x seconds for a period
					__initState.isComplete = false;
				}
				else {

					RM_LOG(F("Checking RSSI - currently:"));
    2420:	69 e4       	ldi	r22, 0x49	; 73
    2422:	76 e0       	ldi	r23, 0x06	; 6
    2424:	8e e9       	ldi	r24, 0x9E	; 158
    2426:	93 e0       	ldi	r25, 0x03	; 3
    2428:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
					FONA_GET_RSSI rssi = __fona.getRSSI();
    242c:	89 eb       	ldi	r24, 0xB9	; 185
    242e:	91 e0       	ldi	r25, 0x01	; 1
    2430:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <_ZN13Adafruit_FONA7getRSSIEv>
    2434:	69 83       	std	Y+1, r22	; 0x01
    2436:	7a 83       	std	Y+2, r23	; 0x02
    2438:	8b 83       	std	Y+3, r24	; 0x03
    243a:	9c 83       	std	Y+4, r25	; 0x04
					Helpers::printRSSI(&rssi);					
    243c:	ce 01       	movw	r24, r28
    243e:	01 96       	adiw	r24, 0x01	; 1
    2440:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>
					
					if (!Helpers::isSignalGood(&rssi)) {
    2444:	ce 01       	movw	r24, r28
    2446:	01 96       	adiw	r24, 0x01	; 1
    2448:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>
    244c:	81 11       	cpse	r24, r1
    244e:	13 c0       	rjmp	.+38     	; 0x2476 <_Z21ensureFonaInitialisedb+0x248>
						
						if (__initState._gprsSignalLoopCount < GPRS_MAX_SIGNAL_WAIT_TIME) {
    2450:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    2454:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    2458:	8c 32       	cpi	r24, 0x2C	; 44
    245a:	91 40       	sbci	r25, 0x01	; 1
    245c:	48 f4       	brcc	.+18     	; 0x2470 <_Z21ensureFonaInitialisedb+0x242>
							
							__initState.isComplete = false;
    245e:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
							RM_LOGLN(F("\t (Bad-RSSI - will check again after interval)"));
    2462:	6a e1       	ldi	r22, 0x1A	; 26
    2464:	76 e0       	ldi	r23, 0x06	; 6
    2466:	8e e9       	ldi	r24, 0x9E	; 158
    2468:	93 e0       	ldi	r25, 0x03	; 3
    246a:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    246e:	15 c0       	rjmp	.+42     	; 0x249a <_Z21ensureFonaInitialisedb+0x26c>
						}						
						else {
							
							//Wait-time over for signal, continue regardless of signal value, it may work
							RM_LOGLN(F("\t (Waiting For Good-RSSI Timed Out - will continue now)"));
    2470:	62 ee       	ldi	r22, 0xE2	; 226
    2472:	75 e0       	ldi	r23, 0x05	; 5
    2474:	02 c0       	rjmp	.+4      	; 0x247a <_Z21ensureFonaInitialisedb+0x24c>
						}
					}
					else {
						
						//All done, signal is good now
						RM_LOGLN(F("\t (Good-RSSI - successfull, all done)"));
    2476:	6c eb       	ldi	r22, 0xBC	; 188
    2478:	75 e0       	ldi	r23, 0x05	; 5
    247a:	8e e9       	ldi	r24, 0x9E	; 158
    247c:	93 e0       	ldi	r25, 0x03	; 3
    247e:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
						__initState._rssiStatusInit = rssi;
    2482:	89 81       	ldd	r24, Y+1	; 0x01
    2484:	9a 81       	ldd	r25, Y+2	; 0x02
    2486:	ab 81       	ldd	r26, Y+3	; 0x03
    2488:	bc 81       	ldd	r27, Y+4	; 0x04
    248a:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <__initState+0x5>
    248e:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <__initState+0x6>
    2492:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__initState+0x7>
    2496:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__initState+0x8>
			return &__initState;
		}
	}
	
	return &__initState;//__fona;
}
    249a:	8e e9       	ldi	r24, 0x9E	; 158
    249c:	91 e0       	ldi	r25, 0x01	; 1
    249e:	2c 96       	adiw	r28, 0x0c	; 12
    24a0:	0f b6       	in	r0, 0x3f	; 63
    24a2:	f8 94       	cli
    24a4:	de bf       	out	0x3e, r29	; 62
    24a6:	0f be       	out	0x3f, r0	; 63
    24a8:	cd bf       	out	0x3d, r28	; 61
    24aa:	df 91       	pop	r29
    24ac:	cf 91       	pop	r28
    24ae:	1f 91       	pop	r17
    24b0:	0f 91       	pop	r16
    24b2:	08 95       	ret

000024b4 <_Z15switchOffSystemv>:


void switchOffSystem() {
	
	RM_LOGLN("Switching off...");
    24b4:	69 e4       	ldi	r22, 0x49	; 73
    24b6:	71 e0       	ldi	r23, 0x01	; 1
    24b8:	8e e9       	ldi	r24, 0x9E	; 158
    24ba:	93 e0       	ldi	r25, 0x03	; 3
    24bc:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
	
	digitalWrite(PIN_SHUTDOWN, LOW);
    24c0:	60 e0       	ldi	r22, 0x00	; 0
    24c2:	85 e0       	ldi	r24, 0x05	; 5
    24c4:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
	
	delay(1000); //To allow serial to purge the shutdown message
    24c8:	68 ee       	ldi	r22, 0xE8	; 232
    24ca:	73 e0       	ldi	r23, 0x03	; 3
    24cc:	80 e0       	ldi	r24, 0x00	; 0
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	0c 94 a9 1e 	jmp	0x3d52	; 0x3d52 <delay>

000024d4 <_Z12takeReadingsv>:
}


boolean takeReadings() {
    24d4:	cf 93       	push	r28
    24d6:	df 93       	push	r29
    24d8:	cd b7       	in	r28, 0x3d	; 61
    24da:	de b7       	in	r29, 0x3e	; 62
    24dc:	2a 97       	sbiw	r28, 0x0a	; 10
    24de:	0f b6       	in	r0, 0x3f	; 63
    24e0:	f8 94       	cli
    24e2:	de bf       	out	0x3e, r29	; 62
    24e4:	0f be       	out	0x3f, r0	; 63
    24e6:	cd bf       	out	0x3d, r28	; 61
	
	RM_LOGLN(F("Taking readings..."));
    24e8:	69 ea       	ldi	r22, 0xA9	; 169
    24ea:	75 e0       	ldi	r23, 0x05	; 5
    24ec:	8e e9       	ldi	r24, 0x9E	; 158
    24ee:	93 e0       	ldi	r25, 0x03	; 3
    24f0:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	SensorData sd;
    24f4:	1a 82       	std	Y+2, r1	; 0x02
    24f6:	19 82       	std	Y+1, r1	; 0x01
    24f8:	1c 82       	std	Y+4, r1	; 0x04
    24fa:	1b 82       	std	Y+3, r1	; 0x03
    24fc:	1e 82       	std	Y+6, r1	; 0x06
    24fe:	1d 82       	std	Y+5, r1	; 0x05
    2500:	18 86       	std	Y+8, r1	; 0x08
    2502:	1f 82       	std	Y+7, r1	; 0x07
    2504:	19 86       	std	Y+9, r1	; 0x09
    2506:	81 e0       	ldi	r24, 0x01	; 1
    2508:	8a 87       	std	Y+10, r24	; 0x0a
	sensorMgr.readData(&sd);
    250a:	be 01       	movw	r22, r28
    250c:	6f 5f       	subi	r22, 0xFF	; 255
    250e:	7f 4f       	sbci	r23, 0xFF	; 255
    2510:	8c ea       	ldi	r24, 0xAC	; 172
    2512:	91 e0       	ldi	r25, 0x01	; 1
    2514:	0e 94 5d 16 	call	0x2cba	; 0x2cba <_ZN13SensorManager8readDataEP10SensorData>
	
	return true;
}
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	2a 96       	adiw	r28, 0x0a	; 10
    251c:	0f b6       	in	r0, 0x3f	; 63
    251e:	f8 94       	cli
    2520:	de bf       	out	0x3e, r29	; 62
    2522:	0f be       	out	0x3f, r0	; 63
    2524:	cd bf       	out	0x3d, r28	; 61
    2526:	df 91       	pop	r29
    2528:	cf 91       	pop	r28
    252a:	08 95       	ret

0000252c <_Z17createEncodedDataPcPhh13FONA_GET_RSSI>:

void createEncodedData(char* encodedOutput, uint8_t* outputNumLoaded, uint8_t maxReadings, 
					   FONA_GET_RSSI rssi) {
    252c:	2f 92       	push	r2
    252e:	3f 92       	push	r3
    2530:	4f 92       	push	r4
    2532:	5f 92       	push	r5
    2534:	6f 92       	push	r6
    2536:	7f 92       	push	r7
    2538:	8f 92       	push	r8
    253a:	9f 92       	push	r9
    253c:	af 92       	push	r10
    253e:	bf 92       	push	r11
    2540:	df 92       	push	r13
    2542:	ef 92       	push	r14
    2544:	ff 92       	push	r15
    2546:	0f 93       	push	r16
    2548:	1f 93       	push	r17
    254a:	cf 93       	push	r28
    254c:	df 93       	push	r29
    254e:	cd b7       	in	r28, 0x3d	; 61
    2550:	de b7       	in	r29, 0x3e	; 62
    2552:	2d 97       	sbiw	r28, 0x0d	; 13
    2554:	0f b6       	in	r0, 0x3f	; 63
    2556:	f8 94       	cli
    2558:	de bf       	out	0x3e, r29	; 62
    255a:	0f be       	out	0x3f, r0	; 63
    255c:	cd bf       	out	0x3d, r28	; 61
    255e:	4c 01       	movw	r8, r24
    2560:	5b 01       	movw	r10, r22
    2562:	d4 2e       	mov	r13, r20
    2564:	28 01       	movw	r4, r16
    2566:	39 01       	movw	r6, r18
	payload.setModuleId(mem.getModuleId());
	payload.setBootNumber(mem.getBootCount());
	payload.setSensorData((SensorData*)&sData, *outputNumLoaded);
	payload.setRSSI(rssi);
	payload.createEncodedPayload(encodedOutput);
}
    2568:	2d b6       	in	r2, 0x3d	; 61
    256a:	3e b6       	in	r3, 0x3e	; 62

void createEncodedData(char* encodedOutput, uint8_t* outputNumLoaded, uint8_t maxReadings, 
					   FONA_GET_RSSI rssi) {
	
	//This will likely be peak of stack usage so warn if low memory !
	int16_t freeRAM = Helpers::freeMemory();
    256c:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <_ZN7Helpers10freeMemoryEv>
    2570:	7c 01       	movw	r14, r24
	int16_t minRAM = (sizeof(SensorData)*maxReadings)
    2572:	0d 2d       	mov	r16, r13
    2574:	10 e0       	ldi	r17, 0x00	; 0
					+sizeof(GsmPayload)
					+100; //Buffer

	if (freeRAM < minRAM)
    2576:	2a e0       	ldi	r18, 0x0A	; 10
    2578:	d2 9e       	mul	r13, r18
    257a:	c0 01       	movw	r24, r0
    257c:	11 24       	eor	r1, r1
    257e:	8f 58       	subi	r24, 0x8F	; 143
    2580:	9f 4f       	sbci	r25, 0xFF	; 255
    2582:	e8 16       	cp	r14, r24
    2584:	f9 06       	cpc	r15, r25
    2586:	34 f4       	brge	.+12     	; 0x2594 <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0x68>
		RM_LOG2(F("**** Too little RAM before payload creation ***"), freeRAM);
    2588:	69 e7       	ldi	r22, 0x79	; 121
    258a:	75 e0       	ldi	r23, 0x05	; 5
    258c:	8e e9       	ldi	r24, 0x9E	; 158
    258e:	93 e0       	ldi	r25, 0x03	; 3
    2590:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    2594:	67 e4       	ldi	r22, 0x47	; 71
    2596:	71 e0       	ldi	r23, 0x01	; 1
    2598:	8e e9       	ldi	r24, 0x9E	; 158
    259a:	93 e0       	ldi	r25, 0x03	; 3
    259c:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    25a0:	4a e0       	ldi	r20, 0x0A	; 10
    25a2:	50 e0       	ldi	r21, 0x00	; 0
    25a4:	b7 01       	movw	r22, r14
    25a6:	8e e9       	ldi	r24, 0x9E	; 158
    25a8:	93 e0       	ldi	r25, 0x03	; 3
    25aa:	0e 94 16 1e 	call	0x3c2c	; 0x3c2c <_ZN5Print7printlnEii>
	
	SensorData sData[maxReadings];
    25ae:	2a e0       	ldi	r18, 0x0A	; 10
    25b0:	20 9f       	mul	r18, r16
    25b2:	c0 01       	movw	r24, r0
    25b4:	21 9f       	mul	r18, r17
    25b6:	90 0d       	add	r25, r0
    25b8:	11 24       	eor	r1, r1
    25ba:	ed b7       	in	r30, 0x3d	; 61
    25bc:	fe b7       	in	r31, 0x3e	; 62
    25be:	e8 1b       	sub	r30, r24
    25c0:	f9 0b       	sbc	r31, r25
    25c2:	0f b6       	in	r0, 0x3f	; 63
    25c4:	f8 94       	cli
    25c6:	fe bf       	out	0x3e, r31	; 62
    25c8:	0f be       	out	0x3f, r0	; 63
    25ca:	ed bf       	out	0x3d, r30	; 61
    25cc:	2d b7       	in	r18, 0x3d	; 61
    25ce:	3e b7       	in	r19, 0x3e	; 62
    25d0:	2f 5f       	subi	r18, 0xFF	; 255
    25d2:	3f 4f       	sbci	r19, 0xFF	; 255
    25d4:	79 01       	movw	r14, r18
    25d6:	f9 01       	movw	r30, r18
	
	uint8_t spareBuffer[16] = {0}; //Sets all elems to 0
};


struct SensorData {
    25d8:	81 e0       	ldi	r24, 0x01	; 1
    25da:	01 50       	subi	r16, 0x01	; 1
    25dc:	11 09       	sbc	r17, r1
    25de:	60 f0       	brcs	.+24     	; 0x25f8 <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0xcc>
    25e0:	11 82       	std	Z+1, r1	; 0x01
    25e2:	10 82       	st	Z, r1
    25e4:	13 82       	std	Z+3, r1	; 0x03
    25e6:	12 82       	std	Z+2, r1	; 0x02
    25e8:	15 82       	std	Z+5, r1	; 0x05
    25ea:	14 82       	std	Z+4, r1	; 0x04
    25ec:	17 82       	std	Z+7, r1	; 0x07
    25ee:	16 82       	std	Z+6, r1	; 0x06
    25f0:	10 86       	std	Z+8, r1	; 0x08
    25f2:	81 87       	std	Z+9, r24	; 0x09
    25f4:	3a 96       	adiw	r30, 0x0a	; 10
    25f6:	f1 cf       	rjmp	.-30     	; 0x25da <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0xae>
	*outputNumLoaded = mem.loadSensorData((SensorData*)&sData, maxReadings);//, countToSend, &loadedTo);
    25f8:	4d 2d       	mov	r20, r13
    25fa:	b7 01       	movw	r22, r14
    25fc:	8e ea       	ldi	r24, 0xAE	; 174
    25fe:	91 e0       	ldi	r25, 0x01	; 1
    2600:	0e 94 dd 15 	call	0x2bba	; 0x2bba <_ZN12RmMemManager14loadSensorDataEP10SensorDatah>
    2604:	f5 01       	movw	r30, r10
    2606:	80 83       	st	Z, r24
	
	GsmPayload payload;
    2608:	ce 01       	movw	r24, r28
    260a:	01 96       	adiw	r24, 0x01	; 1
    260c:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <_ZN10GsmPayloadC1Ev>
	payload.setModuleId(mem.getModuleId());
    2610:	8e ea       	ldi	r24, 0xAE	; 174
    2612:	91 e0       	ldi	r25, 0x01	; 1
    2614:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <_ZN12RmMemManager11getModuleIdEv>
    2618:	68 2f       	mov	r22, r24
    261a:	ce 01       	movw	r24, r28
    261c:	01 96       	adiw	r24, 0x01	; 1
    261e:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <_ZN10GsmPayload11setModuleIdEh>
	payload.setBootNumber(mem.getBootCount());
    2622:	8e ea       	ldi	r24, 0xAE	; 174
    2624:	91 e0       	ldi	r25, 0x01	; 1
    2626:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_ZN12RmMemManager12getBootCountEv>
    262a:	bc 01       	movw	r22, r24
    262c:	ce 01       	movw	r24, r28
    262e:	01 96       	adiw	r24, 0x01	; 1
    2630:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <_ZN10GsmPayload13setBootNumberEj>
	payload.setSensorData((SensorData*)&sData, *outputNumLoaded);
    2634:	f5 01       	movw	r30, r10
    2636:	40 81       	ld	r20, Z
    2638:	b7 01       	movw	r22, r14
    263a:	ce 01       	movw	r24, r28
    263c:	01 96       	adiw	r24, 0x01	; 1
    263e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <_ZN10GsmPayload13setSensorDataEP10SensorDatah>
	payload.setRSSI(rssi);
    2642:	b3 01       	movw	r22, r6
    2644:	a2 01       	movw	r20, r4
    2646:	ce 01       	movw	r24, r28
    2648:	01 96       	adiw	r24, 0x01	; 1
    264a:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <_ZN10GsmPayload7setRSSIE13FONA_GET_RSSI>
	payload.createEncodedPayload(encodedOutput);
    264e:	b4 01       	movw	r22, r8
    2650:	ce 01       	movw	r24, r28
    2652:	01 96       	adiw	r24, 0x01	; 1
    2654:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <_ZN10GsmPayload20createEncodedPayloadEPc>
}
    2658:	0f b6       	in	r0, 0x3f	; 63
    265a:	f8 94       	cli
    265c:	3e be       	out	0x3e, r3	; 62
    265e:	0f be       	out	0x3f, r0	; 63
    2660:	2d be       	out	0x3d, r2	; 61
    2662:	2d 96       	adiw	r28, 0x0d	; 13
    2664:	0f b6       	in	r0, 0x3f	; 63
    2666:	f8 94       	cli
    2668:	de bf       	out	0x3e, r29	; 62
    266a:	0f be       	out	0x3f, r0	; 63
    266c:	cd bf       	out	0x3d, r28	; 61
    266e:	df 91       	pop	r29
    2670:	cf 91       	pop	r28
    2672:	1f 91       	pop	r17
    2674:	0f 91       	pop	r16
    2676:	ff 90       	pop	r15
    2678:	ef 90       	pop	r14
    267a:	df 90       	pop	r13
    267c:	bf 90       	pop	r11
    267e:	af 90       	pop	r10
    2680:	9f 90       	pop	r9
    2682:	8f 90       	pop	r8
    2684:	7f 90       	pop	r7
    2686:	6f 90       	pop	r6
    2688:	5f 90       	pop	r5
    268a:	4f 90       	pop	r4
    268c:	3f 90       	pop	r3
    268e:	2f 90       	pop	r2
    2690:	08 95       	ret

00002692 <_Z8sendDatav>:

uint16_t _sendDataLoopCount = 0;
boolean sendData() {
    2692:	3f 92       	push	r3
    2694:	4f 92       	push	r4
    2696:	5f 92       	push	r5
    2698:	6f 92       	push	r6
    269a:	7f 92       	push	r7
    269c:	8f 92       	push	r8
    269e:	9f 92       	push	r9
    26a0:	af 92       	push	r10
    26a2:	bf 92       	push	r11
    26a4:	cf 92       	push	r12
    26a6:	df 92       	push	r13
    26a8:	ef 92       	push	r14
    26aa:	ff 92       	push	r15
    26ac:	0f 93       	push	r16
    26ae:	1f 93       	push	r17
    26b0:	cf 93       	push	r28
    26b2:	df 93       	push	r29
    26b4:	cd b7       	in	r28, 0x3d	; 61
    26b6:	de b7       	in	r29, 0x3e	; 62
    26b8:	a3 97       	sbiw	r28, 0x23	; 35
    26ba:	0f b6       	in	r0, 0x3f	; 63
    26bc:	f8 94       	cli
    26be:	de bf       	out	0x3e, r29	; 62
    26c0:	0f be       	out	0x3f, r0	; 63
    26c2:	cd bf       	out	0x3d, r28	; 61
	Helpers::printDailySendData(&sendData);
		
	mem.appendDailyEntry(&sendData);
		
	return true;
}
    26c4:	4d b6       	in	r4, 0x3d	; 61
    26c6:	5e b6       	in	r5, 0x3e	; 62
uint16_t _sendDataLoopCount = 0;
boolean sendData() {
	
	//Increment before doing any work so doesn't get stuck continuously initialising
	//(by being called from 'loop') due to a loop-resetting error raised by FONA
	++_sendDataLoopCount;
    26c8:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <_sendDataLoopCount>
    26cc:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <_sendDataLoopCount+0x1>
    26d0:	01 96       	adiw	r24, 0x01	; 1
    26d2:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <_sendDataLoopCount+0x1>
    26d6:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <_sendDataLoopCount>
	
	if (_sendDataLoopCount == 1)
    26da:	01 97       	sbiw	r24, 0x01	; 1
    26dc:	31 f4       	brne	.+12     	; 0x26ea <_Z8sendDatav+0x58>
		RM_LOGLN(F("Initialising Fona to send data"));
    26de:	6a e5       	ldi	r22, 0x5A	; 90
    26e0:	75 e0       	ldi	r23, 0x05	; 5
    26e2:	8e e9       	ldi	r24, 0x9E	; 158
    26e4:	93 e0       	ldi	r25, 0x03	; 3
    26e6:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	INITIALISING_STATE* sendDataFona = ensureFonaInitialised(true);
    26ea:	81 e0       	ldi	r24, 0x01	; 1
    26ec:	0e 94 17 11 	call	0x222e	; 0x222e <_Z21ensureFonaInitialisedb>
    26f0:	5c 01       	movw	r10, r24
	
	if (!sendDataFona->isComplete) {
    26f2:	fc 01       	movw	r30, r24
    26f4:	32 80       	ldd	r3, Z+2	; 0x02
    26f6:	31 10       	cpse	r3, r1
    26f8:	07 c0       	rjmp	.+14     	; 0x2708 <_Z8sendDatav+0x76>
		
		RM_LOGLN(F("\t(Fona Init Pending...)"));
    26fa:	62 e4       	ldi	r22, 0x42	; 66
    26fc:	75 e0       	ldi	r23, 0x05	; 5
    26fe:	8e e9       	ldi	r24, 0x9E	; 158
    2700:	93 e0       	ldi	r25, 0x03	; 3
    2702:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
		return false; //Still waiting to initialise
    2706:	ab c0       	rjmp	.+342    	; 0x285e <_Z8sendDatav+0x1cc>
	//NB: This datatype MUST be at end for reverse traversal that happens
	MEM_SLOT_TYPE  dataType = MEM_SLOT_TYPE::SensorMem;
};

/* Stored in ROM (for later checking) to record what happened when trying to send a day's worth of readings */
struct DailyCycleData {
    2708:	19 82       	std	Y+1, r1	; 0x01
    270a:	1b 82       	std	Y+3, r1	; 0x03
    270c:	1a 82       	std	Y+2, r1	; 0x02
    270e:	1c 82       	std	Y+4, r1	; 0x04
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    2710:	1d 82       	std	Y+5, r1	; 0x05
    2712:	1e 82       	std	Y+6, r1	; 0x06
    2714:	1f 82       	std	Y+7, r1	; 0x07
	//NB: This datatype MUST be at end for reverse traversal that happens
	MEM_SLOT_TYPE  dataType = MEM_SLOT_TYPE::SensorMem;
};

/* Stored in ROM (for later checking) to record what happened when trying to send a day's worth of readings */
struct DailyCycleData {
    2716:	19 86       	std	Y+9, r1	; 0x09
    2718:	1a 86       	std	Y+10, r1	; 0x0a
    271a:	1b 86       	std	Y+11, r1	; 0x0b
    271c:	1d 86       	std	Y+13, r1	; 0x0d
    271e:	1c 86       	std	Y+12, r1	; 0x0c
    2720:	1f 86       	std	Y+15, r1	; 0x0f
    2722:	1e 86       	std	Y+14, r1	; 0x0e
    2724:	19 8a       	std	Y+17, r1	; 0x11
    2726:	18 8a       	std	Y+16, r1	; 0x10
    2728:	82 e0       	ldi	r24, 0x02	; 2
    272a:	8a 8b       	std	Y+18, r24	; 0x12
	}
		
	DailyCycleData sendData;
	sendData.BootNo = mem.getBootCount();
    272c:	8e ea       	ldi	r24, 0xAE	; 174
    272e:	91 e0       	ldi	r25, 0x01	; 1
    2730:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_ZN12RmMemManager12getBootCountEv>
    2734:	9b 83       	std	Y+3, r25	; 0x03
    2736:	8a 83       	std	Y+2, r24	; 0x02
	sendData.InitStatus = sendDataFona->_fonaStatusInit;
    2738:	f5 01       	movw	r30, r10
    273a:	83 81       	ldd	r24, Z+3	; 0x03
    273c:	89 87       	std	Y+9, r24	; 0x09
	sendData.GPRSInitStatus = sendDataFona->_gprsStatusInit;
    273e:	84 81       	ldd	r24, Z+4	; 0x04
    2740:	8a 87       	std	Y+10, r24	; 0x0a
	sendData.RSSI = sendDataFona->_rssiStatusInit;
    2742:	85 81       	ldd	r24, Z+5	; 0x05
    2744:	96 81       	ldd	r25, Z+6	; 0x06
    2746:	a7 81       	ldd	r26, Z+7	; 0x07
    2748:	b0 85       	ldd	r27, Z+8	; 0x08
    274a:	8d 83       	std	Y+5, r24	; 0x05
    274c:	9e 83       	std	Y+6, r25	; 0x06
    274e:	af 83       	std	Y+7, r26	; 0x07
    2750:	b8 87       	std	Y+8, r27	; 0x08
		
	if (sendDataFona->fona == NULL) {
    2752:	a0 80       	ld	r10, Z
    2754:	b1 80       	ldd	r11, Z+1	; 0x01
    2756:	a1 14       	cp	r10, r1
    2758:	b1 04       	cpc	r11, r1
    275a:	39 f4       	brne	.+14     	; 0x276a <_Z8sendDatav+0xd8>
		
		RM_LOGLN(F("\t(Fona Init ERROR)"));
    275c:	6f e2       	ldi	r22, 0x2F	; 47
    275e:	75 e0       	ldi	r23, 0x05	; 5
    2760:	8e e9       	ldi	r24, 0x9E	; 158
    2762:	93 e0       	ldi	r25, 0x03	; 3
    2764:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    2768:	73 c0       	rjmp	.+230    	; 0x2850 <_Z8sendDatav+0x1be>
	
	Adafruit_FONA* fona = (Adafruit_FONA*)sendDataFona->fona;
	
	//TODO: Max number of readings to send vs when eeprom rolls over and start from beginning
		 
	uint16_t fullEncodedSz = GsmPayload::getEncodedPayloadSize_S(GPRS_MAX_READINGS_FOR_SEND);
    276a:	84 e1       	ldi	r24, 0x14	; 20
    276c:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>
	char encodedData[fullEncodedSz];
    2770:	2d b7       	in	r18, 0x3d	; 61
    2772:	3e b7       	in	r19, 0x3e	; 62
    2774:	28 1b       	sub	r18, r24
    2776:	39 0b       	sbc	r19, r25
    2778:	0f b6       	in	r0, 0x3f	; 63
    277a:	f8 94       	cli
    277c:	3e bf       	out	0x3e, r19	; 62
    277e:	0f be       	out	0x3f, r0	; 63
    2780:	2d bf       	out	0x3d, r18	; 61
    2782:	8d b7       	in	r24, 0x3d	; 61
    2784:	9e b7       	in	r25, 0x3e	; 62
    2786:	01 96       	adiw	r24, 0x01	; 1
    2788:	4c 01       	movw	r8, r24
		
	//Encode in another method to free up RAM on return for the sending (just in case)
	uint8_t numReadingsLoaded;
	createEncodedData(encodedData, &numReadingsLoaded, GPRS_MAX_READINGS_FOR_SEND, sendData.RSSI);
    278a:	0d 81       	ldd	r16, Y+5	; 0x05
    278c:	1e 81       	ldd	r17, Y+6	; 0x06
    278e:	2f 81       	ldd	r18, Y+7	; 0x07
    2790:	38 85       	ldd	r19, Y+8	; 0x08
    2792:	44 e1       	ldi	r20, 0x14	; 20
    2794:	be 01       	movw	r22, r28
    2796:	6d 5d       	subi	r22, 0xDD	; 221
    2798:	7f 4f       	sbci	r23, 0xFF	; 255
    279a:	0e 94 96 12 	call	0x252c	; 0x252c <_Z17createEncodedDataPcPhh13FONA_GET_RSSI>
	sendData.NoOfReadings = numReadingsLoaded;
    279e:	8b a1       	ldd	r24, Y+35	; 0x23
    27a0:	8c 83       	std	Y+4, r24	; 0x04
	
	uint16_t actualEncodedSz = GsmPayload::getEncodedPayloadSize_S(numReadingsLoaded);
    27a2:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>
    27a6:	3c 01       	movw	r6, r24

	RM_LOGLN(F("Encoded data created and ready for send:"));
    27a8:	66 e0       	ldi	r22, 0x06	; 6
    27aa:	75 e0       	ldi	r23, 0x05	; 5
    27ac:	8e e9       	ldi	r24, 0x9E	; 158
    27ae:	93 e0       	ldi	r25, 0x03	; 3
    27b0:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
	RM_LOGLN(encodedData);
    27b4:	b4 01       	movw	r22, r8
    27b6:	8e e9       	ldi	r24, 0x9E	; 158
    27b8:	93 e0       	ldi	r25, 0x03	; 3
    27ba:	0e 94 0a 1d 	call	0x3a14	; 0x3a14 <_ZN5Print7printlnEPKc>
	
	uint8_t maxResponseSz = 10;
	char response[maxResponseSz] = {0};
    27be:	1b 8a       	std	Y+19, r1	; 0x13
    27c0:	1c 8a       	std	Y+20, r1	; 0x14
    27c2:	1d 8a       	std	Y+21, r1	; 0x15
    27c4:	1e 8a       	std	Y+22, r1	; 0x16
    27c6:	1f 8a       	std	Y+23, r1	; 0x17
    27c8:	18 8e       	std	Y+24, r1	; 0x18
    27ca:	19 8e       	std	Y+25, r1	; 0x19
    27cc:	1a 8e       	std	Y+26, r1	; 0x1a
    27ce:	1b 8e       	std	Y+27, r1	; 0x1b
    27d0:	1c 8e       	std	Y+28, r1	; 0x1c
	uint16_t statuscode=0;
    27d2:	1a a2       	std	Y+34, r1	; 0x22
    27d4:	19 a2       	std	Y+33, r1	; 0x21
	uint16_t actualResponseLen=0;
    27d6:	18 a2       	std	Y+32, r1	; 0x20
    27d8:	1f 8e       	std	Y+31, r1	; 0x1f
	FONA_STATUS_GPRS_SEND status =  fona->sendDataOverGprs(
		(uint8_t*)encodedData, actualEncodedSz, 
		response, maxResponseSz, &actualResponseLen, &statuscode);
    27da:	fe 01       	movw	r30, r28
    27dc:	b1 96       	adiw	r30, 0x21	; 33
    27de:	6f 01       	movw	r12, r30
    27e0:	9e 01       	movw	r18, r28
    27e2:	21 5e       	subi	r18, 0xE1	; 225
    27e4:	3f 4f       	sbci	r19, 0xFF	; 255
    27e6:	79 01       	movw	r14, r18
    27e8:	0a e0       	ldi	r16, 0x0A	; 10
    27ea:	10 e0       	ldi	r17, 0x00	; 0
    27ec:	2c 50       	subi	r18, 0x0C	; 12
    27ee:	31 09       	sbc	r19, r1
    27f0:	a3 01       	movw	r20, r6
    27f2:	b4 01       	movw	r22, r8
    27f4:	c5 01       	movw	r24, r10
    27f6:	0e 94 86 0c 	call	0x190c	; 0x190c <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_>
    27fa:	78 2e       	mov	r7, r24
	
	//Turn off FONA module to minimise power usage
	digitalWrite(PIN_FONA_PWR, LOW);
    27fc:	60 e0       	ldi	r22, 0x00	; 0
    27fe:	8c e0       	ldi	r24, 0x0C	; 12
    2800:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>

	uint16_t responseId = atoi(response);
    2804:	ce 01       	movw	r24, r28
    2806:	43 96       	adiw	r24, 0x13	; 19
    2808:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <atoi>
    280c:	4c 01       	movw	r8, r24

	uint16_t battPct;
	if (!fona->getBattPercent(&battPct))
    280e:	be 01       	movw	r22, r28
    2810:	63 5e       	subi	r22, 0xE3	; 227
    2812:	7f 4f       	sbci	r23, 0xFF	; 255
    2814:	c5 01       	movw	r24, r10
    2816:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <_ZN13Adafruit_FONA14getBattPercentEPj>
    281a:	81 11       	cpse	r24, r1
    281c:	02 c0       	rjmp	.+4      	; 0x2822 <_Z8sendDatav+0x190>
		sendData.BattPct = -1;
    281e:	8f ef       	ldi	r24, 0xFF	; 255
    2820:	01 c0       	rjmp	.+2      	; 0x2824 <_Z8sendDatav+0x192>
	else
		sendData.BattPct = battPct;
    2822:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2824:	89 83       	std	Y+1, r24	; 0x01
	
	sendData.SendStatus = status;
    2826:	7b 86       	std	Y+11, r7	; 0x0b
	sendData.ResponseHTMLCode = statuscode;
    2828:	89 a1       	ldd	r24, Y+33	; 0x21
    282a:	9a a1       	ldd	r25, Y+34	; 0x22
    282c:	9d 87       	std	Y+13, r25	; 0x0d
    282e:	8c 87       	std	Y+12, r24	; 0x0c
	sendData.ResponseLength = actualResponseLen;
    2830:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2832:	98 a1       	ldd	r25, Y+32	; 0x20
    2834:	9f 87       	std	Y+15, r25	; 0x0f
    2836:	8e 87       	std	Y+14, r24	; 0x0e
	sendData.ResponseId = responseId;
    2838:	99 8a       	std	Y+17, r9	; 0x11
    283a:	88 8a       	std	Y+16, r8	; 0x10
	
	RM_LOGLN(F("Send-Data Status Slot:"));
    283c:	6f ee       	ldi	r22, 0xEF	; 239
    283e:	74 e0       	ldi	r23, 0x04	; 4
    2840:	8e e9       	ldi	r24, 0x9E	; 158
    2842:	93 e0       	ldi	r25, 0x03	; 3
    2844:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
	Helpers::printDailySendData(&sendData);
    2848:	ce 01       	movw	r24, r28
    284a:	01 96       	adiw	r24, 0x01	; 1
    284c:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <_ZN7Helpers18printDailySendDataEP14DailyCycleData>
		
	mem.appendDailyEntry(&sendData);
    2850:	be 01       	movw	r22, r28
    2852:	6f 5f       	subi	r22, 0xFF	; 255
    2854:	7f 4f       	sbci	r23, 0xFF	; 255
    2856:	8e ea       	ldi	r24, 0xAE	; 174
    2858:	91 e0       	ldi	r25, 0x01	; 1
    285a:	0e 94 a6 15 	call	0x2b4c	; 0x2b4c <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData>
		
	return true;
}
    285e:	83 2d       	mov	r24, r3
    2860:	0f b6       	in	r0, 0x3f	; 63
    2862:	f8 94       	cli
    2864:	5e be       	out	0x3e, r5	; 62
    2866:	0f be       	out	0x3f, r0	; 63
    2868:	4d be       	out	0x3d, r4	; 61
    286a:	a3 96       	adiw	r28, 0x23	; 35
    286c:	0f b6       	in	r0, 0x3f	; 63
    286e:	f8 94       	cli
    2870:	de bf       	out	0x3e, r29	; 62
    2872:	0f be       	out	0x3f, r0	; 63
    2874:	cd bf       	out	0x3d, r28	; 61
    2876:	df 91       	pop	r29
    2878:	cf 91       	pop	r28
    287a:	1f 91       	pop	r17
    287c:	0f 91       	pop	r16
    287e:	ff 90       	pop	r15
    2880:	ef 90       	pop	r14
    2882:	df 90       	pop	r13
    2884:	cf 90       	pop	r12
    2886:	bf 90       	pop	r11
    2888:	af 90       	pop	r10
    288a:	9f 90       	pop	r9
    288c:	8f 90       	pop	r8
    288e:	7f 90       	pop	r7
    2890:	6f 90       	pop	r6
    2892:	5f 90       	pop	r5
    2894:	4f 90       	pop	r4
    2896:	3f 90       	pop	r3
    2898:	08 95       	ret

0000289a <loop>:

//Loop-scoped variables
uint16_t _timerCounter = 0;
void loop() {

	delay(1000);
    289a:	68 ee       	ldi	r22, 0xE8	; 232
    289c:	73 e0       	ldi	r23, 0x03	; 3
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	90 e0       	ldi	r25, 0x00	; 0
    28a2:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
	++_timerCounter;
    28a6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
    28aa:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
    28ae:	01 96       	adiw	r24, 0x01	; 1
    28b0:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
    28b4:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>

	RM_LOG2(F("Behaviour"), _behaviour);
    28b8:	65 ee       	ldi	r22, 0xE5	; 229
    28ba:	74 e0       	ldi	r23, 0x04	; 4
    28bc:	8e e9       	ldi	r24, 0x9E	; 158
    28be:	93 e0       	ldi	r25, 0x03	; 3
    28c0:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    28c4:	67 e4       	ldi	r22, 0x47	; 71
    28c6:	71 e0       	ldi	r23, 0x01	; 1
    28c8:	8e e9       	ldi	r24, 0x9E	; 158
    28ca:	93 e0       	ldi	r25, 0x03	; 3
    28cc:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN5Print5printEPKc>
    28d0:	4a e0       	ldi	r20, 0x0A	; 10
    28d2:	50 e0       	ldi	r21, 0x00	; 0
    28d4:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <_behaviour>
    28d8:	8e e9       	ldi	r24, 0x9E	; 158
    28da:	93 e0       	ldi	r25, 0x03	; 3
    28dc:	0e 94 8b 1d 	call	0x3b16	; 0x3b16 <_ZN5Print7printlnEhi>
	
	if((_behaviour&SYS_BEHAVIOUR::TakeReadings) != 0) {
    28e0:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28e4:	80 ff       	sbrs	r24, 0
    28e6:	09 c0       	rjmp	.+18     	; 0x28fa <loop+0x60>
		
		if (takeReadings())
    28e8:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_Z12takeReadingsv>
    28ec:	88 23       	and	r24, r24
    28ee:	29 f0       	breq	.+10     	; 0x28fa <loop+0x60>
			_behaviour &= ~SYS_BEHAVIOUR::TakeReadings;
    28f0:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28f4:	8e 7f       	andi	r24, 0xFE	; 254
    28f6:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
	}
	
	if ((_behaviour&SYS_BEHAVIOUR::SendData) != 0) {
    28fa:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28fe:	81 ff       	sbrs	r24, 1
    2900:	09 c0       	rjmp	.+18     	; 0x2914 <loop+0x7a>
		
		if (sendData())
    2902:	0e 94 49 13 	call	0x2692	; 0x2692 <_Z8sendDatav>
    2906:	88 23       	and	r24, r24
    2908:	29 f0       	breq	.+10     	; 0x2914 <loop+0x7a>
			_behaviour &= ~SYS_BEHAVIOUR::SendData;
    290a:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    290e:	8d 7f       	andi	r24, 0xFD	; 253
    2910:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
	}

	if ((_behaviour&SYS_BEHAVIOUR::ExtendedGsmTest) != 0) {
    2914:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2918:	82 ff       	sbrs	r24, 2
    291a:	15 c0       	rjmp	.+42     	; 0x2946 <loop+0xac>
	
		if (_timerCounter == 1)
    291c:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
    2920:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
    2924:	01 97       	sbiw	r24, 0x01	; 1
    2926:	21 f4       	brne	.+8      	; 0x2930 <loop+0x96>
			ExtendedTests::startExtendedGsmTest(&mem);
    2928:	8e ea       	ldi	r24, 0xAE	; 174
    292a:	91 e0       	ldi	r25, 0x01	; 1
    292c:	0e 94 64 1a 	call	0x34c8	; 0x34c8 <_ZN13ExtendedTests20startExtendedGsmTestEP12RmMemManager>
	
		if (sendData()) {
    2930:	0e 94 49 13 	call	0x2692	; 0x2692 <_Z8sendDatav>
    2934:	88 23       	and	r24, r24
    2936:	39 f0       	breq	.+14     	; 0x2946 <loop+0xac>
			
			_behaviour &= ~SYS_BEHAVIOUR::ExtendedGsmTest;
    2938:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    293c:	8b 7f       	andi	r24, 0xFB	; 251
    293e:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
			ExtendedTests::endExtendedGsmTest();
    2942:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <_ZN13ExtendedTests18endExtendedGsmTestEv>
		}
	}

	if (_behaviour == SYS_BEHAVIOUR::DoNothing) {
    2946:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    294a:	81 11       	cpse	r24, r1
    294c:	02 c0       	rjmp	.+4      	; 0x2952 <loop+0xb8>
		
		switchOffSystem();
    294e:	0c 94 5a 12 	jmp	0x24b4	; 0x24b4 <_Z15switchOffSystemv>
    2952:	08 95       	ret

00002954 <_GLOBAL__sub_I___fona>:
#include "SensorManager.h"
#include "ExtendedTests.h"


//C++ instances
Adafruit_FONA __fona = Adafruit_FONA(FONA_RST, IS_GSM_MOCK);
    2954:	41 e0       	ldi	r20, 0x01	; 1
    2956:	64 e0       	ldi	r22, 0x04	; 4
    2958:	89 eb       	ldi	r24, 0xB9	; 185
    295a:	91 e0       	ldi	r25, 0x01	; 1
    295c:	0e 94 73 04 	call	0x8e6	; 0x8e6 <_ZN13Adafruit_FONAC1Eab>
RmMemManager mem = RmMemManager(false);
    2960:	60 e0       	ldi	r22, 0x00	; 0
    2962:	8e ea       	ldi	r24, 0xAE	; 174
    2964:	91 e0       	ldi	r25, 0x01	; 1
    2966:	0e 94 d6 14 	call	0x29ac	; 0x29ac <_ZN12RmMemManagerC1Eb>
SensorManager sensorMgr = SensorManager(true);
    296a:	61 e0       	ldi	r22, 0x01	; 1
    296c:	8c ea       	ldi	r24, 0xAC	; 172
    296e:	91 e0       	ldi	r25, 0x01	; 1
    2970:	0e 94 2a 16 	call	0x2c54	; 0x2c54 <_ZN13SensorManagerC1Eb>
	uint8_t rssiErr	= 0;
	
	FONA_GET_NETREG netReg;
};

struct INITIALISING_STATE {
    2974:	ee e9       	ldi	r30, 0x9E	; 158
    2976:	f1 e0       	ldi	r31, 0x01	; 1
    2978:	12 82       	std	Z+2, r1	; 0x02
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    297a:	15 82       	std	Z+5, r1	; 0x05
    297c:	16 82       	std	Z+6, r1	; 0x06
    297e:	17 82       	std	Z+7, r1	; 0x07
	uint8_t rssiErr	= 0;
	
	FONA_GET_NETREG netReg;
};

struct INITIALISING_STATE {
    2980:	12 86       	std	Z+10, r1	; 0x0a
    2982:	11 86       	std	Z+9, r1	; 0x09
    2984:	14 86       	std	Z+12, r1	; 0x0c
    2986:	13 86       	std	Z+11, r1	; 0x0b
    2988:	08 95       	ret

0000298a <_GLOBAL__sub_D___fona>:
#define prog_char_strcpy(to, fromprogmem)		strcpy_P((to), (fromprogmem))




class Adafruit_FONA : public FONAStreamType {
    298a:	8d e2       	ldi	r24, 0x2D	; 45
    298c:	91 e0       	ldi	r25, 0x01	; 1
    298e:	90 93 ba 01 	sts	0x01BA, r25	; 0x8001ba <__fona+0x1>
    2992:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <__fona>
    2996:	8e ec       	ldi	r24, 0xCE	; 206
    2998:	92 e0       	ldi	r25, 0x02	; 2
    299a:	0c 94 d1 1f 	jmp	0x3fa2	; 0x3fa2 <_ZN6StringD1Ev>

0000299e <_ZN7TwoWire5writeEi>:
		RM_LOG(F(", Char="));
		RM_LOGLNFMT(val1, HEX);
	}
	
	return numFailures;
}
    299e:	dc 01       	movw	r26, r24
    29a0:	ed 91       	ld	r30, X+
    29a2:	fc 91       	ld	r31, X
    29a4:	01 90       	ld	r0, Z+
    29a6:	f0 81       	ld	r31, Z
    29a8:	e0 2d       	mov	r30, r0
    29aa:	09 94       	ijmp

000029ac <_ZN12RmMemManagerC1Eb>:
    29ac:	fc 01       	movw	r30, r24
    29ae:	14 82       	std	Z+4, r1	; 0x04
    29b0:	15 82       	std	Z+5, r1	; 0x05
    29b2:	16 82       	std	Z+6, r1	; 0x06
    29b4:	17 82       	std	Z+7, r1	; 0x07
    29b6:	80 e8       	ldi	r24, 0x80	; 128
    29b8:	80 87       	std	Z+8, r24	; 0x08
    29ba:	81 87       	std	Z+9, r24	; 0x09
    29bc:	12 86       	std	Z+10, r1	; 0x0a
    29be:	63 83       	std	Z+3, r22	; 0x03
    29c0:	61 11       	cpse	r22, r1
    29c2:	04 c0       	rjmp	.+8      	; 0x29cc <_ZN12RmMemManagerC1Eb+0x20>
    29c4:	86 e4       	ldi	r24, 0x46	; 70
    29c6:	93 e0       	ldi	r25, 0x03	; 3
    29c8:	0c 94 92 19 	jmp	0x3324	; 0x3324 <_ZN7TwoWire5beginEv>
    29cc:	08 95       	ret

000029ce <_Z13internalWritejPhh>:
    29ce:	ef 92       	push	r14
    29d0:	ff 92       	push	r15
    29d2:	0f 93       	push	r16
    29d4:	1f 93       	push	r17
    29d6:	cf 93       	push	r28
    29d8:	df 93       	push	r29
    29da:	eb 01       	movw	r28, r22
    29dc:	7b 01       	movw	r14, r22
    29de:	e4 0e       	add	r14, r20
    29e0:	f1 1c       	adc	r15, r1
    29e2:	8c 01       	movw	r16, r24
    29e4:	ce 15       	cp	r28, r14
    29e6:	df 05       	cpc	r29, r15
    29e8:	21 f1       	breq	.+72     	; 0x2a32 <_Z13internalWritejPhh+0x64>
    29ea:	60 e5       	ldi	r22, 0x50	; 80
    29ec:	70 e0       	ldi	r23, 0x00	; 0
    29ee:	86 e4       	ldi	r24, 0x46	; 70
    29f0:	93 e0       	ldi	r25, 0x03	; 3
    29f2:	0e 94 ae 19 	call	0x335c	; 0x335c <_ZN7TwoWire17beginTransmissionEi>
    29f6:	61 2f       	mov	r22, r17
    29f8:	70 e0       	ldi	r23, 0x00	; 0
    29fa:	86 e4       	ldi	r24, 0x46	; 70
    29fc:	93 e0       	ldi	r25, 0x03	; 3
    29fe:	0e 94 cf 14 	call	0x299e	; 0x299e <_ZN7TwoWire5writeEi>
    2a02:	b8 01       	movw	r22, r16
    2a04:	77 27       	eor	r23, r23
    2a06:	86 e4       	ldi	r24, 0x46	; 70
    2a08:	93 e0       	ldi	r25, 0x03	; 3
    2a0a:	0e 94 cf 14 	call	0x299e	; 0x299e <_ZN7TwoWire5writeEi>
    2a0e:	69 91       	ld	r22, Y+
    2a10:	86 e4       	ldi	r24, 0x46	; 70
    2a12:	93 e0       	ldi	r25, 0x03	; 3
    2a14:	0e 94 53 19 	call	0x32a6	; 0x32a6 <_ZN7TwoWire5writeEh>
    2a18:	86 e4       	ldi	r24, 0x46	; 70
    2a1a:	93 e0       	ldi	r25, 0x03	; 3
    2a1c:	0e 94 2a 1a 	call	0x3454	; 0x3454 <_ZN7TwoWire15endTransmissionEv>
    2a20:	6f e0       	ldi	r22, 0x0F	; 15
    2a22:	70 e0       	ldi	r23, 0x00	; 0
    2a24:	80 e0       	ldi	r24, 0x00	; 0
    2a26:	90 e0       	ldi	r25, 0x00	; 0
    2a28:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <delay>
    2a2c:	0f 5f       	subi	r16, 0xFF	; 255
    2a2e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a30:	d9 cf       	rjmp	.-78     	; 0x29e4 <_Z13internalWritejPhh+0x16>
    2a32:	df 91       	pop	r29
    2a34:	cf 91       	pop	r28
    2a36:	1f 91       	pop	r17
    2a38:	0f 91       	pop	r16
    2a3a:	ff 90       	pop	r15
    2a3c:	ef 90       	pop	r14
    2a3e:	08 95       	ret

00002a40 <_Z12internalReadjPhh>:
    2a40:	ef 92       	push	r14
    2a42:	ff 92       	push	r15
    2a44:	0f 93       	push	r16
    2a46:	1f 93       	push	r17
    2a48:	cf 93       	push	r28
    2a4a:	df 93       	push	r29
    2a4c:	eb 01       	movw	r28, r22
    2a4e:	7b 01       	movw	r14, r22
    2a50:	e4 0e       	add	r14, r20
    2a52:	f1 1c       	adc	r15, r1
    2a54:	8c 01       	movw	r16, r24
    2a56:	ce 15       	cp	r28, r14
    2a58:	df 05       	cpc	r29, r15
    2a5a:	71 f1       	breq	.+92     	; 0x2ab8 <_Z12internalReadjPhh+0x78>
    2a5c:	60 e5       	ldi	r22, 0x50	; 80
    2a5e:	70 e0       	ldi	r23, 0x00	; 0
    2a60:	86 e4       	ldi	r24, 0x46	; 70
    2a62:	93 e0       	ldi	r25, 0x03	; 3
    2a64:	0e 94 ae 19 	call	0x335c	; 0x335c <_ZN7TwoWire17beginTransmissionEi>
    2a68:	61 2f       	mov	r22, r17
    2a6a:	70 e0       	ldi	r23, 0x00	; 0
    2a6c:	86 e4       	ldi	r24, 0x46	; 70
    2a6e:	93 e0       	ldi	r25, 0x03	; 3
    2a70:	0e 94 cf 14 	call	0x299e	; 0x299e <_ZN7TwoWire5writeEi>
    2a74:	b8 01       	movw	r22, r16
    2a76:	77 27       	eor	r23, r23
    2a78:	86 e4       	ldi	r24, 0x46	; 70
    2a7a:	93 e0       	ldi	r25, 0x03	; 3
    2a7c:	0e 94 cf 14 	call	0x299e	; 0x299e <_ZN7TwoWire5writeEi>
    2a80:	86 e4       	ldi	r24, 0x46	; 70
    2a82:	93 e0       	ldi	r25, 0x03	; 3
    2a84:	0e 94 2a 1a 	call	0x3454	; 0x3454 <_ZN7TwoWire15endTransmissionEv>
    2a88:	41 e0       	ldi	r20, 0x01	; 1
    2a8a:	50 e0       	ldi	r21, 0x00	; 0
    2a8c:	60 e5       	ldi	r22, 0x50	; 80
    2a8e:	70 e0       	ldi	r23, 0x00	; 0
    2a90:	86 e4       	ldi	r24, 0x46	; 70
    2a92:	93 e0       	ldi	r25, 0x03	; 3
    2a94:	0e 94 27 1a 	call	0x344e	; 0x344e <_ZN7TwoWire11requestFromEii>
    2a98:	86 e4       	ldi	r24, 0x46	; 70
    2a9a:	93 e0       	ldi	r25, 0x03	; 3
    2a9c:	0e 94 c4 18 	call	0x3188	; 0x3188 <_ZN7TwoWire9availableEv>
    2aa0:	89 2b       	or	r24, r25
    2aa2:	29 f0       	breq	.+10     	; 0x2aae <_Z12internalReadjPhh+0x6e>
    2aa4:	86 e4       	ldi	r24, 0x46	; 70
    2aa6:	93 e0       	ldi	r25, 0x03	; 3
    2aa8:	0e 94 cc 18 	call	0x3198	; 0x3198 <_ZN7TwoWire4readEv>
    2aac:	01 c0       	rjmp	.+2      	; 0x2ab0 <_Z12internalReadjPhh+0x70>
    2aae:	8f ef       	ldi	r24, 0xFF	; 255
    2ab0:	89 93       	st	Y+, r24
    2ab2:	0f 5f       	subi	r16, 0xFF	; 255
    2ab4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab6:	cf cf       	rjmp	.-98     	; 0x2a56 <_Z12internalReadjPhh+0x16>
    2ab8:	df 91       	pop	r29
    2aba:	cf 91       	pop	r28
    2abc:	1f 91       	pop	r17
    2abe:	0f 91       	pop	r16
    2ac0:	ff 90       	pop	r15
    2ac2:	ef 90       	pop	r14
    2ac4:	08 95       	ret

00002ac6 <_ZN12RmMemManager18getUCharFromMemoryEj>:
    2ac6:	cf 93       	push	r28
    2ac8:	df 93       	push	r29
    2aca:	1f 92       	push	r1
    2acc:	cd b7       	in	r28, 0x3d	; 61
    2ace:	de b7       	in	r29, 0x3e	; 62
    2ad0:	cb 01       	movw	r24, r22
    2ad2:	41 e0       	ldi	r20, 0x01	; 1
    2ad4:	be 01       	movw	r22, r28
    2ad6:	6f 5f       	subi	r22, 0xFF	; 255
    2ad8:	7f 4f       	sbci	r23, 0xFF	; 255
    2ada:	0e 94 20 15 	call	0x2a40	; 0x2a40 <_Z12internalReadjPhh>
    2ade:	89 81       	ldd	r24, Y+1	; 0x01
    2ae0:	0f 90       	pop	r0
    2ae2:	df 91       	pop	r29
    2ae4:	cf 91       	pop	r28
    2ae6:	08 95       	ret

00002ae8 <_ZN12RmMemManager19incrementCycleCountEv>:
    2ae8:	cf 93       	push	r28
    2aea:	df 93       	push	r29
    2aec:	1f 92       	push	r1
    2aee:	cd b7       	in	r28, 0x3d	; 61
    2af0:	de b7       	in	r29, 0x3e	; 62
    2af2:	63 e0       	ldi	r22, 0x03	; 3
    2af4:	70 e0       	ldi	r23, 0x00	; 0
    2af6:	0e 94 63 15 	call	0x2ac6	; 0x2ac6 <_ZN12RmMemManager18getUCharFromMemoryEj>
    2afa:	8f 5f       	subi	r24, 0xFF	; 255
    2afc:	89 83       	std	Y+1, r24	; 0x01
    2afe:	41 e0       	ldi	r20, 0x01	; 1
    2b00:	be 01       	movw	r22, r28
    2b02:	6f 5f       	subi	r22, 0xFF	; 255
    2b04:	7f 4f       	sbci	r23, 0xFF	; 255
    2b06:	83 e0       	ldi	r24, 0x03	; 3
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	0e 94 e7 14 	call	0x29ce	; 0x29ce <_Z13internalWritejPhh>
    2b0e:	0f 90       	pop	r0
    2b10:	df 91       	pop	r29
    2b12:	cf 91       	pop	r28
    2b14:	08 95       	ret

00002b16 <_ZN12RmMemManager11getModuleIdEv>:
    2b16:	60 e0       	ldi	r22, 0x00	; 0
    2b18:	70 e0       	ldi	r23, 0x00	; 0
    2b1a:	0c 94 63 15 	jmp	0x2ac6	; 0x2ac6 <_ZN12RmMemManager18getUCharFromMemoryEj>

00002b1e <_ZN12RmMemManager19getUShortFromMemoryEj>:
    2b1e:	cf 93       	push	r28
    2b20:	df 93       	push	r29
    2b22:	00 d0       	rcall	.+0      	; 0x2b24 <_ZN12RmMemManager19getUShortFromMemoryEj+0x6>
    2b24:	cd b7       	in	r28, 0x3d	; 61
    2b26:	de b7       	in	r29, 0x3e	; 62
    2b28:	cb 01       	movw	r24, r22
    2b2a:	42 e0       	ldi	r20, 0x02	; 2
    2b2c:	be 01       	movw	r22, r28
    2b2e:	6f 5f       	subi	r22, 0xFF	; 255
    2b30:	7f 4f       	sbci	r23, 0xFF	; 255
    2b32:	0e 94 20 15 	call	0x2a40	; 0x2a40 <_Z12internalReadjPhh>
    2b36:	89 81       	ldd	r24, Y+1	; 0x01
    2b38:	9a 81       	ldd	r25, Y+2	; 0x02
    2b3a:	0f 90       	pop	r0
    2b3c:	0f 90       	pop	r0
    2b3e:	df 91       	pop	r29
    2b40:	cf 91       	pop	r28
    2b42:	08 95       	ret

00002b44 <_ZN12RmMemManager12getBootCountEv>:
    2b44:	61 e0       	ldi	r22, 0x01	; 1
    2b46:	70 e0       	ldi	r23, 0x00	; 0
    2b48:	0c 94 8f 15 	jmp	0x2b1e	; 0x2b1e <_ZN12RmMemManager19getUShortFromMemoryEj>

00002b4c <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData>:
    2b4c:	cf 92       	push	r12
    2b4e:	df 92       	push	r13
    2b50:	ef 92       	push	r14
    2b52:	ff 92       	push	r15
    2b54:	0f 93       	push	r16
    2b56:	1f 93       	push	r17
    2b58:	cf 93       	push	r28
    2b5a:	df 93       	push	r29
    2b5c:	00 d0       	rcall	.+0      	; 0x2b5e <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData+0x12>
    2b5e:	cd b7       	in	r28, 0x3d	; 61
    2b60:	de b7       	in	r29, 0x3e	; 62
    2b62:	7c 01       	movw	r14, r24
    2b64:	6b 01       	movw	r12, r22
    2b66:	64 e0       	ldi	r22, 0x04	; 4
    2b68:	70 e0       	ldi	r23, 0x00	; 0
    2b6a:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <_ZN12RmMemManager19getUShortFromMemoryEj>
    2b6e:	8c 01       	movw	r16, r24
    2b70:	42 96       	adiw	r24, 0x12	; 18
    2b72:	8f 3f       	cpi	r24, 0xFF	; 255
    2b74:	9f 47       	sbci	r25, 0x7F	; 127
    2b76:	28 f0       	brcs	.+10     	; 0x2b82 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData+0x36>
    2b78:	c7 01       	movw	r24, r14
    2b7a:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <_ZN12RmMemManager19incrementCycleCountEv>
    2b7e:	0e e1       	ldi	r16, 0x1E	; 30
    2b80:	10 e0       	ldi	r17, 0x00	; 0
    2b82:	42 e1       	ldi	r20, 0x12	; 18
    2b84:	b6 01       	movw	r22, r12
    2b86:	c8 01       	movw	r24, r16
    2b88:	0e 94 e7 14 	call	0x29ce	; 0x29ce <_Z13internalWritejPhh>
    2b8c:	0e 5e       	subi	r16, 0xEE	; 238
    2b8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b90:	1a 83       	std	Y+2, r17	; 0x02
    2b92:	09 83       	std	Y+1, r16	; 0x01
    2b94:	42 e0       	ldi	r20, 0x02	; 2
    2b96:	be 01       	movw	r22, r28
    2b98:	6f 5f       	subi	r22, 0xFF	; 255
    2b9a:	7f 4f       	sbci	r23, 0xFF	; 255
    2b9c:	84 e0       	ldi	r24, 0x04	; 4
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	0e 94 e7 14 	call	0x29ce	; 0x29ce <_Z13internalWritejPhh>
    2ba4:	0f 90       	pop	r0
    2ba6:	0f 90       	pop	r0
    2ba8:	df 91       	pop	r29
    2baa:	cf 91       	pop	r28
    2bac:	1f 91       	pop	r17
    2bae:	0f 91       	pop	r16
    2bb0:	ff 90       	pop	r15
    2bb2:	ef 90       	pop	r14
    2bb4:	df 90       	pop	r13
    2bb6:	cf 90       	pop	r12
    2bb8:	08 95       	ret

00002bba <_ZN12RmMemManager14loadSensorDataEP10SensorDatah>:
	RM_LOG(F("*** FAIL PRINT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}
 
/* Returns the number of readings read */
uint8_t RmMemManager::loadSensorData(SensorData* buffer, uint8_t maxNoOfReadings) {
    2bba:	af 92       	push	r10
    2bbc:	bf 92       	push	r11
    2bbe:	cf 92       	push	r12
    2bc0:	df 92       	push	r13
    2bc2:	ef 92       	push	r14
    2bc4:	ff 92       	push	r15
    2bc6:	0f 93       	push	r16
    2bc8:	1f 93       	push	r17
    2bca:	cf 93       	push	r28
    2bcc:	df 93       	push	r29
    2bce:	7c 01       	movw	r14, r24
    2bd0:	6b 01       	movw	r12, r22
    2bd2:	d4 2f       	mov	r29, r20

	if (mockSensorData != NULL) {
    2bd4:	fc 01       	movw	r30, r24
    2bd6:	60 81       	ld	r22, Z
    2bd8:	71 81       	ldd	r23, Z+1	; 0x01
    2bda:	61 15       	cp	r22, r1
    2bdc:	71 05       	cpc	r23, r1
    2bde:	59 f0       	breq	.+22     	; 0x2bf6 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x3c>
		
		memcpy(buffer, mockSensorData, sizeof(SensorData)*numMockSensorData);
    2be0:	42 81       	ldd	r20, Z+2	; 0x02
    2be2:	fa e0       	ldi	r31, 0x0A	; 10
    2be4:	4f 9f       	mul	r20, r31
    2be6:	a0 01       	movw	r20, r0
    2be8:	11 24       	eor	r1, r1
    2bea:	c6 01       	movw	r24, r12
    2bec:	0e 94 e0 25 	call	0x4bc0	; 0x4bc0 <memcpy>
		return numMockSensorData;
    2bf0:	f7 01       	movw	r30, r14
    2bf2:	82 81       	ldd	r24, Z+2	; 0x02
    2bf4:	24 c0       	rjmp	.+72     	; 0x2c3e <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x84>
	}

	uint8_t numReadings = 0;
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
    2bf6:	64 e0       	ldi	r22, 0x04	; 4
    2bf8:	70 e0       	ldi	r23, 0x00	; 0
    2bfa:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <_ZN12RmMemManager19getUShortFromMemoryEj>
    2bfe:	8c 01       	movw	r16, r24
    2c00:	01 50       	subi	r16, 0x01	; 1
    2c02:	11 09       	sbc	r17, r1
		
		memcpy(buffer, mockSensorData, sizeof(SensorData)*numMockSensorData);
		return numMockSensorData;
	}

	uint8_t numReadings = 0;
    2c04:	c0 e0       	ldi	r28, 0x00	; 0
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
	
	while(true) {
		
		if (numReadings == maxNoOfReadings)
    2c06:	cd 17       	cp	r28, r29
    2c08:	c9 f0       	breq	.+50     	; 0x2c3c <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
			break;
			
		uint16_t prevMemSlotTypeAddr = currSlotStartAddr-1; //The MEM_SLOT_TYPE address of the previous slot
	
		if (prevMemSlotTypeAddr <= (sizeof(MEMLOC_START) + sizeof(ModuleMeta)))
    2c0a:	01 32       	cpi	r16, 0x21	; 33
    2c0c:	11 05       	cpc	r17, r1
    2c0e:	b0 f0       	brcs	.+44     	; 0x2c3c <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
			break; //We're at the very beginning - either module has just been deployed or mem has wrapped (& we'll ignore this one day's readings)
	
		uint8_t slotType = (MEM_SLOT_TYPE)getUCharFromMemory(prevMemSlotTypeAddr);
    2c10:	b8 01       	movw	r22, r16
    2c12:	c7 01       	movw	r24, r14
    2c14:	0e 94 63 15 	call	0x2ac6	; 0x2ac6 <_ZN12RmMemManager18getUCharFromMemoryEj>
    2c18:	58 01       	movw	r10, r16
    2c1a:	fa e0       	ldi	r31, 0x0A	; 10
    2c1c:	af 1a       	sub	r10, r31
    2c1e:	b1 08       	sbc	r11, r1
		
		if (slotType == MEM_SLOT_TYPE::SensorMem) {
    2c20:	81 30       	cpi	r24, 0x01	; 1
    2c22:	61 f4       	brne	.+24     	; 0x2c3c <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
		
			uint16_t prevSlotStartAddr = currSlotStartAddr - sizeof(SensorData);
			internalRead(prevSlotStartAddr, (uint8_t*)buffer, sizeof(SensorData));
    2c24:	4a e0       	ldi	r20, 0x0A	; 10
    2c26:	b6 01       	movw	r22, r12
    2c28:	c8 01       	movw	r24, r16
    2c2a:	09 97       	sbiw	r24, 0x09	; 9
    2c2c:	0e 94 20 15 	call	0x2a40	; 0x2a40 <_Z12internalReadjPhh>
			
			buffer += sizeof(SensorData);
    2c30:	84 e6       	ldi	r24, 0x64	; 100
    2c32:	c8 0e       	add	r12, r24
    2c34:	d1 1c       	adc	r13, r1
			currSlotStartAddr -= sizeof(SensorData);
			++numReadings;
    2c36:	cf 5f       	subi	r28, 0xFF	; 255

	uint8_t numReadings = 0;
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
	
	while(true) {
    2c38:	85 01       	movw	r16, r10
    2c3a:	e5 cf       	rjmp	.-54     	; 0x2c06 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x4c>
    2c3c:	8c 2f       	mov	r24, r28
			break;
		}
	}

	return numReadings;
}
    2c3e:	df 91       	pop	r29
    2c40:	cf 91       	pop	r28
    2c42:	1f 91       	pop	r17
    2c44:	0f 91       	pop	r16
    2c46:	ff 90       	pop	r15
    2c48:	ef 90       	pop	r14
    2c4a:	df 90       	pop	r13
    2c4c:	cf 90       	pop	r12
    2c4e:	bf 90       	pop	r11
    2c50:	af 90       	pop	r10
    2c52:	08 95       	ret

00002c54 <_ZN13SensorManagerC1Eb>:
	while (bit_is_set(ADCSRA,ADSC));
	result = ADCL;
	result |= ADCH<<8;
	result = 1125300L / result; // Back-calculate AVcc in mV
	return result / 1000;
}
    2c54:	fc 01       	movw	r30, r24
    2c56:	60 83       	st	Z, r22
    2c58:	08 95       	ret

00002c5a <_ZN13SensorManager16takeSampleAnalogEh>:

//Returns (analog_reading * vcc)
uint16_t SensorManager::takeSampleAnalog(uint8_t pinNo)	{
	
	if (_isMock)
    2c5a:	fc 01       	movw	r30, r24
    2c5c:	80 81       	ld	r24, Z
    2c5e:	81 11       	cpse	r24, r1
    2c60:	03 c0       	rjmp	.+6      	; 0x2c68 <_ZN13SensorManager16takeSampleAnalogEh+0xe>
		return 5;
	
	uint16_t batt = analogRead(pinNo);
    2c62:	86 2f       	mov	r24, r22
    2c64:	0c 94 20 1f 	jmp	0x3e40	; 0x3e40 <analogRead>
	
	//float vcc = readVcc();
	//batt *= vcc;
	
	return batt;
}
    2c68:	85 e0       	ldi	r24, 0x05	; 5
    2c6a:	90 e0       	ldi	r25, 0x00	; 0
    2c6c:	08 95       	ret

00002c6e <_ZN13SensorManager11getMockDataEP10SensorData>:

void SensorManager::getMockData(SensorData* ret) {
    2c6e:	fc 01       	movw	r30, r24
    2c70:	db 01       	movw	r26, r22
	
	++__mockDataCounter; //After 255, will roll back to 0, fine for tests
    2c72:	81 81       	ldd	r24, Z+1	; 0x01
    2c74:	8f 5f       	subi	r24, 0xFF	; 255
    2c76:	81 83       	std	Z+1, r24	; 0x01
	
	ret->battVoltage = __mockDataCounter;
    2c78:	90 e0       	ldi	r25, 0x00	; 0
    2c7a:	11 96       	adiw	r26, 0x01	; 1
    2c7c:	9c 93       	st	X, r25
    2c7e:	8e 93       	st	-X, r24
	ret->pVVoltage = __mockDataCounter*10;
    2c80:	81 81       	ldd	r24, Z+1	; 0x01
    2c82:	2a e0       	ldi	r18, 0x0A	; 10
    2c84:	82 9f       	mul	r24, r18
    2c86:	c0 01       	movw	r24, r0
    2c88:	11 24       	eor	r1, r1
    2c8a:	13 96       	adiw	r26, 0x03	; 3
    2c8c:	9c 93       	st	X, r25
    2c8e:	8e 93       	st	-X, r24
    2c90:	12 97       	sbiw	r26, 0x02	; 2
	ret->current = __mockDataCounter%7;
    2c92:	81 81       	ldd	r24, Z+1	; 0x01
    2c94:	67 e0       	ldi	r22, 0x07	; 7
    2c96:	0e 94 34 23 	call	0x4668	; 0x4668 <__udivmodqi4>
    2c9a:	89 2f       	mov	r24, r25
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	15 96       	adiw	r26, 0x05	; 5
    2ca0:	9c 93       	st	X, r25
    2ca2:	8e 93       	st	-X, r24
    2ca4:	14 97       	sbiw	r26, 0x04	; 4
	ret->temperature = __mockDataCounter*100;
    2ca6:	81 81       	ldd	r24, Z+1	; 0x01
    2ca8:	24 e6       	ldi	r18, 0x64	; 100
    2caa:	82 9f       	mul	r24, r18
    2cac:	c0 01       	movw	r24, r0
    2cae:	11 24       	eor	r1, r1
    2cb0:	17 96       	adiw	r26, 0x07	; 7
    2cb2:	9c 93       	st	X, r25
    2cb4:	8e 93       	st	-X, r24
    2cb6:	16 97       	sbiw	r26, 0x06	; 6
    2cb8:	08 95       	ret

00002cba <_ZN13SensorManager8readDataEP10SensorData>:
	
	//return ret;
}

void SensorManager::readData(SensorData* ret) {
    2cba:	af 92       	push	r10
    2cbc:	bf 92       	push	r11
    2cbe:	cf 92       	push	r12
    2cc0:	df 92       	push	r13
    2cc2:	ef 92       	push	r14
    2cc4:	ff 92       	push	r15
    2cc6:	0f 93       	push	r16
    2cc8:	1f 93       	push	r17
    2cca:	cf 93       	push	r28
    2ccc:	df 93       	push	r29
    2cce:	8c 01       	movw	r16, r24
    2cd0:	eb 01       	movw	r28, r22
	
	if (_isMock) {
    2cd2:	fc 01       	movw	r30, r24
    2cd4:	80 81       	ld	r24, Z
    2cd6:	88 23       	and	r24, r24
    2cd8:	21 f0       	breq	.+8      	; 0x2ce2 <_ZN13SensorManager8readDataEP10SensorData+0x28>
		this->getMockData(ret);
    2cda:	c8 01       	movw	r24, r16
    2cdc:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <_ZN13SensorManager11getMockDataEP10SensorData>
    2ce0:	1b c0       	rjmp	.+54     	; 0x2d18 <_ZN13SensorManager8readDataEP10SensorData+0x5e>
	}
	else {
		uint16_t pvRaw   = takeSampleAnalog(PIN_PV_VOLTAGE);
    2ce2:	6e e0       	ldi	r22, 0x0E	; 14
    2ce4:	c8 01       	movw	r24, r16
    2ce6:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <_ZN13SensorManager16takeSampleAnalogEh>
    2cea:	6c 01       	movw	r12, r24
		uint16_t battRaw = takeSampleAnalog(PIN_BATT_VOLTAGE);
    2cec:	6f e0       	ldi	r22, 0x0F	; 15
    2cee:	c8 01       	movw	r24, r16
    2cf0:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <_ZN13SensorManager16takeSampleAnalogEh>
    2cf4:	5c 01       	movw	r10, r24
		uint16_t currentRaw = takeSampleAnalog(PIN_CURRENT);
    2cf6:	61 e1       	ldi	r22, 0x11	; 17
    2cf8:	c8 01       	movw	r24, r16
    2cfa:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <_ZN13SensorManager16takeSampleAnalogEh>
    2cfe:	7c 01       	movw	r14, r24
		uint16_t tempRaw = takeSampleAnalog(PIN_TEMP);
    2d00:	60 e1       	ldi	r22, 0x10	; 16
    2d02:	c8 01       	movw	r24, r16
    2d04:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <_ZN13SensorManager16takeSampleAnalogEh>

		ret->battVoltage = battRaw;
    2d08:	b9 82       	std	Y+1, r11	; 0x01
    2d0a:	a8 82       	st	Y, r10
		ret->pVVoltage = pvRaw;
    2d0c:	db 82       	std	Y+3, r13	; 0x03
    2d0e:	ca 82       	std	Y+2, r12	; 0x02
		ret->current = currentRaw;
    2d10:	fd 82       	std	Y+5, r15	; 0x05
    2d12:	ec 82       	std	Y+4, r14	; 0x04
		ret->temperature = tempRaw;
    2d14:	9f 83       	std	Y+7, r25	; 0x07
    2d16:	8e 83       	std	Y+6, r24	; 0x06
	}
	
	Helpers::printSensorData(ret);
    2d18:	ce 01       	movw	r24, r28
	
	//return ret;
}
    2d1a:	df 91       	pop	r29
    2d1c:	cf 91       	pop	r28
    2d1e:	1f 91       	pop	r17
    2d20:	0f 91       	pop	r16
    2d22:	ff 90       	pop	r15
    2d24:	ef 90       	pop	r14
    2d26:	df 90       	pop	r13
    2d28:	cf 90       	pop	r12
    2d2a:	bf 90       	pop	r11
    2d2c:	af 90       	pop	r10
		ret->pVVoltage = pvRaw;
		ret->current = currentRaw;
		ret->temperature = tempRaw;
	}
	
	Helpers::printSensorData(ret);
    2d2e:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <_ZN7Helpers15printSensorDataEP10SensorData>

00002d32 <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    2d32:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2d36:	81 e0       	ldi	r24, 0x01	; 1
    2d38:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <twi_sendStop>
    2d3c:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2d40:	61 e0       	ldi	r22, 0x01	; 1
    2d42:	82 e1       	ldi	r24, 0x12	; 18
    2d44:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
    2d48:	61 e0       	ldi	r22, 0x01	; 1
    2d4a:	83 e1       	ldi	r24, 0x13	; 19
    2d4c:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
    2d50:	e9 eb       	ldi	r30, 0xB9	; 185
    2d52:	f0 e0       	ldi	r31, 0x00	; 0
    2d54:	80 81       	ld	r24, Z
    2d56:	8e 7f       	andi	r24, 0xFE	; 254
    2d58:	80 83       	st	Z, r24
    2d5a:	80 81       	ld	r24, Z
    2d5c:	8d 7f       	andi	r24, 0xFD	; 253
    2d5e:	80 83       	st	Z, r24
    2d60:	88 e4       	ldi	r24, 0x48	; 72
    2d62:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    2d66:	85 e4       	ldi	r24, 0x45	; 69
    2d68:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2d6c:	08 95       	ret

00002d6e <twi_readFrom>:
    2d6e:	41 32       	cpi	r20, 0x21	; 33
    2d70:	08 f0       	brcs	.+2      	; 0x2d74 <twi_readFrom+0x6>
    2d72:	43 c0       	rjmp	.+134    	; 0x2dfa <twi_readFrom+0x8c>
    2d74:	90 91 45 03 	lds	r25, 0x0345	; 0x800345 <twi_state>
    2d78:	91 11       	cpse	r25, r1
    2d7a:	fc cf       	rjmp	.-8      	; 0x2d74 <twi_readFrom+0x6>
    2d7c:	91 e0       	ldi	r25, 0x01	; 1
    2d7e:	90 93 45 03 	sts	0x0345, r25	; 0x800345 <twi_state>
    2d82:	20 93 43 03 	sts	0x0343, r18	; 0x800343 <twi_sendStop>
    2d86:	2f ef       	ldi	r18, 0xFF	; 255
    2d88:	20 93 d8 02 	sts	0x02D8, r18	; 0x8002d8 <twi_error>
    2d8c:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <twi_masterBufferIndex>
    2d90:	24 0f       	add	r18, r20
    2d92:	20 93 1c 03 	sts	0x031C, r18	; 0x80031c <twi_masterBufferLength>
    2d96:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <twi_slarw>
    2d9a:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <twi_slarw>
    2d9e:	88 0f       	add	r24, r24
    2da0:	89 2b       	or	r24, r25
    2da2:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <twi_slarw>
    2da6:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <twi_inRepStart>
    2daa:	81 30       	cpi	r24, 0x01	; 1
    2dac:	61 f4       	brne	.+24     	; 0x2dc6 <twi_readFrom+0x58>
    2dae:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2db2:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2db6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2dba:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2dbe:	83 fd       	sbrc	r24, 3
    2dc0:	f8 cf       	rjmp	.-16     	; 0x2db2 <twi_readFrom+0x44>
    2dc2:	85 ec       	ldi	r24, 0xC5	; 197
    2dc4:	01 c0       	rjmp	.+2      	; 0x2dc8 <twi_readFrom+0x5a>
    2dc6:	85 ee       	ldi	r24, 0xE5	; 229
    2dc8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2dcc:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <twi_state>
    2dd0:	81 30       	cpi	r24, 0x01	; 1
    2dd2:	e1 f3       	breq	.-8      	; 0x2dcc <twi_readFrom+0x5e>
    2dd4:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2dd8:	84 17       	cp	r24, r20
    2dda:	10 f4       	brcc	.+4      	; 0x2de0 <twi_readFrom+0x72>
    2ddc:	40 91 1d 03 	lds	r20, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2de0:	ae e1       	ldi	r26, 0x1E	; 30
    2de2:	b3 e0       	ldi	r27, 0x03	; 3
    2de4:	96 2f       	mov	r25, r22
    2de6:	fb 01       	movw	r30, r22
    2de8:	8e 2f       	mov	r24, r30
    2dea:	89 1b       	sub	r24, r25
    2dec:	84 17       	cp	r24, r20
    2dee:	18 f4       	brcc	.+6      	; 0x2df6 <twi_readFrom+0x88>
    2df0:	8d 91       	ld	r24, X+
    2df2:	81 93       	st	Z+, r24
    2df4:	f9 cf       	rjmp	.-14     	; 0x2de8 <twi_readFrom+0x7a>
    2df6:	84 2f       	mov	r24, r20
    2df8:	08 95       	ret
    2dfa:	80 e0       	ldi	r24, 0x00	; 0
    2dfc:	08 95       	ret

00002dfe <twi_writeTo>:
    2dfe:	0f 93       	push	r16
    2e00:	41 32       	cpi	r20, 0x21	; 33
    2e02:	08 f0       	brcs	.+2      	; 0x2e06 <twi_writeTo+0x8>
    2e04:	4a c0       	rjmp	.+148    	; 0x2e9a <twi_writeTo+0x9c>
    2e06:	90 91 45 03 	lds	r25, 0x0345	; 0x800345 <twi_state>
    2e0a:	91 11       	cpse	r25, r1
    2e0c:	fc cf       	rjmp	.-8      	; 0x2e06 <twi_writeTo+0x8>
    2e0e:	32 e0       	ldi	r19, 0x02	; 2
    2e10:	30 93 45 03 	sts	0x0345, r19	; 0x800345 <twi_state>
    2e14:	00 93 43 03 	sts	0x0343, r16	; 0x800343 <twi_sendStop>
    2e18:	3f ef       	ldi	r19, 0xFF	; 255
    2e1a:	30 93 d8 02 	sts	0x02D8, r19	; 0x8002d8 <twi_error>
    2e1e:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <twi_masterBufferIndex>
    2e22:	40 93 1c 03 	sts	0x031C, r20	; 0x80031c <twi_masterBufferLength>
    2e26:	56 2f       	mov	r21, r22
    2e28:	ae e1       	ldi	r26, 0x1E	; 30
    2e2a:	b3 e0       	ldi	r27, 0x03	; 3
    2e2c:	fb 01       	movw	r30, r22
    2e2e:	3e 2f       	mov	r19, r30
    2e30:	35 1b       	sub	r19, r21
    2e32:	34 17       	cp	r19, r20
    2e34:	18 f4       	brcc	.+6      	; 0x2e3c <twi_writeTo+0x3e>
    2e36:	31 91       	ld	r19, Z+
    2e38:	3d 93       	st	X+, r19
    2e3a:	f9 cf       	rjmp	.-14     	; 0x2e2e <twi_writeTo+0x30>
    2e3c:	10 92 44 03 	sts	0x0344, r1	; 0x800344 <twi_slarw>
    2e40:	30 91 44 03 	lds	r19, 0x0344	; 0x800344 <twi_slarw>
    2e44:	88 0f       	add	r24, r24
    2e46:	83 2b       	or	r24, r19
    2e48:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <twi_slarw>
    2e4c:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <twi_inRepStart>
    2e50:	81 30       	cpi	r24, 0x01	; 1
    2e52:	61 f4       	brne	.+24     	; 0x2e6c <twi_writeTo+0x6e>
    2e54:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2e58:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2e5c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2e60:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2e64:	83 fd       	sbrc	r24, 3
    2e66:	f8 cf       	rjmp	.-16     	; 0x2e58 <twi_writeTo+0x5a>
    2e68:	85 ec       	ldi	r24, 0xC5	; 197
    2e6a:	01 c0       	rjmp	.+2      	; 0x2e6e <twi_writeTo+0x70>
    2e6c:	85 ee       	ldi	r24, 0xE5	; 229
    2e6e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2e72:	22 23       	and	r18, r18
    2e74:	21 f0       	breq	.+8      	; 0x2e7e <twi_writeTo+0x80>
    2e76:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <twi_state>
    2e7a:	82 30       	cpi	r24, 0x02	; 2
    2e7c:	d1 f3       	breq	.-12     	; 0x2e72 <twi_writeTo+0x74>
    2e7e:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e82:	8f 3f       	cpi	r24, 0xFF	; 255
    2e84:	79 f0       	breq	.+30     	; 0x2ea4 <twi_writeTo+0xa6>
    2e86:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e8a:	80 32       	cpi	r24, 0x20	; 32
    2e8c:	41 f0       	breq	.+16     	; 0x2e9e <twi_writeTo+0xa0>
    2e8e:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e92:	80 33       	cpi	r24, 0x30	; 48
    2e94:	31 f0       	breq	.+12     	; 0x2ea2 <twi_writeTo+0xa4>
    2e96:	94 e0       	ldi	r25, 0x04	; 4
    2e98:	05 c0       	rjmp	.+10     	; 0x2ea4 <twi_writeTo+0xa6>
    2e9a:	91 e0       	ldi	r25, 0x01	; 1
    2e9c:	03 c0       	rjmp	.+6      	; 0x2ea4 <twi_writeTo+0xa6>
    2e9e:	92 e0       	ldi	r25, 0x02	; 2
    2ea0:	01 c0       	rjmp	.+2      	; 0x2ea4 <twi_writeTo+0xa6>
    2ea2:	93 e0       	ldi	r25, 0x03	; 3
    2ea4:	89 2f       	mov	r24, r25
    2ea6:	0f 91       	pop	r16
    2ea8:	08 95       	ret

00002eaa <twi_transmit>:
    2eaa:	40 91 fa 02 	lds	r20, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2eae:	26 2f       	mov	r18, r22
    2eb0:	30 e0       	ldi	r19, 0x00	; 0
    2eb2:	24 0f       	add	r18, r20
    2eb4:	31 1d       	adc	r19, r1
    2eb6:	21 32       	cpi	r18, 0x21	; 33
    2eb8:	31 05       	cpc	r19, r1
    2eba:	dc f4       	brge	.+54     	; 0x2ef2 <twi_transmit+0x48>
    2ebc:	20 91 45 03 	lds	r18, 0x0345	; 0x800345 <twi_state>
    2ec0:	24 30       	cpi	r18, 0x04	; 4
    2ec2:	c9 f4       	brne	.+50     	; 0x2ef6 <twi_transmit+0x4c>
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	80 e0       	ldi	r24, 0x00	; 0
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
    2eca:	86 17       	cp	r24, r22
    2ecc:	58 f4       	brcc	.+22     	; 0x2ee4 <twi_transmit+0x3a>
    2ece:	30 91 fa 02 	lds	r19, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2ed2:	21 91       	ld	r18, Z+
    2ed4:	dc 01       	movw	r26, r24
    2ed6:	a4 50       	subi	r26, 0x04	; 4
    2ed8:	bd 4f       	sbci	r27, 0xFD	; 253
    2eda:	a3 0f       	add	r26, r19
    2edc:	b1 1d       	adc	r27, r1
    2ede:	2c 93       	st	X, r18
    2ee0:	01 96       	adiw	r24, 0x01	; 1
    2ee2:	f3 cf       	rjmp	.-26     	; 0x2eca <twi_transmit+0x20>
    2ee4:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2ee8:	68 0f       	add	r22, r24
    2eea:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <twi_txBufferLength>
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	08 95       	ret
    2ef2:	81 e0       	ldi	r24, 0x01	; 1
    2ef4:	08 95       	ret
    2ef6:	82 e0       	ldi	r24, 0x02	; 2
    2ef8:	08 95       	ret

00002efa <twi_attachSlaveRxEvent>:
    2efa:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <twi_onSlaveReceive+0x1>
    2efe:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <twi_onSlaveReceive>
    2f02:	08 95       	ret

00002f04 <twi_attachSlaveTxEvent>:
    2f04:	90 93 41 03 	sts	0x0341, r25	; 0x800341 <twi_onSlaveTransmit+0x1>
    2f08:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <twi_onSlaveTransmit>
    2f0c:	08 95       	ret

00002f0e <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    2f0e:	85 ed       	ldi	r24, 0xD5	; 213
    2f10:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    2f14:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2f18:	84 fd       	sbrc	r24, 4
    2f1a:	fc cf       	rjmp	.-8      	; 0x2f14 <twi_stop+0x6>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    2f1c:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2f20:	08 95       	ret

00002f22 <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    2f22:	85 ec       	ldi	r24, 0xC5	; 197
    2f24:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

  // update twi state
  twi_state = TWI_READY;
    2f28:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2f2c:	08 95       	ret

00002f2e <__vector_24>:
}

ISR(TWI_vect)
{
    2f2e:	1f 92       	push	r1
    2f30:	0f 92       	push	r0
    2f32:	0f b6       	in	r0, 0x3f	; 63
    2f34:	0f 92       	push	r0
    2f36:	11 24       	eor	r1, r1
    2f38:	2f 93       	push	r18
    2f3a:	3f 93       	push	r19
    2f3c:	4f 93       	push	r20
    2f3e:	5f 93       	push	r21
    2f40:	6f 93       	push	r22
    2f42:	7f 93       	push	r23
    2f44:	8f 93       	push	r24
    2f46:	9f 93       	push	r25
    2f48:	af 93       	push	r26
    2f4a:	bf 93       	push	r27
    2f4c:	ef 93       	push	r30
    2f4e:	ff 93       	push	r31
  switch(TW_STATUS){
    2f50:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2f54:	88 7f       	andi	r24, 0xF8	; 248
    2f56:	80 36       	cpi	r24, 0x60	; 96
    2f58:	09 f4       	brne	.+2      	; 0x2f5c <__vector_24+0x2e>
    2f5a:	9e c0       	rjmp	.+316    	; 0x3098 <__vector_24+0x16a>
    2f5c:	78 f5       	brcc	.+94     	; 0x2fbc <__vector_24+0x8e>
    2f5e:	88 32       	cpi	r24, 0x28	; 40
    2f60:	09 f4       	brne	.+2      	; 0x2f64 <__vector_24+0x36>
    2f62:	5d c0       	rjmp	.+186    	; 0x301e <__vector_24+0xf0>
    2f64:	90 f4       	brcc	.+36     	; 0x2f8a <__vector_24+0x5c>
    2f66:	80 31       	cpi	r24, 0x10	; 16
    2f68:	09 f4       	brne	.+2      	; 0x2f6c <__vector_24+0x3e>
    2f6a:	56 c0       	rjmp	.+172    	; 0x3018 <__vector_24+0xea>
    2f6c:	38 f4       	brcc	.+14     	; 0x2f7c <__vector_24+0x4e>
    2f6e:	88 23       	and	r24, r24
    2f70:	09 f4       	brne	.+2      	; 0x2f74 <__vector_24+0x46>
    2f72:	f5 c0       	rjmp	.+490    	; 0x315e <__vector_24+0x230>
    2f74:	88 30       	cpi	r24, 0x08	; 8
    2f76:	09 f4       	brne	.+2      	; 0x2f7a <__vector_24+0x4c>
    2f78:	4f c0       	rjmp	.+158    	; 0x3018 <__vector_24+0xea>
    2f7a:	f5 c0       	rjmp	.+490    	; 0x3166 <__vector_24+0x238>
    2f7c:	88 31       	cpi	r24, 0x18	; 24
    2f7e:	09 f4       	brne	.+2      	; 0x2f82 <__vector_24+0x54>
    2f80:	4e c0       	rjmp	.+156    	; 0x301e <__vector_24+0xf0>
    2f82:	80 32       	cpi	r24, 0x20	; 32
    2f84:	09 f4       	brne	.+2      	; 0x2f88 <__vector_24+0x5a>
    2f86:	5f c0       	rjmp	.+190    	; 0x3046 <__vector_24+0x118>
    2f88:	ee c0       	rjmp	.+476    	; 0x3166 <__vector_24+0x238>
    2f8a:	80 34       	cpi	r24, 0x40	; 64
    2f8c:	09 f4       	brne	.+2      	; 0x2f90 <__vector_24+0x62>
    2f8e:	6a c0       	rjmp	.+212    	; 0x3064 <__vector_24+0x136>
    2f90:	58 f4       	brcc	.+22     	; 0x2fa8 <__vector_24+0x7a>
    2f92:	80 33       	cpi	r24, 0x30	; 48
    2f94:	09 f4       	brne	.+2      	; 0x2f98 <__vector_24+0x6a>
    2f96:	57 c0       	rjmp	.+174    	; 0x3046 <__vector_24+0x118>
    2f98:	88 33       	cpi	r24, 0x38	; 56
    2f9a:	09 f0       	breq	.+2      	; 0x2f9e <__vector_24+0x70>
    2f9c:	e4 c0       	rjmp	.+456    	; 0x3166 <__vector_24+0x238>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    2f9e:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <twi_error>
      twi_releaseBus();
    2fa2:	0e 94 91 17 	call	0x2f22	; 0x2f22 <twi_releaseBus>
      break;
    2fa6:	df c0       	rjmp	.+446    	; 0x3166 <__vector_24+0x238>
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2fa8:	80 35       	cpi	r24, 0x50	; 80
    2faa:	09 f4       	brne	.+2      	; 0x2fae <__vector_24+0x80>
    2fac:	4f c0       	rjmp	.+158    	; 0x304c <__vector_24+0x11e>
    2fae:	88 35       	cpi	r24, 0x58	; 88
    2fb0:	09 f4       	brne	.+2      	; 0x2fb4 <__vector_24+0x86>
    2fb2:	5d c0       	rjmp	.+186    	; 0x306e <__vector_24+0x140>
    2fb4:	88 34       	cpi	r24, 0x48	; 72
    2fb6:	09 f0       	breq	.+2      	; 0x2fba <__vector_24+0x8c>
    2fb8:	d6 c0       	rjmp	.+428    	; 0x3166 <__vector_24+0x238>
    2fba:	d3 c0       	rjmp	.+422    	; 0x3162 <__vector_24+0x234>
    2fbc:	88 39       	cpi	r24, 0x98	; 152
    2fbe:	09 f4       	brne	.+2      	; 0x2fc2 <__vector_24+0x94>
    2fc0:	c4 c0       	rjmp	.+392    	; 0x314a <__vector_24+0x21c>
    2fc2:	a8 f4       	brcc	.+42     	; 0x2fee <__vector_24+0xc0>
    2fc4:	88 37       	cpi	r24, 0x78	; 120
    2fc6:	09 f4       	brne	.+2      	; 0x2fca <__vector_24+0x9c>
    2fc8:	67 c0       	rjmp	.+206    	; 0x3098 <__vector_24+0x16a>
    2fca:	38 f4       	brcc	.+14     	; 0x2fda <__vector_24+0xac>
    2fcc:	88 36       	cpi	r24, 0x68	; 104
    2fce:	09 f4       	brne	.+2      	; 0x2fd2 <__vector_24+0xa4>
    2fd0:	63 c0       	rjmp	.+198    	; 0x3098 <__vector_24+0x16a>
    2fd2:	80 37       	cpi	r24, 0x70	; 112
    2fd4:	09 f4       	brne	.+2      	; 0x2fd8 <__vector_24+0xaa>
    2fd6:	60 c0       	rjmp	.+192    	; 0x3098 <__vector_24+0x16a>
    2fd8:	c6 c0       	rjmp	.+396    	; 0x3166 <__vector_24+0x238>
    2fda:	88 38       	cpi	r24, 0x88	; 136
    2fdc:	09 f4       	brne	.+2      	; 0x2fe0 <__vector_24+0xb2>
    2fde:	b5 c0       	rjmp	.+362    	; 0x314a <__vector_24+0x21c>
    2fe0:	80 39       	cpi	r24, 0x90	; 144
    2fe2:	09 f4       	brne	.+2      	; 0x2fe6 <__vector_24+0xb8>
    2fe4:	5f c0       	rjmp	.+190    	; 0x30a4 <__vector_24+0x176>
    2fe6:	80 38       	cpi	r24, 0x80	; 128
    2fe8:	09 f0       	breq	.+2      	; 0x2fec <__vector_24+0xbe>
    2fea:	bd c0       	rjmp	.+378    	; 0x3166 <__vector_24+0x238>
    2fec:	5b c0       	rjmp	.+182    	; 0x30a4 <__vector_24+0x176>
    2fee:	80 3b       	cpi	r24, 0xB0	; 176
    2ff0:	09 f4       	brne	.+2      	; 0x2ff4 <__vector_24+0xc6>
    2ff2:	83 c0       	rjmp	.+262    	; 0x30fa <__vector_24+0x1cc>
    2ff4:	38 f4       	brcc	.+14     	; 0x3004 <__vector_24+0xd6>
    2ff6:	80 3a       	cpi	r24, 0xA0	; 160
    2ff8:	09 f4       	brne	.+2      	; 0x2ffc <__vector_24+0xce>
    2ffa:	66 c0       	rjmp	.+204    	; 0x30c8 <__vector_24+0x19a>
    2ffc:	88 3a       	cpi	r24, 0xA8	; 168
    2ffe:	09 f4       	brne	.+2      	; 0x3002 <__vector_24+0xd4>
    3000:	7c c0       	rjmp	.+248    	; 0x30fa <__vector_24+0x1cc>
    3002:	b1 c0       	rjmp	.+354    	; 0x3166 <__vector_24+0x238>
    3004:	80 3c       	cpi	r24, 0xC0	; 192
    3006:	09 f4       	brne	.+2      	; 0x300a <__vector_24+0xdc>
    3008:	a4 c0       	rjmp	.+328    	; 0x3152 <__vector_24+0x224>
    300a:	88 3c       	cpi	r24, 0xC8	; 200
    300c:	09 f4       	brne	.+2      	; 0x3010 <__vector_24+0xe2>
    300e:	a1 c0       	rjmp	.+322    	; 0x3152 <__vector_24+0x224>
    3010:	88 3b       	cpi	r24, 0xB8	; 184
    3012:	09 f4       	brne	.+2      	; 0x3016 <__vector_24+0xe8>
    3014:	87 c0       	rjmp	.+270    	; 0x3124 <__vector_24+0x1f6>
    3016:	a7 c0       	rjmp	.+334    	; 0x3166 <__vector_24+0x238>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    3018:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    301c:	10 c0       	rjmp	.+32     	; 0x303e <__vector_24+0x110>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    301e:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3022:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <twi_masterBufferLength>
    3026:	98 17       	cp	r25, r24
    3028:	70 f5       	brcc	.+92     	; 0x3086 <__vector_24+0x158>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    302a:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    302e:	81 e0       	ldi	r24, 0x01	; 1
    3030:	8e 0f       	add	r24, r30
    3032:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    3036:	f0 e0       	ldi	r31, 0x00	; 0
    3038:	e2 5e       	subi	r30, 0xE2	; 226
    303a:	fc 4f       	sbci	r31, 0xFC	; 252
    303c:	80 81       	ld	r24, Z
    303e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3042:	85 ec       	ldi	r24, 0xC5	; 197
    3044:	83 c0       	rjmp	.+262    	; 0x314c <__vector_24+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    3046:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <twi_error>
    304a:	8b c0       	rjmp	.+278    	; 0x3162 <__vector_24+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    304c:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3050:	81 e0       	ldi	r24, 0x01	; 1
    3052:	8e 0f       	add	r24, r30
    3054:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    3058:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    305c:	f0 e0       	ldi	r31, 0x00	; 0
    305e:	e2 5e       	subi	r30, 0xE2	; 226
    3060:	fc 4f       	sbci	r31, 0xFC	; 252
    3062:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3064:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3068:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <twi_masterBufferLength>
    306c:	6b c0       	rjmp	.+214    	; 0x3144 <__vector_24+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    306e:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3072:	81 e0       	ldi	r24, 0x01	; 1
    3074:	8e 0f       	add	r24, r30
    3076:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    307a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    307e:	f0 e0       	ldi	r31, 0x00	; 0
    3080:	e2 5e       	subi	r30, 0xE2	; 226
    3082:	fc 4f       	sbci	r31, 0xFC	; 252
    3084:	80 83       	st	Z, r24
	if (twi_sendStop)
    3086:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <twi_sendStop>
    308a:	81 11       	cpse	r24, r1
    308c:	6a c0       	rjmp	.+212    	; 0x3162 <__vector_24+0x234>
          twi_stop();
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    308e:	81 e0       	ldi	r24, 0x01	; 1
    3090:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <twi_inRepStart>
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    3094:	84 ea       	ldi	r24, 0xA4	; 164
    3096:	5e c0       	rjmp	.+188    	; 0x3154 <__vector_24+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    3098:	83 e0       	ldi	r24, 0x03	; 3
    309a:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    309e:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <twi_rxBufferIndex>
    30a2:	cf cf       	rjmp	.-98     	; 0x3042 <__vector_24+0x114>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    30a4:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30a8:	80 32       	cpi	r24, 0x20	; 32
    30aa:	08 f0       	brcs	.+2      	; 0x30ae <__vector_24+0x180>
    30ac:	4e c0       	rjmp	.+156    	; 0x314a <__vector_24+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    30ae:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30b2:	81 e0       	ldi	r24, 0x01	; 1
    30b4:	8e 0f       	add	r24, r30
    30b6:	80 93 d9 02 	sts	0x02D9, r24	; 0x8002d9 <twi_rxBufferIndex>
    30ba:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    30be:	f0 e0       	ldi	r31, 0x00	; 0
    30c0:	e6 52       	subi	r30, 0x26	; 38
    30c2:	fd 4f       	sbci	r31, 0xFD	; 253
    30c4:	80 83       	st	Z, r24
    30c6:	bd cf       	rjmp	.-134    	; 0x3042 <__vector_24+0x114>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    30c8:	0e 94 91 17 	call	0x2f22	; 0x2f22 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    30cc:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30d0:	80 32       	cpi	r24, 0x20	; 32
    30d2:	30 f4       	brcc	.+12     	; 0x30e0 <__vector_24+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    30d4:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30d8:	f0 e0       	ldi	r31, 0x00	; 0
    30da:	e6 52       	subi	r30, 0x26	; 38
    30dc:	fd 4f       	sbci	r31, 0xFD	; 253
    30de:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    30e0:	60 91 d9 02 	lds	r22, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30e4:	70 e0       	ldi	r23, 0x00	; 0
    30e6:	e0 91 3e 03 	lds	r30, 0x033E	; 0x80033e <twi_onSlaveReceive>
    30ea:	f0 91 3f 03 	lds	r31, 0x033F	; 0x80033f <twi_onSlaveReceive+0x1>
    30ee:	8a ed       	ldi	r24, 0xDA	; 218
    30f0:	92 e0       	ldi	r25, 0x02	; 2
    30f2:	09 95       	icall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    30f4:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <twi_rxBufferIndex>
      break;
    30f8:	36 c0       	rjmp	.+108    	; 0x3166 <__vector_24+0x238>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    30fa:	84 e0       	ldi	r24, 0x04	; 4
    30fc:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    3100:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    3104:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    3108:	e0 91 40 03 	lds	r30, 0x0340	; 0x800340 <twi_onSlaveTransmit>
    310c:	f0 91 41 03 	lds	r31, 0x0341	; 0x800341 <twi_onSlaveTransmit+0x1>
    3110:	09 95       	icall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    3112:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    3116:	81 11       	cpse	r24, r1
    3118:	05 c0       	rjmp	.+10     	; 0x3124 <__vector_24+0x1f6>
        twi_txBufferLength = 1;
    311a:	81 e0       	ldi	r24, 0x01	; 1
    311c:	80 93 fa 02 	sts	0x02FA, r24	; 0x8002fa <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    3120:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    3124:	e0 91 fb 02 	lds	r30, 0x02FB	; 0x8002fb <twi_txBufferIndex>
    3128:	81 e0       	ldi	r24, 0x01	; 1
    312a:	8e 0f       	add	r24, r30
    312c:	80 93 fb 02 	sts	0x02FB, r24	; 0x8002fb <twi_txBufferIndex>
    3130:	f0 e0       	ldi	r31, 0x00	; 0
    3132:	e4 50       	subi	r30, 0x04	; 4
    3134:	fd 4f       	sbci	r31, 0xFD	; 253
    3136:	80 81       	ld	r24, Z
    3138:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    313c:	90 91 fb 02 	lds	r25, 0x02FB	; 0x8002fb <twi_txBufferIndex>
    3140:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    3144:	98 17       	cp	r25, r24
    3146:	08 f4       	brcc	.+2      	; 0x314a <__vector_24+0x21c>
    3148:	7c cf       	rjmp	.-264    	; 0x3042 <__vector_24+0x114>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    314a:	85 e8       	ldi	r24, 0x85	; 133
    314c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3150:	0a c0       	rjmp	.+20     	; 0x3166 <__vector_24+0x238>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3152:	85 ec       	ldi	r24, 0xC5	; 197
    3154:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    3158:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
      break;
    315c:	04 c0       	rjmp	.+8      	; 0x3166 <__vector_24+0x238>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    315e:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <twi_error>
      twi_stop();
    3162:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <twi_stop>
      break;
  }
}
    3166:	ff 91       	pop	r31
    3168:	ef 91       	pop	r30
    316a:	bf 91       	pop	r27
    316c:	af 91       	pop	r26
    316e:	9f 91       	pop	r25
    3170:	8f 91       	pop	r24
    3172:	7f 91       	pop	r23
    3174:	6f 91       	pop	r22
    3176:	5f 91       	pop	r21
    3178:	4f 91       	pop	r20
    317a:	3f 91       	pop	r19
    317c:	2f 91       	pop	r18
    317e:	0f 90       	pop	r0
    3180:	0f be       	out	0x3f, r0	; 63
    3182:	0f 90       	pop	r0
    3184:	1f 90       	pop	r1
    3186:	18 95       	reti

00003188 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    3188:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    318c:	90 e0       	ldi	r25, 0x00	; 0
    318e:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3192:	82 1b       	sub	r24, r18
    3194:	91 09       	sbc	r25, r1
    3196:	08 95       	ret

00003198 <_ZN7TwoWire4readEv>:
    3198:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    319c:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31a0:	98 17       	cp	r25, r24
    31a2:	50 f4       	brcc	.+20     	; 0x31b8 <_ZN7TwoWire4readEv+0x20>
    31a4:	e9 2f       	mov	r30, r25
    31a6:	f0 e0       	ldi	r31, 0x00	; 0
    31a8:	e4 58       	subi	r30, 0x84	; 132
    31aa:	fc 4f       	sbci	r31, 0xFC	; 252
    31ac:	20 81       	ld	r18, Z
    31ae:	30 e0       	ldi	r19, 0x00	; 0
    31b0:	9f 5f       	subi	r25, 0xFF	; 255
    31b2:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31b6:	02 c0       	rjmp	.+4      	; 0x31bc <_ZN7TwoWire4readEv+0x24>
    31b8:	2f ef       	ldi	r18, 0xFF	; 255
    31ba:	3f ef       	ldi	r19, 0xFF	; 255
    31bc:	c9 01       	movw	r24, r18
    31be:	08 95       	ret

000031c0 <_ZN7TwoWire4peekEv>:
    31c0:	e0 91 7b 03 	lds	r30, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31c4:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31c8:	e8 17       	cp	r30, r24
    31ca:	30 f4       	brcc	.+12     	; 0x31d8 <_ZN7TwoWire4peekEv+0x18>
    31cc:	f0 e0       	ldi	r31, 0x00	; 0
    31ce:	e4 58       	subi	r30, 0x84	; 132
    31d0:	fc 4f       	sbci	r31, 0xFC	; 252
    31d2:	80 81       	ld	r24, Z
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	08 95       	ret
    31d8:	8f ef       	ldi	r24, 0xFF	; 255
    31da:	9f ef       	ldi	r25, 0xFF	; 255
    31dc:	08 95       	ret

000031de <_ZN7TwoWire5flushEv>:
    31de:	08 95       	ret

000031e0 <_ZN7TwoWire16onReceiveServiceEPhi>:
    31e0:	cf 93       	push	r28
    31e2:	df 93       	push	r29
    31e4:	ec 01       	movw	r28, r24
    31e6:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <_ZN7TwoWire14user_onReceiveE>
    31ea:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <_ZN7TwoWire14user_onReceiveE+0x1>
    31ee:	30 97       	sbiw	r30, 0x00	; 0
    31f0:	f1 f0       	breq	.+60     	; 0x322e <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    31f2:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31f6:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31fa:	98 17       	cp	r25, r24
    31fc:	c0 f0       	brcs	.+48     	; 0x322e <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    31fe:	90 e0       	ldi	r25, 0x00	; 0
    3200:	29 2f       	mov	r18, r25
    3202:	30 e0       	ldi	r19, 0x00	; 0
    3204:	26 17       	cp	r18, r22
    3206:	37 07       	cpc	r19, r23
    3208:	54 f4       	brge	.+20     	; 0x321e <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    320a:	de 01       	movw	r26, r28
    320c:	a2 0f       	add	r26, r18
    320e:	b3 1f       	adc	r27, r19
    3210:	4c 91       	ld	r20, X
    3212:	d9 01       	movw	r26, r18
    3214:	a4 58       	subi	r26, 0x84	; 132
    3216:	bc 4f       	sbci	r27, 0xFC	; 252
    3218:	4c 93       	st	X, r20
    321a:	9f 5f       	subi	r25, 0xFF	; 255
    321c:	f1 cf       	rjmp	.-30     	; 0x3200 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    321e:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3222:	60 93 7a 03 	sts	0x037A, r22	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3226:	cb 01       	movw	r24, r22
    3228:	df 91       	pop	r29
    322a:	cf 91       	pop	r28
    322c:	09 94       	ijmp
    322e:	df 91       	pop	r29
    3230:	cf 91       	pop	r28
    3232:	08 95       	ret

00003234 <_ZN7TwoWire16onRequestServiceEv>:
    3234:	e0 91 54 03 	lds	r30, 0x0354	; 0x800354 <_ZN7TwoWire14user_onRequestE>
    3238:	f0 91 55 03 	lds	r31, 0x0355	; 0x800355 <_ZN7TwoWire14user_onRequestE+0x1>
    323c:	30 97       	sbiw	r30, 0x00	; 0
    323e:	29 f0       	breq	.+10     	; 0x324a <_ZN7TwoWire16onRequestServiceEv+0x16>
    3240:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3244:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3248:	09 94       	ijmp
    324a:	08 95       	ret

0000324c <_ZN7TwoWire5writeEPKhj>:
    324c:	cf 92       	push	r12
    324e:	df 92       	push	r13
    3250:	ef 92       	push	r14
    3252:	ff 92       	push	r15
    3254:	0f 93       	push	r16
    3256:	1f 93       	push	r17
    3258:	cf 93       	push	r28
    325a:	df 93       	push	r29
    325c:	7c 01       	movw	r14, r24
    325e:	cb 01       	movw	r24, r22
    3260:	8a 01       	movw	r16, r20
    3262:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <_ZN7TwoWire12transmittingE>
    3266:	22 23       	and	r18, r18
    3268:	89 f0       	breq	.+34     	; 0x328c <_ZN7TwoWire5writeEPKhj+0x40>
    326a:	eb 01       	movw	r28, r22
    326c:	6b 01       	movw	r12, r22
    326e:	c4 0e       	add	r12, r20
    3270:	d5 1e       	adc	r13, r21
    3272:	cc 15       	cp	r28, r12
    3274:	dd 05       	cpc	r29, r13
    3276:	69 f0       	breq	.+26     	; 0x3292 <_ZN7TwoWire5writeEPKhj+0x46>
    3278:	69 91       	ld	r22, Y+
    327a:	d7 01       	movw	r26, r14
    327c:	ed 91       	ld	r30, X+
    327e:	fc 91       	ld	r31, X
    3280:	01 90       	ld	r0, Z+
    3282:	f0 81       	ld	r31, Z
    3284:	e0 2d       	mov	r30, r0
    3286:	c7 01       	movw	r24, r14
    3288:	09 95       	icall
    328a:	f3 cf       	rjmp	.-26     	; 0x3272 <_ZN7TwoWire5writeEPKhj+0x26>
    328c:	64 2f       	mov	r22, r20
    328e:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <twi_transmit>
    3292:	c8 01       	movw	r24, r16
    3294:	df 91       	pop	r29
    3296:	cf 91       	pop	r28
    3298:	1f 91       	pop	r17
    329a:	0f 91       	pop	r16
    329c:	ff 90       	pop	r15
    329e:	ef 90       	pop	r14
    32a0:	df 90       	pop	r13
    32a2:	cf 90       	pop	r12
    32a4:	08 95       	ret

000032a6 <_ZN7TwoWire5writeEh>:
    32a6:	cf 93       	push	r28
    32a8:	df 93       	push	r29
    32aa:	1f 92       	push	r1
    32ac:	cd b7       	in	r28, 0x3d	; 61
    32ae:	de b7       	in	r29, 0x3e	; 62
    32b0:	69 83       	std	Y+1, r22	; 0x01
    32b2:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <_ZN7TwoWire12transmittingE>
    32b6:	22 23       	and	r18, r18
    32b8:	d1 f0       	breq	.+52     	; 0x32ee <_ZN7TwoWire5writeEh+0x48>
    32ba:	20 91 57 03 	lds	r18, 0x0357	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    32be:	20 32       	cpi	r18, 0x20	; 32
    32c0:	40 f0       	brcs	.+16     	; 0x32d2 <_ZN7TwoWire5writeEh+0x2c>
    32c2:	21 e0       	ldi	r18, 0x01	; 1
    32c4:	30 e0       	ldi	r19, 0x00	; 0
    32c6:	fc 01       	movw	r30, r24
    32c8:	33 83       	std	Z+3, r19	; 0x03
    32ca:	22 83       	std	Z+2, r18	; 0x02
    32cc:	80 e0       	ldi	r24, 0x00	; 0
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	15 c0       	rjmp	.+42     	; 0x32fc <_ZN7TwoWire5writeEh+0x56>
    32d2:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    32d6:	e8 2f       	mov	r30, r24
    32d8:	f0 e0       	ldi	r31, 0x00	; 0
    32da:	e7 5a       	subi	r30, 0xA7	; 167
    32dc:	fc 4f       	sbci	r31, 0xFC	; 252
    32de:	99 81       	ldd	r25, Y+1	; 0x01
    32e0:	90 83       	st	Z, r25
    32e2:	8f 5f       	subi	r24, 0xFF	; 255
    32e4:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    32e8:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    32ec:	05 c0       	rjmp	.+10     	; 0x32f8 <_ZN7TwoWire5writeEh+0x52>
    32ee:	61 e0       	ldi	r22, 0x01	; 1
    32f0:	ce 01       	movw	r24, r28
    32f2:	01 96       	adiw	r24, 0x01	; 1
    32f4:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <twi_transmit>
    32f8:	81 e0       	ldi	r24, 0x01	; 1
    32fa:	90 e0       	ldi	r25, 0x00	; 0
    32fc:	0f 90       	pop	r0
    32fe:	df 91       	pop	r29
    3300:	cf 91       	pop	r28
    3302:	08 95       	ret

00003304 <_ZN7TwoWireC1Ev>:
    3304:	fc 01       	movw	r30, r24
    3306:	13 82       	std	Z+3, r1	; 0x03
    3308:	12 82       	std	Z+2, r1	; 0x02
    330a:	88 ee       	ldi	r24, 0xE8	; 232
    330c:	93 e0       	ldi	r25, 0x03	; 3
    330e:	a0 e0       	ldi	r26, 0x00	; 0
    3310:	b0 e0       	ldi	r27, 0x00	; 0
    3312:	84 83       	std	Z+4, r24	; 0x04
    3314:	95 83       	std	Z+5, r25	; 0x05
    3316:	a6 83       	std	Z+6, r26	; 0x06
    3318:	b7 83       	std	Z+7, r27	; 0x07
    331a:	8e e5       	ldi	r24, 0x5E	; 94
    331c:	91 e0       	ldi	r25, 0x01	; 1
    331e:	91 83       	std	Z+1, r25	; 0x01
    3320:	80 83       	st	Z, r24
    3322:	08 95       	ret

00003324 <_ZN7TwoWire5beginEv>:
    3324:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3328:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    332c:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3330:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3334:	0e 94 99 16 	call	0x2d32	; 0x2d32 <twi_init>
    3338:	8a e1       	ldi	r24, 0x1A	; 26
    333a:	99 e1       	ldi	r25, 0x19	; 25
    333c:	0e 94 82 17 	call	0x2f04	; 0x2f04 <twi_attachSlaveTxEvent>
    3340:	80 ef       	ldi	r24, 0xF0	; 240
    3342:	98 e1       	ldi	r25, 0x18	; 24
    3344:	0c 94 7d 17 	jmp	0x2efa	; 0x2efa <twi_attachSlaveRxEvent>

00003348 <_ZN7TwoWire17beginTransmissionEh>:
    3348:	81 e0       	ldi	r24, 0x01	; 1
    334a:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <_ZN7TwoWire12transmittingE>
    334e:	60 93 79 03 	sts	0x0379, r22	; 0x800379 <_ZN7TwoWire9txAddressE>
    3352:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3356:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    335a:	08 95       	ret

0000335c <_ZN7TwoWire17beginTransmissionEi>:
    335c:	0c 94 a4 19 	jmp	0x3348	; 0x3348 <_ZN7TwoWire17beginTransmissionEh>

00003360 <_ZN7TwoWire15endTransmissionEh>:
    3360:	0f 93       	push	r16
    3362:	06 2f       	mov	r16, r22
    3364:	21 e0       	ldi	r18, 0x01	; 1
    3366:	40 91 57 03 	lds	r20, 0x0357	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    336a:	69 e5       	ldi	r22, 0x59	; 89
    336c:	73 e0       	ldi	r23, 0x03	; 3
    336e:	80 91 79 03 	lds	r24, 0x0379	; 0x800379 <_ZN7TwoWire9txAddressE>
    3372:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <twi_writeTo>
    3376:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    337a:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    337e:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <_ZN7TwoWire12transmittingE>
    3382:	0f 91       	pop	r16
    3384:	08 95       	ret

00003386 <_ZN7TwoWire11requestFromEhhmhh>:
    3386:	4f 92       	push	r4
    3388:	5f 92       	push	r5
    338a:	6f 92       	push	r6
    338c:	7f 92       	push	r7
    338e:	af 92       	push	r10
    3390:	bf 92       	push	r11
    3392:	cf 92       	push	r12
    3394:	ef 92       	push	r14
    3396:	ff 92       	push	r15
    3398:	0f 93       	push	r16
    339a:	1f 93       	push	r17
    339c:	cf 93       	push	r28
    339e:	df 93       	push	r29
    33a0:	5c 01       	movw	r10, r24
    33a2:	f6 2e       	mov	r15, r22
    33a4:	d4 2f       	mov	r29, r20
    33a6:	28 01       	movw	r4, r16
    33a8:	39 01       	movw	r6, r18
    33aa:	ee 20       	and	r14, r14
    33ac:	21 f1       	breq	.+72     	; 0x33f6 <_ZN7TwoWire11requestFromEhhmhh+0x70>
    33ae:	0e 94 a4 19 	call	0x3348	; 0x3348 <_ZN7TwoWire17beginTransmissionEh>
    33b2:	ce 2d       	mov	r28, r14
    33b4:	c4 30       	cpi	r28, 0x04	; 4
    33b6:	08 f0       	brcs	.+2      	; 0x33ba <_ZN7TwoWire11requestFromEhhmhh+0x34>
    33b8:	c3 e0       	ldi	r28, 0x03	; 3
    33ba:	c1 50       	subi	r28, 0x01	; 1
    33bc:	c0 f0       	brcs	.+48     	; 0x33ee <_ZN7TwoWire11requestFromEhhmhh+0x68>
    33be:	28 e0       	ldi	r18, 0x08	; 8
    33c0:	c2 9f       	mul	r28, r18
    33c2:	c0 01       	movw	r24, r0
    33c4:	11 24       	eor	r1, r1
    33c6:	a3 01       	movw	r20, r6
    33c8:	92 01       	movw	r18, r4
    33ca:	04 c0       	rjmp	.+8      	; 0x33d4 <_ZN7TwoWire11requestFromEhhmhh+0x4e>
    33cc:	56 95       	lsr	r21
    33ce:	47 95       	ror	r20
    33d0:	37 95       	ror	r19
    33d2:	27 95       	ror	r18
    33d4:	8a 95       	dec	r24
    33d6:	d2 f7       	brpl	.-12     	; 0x33cc <_ZN7TwoWire11requestFromEhhmhh+0x46>
    33d8:	ca 01       	movw	r24, r20
    33da:	b9 01       	movw	r22, r18
    33dc:	d5 01       	movw	r26, r10
    33de:	ed 91       	ld	r30, X+
    33e0:	fc 91       	ld	r31, X
    33e2:	01 90       	ld	r0, Z+
    33e4:	f0 81       	ld	r31, Z
    33e6:	e0 2d       	mov	r30, r0
    33e8:	c5 01       	movw	r24, r10
    33ea:	09 95       	icall
    33ec:	e6 cf       	rjmp	.-52     	; 0x33ba <_ZN7TwoWire11requestFromEhhmhh+0x34>
    33ee:	60 e0       	ldi	r22, 0x00	; 0
    33f0:	c5 01       	movw	r24, r10
    33f2:	0e 94 b0 19 	call	0x3360	; 0x3360 <_ZN7TwoWire15endTransmissionEh>
    33f6:	4d 2f       	mov	r20, r29
    33f8:	d1 32       	cpi	r29, 0x21	; 33
    33fa:	08 f0       	brcs	.+2      	; 0x33fe <_ZN7TwoWire11requestFromEhhmhh+0x78>
    33fc:	40 e2       	ldi	r20, 0x20	; 32
    33fe:	2c 2d       	mov	r18, r12
    3400:	6c e7       	ldi	r22, 0x7C	; 124
    3402:	73 e0       	ldi	r23, 0x03	; 3
    3404:	8f 2d       	mov	r24, r15
    3406:	0e 94 b7 16 	call	0x2d6e	; 0x2d6e <twi_readFrom>
    340a:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    340e:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3412:	df 91       	pop	r29
    3414:	cf 91       	pop	r28
    3416:	1f 91       	pop	r17
    3418:	0f 91       	pop	r16
    341a:	ff 90       	pop	r15
    341c:	ef 90       	pop	r14
    341e:	cf 90       	pop	r12
    3420:	bf 90       	pop	r11
    3422:	af 90       	pop	r10
    3424:	7f 90       	pop	r7
    3426:	6f 90       	pop	r6
    3428:	5f 90       	pop	r5
    342a:	4f 90       	pop	r4
    342c:	08 95       	ret

0000342e <_ZN7TwoWire11requestFromEhhh>:
    342e:	cf 92       	push	r12
    3430:	ef 92       	push	r14
    3432:	0f 93       	push	r16
    3434:	1f 93       	push	r17
    3436:	c2 2e       	mov	r12, r18
    3438:	e1 2c       	mov	r14, r1
    343a:	00 e0       	ldi	r16, 0x00	; 0
    343c:	10 e0       	ldi	r17, 0x00	; 0
    343e:	98 01       	movw	r18, r16
    3440:	0e 94 c3 19 	call	0x3386	; 0x3386 <_ZN7TwoWire11requestFromEhhmhh>
    3444:	1f 91       	pop	r17
    3446:	0f 91       	pop	r16
    3448:	ef 90       	pop	r14
    344a:	cf 90       	pop	r12
    344c:	08 95       	ret

0000344e <_ZN7TwoWire11requestFromEii>:
    344e:	21 e0       	ldi	r18, 0x01	; 1
    3450:	0c 94 17 1a 	jmp	0x342e	; 0x342e <_ZN7TwoWire11requestFromEhhh>

00003454 <_ZN7TwoWire15endTransmissionEv>:
    3454:	61 e0       	ldi	r22, 0x01	; 1
    3456:	0c 94 b0 19 	jmp	0x3360	; 0x3360 <_ZN7TwoWire15endTransmissionEh>

0000345a <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    345a:	86 e4       	ldi	r24, 0x46	; 70
    345c:	93 e0       	ldi	r25, 0x03	; 3
    345e:	0c 94 82 19 	jmp	0x3304	; 0x3304 <_ZN7TwoWireC1Ev>

00003462 <_Z11writeMockSDP10SensorDatah>:
	/*************************/
	
	RM_LOGLN(F("~~~~~~~~~~~~~~~ Extended Types Test Complete~~~~~~~~~~~~~~~~"));
	
#else
RM_LOGLN(F("*** FAIL ETT ***")); //Sync Broken - inclusion of code should be sync'd with flag
    3462:	fc 01       	movw	r30, r24
    3464:	86 2f       	mov	r24, r22
    3466:	26 2f       	mov	r18, r22
    3468:	30 e0       	ldi	r19, 0x00	; 0
    346a:	a9 01       	movw	r20, r18
    346c:	4f 5f       	subi	r20, 0xFF	; 255
    346e:	5f 4f       	sbci	r21, 0xFF	; 255
    3470:	51 83       	std	Z+1, r21	; 0x01
    3472:	40 83       	st	Z, r20
    3474:	9a e0       	ldi	r25, 0x0A	; 10
    3476:	94 9f       	mul	r25, r20
    3478:	b0 01       	movw	r22, r0
    347a:	95 9f       	mul	r25, r21
    347c:	70 0d       	add	r23, r0
    347e:	11 24       	eor	r1, r1
    3480:	75 83       	std	Z+5, r23	; 0x05
    3482:	64 83       	std	Z+4, r22	; 0x04
    3484:	94 e6       	ldi	r25, 0x64	; 100
    3486:	94 9f       	mul	r25, r20
    3488:	b0 01       	movw	r22, r0
    348a:	95 9f       	mul	r25, r21
    348c:	70 0d       	add	r23, r0
    348e:	11 24       	eor	r1, r1
    3490:	73 83       	std	Z+3, r23	; 0x03
    3492:	62 83       	std	Z+2, r22	; 0x02
    3494:	2d 5c       	subi	r18, 0xCD	; 205
    3496:	3f 4f       	sbci	r19, 0xFF	; 255
    3498:	37 83       	std	Z+7, r19	; 0x07
    349a:	26 83       	std	Z+6, r18	; 0x06
    349c:	65 e0       	ldi	r22, 0x05	; 5
    349e:	0e 94 34 23 	call	0x4668	; 0x4668 <__udivmodqi4>
    34a2:	99 23       	and	r25, r25
    34a4:	11 f0       	breq	.+4      	; 0x34aa <_Z11writeMockSDP10SensorDatah+0x48>
    34a6:	80 e0       	ldi	r24, 0x00	; 0
    34a8:	01 c0       	rjmp	.+2      	; 0x34ac <_Z11writeMockSDP10SensorDatah+0x4a>
    34aa:	83 e0       	ldi	r24, 0x03	; 3
    34ac:	80 87       	std	Z+8, r24	; 0x08
    34ae:	08 95       	ret

000034b0 <_ZN13ExtendedTests18endExtendedGsmTestEv>:
void ExtendedTests::endExtendedGsmTest() {
	
#if IS_EXTENDED_GSM_TEST == true

	//Clear dynamic memory
	free(_mockData);
    34b0:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    34b4:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    34b8:	0e 94 47 24 	call	0x488e	; 0x488e <free>
	
	//Do verification of data test (somehow?)
	
	
	RM_LOGLN(F("~~~~~~~~~~~~~~~ Extended GSM Test Complete~~~~~~~~~~~~~~~~"));
    34bc:	6d e7       	ldi	r22, 0x7D	; 125
    34be:	77 e0       	ldi	r23, 0x07	; 7
    34c0:	8e e9       	ldi	r24, 0x9E	; 158
    34c2:	93 e0       	ldi	r25, 0x03	; 3
    34c4:	0c 94 f8 1c 	jmp	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>

000034c8 <_ZN13ExtendedTests20startExtendedGsmTestEP12RmMemManager>:
#else
	RM_LOGLN(F("*** FAIL EGT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}

void ExtendedTests::startExtendedGsmTest(RmMemManager* mem) {
    34c8:	ef 92       	push	r14
    34ca:	ff 92       	push	r15
    34cc:	0f 93       	push	r16
    34ce:	1f 93       	push	r17
    34d0:	cf 93       	push	r28
    34d2:	df 93       	push	r29
    34d4:	7c 01       	movw	r14, r24
	
#if IS_EXTENDED_GSM_TEST == true

    Serial.println(F("****"));
    34d6:	68 e7       	ldi	r22, 0x78	; 120
    34d8:	77 e0       	ldi	r23, 0x07	; 7
    34da:	8e e9       	ldi	r24, 0x9E	; 158
    34dc:	93 e0       	ldi	r25, 0x03	; 3
    34de:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	//Malloc as the data will be sent later on when gsm connection made
	int numReadings=12;
	_mockData = (SensorData*)malloc(sizeof(SensorData)*numReadings);
    34e2:	88 e7       	ldi	r24, 0x78	; 120
    34e4:	90 e0       	ldi	r25, 0x00	; 0
    34e6:	0e 94 af 23 	call	0x475e	; 0x475e <malloc>
    34ea:	90 93 9d 03 	sts	0x039D, r25	; 0x80039d <_mockData+0x1>
    34ee:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <_mockData>
    34f2:	c0 e0       	ldi	r28, 0x00	; 0
    34f4:	00 e0       	ldi	r16, 0x00	; 0
    34f6:	10 e0       	ldi	r17, 0x00	; 0
	for(int i=0;i<numReadings;i++)
		writeMockSD(_mockData+i, i);
    34f8:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    34fc:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    3500:	6c 2f       	mov	r22, r28
    3502:	80 0f       	add	r24, r16
    3504:	91 1f       	adc	r25, r17
    3506:	0e 94 31 1a 	call	0x3462	; 0x3462 <_Z11writeMockSDP10SensorDatah>
    350a:	06 5f       	subi	r16, 0xF6	; 246
    350c:	1f 4f       	sbci	r17, 0xFF	; 255
    350e:	cf 5f       	subi	r28, 0xFF	; 255
    Serial.println(F("****"));
	
	//Malloc as the data will be sent later on when gsm connection made
	int numReadings=12;
	_mockData = (SensorData*)malloc(sizeof(SensorData)*numReadings);
	for(int i=0;i<numReadings;i++)
    3510:	cc 30       	cpi	r28, 0x0C	; 12
    3512:	91 f7       	brne	.-28     	; 0x34f8 <_ZN13ExtendedTests20startExtendedGsmTestEP12RmMemManager+0x30>
		writeMockSD(_mockData+i, i);
	
	Serial.println(F("Sensor-Datas going for transmission:"));
    3514:	63 e5       	ldi	r22, 0x53	; 83
    3516:	77 e0       	ldi	r23, 0x07	; 7
    3518:	8e e9       	ldi	r24, 0x9E	; 158
    351a:	93 e0       	ldi	r25, 0x03	; 3
    351c:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <_ZN5Print7printlnEPK19__FlashStringHelper>
    3520:	c0 e0       	ldi	r28, 0x00	; 0
    3522:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i=0;i<numReadings;i++)
		Helpers::printSensorData(_mockData+i);
    3524:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    3528:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    352c:	8c 0f       	add	r24, r28
    352e:	9d 1f       	adc	r25, r29
    3530:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <_ZN7Helpers15printSensorDataEP10SensorData>
    3534:	2a 96       	adiw	r28, 0x0a	; 10
	_mockData = (SensorData*)malloc(sizeof(SensorData)*numReadings);
	for(int i=0;i<numReadings;i++)
		writeMockSD(_mockData+i, i);
	
	Serial.println(F("Sensor-Datas going for transmission:"));
	for(int i=0;i<numReadings;i++)
    3536:	c8 37       	cpi	r28, 0x78	; 120
    3538:	d1 05       	cpc	r29, r1
    353a:	a1 f7       	brne	.-24     	; 0x3524 <_ZN13ExtendedTests20startExtendedGsmTestEP12RmMemManager+0x5c>
		Helpers::printSensorData(_mockData+i);
	
	mem->mockSensorData = _mockData;
    353c:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    3540:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    3544:	f7 01       	movw	r30, r14
    3546:	91 83       	std	Z+1, r25	; 0x01
    3548:	80 83       	st	Z, r24
	mem->numMockSensorData = numReadings;
    354a:	8c e0       	ldi	r24, 0x0C	; 12
    354c:	82 83       	std	Z+2, r24	; 0x02
	
#else
	RM_LOGLN(F("*** FAIL EGT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}
    354e:	df 91       	pop	r29
    3550:	cf 91       	pop	r28
    3552:	1f 91       	pop	r17
    3554:	0f 91       	pop	r16
    3556:	ff 90       	pop	r15
    3558:	ef 90       	pop	r14
    355a:	08 95       	ret

0000355c <_ZN14HardwareSerial9availableEv>:
    355c:	fc 01       	movw	r30, r24
    355e:	91 8d       	ldd	r25, Z+25	; 0x19
    3560:	22 8d       	ldd	r18, Z+26	; 0x1a
    3562:	89 2f       	mov	r24, r25
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	80 5c       	subi	r24, 0xC0	; 192
    3568:	9f 4f       	sbci	r25, 0xFF	; 255
    356a:	82 1b       	sub	r24, r18
    356c:	91 09       	sbc	r25, r1
    356e:	8f 73       	andi	r24, 0x3F	; 63
    3570:	99 27       	eor	r25, r25
    3572:	08 95       	ret

00003574 <_ZN14HardwareSerial4peekEv>:
    3574:	fc 01       	movw	r30, r24
    3576:	91 8d       	ldd	r25, Z+25	; 0x19
    3578:	82 8d       	ldd	r24, Z+26	; 0x1a
    357a:	98 17       	cp	r25, r24
    357c:	31 f0       	breq	.+12     	; 0x358a <_ZN14HardwareSerial4peekEv+0x16>
    357e:	82 8d       	ldd	r24, Z+26	; 0x1a
    3580:	e8 0f       	add	r30, r24
    3582:	f1 1d       	adc	r31, r1
    3584:	85 8d       	ldd	r24, Z+29	; 0x1d
    3586:	90 e0       	ldi	r25, 0x00	; 0
    3588:	08 95       	ret
    358a:	8f ef       	ldi	r24, 0xFF	; 255
    358c:	9f ef       	ldi	r25, 0xFF	; 255
    358e:	08 95       	ret

00003590 <_ZN14HardwareSerial4readEv>:
    3590:	fc 01       	movw	r30, r24
    3592:	91 8d       	ldd	r25, Z+25	; 0x19
    3594:	82 8d       	ldd	r24, Z+26	; 0x1a
    3596:	98 17       	cp	r25, r24
    3598:	61 f0       	breq	.+24     	; 0x35b2 <_ZN14HardwareSerial4readEv+0x22>
    359a:	82 8d       	ldd	r24, Z+26	; 0x1a
    359c:	df 01       	movw	r26, r30
    359e:	a8 0f       	add	r26, r24
    35a0:	b1 1d       	adc	r27, r1
    35a2:	5d 96       	adiw	r26, 0x1d	; 29
    35a4:	8c 91       	ld	r24, X
    35a6:	92 8d       	ldd	r25, Z+26	; 0x1a
    35a8:	9f 5f       	subi	r25, 0xFF	; 255
    35aa:	9f 73       	andi	r25, 0x3F	; 63
    35ac:	92 8f       	std	Z+26, r25	; 0x1a
    35ae:	90 e0       	ldi	r25, 0x00	; 0
    35b0:	08 95       	ret
    35b2:	8f ef       	ldi	r24, 0xFF	; 255
    35b4:	9f ef       	ldi	r25, 0xFF	; 255
    35b6:	08 95       	ret

000035b8 <_Z14serialEventRunv>:
    35b8:	81 e3       	ldi	r24, 0x31	; 49
    35ba:	9c e1       	ldi	r25, 0x1C	; 28
    35bc:	89 2b       	or	r24, r25
    35be:	49 f0       	breq	.+18     	; 0x35d2 <_Z14serialEventRunv+0x1a>
    35c0:	80 e0       	ldi	r24, 0x00	; 0
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	89 2b       	or	r24, r25
    35c6:	29 f0       	breq	.+10     	; 0x35d2 <_Z14serialEventRunv+0x1a>
    35c8:	0e 94 31 1c 	call	0x3862	; 0x3862 <_Z17Serial0_availablev>
    35cc:	81 11       	cpse	r24, r1
    35ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    35d2:	08 95       	ret

000035d4 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
    35d4:	fc 01       	movw	r30, r24
    35d6:	84 8d       	ldd	r24, Z+28	; 0x1c
    35d8:	df 01       	movw	r26, r30
    35da:	a8 0f       	add	r26, r24
    35dc:	b1 1d       	adc	r27, r1
    35de:	a3 5a       	subi	r26, 0xA3	; 163
    35e0:	bf 4f       	sbci	r27, 0xFF	; 255
    35e2:	2c 91       	ld	r18, X
    35e4:	84 8d       	ldd	r24, Z+28	; 0x1c
    35e6:	90 e0       	ldi	r25, 0x00	; 0
    35e8:	01 96       	adiw	r24, 0x01	; 1
    35ea:	8f 73       	andi	r24, 0x3F	; 63
    35ec:	99 27       	eor	r25, r25
    35ee:	84 8f       	std	Z+28, r24	; 0x1c
    35f0:	a6 89       	ldd	r26, Z+22	; 0x16
    35f2:	b7 89       	ldd	r27, Z+23	; 0x17
    35f4:	2c 93       	st	X, r18
    35f6:	a0 89       	ldd	r26, Z+16	; 0x10
    35f8:	b1 89       	ldd	r27, Z+17	; 0x11
    35fa:	8c 91       	ld	r24, X
    35fc:	80 64       	ori	r24, 0x40	; 64
    35fe:	8c 93       	st	X, r24
    3600:	93 8d       	ldd	r25, Z+27	; 0x1b
    3602:	84 8d       	ldd	r24, Z+28	; 0x1c
    3604:	98 13       	cpse	r25, r24
    3606:	06 c0       	rjmp	.+12     	; 0x3614 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    3608:	02 88       	ldd	r0, Z+18	; 0x12
    360a:	f3 89       	ldd	r31, Z+19	; 0x13
    360c:	e0 2d       	mov	r30, r0
    360e:	80 81       	ld	r24, Z
    3610:	8f 7d       	andi	r24, 0xDF	; 223
    3612:	80 83       	st	Z, r24
    3614:	08 95       	ret

00003616 <_ZN14HardwareSerial5writeEh>:
    3616:	ef 92       	push	r14
    3618:	ff 92       	push	r15
    361a:	0f 93       	push	r16
    361c:	1f 93       	push	r17
    361e:	cf 93       	push	r28
    3620:	df 93       	push	r29
    3622:	ec 01       	movw	r28, r24
    3624:	81 e0       	ldi	r24, 0x01	; 1
    3626:	88 8f       	std	Y+24, r24	; 0x18
    3628:	9b 8d       	ldd	r25, Y+27	; 0x1b
    362a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    362c:	98 13       	cpse	r25, r24
    362e:	05 c0       	rjmp	.+10     	; 0x363a <_ZN14HardwareSerial5writeEh+0x24>
    3630:	e8 89       	ldd	r30, Y+16	; 0x10
    3632:	f9 89       	ldd	r31, Y+17	; 0x11
    3634:	80 81       	ld	r24, Z
    3636:	85 fd       	sbrc	r24, 5
    3638:	24 c0       	rjmp	.+72     	; 0x3682 <_ZN14HardwareSerial5writeEh+0x6c>
    363a:	f6 2e       	mov	r15, r22
    363c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    363e:	10 e0       	ldi	r17, 0x00	; 0
    3640:	0f 5f       	subi	r16, 0xFF	; 255
    3642:	1f 4f       	sbci	r17, 0xFF	; 255
    3644:	0f 73       	andi	r16, 0x3F	; 63
    3646:	11 27       	eor	r17, r17
    3648:	e0 2e       	mov	r14, r16
    364a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    364c:	e8 12       	cpse	r14, r24
    364e:	0c c0       	rjmp	.+24     	; 0x3668 <_ZN14HardwareSerial5writeEh+0x52>
    3650:	0f b6       	in	r0, 0x3f	; 63
    3652:	07 fc       	sbrc	r0, 7
    3654:	fa cf       	rjmp	.-12     	; 0x364a <_ZN14HardwareSerial5writeEh+0x34>
    3656:	e8 89       	ldd	r30, Y+16	; 0x10
    3658:	f9 89       	ldd	r31, Y+17	; 0x11
    365a:	80 81       	ld	r24, Z
    365c:	85 ff       	sbrs	r24, 5
    365e:	f5 cf       	rjmp	.-22     	; 0x364a <_ZN14HardwareSerial5writeEh+0x34>
    3660:	ce 01       	movw	r24, r28
    3662:	0e 94 ea 1a 	call	0x35d4	; 0x35d4 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3666:	f1 cf       	rjmp	.-30     	; 0x364a <_ZN14HardwareSerial5writeEh+0x34>
    3668:	8b 8d       	ldd	r24, Y+27	; 0x1b
    366a:	fe 01       	movw	r30, r28
    366c:	e8 0f       	add	r30, r24
    366e:	f1 1d       	adc	r31, r1
    3670:	e3 5a       	subi	r30, 0xA3	; 163
    3672:	ff 4f       	sbci	r31, 0xFF	; 255
    3674:	f0 82       	st	Z, r15
    3676:	0b 8f       	std	Y+27, r16	; 0x1b
    3678:	ea 89       	ldd	r30, Y+18	; 0x12
    367a:	fb 89       	ldd	r31, Y+19	; 0x13
    367c:	80 81       	ld	r24, Z
    367e:	80 62       	ori	r24, 0x20	; 32
    3680:	07 c0       	rjmp	.+14     	; 0x3690 <_ZN14HardwareSerial5writeEh+0x7a>
    3682:	ee 89       	ldd	r30, Y+22	; 0x16
    3684:	ff 89       	ldd	r31, Y+23	; 0x17
    3686:	60 83       	st	Z, r22
    3688:	e8 89       	ldd	r30, Y+16	; 0x10
    368a:	f9 89       	ldd	r31, Y+17	; 0x11
    368c:	80 81       	ld	r24, Z
    368e:	80 64       	ori	r24, 0x40	; 64
    3690:	80 83       	st	Z, r24
    3692:	81 e0       	ldi	r24, 0x01	; 1
    3694:	90 e0       	ldi	r25, 0x00	; 0
    3696:	df 91       	pop	r29
    3698:	cf 91       	pop	r28
    369a:	1f 91       	pop	r17
    369c:	0f 91       	pop	r16
    369e:	ff 90       	pop	r15
    36a0:	ef 90       	pop	r14
    36a2:	08 95       	ret

000036a4 <_ZN14HardwareSerial5flushEv>:
    36a4:	cf 93       	push	r28
    36a6:	df 93       	push	r29
    36a8:	ec 01       	movw	r28, r24
    36aa:	88 8d       	ldd	r24, Y+24	; 0x18
    36ac:	88 23       	and	r24, r24
    36ae:	c9 f0       	breq	.+50     	; 0x36e2 <_ZN14HardwareSerial5flushEv+0x3e>
    36b0:	ea 89       	ldd	r30, Y+18	; 0x12
    36b2:	fb 89       	ldd	r31, Y+19	; 0x13
    36b4:	80 81       	ld	r24, Z
    36b6:	85 fd       	sbrc	r24, 5
    36b8:	05 c0       	rjmp	.+10     	; 0x36c4 <_ZN14HardwareSerial5flushEv+0x20>
    36ba:	a8 89       	ldd	r26, Y+16	; 0x10
    36bc:	b9 89       	ldd	r27, Y+17	; 0x11
    36be:	8c 91       	ld	r24, X
    36c0:	86 fd       	sbrc	r24, 6
    36c2:	0f c0       	rjmp	.+30     	; 0x36e2 <_ZN14HardwareSerial5flushEv+0x3e>
    36c4:	0f b6       	in	r0, 0x3f	; 63
    36c6:	07 fc       	sbrc	r0, 7
    36c8:	f5 cf       	rjmp	.-22     	; 0x36b4 <_ZN14HardwareSerial5flushEv+0x10>
    36ca:	80 81       	ld	r24, Z
    36cc:	85 ff       	sbrs	r24, 5
    36ce:	f2 cf       	rjmp	.-28     	; 0x36b4 <_ZN14HardwareSerial5flushEv+0x10>
    36d0:	a8 89       	ldd	r26, Y+16	; 0x10
    36d2:	b9 89       	ldd	r27, Y+17	; 0x11
    36d4:	8c 91       	ld	r24, X
    36d6:	85 ff       	sbrs	r24, 5
    36d8:	ed cf       	rjmp	.-38     	; 0x36b4 <_ZN14HardwareSerial5flushEv+0x10>
    36da:	ce 01       	movw	r24, r28
    36dc:	0e 94 ea 1a 	call	0x35d4	; 0x35d4 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    36e0:	e7 cf       	rjmp	.-50     	; 0x36b0 <_ZN14HardwareSerial5flushEv+0xc>
    36e2:	df 91       	pop	r29
    36e4:	cf 91       	pop	r28
    36e6:	08 95       	ret

000036e8 <_ZN14HardwareSerial5beginEmh>:
    36e8:	cf 92       	push	r12
    36ea:	df 92       	push	r13
    36ec:	ef 92       	push	r14
    36ee:	ff 92       	push	r15
    36f0:	1f 93       	push	r17
    36f2:	cf 93       	push	r28
    36f4:	df 93       	push	r29
    36f6:	ec 01       	movw	r28, r24
    36f8:	6a 01       	movw	r12, r20
    36fa:	7b 01       	movw	r14, r22
    36fc:	12 2f       	mov	r17, r18
    36fe:	e8 89       	ldd	r30, Y+16	; 0x10
    3700:	f9 89       	ldd	r31, Y+17	; 0x11
    3702:	82 e0       	ldi	r24, 0x02	; 2
    3704:	80 83       	st	Z, r24
    3706:	41 15       	cp	r20, r1
    3708:	51 4e       	sbci	r21, 0xE1	; 225
    370a:	61 05       	cpc	r22, r1
    370c:	71 05       	cpc	r23, r1
    370e:	b1 f0       	breq	.+44     	; 0x373c <_ZN14HardwareSerial5beginEmh+0x54>
    3710:	60 e0       	ldi	r22, 0x00	; 0
    3712:	79 e0       	ldi	r23, 0x09	; 9
    3714:	8d e3       	ldi	r24, 0x3D	; 61
    3716:	90 e0       	ldi	r25, 0x00	; 0
    3718:	a7 01       	movw	r20, r14
    371a:	96 01       	movw	r18, r12
    371c:	0e 94 68 23 	call	0x46d0	; 0x46d0 <__udivmodsi4>
    3720:	da 01       	movw	r26, r20
    3722:	c9 01       	movw	r24, r18
    3724:	01 97       	sbiw	r24, 0x01	; 1
    3726:	a1 09       	sbc	r26, r1
    3728:	b1 09       	sbc	r27, r1
    372a:	b6 95       	lsr	r27
    372c:	a7 95       	ror	r26
    372e:	97 95       	ror	r25
    3730:	87 95       	ror	r24
    3732:	9c 01       	movw	r18, r24
    3734:	21 15       	cp	r18, r1
    3736:	80 e1       	ldi	r24, 0x10	; 16
    3738:	38 07       	cpc	r19, r24
    373a:	a8 f0       	brcs	.+42     	; 0x3766 <_ZN14HardwareSerial5beginEmh+0x7e>
    373c:	e8 89       	ldd	r30, Y+16	; 0x10
    373e:	f9 89       	ldd	r31, Y+17	; 0x11
    3740:	10 82       	st	Z, r1
    3742:	60 e8       	ldi	r22, 0x80	; 128
    3744:	74 e8       	ldi	r23, 0x84	; 132
    3746:	8e e1       	ldi	r24, 0x1E	; 30
    3748:	90 e0       	ldi	r25, 0x00	; 0
    374a:	a7 01       	movw	r20, r14
    374c:	96 01       	movw	r18, r12
    374e:	0e 94 68 23 	call	0x46d0	; 0x46d0 <__udivmodsi4>
    3752:	da 01       	movw	r26, r20
    3754:	c9 01       	movw	r24, r18
    3756:	01 97       	sbiw	r24, 0x01	; 1
    3758:	a1 09       	sbc	r26, r1
    375a:	b1 09       	sbc	r27, r1
    375c:	b6 95       	lsr	r27
    375e:	a7 95       	ror	r26
    3760:	97 95       	ror	r25
    3762:	87 95       	ror	r24
    3764:	9c 01       	movw	r18, r24
    3766:	ec 85       	ldd	r30, Y+12	; 0x0c
    3768:	fd 85       	ldd	r31, Y+13	; 0x0d
    376a:	30 83       	st	Z, r19
    376c:	ee 85       	ldd	r30, Y+14	; 0x0e
    376e:	ff 85       	ldd	r31, Y+15	; 0x0f
    3770:	20 83       	st	Z, r18
    3772:	18 8e       	std	Y+24, r1	; 0x18
    3774:	ec 89       	ldd	r30, Y+20	; 0x14
    3776:	fd 89       	ldd	r31, Y+21	; 0x15
    3778:	10 83       	st	Z, r17
    377a:	ea 89       	ldd	r30, Y+18	; 0x12
    377c:	fb 89       	ldd	r31, Y+19	; 0x13
    377e:	80 81       	ld	r24, Z
    3780:	80 61       	ori	r24, 0x10	; 16
    3782:	80 83       	st	Z, r24
    3784:	ea 89       	ldd	r30, Y+18	; 0x12
    3786:	fb 89       	ldd	r31, Y+19	; 0x13
    3788:	80 81       	ld	r24, Z
    378a:	88 60       	ori	r24, 0x08	; 8
    378c:	80 83       	st	Z, r24
    378e:	ea 89       	ldd	r30, Y+18	; 0x12
    3790:	fb 89       	ldd	r31, Y+19	; 0x13
    3792:	80 81       	ld	r24, Z
    3794:	80 68       	ori	r24, 0x80	; 128
    3796:	80 83       	st	Z, r24
    3798:	ea 89       	ldd	r30, Y+18	; 0x12
    379a:	fb 89       	ldd	r31, Y+19	; 0x13
    379c:	80 81       	ld	r24, Z
    379e:	8f 7d       	andi	r24, 0xDF	; 223
    37a0:	80 83       	st	Z, r24
    37a2:	df 91       	pop	r29
    37a4:	cf 91       	pop	r28
    37a6:	1f 91       	pop	r17
    37a8:	ff 90       	pop	r15
    37aa:	ef 90       	pop	r14
    37ac:	df 90       	pop	r13
    37ae:	cf 90       	pop	r12
    37b0:	08 95       	ret

000037b2 <__vector_18>:
    37b2:	1f 92       	push	r1
    37b4:	0f 92       	push	r0
    37b6:	0f b6       	in	r0, 0x3f	; 63
    37b8:	0f 92       	push	r0
    37ba:	11 24       	eor	r1, r1
    37bc:	2f 93       	push	r18
    37be:	8f 93       	push	r24
    37c0:	9f 93       	push	r25
    37c2:	ef 93       	push	r30
    37c4:	ff 93       	push	r31
    37c6:	e0 91 ae 03 	lds	r30, 0x03AE	; 0x8003ae <Serial+0x10>
    37ca:	f0 91 af 03 	lds	r31, 0x03AF	; 0x8003af <Serial+0x11>
    37ce:	80 81       	ld	r24, Z
    37d0:	e0 91 b4 03 	lds	r30, 0x03B4	; 0x8003b4 <Serial+0x16>
    37d4:	f0 91 b5 03 	lds	r31, 0x03B5	; 0x8003b5 <Serial+0x17>
    37d8:	82 fd       	sbrc	r24, 2
    37da:	12 c0       	rjmp	.+36     	; 0x3800 <__vector_18+0x4e>
    37dc:	90 81       	ld	r25, Z
    37de:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <Serial+0x19>
    37e2:	8f 5f       	subi	r24, 0xFF	; 255
    37e4:	8f 73       	andi	r24, 0x3F	; 63
    37e6:	20 91 b8 03 	lds	r18, 0x03B8	; 0x8003b8 <Serial+0x1a>
    37ea:	82 17       	cp	r24, r18
    37ec:	51 f0       	breq	.+20     	; 0x3802 <__vector_18+0x50>
    37ee:	e0 91 b7 03 	lds	r30, 0x03B7	; 0x8003b7 <Serial+0x19>
    37f2:	f0 e0       	ldi	r31, 0x00	; 0
    37f4:	e2 56       	subi	r30, 0x62	; 98
    37f6:	fc 4f       	sbci	r31, 0xFC	; 252
    37f8:	95 8f       	std	Z+29, r25	; 0x1d
    37fa:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <Serial+0x19>
    37fe:	01 c0       	rjmp	.+2      	; 0x3802 <__vector_18+0x50>
    3800:	80 81       	ld	r24, Z
    3802:	ff 91       	pop	r31
    3804:	ef 91       	pop	r30
    3806:	9f 91       	pop	r25
    3808:	8f 91       	pop	r24
    380a:	2f 91       	pop	r18
    380c:	0f 90       	pop	r0
    380e:	0f be       	out	0x3f, r0	; 63
    3810:	0f 90       	pop	r0
    3812:	1f 90       	pop	r1
    3814:	18 95       	reti

00003816 <__vector_19>:
    3816:	1f 92       	push	r1
    3818:	0f 92       	push	r0
    381a:	0f b6       	in	r0, 0x3f	; 63
    381c:	0f 92       	push	r0
    381e:	11 24       	eor	r1, r1
    3820:	2f 93       	push	r18
    3822:	3f 93       	push	r19
    3824:	4f 93       	push	r20
    3826:	5f 93       	push	r21
    3828:	6f 93       	push	r22
    382a:	7f 93       	push	r23
    382c:	8f 93       	push	r24
    382e:	9f 93       	push	r25
    3830:	af 93       	push	r26
    3832:	bf 93       	push	r27
    3834:	ef 93       	push	r30
    3836:	ff 93       	push	r31
    3838:	8e e9       	ldi	r24, 0x9E	; 158
    383a:	93 e0       	ldi	r25, 0x03	; 3
    383c:	0e 94 ea 1a 	call	0x35d4	; 0x35d4 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3840:	ff 91       	pop	r31
    3842:	ef 91       	pop	r30
    3844:	bf 91       	pop	r27
    3846:	af 91       	pop	r26
    3848:	9f 91       	pop	r25
    384a:	8f 91       	pop	r24
    384c:	7f 91       	pop	r23
    384e:	6f 91       	pop	r22
    3850:	5f 91       	pop	r21
    3852:	4f 91       	pop	r20
    3854:	3f 91       	pop	r19
    3856:	2f 91       	pop	r18
    3858:	0f 90       	pop	r0
    385a:	0f be       	out	0x3f, r0	; 63
    385c:	0f 90       	pop	r0
    385e:	1f 90       	pop	r1
    3860:	18 95       	reti

00003862 <_Z17Serial0_availablev>:
    3862:	8e e9       	ldi	r24, 0x9E	; 158
    3864:	93 e0       	ldi	r25, 0x03	; 3
    3866:	0e 94 ae 1a 	call	0x355c	; 0x355c <_ZN14HardwareSerial9availableEv>
    386a:	21 e0       	ldi	r18, 0x01	; 1
    386c:	89 2b       	or	r24, r25
    386e:	09 f4       	brne	.+2      	; 0x3872 <_Z17Serial0_availablev+0x10>
    3870:	20 e0       	ldi	r18, 0x00	; 0
    3872:	82 2f       	mov	r24, r18
    3874:	08 95       	ret

00003876 <_GLOBAL__sub_I___vector_18>:
    3876:	ee e9       	ldi	r30, 0x9E	; 158
    3878:	f3 e0       	ldi	r31, 0x03	; 3
    387a:	13 82       	std	Z+3, r1	; 0x03
    387c:	12 82       	std	Z+2, r1	; 0x02
    387e:	88 ee       	ldi	r24, 0xE8	; 232
    3880:	93 e0       	ldi	r25, 0x03	; 3
    3882:	a0 e0       	ldi	r26, 0x00	; 0
    3884:	b0 e0       	ldi	r27, 0x00	; 0
    3886:	84 83       	std	Z+4, r24	; 0x04
    3888:	95 83       	std	Z+5, r25	; 0x05
    388a:	a6 83       	std	Z+6, r26	; 0x06
    388c:	b7 83       	std	Z+7, r27	; 0x07
    388e:	8e e6       	ldi	r24, 0x6E	; 110
    3890:	91 e0       	ldi	r25, 0x01	; 1
    3892:	91 83       	std	Z+1, r25	; 0x01
    3894:	80 83       	st	Z, r24
    3896:	85 ec       	ldi	r24, 0xC5	; 197
    3898:	90 e0       	ldi	r25, 0x00	; 0
    389a:	95 87       	std	Z+13, r25	; 0x0d
    389c:	84 87       	std	Z+12, r24	; 0x0c
    389e:	84 ec       	ldi	r24, 0xC4	; 196
    38a0:	90 e0       	ldi	r25, 0x00	; 0
    38a2:	97 87       	std	Z+15, r25	; 0x0f
    38a4:	86 87       	std	Z+14, r24	; 0x0e
    38a6:	80 ec       	ldi	r24, 0xC0	; 192
    38a8:	90 e0       	ldi	r25, 0x00	; 0
    38aa:	91 8b       	std	Z+17, r25	; 0x11
    38ac:	80 8b       	std	Z+16, r24	; 0x10
    38ae:	81 ec       	ldi	r24, 0xC1	; 193
    38b0:	90 e0       	ldi	r25, 0x00	; 0
    38b2:	93 8b       	std	Z+19, r25	; 0x13
    38b4:	82 8b       	std	Z+18, r24	; 0x12
    38b6:	82 ec       	ldi	r24, 0xC2	; 194
    38b8:	90 e0       	ldi	r25, 0x00	; 0
    38ba:	95 8b       	std	Z+21, r25	; 0x15
    38bc:	84 8b       	std	Z+20, r24	; 0x14
    38be:	86 ec       	ldi	r24, 0xC6	; 198
    38c0:	90 e0       	ldi	r25, 0x00	; 0
    38c2:	97 8b       	std	Z+23, r25	; 0x17
    38c4:	86 8b       	std	Z+22, r24	; 0x16
    38c6:	11 8e       	std	Z+25, r1	; 0x19
    38c8:	12 8e       	std	Z+26, r1	; 0x1a
    38ca:	13 8e       	std	Z+27, r1	; 0x1b
    38cc:	14 8e       	std	Z+28, r1	; 0x1c
    38ce:	08 95       	ret

000038d0 <initVariant>:
    38d0:	08 95       	ret

000038d2 <main>:
    38d2:	0e 94 e5 1e 	call	0x3dca	; 0x3dca <init>
    38d6:	0e 94 68 1c 	call	0x38d0	; 0x38d0 <initVariant>
    38da:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <setup>
    38de:	cc ed       	ldi	r28, 0xDC	; 220
    38e0:	da e1       	ldi	r29, 0x1A	; 26
    38e2:	0e 94 4d 14 	call	0x289a	; 0x289a <loop>
    38e6:	20 97       	sbiw	r28, 0x00	; 0
    38e8:	e1 f3       	breq	.-8      	; 0x38e2 <main+0x10>
    38ea:	0e 94 dc 1a 	call	0x35b8	; 0x35b8 <_Z14serialEventRunv>
    38ee:	f9 cf       	rjmp	.-14     	; 0x38e2 <main+0x10>

000038f0 <_Znwj>:
    38f0:	0c 94 af 23 	jmp	0x475e	; 0x475e <malloc>

000038f4 <_ZN5Print5writeEPKhj>:
    38f4:	cf 92       	push	r12
    38f6:	df 92       	push	r13
    38f8:	ef 92       	push	r14
    38fa:	ff 92       	push	r15
    38fc:	0f 93       	push	r16
    38fe:	1f 93       	push	r17
    3900:	cf 93       	push	r28
    3902:	df 93       	push	r29
    3904:	6c 01       	movw	r12, r24
    3906:	7a 01       	movw	r14, r20
    3908:	8b 01       	movw	r16, r22
    390a:	c0 e0       	ldi	r28, 0x00	; 0
    390c:	d0 e0       	ldi	r29, 0x00	; 0
    390e:	ce 15       	cp	r28, r14
    3910:	df 05       	cpc	r29, r15
    3912:	81 f0       	breq	.+32     	; 0x3934 <_ZN5Print5writeEPKhj+0x40>
    3914:	d8 01       	movw	r26, r16
    3916:	6d 91       	ld	r22, X+
    3918:	8d 01       	movw	r16, r26
    391a:	d6 01       	movw	r26, r12
    391c:	ed 91       	ld	r30, X+
    391e:	fc 91       	ld	r31, X
    3920:	01 90       	ld	r0, Z+
    3922:	f0 81       	ld	r31, Z
    3924:	e0 2d       	mov	r30, r0
    3926:	c6 01       	movw	r24, r12
    3928:	09 95       	icall
    392a:	89 2b       	or	r24, r25
    392c:	11 f0       	breq	.+4      	; 0x3932 <_ZN5Print5writeEPKhj+0x3e>
    392e:	21 96       	adiw	r28, 0x01	; 1
    3930:	ee cf       	rjmp	.-36     	; 0x390e <_ZN5Print5writeEPKhj+0x1a>
    3932:	7e 01       	movw	r14, r28
    3934:	c7 01       	movw	r24, r14
    3936:	df 91       	pop	r29
    3938:	cf 91       	pop	r28
    393a:	1f 91       	pop	r17
    393c:	0f 91       	pop	r16
    393e:	ff 90       	pop	r15
    3940:	ef 90       	pop	r14
    3942:	df 90       	pop	r13
    3944:	cf 90       	pop	r12
    3946:	08 95       	ret

00003948 <_ZN5Print5writeEPKc>:
    3948:	61 15       	cp	r22, r1
    394a:	71 05       	cpc	r23, r1
    394c:	79 f0       	breq	.+30     	; 0x396c <_ZN5Print5writeEPKc+0x24>
    394e:	fb 01       	movw	r30, r22
    3950:	01 90       	ld	r0, Z+
    3952:	00 20       	and	r0, r0
    3954:	e9 f7       	brne	.-6      	; 0x3950 <_ZN5Print5writeEPKc+0x8>
    3956:	31 97       	sbiw	r30, 0x01	; 1
    3958:	af 01       	movw	r20, r30
    395a:	46 1b       	sub	r20, r22
    395c:	57 0b       	sbc	r21, r23
    395e:	dc 01       	movw	r26, r24
    3960:	ed 91       	ld	r30, X+
    3962:	fc 91       	ld	r31, X
    3964:	02 80       	ldd	r0, Z+2	; 0x02
    3966:	f3 81       	ldd	r31, Z+3	; 0x03
    3968:	e0 2d       	mov	r30, r0
    396a:	09 94       	ijmp
    396c:	80 e0       	ldi	r24, 0x00	; 0
    396e:	90 e0       	ldi	r25, 0x00	; 0
    3970:	08 95       	ret

00003972 <_ZN5Print5printEPK19__FlashStringHelper>:
    3972:	ef 92       	push	r14
    3974:	ff 92       	push	r15
    3976:	0f 93       	push	r16
    3978:	1f 93       	push	r17
    397a:	cf 93       	push	r28
    397c:	df 93       	push	r29
    397e:	8c 01       	movw	r16, r24
    3980:	7b 01       	movw	r14, r22
    3982:	c0 e0       	ldi	r28, 0x00	; 0
    3984:	d0 e0       	ldi	r29, 0x00	; 0
    3986:	f7 01       	movw	r30, r14
    3988:	ec 0f       	add	r30, r28
    398a:	fd 1f       	adc	r31, r29
    398c:	64 91       	lpm	r22, Z
    398e:	66 23       	and	r22, r22
    3990:	61 f0       	breq	.+24     	; 0x39aa <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    3992:	d8 01       	movw	r26, r16
    3994:	ed 91       	ld	r30, X+
    3996:	fc 91       	ld	r31, X
    3998:	01 90       	ld	r0, Z+
    399a:	f0 81       	ld	r31, Z
    399c:	e0 2d       	mov	r30, r0
    399e:	c8 01       	movw	r24, r16
    39a0:	09 95       	icall
    39a2:	89 2b       	or	r24, r25
    39a4:	11 f0       	breq	.+4      	; 0x39aa <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    39a6:	21 96       	adiw	r28, 0x01	; 1
    39a8:	ee cf       	rjmp	.-36     	; 0x3986 <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    39aa:	ce 01       	movw	r24, r28
    39ac:	df 91       	pop	r29
    39ae:	cf 91       	pop	r28
    39b0:	1f 91       	pop	r17
    39b2:	0f 91       	pop	r16
    39b4:	ff 90       	pop	r15
    39b6:	ef 90       	pop	r14
    39b8:	08 95       	ret

000039ba <_ZN5Print5printERK6String>:
    39ba:	db 01       	movw	r26, r22
    39bc:	14 96       	adiw	r26, 0x04	; 4
    39be:	4d 91       	ld	r20, X+
    39c0:	5c 91       	ld	r21, X
    39c2:	15 97       	sbiw	r26, 0x05	; 5
    39c4:	6d 91       	ld	r22, X+
    39c6:	7c 91       	ld	r23, X
    39c8:	dc 01       	movw	r26, r24
    39ca:	ed 91       	ld	r30, X+
    39cc:	fc 91       	ld	r31, X
    39ce:	02 80       	ldd	r0, Z+2	; 0x02
    39d0:	f3 81       	ldd	r31, Z+3	; 0x03
    39d2:	e0 2d       	mov	r30, r0
    39d4:	09 94       	ijmp

000039d6 <_ZN5Print5printEPKc>:
    39d6:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <_ZN5Print5writeEPKc>

000039da <_ZN5Print5printEc>:
    39da:	dc 01       	movw	r26, r24
    39dc:	ed 91       	ld	r30, X+
    39de:	fc 91       	ld	r31, X
    39e0:	01 90       	ld	r0, Z+
    39e2:	f0 81       	ld	r31, Z
    39e4:	e0 2d       	mov	r30, r0
    39e6:	09 94       	ijmp

000039e8 <_ZN5Print7printlnEv>:
    39e8:	6a e7       	ldi	r22, 0x7A	; 122
    39ea:	71 e0       	ldi	r23, 0x01	; 1
    39ec:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <_ZN5Print5writeEPKc>

000039f0 <_ZN5Print7printlnEPK19__FlashStringHelper>:
    39f0:	0f 93       	push	r16
    39f2:	1f 93       	push	r17
    39f4:	cf 93       	push	r28
    39f6:	df 93       	push	r29
    39f8:	ec 01       	movw	r28, r24
    39fa:	0e 94 b9 1c 	call	0x3972	; 0x3972 <_ZN5Print5printEPK19__FlashStringHelper>
    39fe:	8c 01       	movw	r16, r24
    3a00:	ce 01       	movw	r24, r28
    3a02:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3a06:	80 0f       	add	r24, r16
    3a08:	91 1f       	adc	r25, r17
    3a0a:	df 91       	pop	r29
    3a0c:	cf 91       	pop	r28
    3a0e:	1f 91       	pop	r17
    3a10:	0f 91       	pop	r16
    3a12:	08 95       	ret

00003a14 <_ZN5Print7printlnEPKc>:
    3a14:	0f 93       	push	r16
    3a16:	1f 93       	push	r17
    3a18:	cf 93       	push	r28
    3a1a:	df 93       	push	r29
    3a1c:	ec 01       	movw	r28, r24
    3a1e:	0e 94 a4 1c 	call	0x3948	; 0x3948 <_ZN5Print5writeEPKc>
    3a22:	8c 01       	movw	r16, r24
    3a24:	ce 01       	movw	r24, r28
    3a26:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3a2a:	80 0f       	add	r24, r16
    3a2c:	91 1f       	adc	r25, r17
    3a2e:	df 91       	pop	r29
    3a30:	cf 91       	pop	r28
    3a32:	1f 91       	pop	r17
    3a34:	0f 91       	pop	r16
    3a36:	08 95       	ret

00003a38 <_ZN5Print7printlnEc>:
    3a38:	0f 93       	push	r16
    3a3a:	1f 93       	push	r17
    3a3c:	cf 93       	push	r28
    3a3e:	df 93       	push	r29
    3a40:	ec 01       	movw	r28, r24
    3a42:	0e 94 ed 1c 	call	0x39da	; 0x39da <_ZN5Print5printEc>
    3a46:	8c 01       	movw	r16, r24
    3a48:	ce 01       	movw	r24, r28
    3a4a:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3a4e:	80 0f       	add	r24, r16
    3a50:	91 1f       	adc	r25, r17
    3a52:	df 91       	pop	r29
    3a54:	cf 91       	pop	r28
    3a56:	1f 91       	pop	r17
    3a58:	0f 91       	pop	r16
    3a5a:	08 95       	ret

00003a5c <_ZN5Print11printNumberEmh>:
    3a5c:	8f 92       	push	r8
    3a5e:	9f 92       	push	r9
    3a60:	af 92       	push	r10
    3a62:	bf 92       	push	r11
    3a64:	ef 92       	push	r14
    3a66:	ff 92       	push	r15
    3a68:	0f 93       	push	r16
    3a6a:	1f 93       	push	r17
    3a6c:	cf 93       	push	r28
    3a6e:	df 93       	push	r29
    3a70:	cd b7       	in	r28, 0x3d	; 61
    3a72:	de b7       	in	r29, 0x3e	; 62
    3a74:	a1 97       	sbiw	r28, 0x21	; 33
    3a76:	0f b6       	in	r0, 0x3f	; 63
    3a78:	f8 94       	cli
    3a7a:	de bf       	out	0x3e, r29	; 62
    3a7c:	0f be       	out	0x3f, r0	; 63
    3a7e:	cd bf       	out	0x3d, r28	; 61
    3a80:	7c 01       	movw	r14, r24
    3a82:	fa 01       	movw	r30, r20
    3a84:	cb 01       	movw	r24, r22
    3a86:	19 a2       	std	Y+33, r1	; 0x21
    3a88:	22 30       	cpi	r18, 0x02	; 2
    3a8a:	08 f4       	brcc	.+2      	; 0x3a8e <_ZN5Print11printNumberEmh+0x32>
    3a8c:	2a e0       	ldi	r18, 0x0A	; 10
    3a8e:	8e 01       	movw	r16, r28
    3a90:	0f 5d       	subi	r16, 0xDF	; 223
    3a92:	1f 4f       	sbci	r17, 0xFF	; 255
    3a94:	82 2e       	mov	r8, r18
    3a96:	91 2c       	mov	r9, r1
    3a98:	a1 2c       	mov	r10, r1
    3a9a:	b1 2c       	mov	r11, r1
    3a9c:	bf 01       	movw	r22, r30
    3a9e:	a5 01       	movw	r20, r10
    3aa0:	94 01       	movw	r18, r8
    3aa2:	0e 94 68 23 	call	0x46d0	; 0x46d0 <__udivmodsi4>
    3aa6:	f9 01       	movw	r30, r18
    3aa8:	ca 01       	movw	r24, r20
    3aaa:	01 50       	subi	r16, 0x01	; 1
    3aac:	11 09       	sbc	r17, r1
    3aae:	6a 30       	cpi	r22, 0x0A	; 10
    3ab0:	10 f4       	brcc	.+4      	; 0x3ab6 <_ZN5Print11printNumberEmh+0x5a>
    3ab2:	60 5d       	subi	r22, 0xD0	; 208
    3ab4:	01 c0       	rjmp	.+2      	; 0x3ab8 <_ZN5Print11printNumberEmh+0x5c>
    3ab6:	69 5c       	subi	r22, 0xC9	; 201
    3ab8:	d8 01       	movw	r26, r16
    3aba:	6c 93       	st	X, r22
    3abc:	23 2b       	or	r18, r19
    3abe:	24 2b       	or	r18, r20
    3ac0:	25 2b       	or	r18, r21
    3ac2:	61 f7       	brne	.-40     	; 0x3a9c <_ZN5Print11printNumberEmh+0x40>
    3ac4:	b8 01       	movw	r22, r16
    3ac6:	c7 01       	movw	r24, r14
    3ac8:	0e 94 a4 1c 	call	0x3948	; 0x3948 <_ZN5Print5writeEPKc>
    3acc:	a1 96       	adiw	r28, 0x21	; 33
    3ace:	0f b6       	in	r0, 0x3f	; 63
    3ad0:	f8 94       	cli
    3ad2:	de bf       	out	0x3e, r29	; 62
    3ad4:	0f be       	out	0x3f, r0	; 63
    3ad6:	cd bf       	out	0x3d, r28	; 61
    3ad8:	df 91       	pop	r29
    3ada:	cf 91       	pop	r28
    3adc:	1f 91       	pop	r17
    3ade:	0f 91       	pop	r16
    3ae0:	ff 90       	pop	r15
    3ae2:	ef 90       	pop	r14
    3ae4:	bf 90       	pop	r11
    3ae6:	af 90       	pop	r10
    3ae8:	9f 90       	pop	r9
    3aea:	8f 90       	pop	r8
    3aec:	08 95       	ret

00003aee <_ZN5Print5printEmi>:
    3aee:	21 15       	cp	r18, r1
    3af0:	31 05       	cpc	r19, r1
    3af2:	41 f4       	brne	.+16     	; 0x3b04 <_ZN5Print5printEmi+0x16>
    3af4:	dc 01       	movw	r26, r24
    3af6:	ed 91       	ld	r30, X+
    3af8:	fc 91       	ld	r31, X
    3afa:	01 90       	ld	r0, Z+
    3afc:	f0 81       	ld	r31, Z
    3afe:	e0 2d       	mov	r30, r0
    3b00:	64 2f       	mov	r22, r20
    3b02:	09 94       	ijmp
    3b04:	0c 94 2e 1d 	jmp	0x3a5c	; 0x3a5c <_ZN5Print11printNumberEmh>

00003b08 <_ZN5Print5printEhi>:
    3b08:	9a 01       	movw	r18, r20
    3b0a:	46 2f       	mov	r20, r22
    3b0c:	50 e0       	ldi	r21, 0x00	; 0
    3b0e:	60 e0       	ldi	r22, 0x00	; 0
    3b10:	70 e0       	ldi	r23, 0x00	; 0
    3b12:	0c 94 77 1d 	jmp	0x3aee	; 0x3aee <_ZN5Print5printEmi>

00003b16 <_ZN5Print7printlnEhi>:
    3b16:	0f 93       	push	r16
    3b18:	1f 93       	push	r17
    3b1a:	cf 93       	push	r28
    3b1c:	df 93       	push	r29
    3b1e:	ec 01       	movw	r28, r24
    3b20:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <_ZN5Print5printEhi>
    3b24:	8c 01       	movw	r16, r24
    3b26:	ce 01       	movw	r24, r28
    3b28:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3b2c:	80 0f       	add	r24, r16
    3b2e:	91 1f       	adc	r25, r17
    3b30:	df 91       	pop	r29
    3b32:	cf 91       	pop	r28
    3b34:	1f 91       	pop	r17
    3b36:	0f 91       	pop	r16
    3b38:	08 95       	ret

00003b3a <_ZN5Print5printEji>:
    3b3a:	9a 01       	movw	r18, r20
    3b3c:	ab 01       	movw	r20, r22
    3b3e:	60 e0       	ldi	r22, 0x00	; 0
    3b40:	70 e0       	ldi	r23, 0x00	; 0
    3b42:	0c 94 77 1d 	jmp	0x3aee	; 0x3aee <_ZN5Print5printEmi>

00003b46 <_ZN5Print7printlnEji>:
    3b46:	0f 93       	push	r16
    3b48:	1f 93       	push	r17
    3b4a:	cf 93       	push	r28
    3b4c:	df 93       	push	r29
    3b4e:	ec 01       	movw	r28, r24
    3b50:	0e 94 9d 1d 	call	0x3b3a	; 0x3b3a <_ZN5Print5printEji>
    3b54:	8c 01       	movw	r16, r24
    3b56:	ce 01       	movw	r24, r28
    3b58:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3b5c:	80 0f       	add	r24, r16
    3b5e:	91 1f       	adc	r25, r17
    3b60:	df 91       	pop	r29
    3b62:	cf 91       	pop	r28
    3b64:	1f 91       	pop	r17
    3b66:	0f 91       	pop	r16
    3b68:	08 95       	ret

00003b6a <_ZN5Print7printlnEmi>:
    3b6a:	0f 93       	push	r16
    3b6c:	1f 93       	push	r17
    3b6e:	cf 93       	push	r28
    3b70:	df 93       	push	r29
    3b72:	ec 01       	movw	r28, r24
    3b74:	0e 94 77 1d 	call	0x3aee	; 0x3aee <_ZN5Print5printEmi>
    3b78:	8c 01       	movw	r16, r24
    3b7a:	ce 01       	movw	r24, r28
    3b7c:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3b80:	80 0f       	add	r24, r16
    3b82:	91 1f       	adc	r25, r17
    3b84:	df 91       	pop	r29
    3b86:	cf 91       	pop	r28
    3b88:	1f 91       	pop	r17
    3b8a:	0f 91       	pop	r16
    3b8c:	08 95       	ret

00003b8e <_ZN5Print5printEli>:
    3b8e:	cf 92       	push	r12
    3b90:	df 92       	push	r13
    3b92:	ef 92       	push	r14
    3b94:	ff 92       	push	r15
    3b96:	0f 93       	push	r16
    3b98:	1f 93       	push	r17
    3b9a:	cf 93       	push	r28
    3b9c:	df 93       	push	r29
    3b9e:	21 15       	cp	r18, r1
    3ba0:	31 05       	cpc	r19, r1
    3ba2:	81 f4       	brne	.+32     	; 0x3bc4 <_ZN5Print5printEli+0x36>
    3ba4:	dc 01       	movw	r26, r24
    3ba6:	ed 91       	ld	r30, X+
    3ba8:	fc 91       	ld	r31, X
    3baa:	01 90       	ld	r0, Z+
    3bac:	f0 81       	ld	r31, Z
    3bae:	e0 2d       	mov	r30, r0
    3bb0:	64 2f       	mov	r22, r20
    3bb2:	df 91       	pop	r29
    3bb4:	cf 91       	pop	r28
    3bb6:	1f 91       	pop	r17
    3bb8:	0f 91       	pop	r16
    3bba:	ff 90       	pop	r15
    3bbc:	ef 90       	pop	r14
    3bbe:	df 90       	pop	r13
    3bc0:	cf 90       	pop	r12
    3bc2:	09 94       	ijmp
    3bc4:	2a 30       	cpi	r18, 0x0A	; 10
    3bc6:	31 05       	cpc	r19, r1
    3bc8:	01 f5       	brne	.+64     	; 0x3c0a <_ZN5Print5printEli+0x7c>
    3bca:	77 ff       	sbrs	r23, 7
    3bcc:	1d c0       	rjmp	.+58     	; 0x3c08 <_ZN5Print5printEli+0x7a>
    3bce:	6a 01       	movw	r12, r20
    3bd0:	7b 01       	movw	r14, r22
    3bd2:	ec 01       	movw	r28, r24
    3bd4:	6d e2       	ldi	r22, 0x2D	; 45
    3bd6:	0e 94 ed 1c 	call	0x39da	; 0x39da <_ZN5Print5printEc>
    3bda:	8c 01       	movw	r16, r24
    3bdc:	44 27       	eor	r20, r20
    3bde:	55 27       	eor	r21, r21
    3be0:	ba 01       	movw	r22, r20
    3be2:	4c 19       	sub	r20, r12
    3be4:	5d 09       	sbc	r21, r13
    3be6:	6e 09       	sbc	r22, r14
    3be8:	7f 09       	sbc	r23, r15
    3bea:	2a e0       	ldi	r18, 0x0A	; 10
    3bec:	ce 01       	movw	r24, r28
    3bee:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <_ZN5Print11printNumberEmh>
    3bf2:	80 0f       	add	r24, r16
    3bf4:	91 1f       	adc	r25, r17
    3bf6:	df 91       	pop	r29
    3bf8:	cf 91       	pop	r28
    3bfa:	1f 91       	pop	r17
    3bfc:	0f 91       	pop	r16
    3bfe:	ff 90       	pop	r15
    3c00:	ef 90       	pop	r14
    3c02:	df 90       	pop	r13
    3c04:	cf 90       	pop	r12
    3c06:	08 95       	ret
    3c08:	2a e0       	ldi	r18, 0x0A	; 10
    3c0a:	df 91       	pop	r29
    3c0c:	cf 91       	pop	r28
    3c0e:	1f 91       	pop	r17
    3c10:	0f 91       	pop	r16
    3c12:	ff 90       	pop	r15
    3c14:	ef 90       	pop	r14
    3c16:	df 90       	pop	r13
    3c18:	cf 90       	pop	r12
    3c1a:	0c 94 2e 1d 	jmp	0x3a5c	; 0x3a5c <_ZN5Print11printNumberEmh>

00003c1e <_ZN5Print5printEii>:
    3c1e:	9a 01       	movw	r18, r20
    3c20:	ab 01       	movw	r20, r22
    3c22:	77 0f       	add	r23, r23
    3c24:	66 0b       	sbc	r22, r22
    3c26:	77 0b       	sbc	r23, r23
    3c28:	0c 94 c7 1d 	jmp	0x3b8e	; 0x3b8e <_ZN5Print5printEli>

00003c2c <_ZN5Print7printlnEii>:
    3c2c:	0f 93       	push	r16
    3c2e:	1f 93       	push	r17
    3c30:	cf 93       	push	r28
    3c32:	df 93       	push	r29
    3c34:	ec 01       	movw	r28, r24
    3c36:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <_ZN5Print5printEii>
    3c3a:	8c 01       	movw	r16, r24
    3c3c:	ce 01       	movw	r24, r28
    3c3e:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3c42:	80 0f       	add	r24, r16
    3c44:	91 1f       	adc	r25, r17
    3c46:	df 91       	pop	r29
    3c48:	cf 91       	pop	r28
    3c4a:	1f 91       	pop	r17
    3c4c:	0f 91       	pop	r16
    3c4e:	08 95       	ret

00003c50 <_ZN5Print7printlnEli>:
    3c50:	0f 93       	push	r16
    3c52:	1f 93       	push	r17
    3c54:	cf 93       	push	r28
    3c56:	df 93       	push	r29
    3c58:	ec 01       	movw	r28, r24
    3c5a:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <_ZN5Print5printEli>
    3c5e:	8c 01       	movw	r16, r24
    3c60:	ce 01       	movw	r24, r28
    3c62:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <_ZN5Print7printlnEv>
    3c66:	80 0f       	add	r24, r16
    3c68:	91 1f       	adc	r25, r17
    3c6a:	df 91       	pop	r29
    3c6c:	cf 91       	pop	r28
    3c6e:	1f 91       	pop	r17
    3c70:	0f 91       	pop	r16
    3c72:	08 95       	ret

00003c74 <__vector_16>:
    3c74:	1f 92       	push	r1
    3c76:	0f 92       	push	r0
    3c78:	0f b6       	in	r0, 0x3f	; 63
    3c7a:	0f 92       	push	r0
    3c7c:	11 24       	eor	r1, r1
    3c7e:	2f 93       	push	r18
    3c80:	3f 93       	push	r19
    3c82:	8f 93       	push	r24
    3c84:	9f 93       	push	r25
    3c86:	af 93       	push	r26
    3c88:	bf 93       	push	r27
    3c8a:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <timer0_millis>
    3c8e:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <timer0_millis+0x1>
    3c92:	a0 91 3e 04 	lds	r26, 0x043E	; 0x80043e <timer0_millis+0x2>
    3c96:	b0 91 3f 04 	lds	r27, 0x043F	; 0x80043f <timer0_millis+0x3>
    3c9a:	30 91 3b 04 	lds	r19, 0x043B	; 0x80043b <timer0_fract>
    3c9e:	23 e0       	ldi	r18, 0x03	; 3
    3ca0:	23 0f       	add	r18, r19
    3ca2:	2d 37       	cpi	r18, 0x7D	; 125
    3ca4:	20 f4       	brcc	.+8      	; 0x3cae <__vector_16+0x3a>
    3ca6:	01 96       	adiw	r24, 0x01	; 1
    3ca8:	a1 1d       	adc	r26, r1
    3caa:	b1 1d       	adc	r27, r1
    3cac:	05 c0       	rjmp	.+10     	; 0x3cb8 <__vector_16+0x44>
    3cae:	26 e8       	ldi	r18, 0x86	; 134
    3cb0:	23 0f       	add	r18, r19
    3cb2:	02 96       	adiw	r24, 0x02	; 2
    3cb4:	a1 1d       	adc	r26, r1
    3cb6:	b1 1d       	adc	r27, r1
    3cb8:	20 93 3b 04 	sts	0x043B, r18	; 0x80043b <timer0_fract>
    3cbc:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <timer0_millis>
    3cc0:	90 93 3d 04 	sts	0x043D, r25	; 0x80043d <timer0_millis+0x1>
    3cc4:	a0 93 3e 04 	sts	0x043E, r26	; 0x80043e <timer0_millis+0x2>
    3cc8:	b0 93 3f 04 	sts	0x043F, r27	; 0x80043f <timer0_millis+0x3>
    3ccc:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <timer0_overflow_count>
    3cd0:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <timer0_overflow_count+0x1>
    3cd4:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <timer0_overflow_count+0x2>
    3cd8:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <timer0_overflow_count+0x3>
    3cdc:	01 96       	adiw	r24, 0x01	; 1
    3cde:	a1 1d       	adc	r26, r1
    3ce0:	b1 1d       	adc	r27, r1
    3ce2:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <timer0_overflow_count>
    3ce6:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <timer0_overflow_count+0x1>
    3cea:	a0 93 42 04 	sts	0x0442, r26	; 0x800442 <timer0_overflow_count+0x2>
    3cee:	b0 93 43 04 	sts	0x0443, r27	; 0x800443 <timer0_overflow_count+0x3>
    3cf2:	bf 91       	pop	r27
    3cf4:	af 91       	pop	r26
    3cf6:	9f 91       	pop	r25
    3cf8:	8f 91       	pop	r24
    3cfa:	3f 91       	pop	r19
    3cfc:	2f 91       	pop	r18
    3cfe:	0f 90       	pop	r0
    3d00:	0f be       	out	0x3f, r0	; 63
    3d02:	0f 90       	pop	r0
    3d04:	1f 90       	pop	r1
    3d06:	18 95       	reti

00003d08 <micros>:
    3d08:	3f b7       	in	r19, 0x3f	; 63
    3d0a:	f8 94       	cli
    3d0c:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <timer0_overflow_count>
    3d10:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <timer0_overflow_count+0x1>
    3d14:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <timer0_overflow_count+0x2>
    3d18:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <timer0_overflow_count+0x3>
    3d1c:	26 b5       	in	r18, 0x26	; 38
    3d1e:	a8 9b       	sbis	0x15, 0	; 21
    3d20:	05 c0       	rjmp	.+10     	; 0x3d2c <micros+0x24>
    3d22:	2f 3f       	cpi	r18, 0xFF	; 255
    3d24:	19 f0       	breq	.+6      	; 0x3d2c <micros+0x24>
    3d26:	01 96       	adiw	r24, 0x01	; 1
    3d28:	a1 1d       	adc	r26, r1
    3d2a:	b1 1d       	adc	r27, r1
    3d2c:	3f bf       	out	0x3f, r19	; 63
    3d2e:	ba 2f       	mov	r27, r26
    3d30:	a9 2f       	mov	r26, r25
    3d32:	98 2f       	mov	r25, r24
    3d34:	88 27       	eor	r24, r24
    3d36:	82 0f       	add	r24, r18
    3d38:	91 1d       	adc	r25, r1
    3d3a:	a1 1d       	adc	r26, r1
    3d3c:	b1 1d       	adc	r27, r1
    3d3e:	bc 01       	movw	r22, r24
    3d40:	cd 01       	movw	r24, r26
    3d42:	42 e0       	ldi	r20, 0x02	; 2
    3d44:	66 0f       	add	r22, r22
    3d46:	77 1f       	adc	r23, r23
    3d48:	88 1f       	adc	r24, r24
    3d4a:	99 1f       	adc	r25, r25
    3d4c:	4a 95       	dec	r20
    3d4e:	d1 f7       	brne	.-12     	; 0x3d44 <micros+0x3c>
    3d50:	08 95       	ret

00003d52 <delay>:
    3d52:	8f 92       	push	r8
    3d54:	9f 92       	push	r9
    3d56:	af 92       	push	r10
    3d58:	bf 92       	push	r11
    3d5a:	cf 92       	push	r12
    3d5c:	df 92       	push	r13
    3d5e:	ef 92       	push	r14
    3d60:	ff 92       	push	r15
    3d62:	6b 01       	movw	r12, r22
    3d64:	7c 01       	movw	r14, r24
    3d66:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <micros>
    3d6a:	4b 01       	movw	r8, r22
    3d6c:	5c 01       	movw	r10, r24
    3d6e:	c1 14       	cp	r12, r1
    3d70:	d1 04       	cpc	r13, r1
    3d72:	e1 04       	cpc	r14, r1
    3d74:	f1 04       	cpc	r15, r1
    3d76:	01 f1       	breq	.+64     	; 0x3db8 <delay+0x66>
    3d78:	0e 94 33 23 	call	0x4666	; 0x4666 <yield>
    3d7c:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <micros>
    3d80:	dc 01       	movw	r26, r24
    3d82:	cb 01       	movw	r24, r22
    3d84:	88 19       	sub	r24, r8
    3d86:	99 09       	sbc	r25, r9
    3d88:	aa 09       	sbc	r26, r10
    3d8a:	bb 09       	sbc	r27, r11
    3d8c:	88 3e       	cpi	r24, 0xE8	; 232
    3d8e:	93 40       	sbci	r25, 0x03	; 3
    3d90:	a1 05       	cpc	r26, r1
    3d92:	b1 05       	cpc	r27, r1
    3d94:	60 f3       	brcs	.-40     	; 0x3d6e <delay+0x1c>
    3d96:	21 e0       	ldi	r18, 0x01	; 1
    3d98:	c2 1a       	sub	r12, r18
    3d9a:	d1 08       	sbc	r13, r1
    3d9c:	e1 08       	sbc	r14, r1
    3d9e:	f1 08       	sbc	r15, r1
    3da0:	88 ee       	ldi	r24, 0xE8	; 232
    3da2:	88 0e       	add	r8, r24
    3da4:	83 e0       	ldi	r24, 0x03	; 3
    3da6:	98 1e       	adc	r9, r24
    3da8:	a1 1c       	adc	r10, r1
    3daa:	b1 1c       	adc	r11, r1
    3dac:	c1 14       	cp	r12, r1
    3dae:	d1 04       	cpc	r13, r1
    3db0:	e1 04       	cpc	r14, r1
    3db2:	f1 04       	cpc	r15, r1
    3db4:	19 f7       	brne	.-58     	; 0x3d7c <delay+0x2a>
    3db6:	db cf       	rjmp	.-74     	; 0x3d6e <delay+0x1c>
    3db8:	ff 90       	pop	r15
    3dba:	ef 90       	pop	r14
    3dbc:	df 90       	pop	r13
    3dbe:	cf 90       	pop	r12
    3dc0:	bf 90       	pop	r11
    3dc2:	af 90       	pop	r10
    3dc4:	9f 90       	pop	r9
    3dc6:	8f 90       	pop	r8
    3dc8:	08 95       	ret

00003dca <init>:
    3dca:	78 94       	sei
    3dcc:	84 b5       	in	r24, 0x24	; 36
    3dce:	82 60       	ori	r24, 0x02	; 2
    3dd0:	84 bd       	out	0x24, r24	; 36
    3dd2:	84 b5       	in	r24, 0x24	; 36
    3dd4:	81 60       	ori	r24, 0x01	; 1
    3dd6:	84 bd       	out	0x24, r24	; 36
    3dd8:	85 b5       	in	r24, 0x25	; 37
    3dda:	82 60       	ori	r24, 0x02	; 2
    3ddc:	85 bd       	out	0x25, r24	; 37
    3dde:	85 b5       	in	r24, 0x25	; 37
    3de0:	81 60       	ori	r24, 0x01	; 1
    3de2:	85 bd       	out	0x25, r24	; 37
    3de4:	ee e6       	ldi	r30, 0x6E	; 110
    3de6:	f0 e0       	ldi	r31, 0x00	; 0
    3de8:	80 81       	ld	r24, Z
    3dea:	81 60       	ori	r24, 0x01	; 1
    3dec:	80 83       	st	Z, r24
    3dee:	e1 e8       	ldi	r30, 0x81	; 129
    3df0:	f0 e0       	ldi	r31, 0x00	; 0
    3df2:	10 82       	st	Z, r1
    3df4:	80 81       	ld	r24, Z
    3df6:	82 60       	ori	r24, 0x02	; 2
    3df8:	80 83       	st	Z, r24
    3dfa:	80 81       	ld	r24, Z
    3dfc:	81 60       	ori	r24, 0x01	; 1
    3dfe:	80 83       	st	Z, r24
    3e00:	e0 e8       	ldi	r30, 0x80	; 128
    3e02:	f0 e0       	ldi	r31, 0x00	; 0
    3e04:	80 81       	ld	r24, Z
    3e06:	81 60       	ori	r24, 0x01	; 1
    3e08:	80 83       	st	Z, r24
    3e0a:	e1 eb       	ldi	r30, 0xB1	; 177
    3e0c:	f0 e0       	ldi	r31, 0x00	; 0
    3e0e:	80 81       	ld	r24, Z
    3e10:	84 60       	ori	r24, 0x04	; 4
    3e12:	80 83       	st	Z, r24
    3e14:	e0 eb       	ldi	r30, 0xB0	; 176
    3e16:	f0 e0       	ldi	r31, 0x00	; 0
    3e18:	80 81       	ld	r24, Z
    3e1a:	81 60       	ori	r24, 0x01	; 1
    3e1c:	80 83       	st	Z, r24
    3e1e:	ea e7       	ldi	r30, 0x7A	; 122
    3e20:	f0 e0       	ldi	r31, 0x00	; 0
    3e22:	80 81       	ld	r24, Z
    3e24:	84 60       	ori	r24, 0x04	; 4
    3e26:	80 83       	st	Z, r24
    3e28:	80 81       	ld	r24, Z
    3e2a:	82 60       	ori	r24, 0x02	; 2
    3e2c:	80 83       	st	Z, r24
    3e2e:	80 81       	ld	r24, Z
    3e30:	81 60       	ori	r24, 0x01	; 1
    3e32:	80 83       	st	Z, r24
    3e34:	80 81       	ld	r24, Z
    3e36:	80 68       	ori	r24, 0x80	; 128
    3e38:	80 83       	st	Z, r24
    3e3a:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3e3e:	08 95       	ret

00003e40 <analogRead>:
    3e40:	8e 30       	cpi	r24, 0x0E	; 14
    3e42:	08 f0       	brcs	.+2      	; 0x3e46 <analogRead+0x6>
    3e44:	8e 50       	subi	r24, 0x0E	; 14
    3e46:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <analog_reference>
    3e4a:	90 e4       	ldi	r25, 0x40	; 64
    3e4c:	29 9f       	mul	r18, r25
    3e4e:	90 01       	movw	r18, r0
    3e50:	11 24       	eor	r1, r1
    3e52:	87 70       	andi	r24, 0x07	; 7
    3e54:	82 2b       	or	r24, r18
    3e56:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3e5a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e5e:	80 64       	ori	r24, 0x40	; 64
    3e60:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e64:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e68:	86 fd       	sbrc	r24, 6
    3e6a:	fc cf       	rjmp	.-8      	; 0x3e64 <analogRead+0x24>
    3e6c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    3e70:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    3e74:	90 e0       	ldi	r25, 0x00	; 0
    3e76:	92 2b       	or	r25, r18
    3e78:	08 95       	ret

00003e7a <turnOffPWM>:
    3e7a:	83 30       	cpi	r24, 0x03	; 3
    3e7c:	81 f0       	breq	.+32     	; 0x3e9e <turnOffPWM+0x24>
    3e7e:	28 f4       	brcc	.+10     	; 0x3e8a <turnOffPWM+0x10>
    3e80:	81 30       	cpi	r24, 0x01	; 1
    3e82:	99 f0       	breq	.+38     	; 0x3eaa <turnOffPWM+0x30>
    3e84:	82 30       	cpi	r24, 0x02	; 2
    3e86:	a1 f0       	breq	.+40     	; 0x3eb0 <turnOffPWM+0x36>
    3e88:	08 95       	ret
    3e8a:	87 30       	cpi	r24, 0x07	; 7
    3e8c:	a9 f0       	breq	.+42     	; 0x3eb8 <turnOffPWM+0x3e>
    3e8e:	88 30       	cpi	r24, 0x08	; 8
    3e90:	b9 f0       	breq	.+46     	; 0x3ec0 <turnOffPWM+0x46>
    3e92:	84 30       	cpi	r24, 0x04	; 4
    3e94:	d1 f4       	brne	.+52     	; 0x3eca <turnOffPWM+0x50>
    3e96:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e9a:	8f 7d       	andi	r24, 0xDF	; 223
    3e9c:	03 c0       	rjmp	.+6      	; 0x3ea4 <turnOffPWM+0x2a>
    3e9e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3ea2:	8f 77       	andi	r24, 0x7F	; 127
    3ea4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3ea8:	08 95       	ret
    3eaa:	84 b5       	in	r24, 0x24	; 36
    3eac:	8f 77       	andi	r24, 0x7F	; 127
    3eae:	02 c0       	rjmp	.+4      	; 0x3eb4 <turnOffPWM+0x3a>
    3eb0:	84 b5       	in	r24, 0x24	; 36
    3eb2:	8f 7d       	andi	r24, 0xDF	; 223
    3eb4:	84 bd       	out	0x24, r24	; 36
    3eb6:	08 95       	ret
    3eb8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3ebc:	8f 77       	andi	r24, 0x7F	; 127
    3ebe:	03 c0       	rjmp	.+6      	; 0x3ec6 <turnOffPWM+0x4c>
    3ec0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3ec4:	8f 7d       	andi	r24, 0xDF	; 223
    3ec6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3eca:	08 95       	ret

00003ecc <pinMode>:
    3ecc:	cf 93       	push	r28
    3ece:	df 93       	push	r29
    3ed0:	90 e0       	ldi	r25, 0x00	; 0
    3ed2:	fc 01       	movw	r30, r24
    3ed4:	e4 53       	subi	r30, 0x34	; 52
    3ed6:	f8 4f       	sbci	r31, 0xF8	; 248
    3ed8:	24 91       	lpm	r18, Z
    3eda:	fc 01       	movw	r30, r24
    3edc:	e0 52       	subi	r30, 0x20	; 32
    3ede:	f8 4f       	sbci	r31, 0xF8	; 248
    3ee0:	84 91       	lpm	r24, Z
    3ee2:	88 23       	and	r24, r24
    3ee4:	61 f1       	breq	.+88     	; 0x3f3e <pinMode+0x72>
    3ee6:	90 e0       	ldi	r25, 0x00	; 0
    3ee8:	88 0f       	add	r24, r24
    3eea:	99 1f       	adc	r25, r25
    3eec:	fc 01       	movw	r30, r24
    3eee:	e8 5f       	subi	r30, 0xF8	; 248
    3ef0:	f7 4f       	sbci	r31, 0xF7	; 247
    3ef2:	c5 91       	lpm	r28, Z+
    3ef4:	d4 91       	lpm	r29, Z
    3ef6:	fc 01       	movw	r30, r24
    3ef8:	e2 50       	subi	r30, 0x02	; 2
    3efa:	f8 4f       	sbci	r31, 0xF8	; 248
    3efc:	a5 91       	lpm	r26, Z+
    3efe:	b4 91       	lpm	r27, Z
    3f00:	61 11       	cpse	r22, r1
    3f02:	09 c0       	rjmp	.+18     	; 0x3f16 <pinMode+0x4a>
    3f04:	9f b7       	in	r25, 0x3f	; 63
    3f06:	f8 94       	cli
    3f08:	88 81       	ld	r24, Y
    3f0a:	20 95       	com	r18
    3f0c:	82 23       	and	r24, r18
    3f0e:	88 83       	st	Y, r24
    3f10:	ec 91       	ld	r30, X
    3f12:	2e 23       	and	r18, r30
    3f14:	0b c0       	rjmp	.+22     	; 0x3f2c <pinMode+0x60>
    3f16:	62 30       	cpi	r22, 0x02	; 2
    3f18:	61 f4       	brne	.+24     	; 0x3f32 <pinMode+0x66>
    3f1a:	9f b7       	in	r25, 0x3f	; 63
    3f1c:	f8 94       	cli
    3f1e:	88 81       	ld	r24, Y
    3f20:	32 2f       	mov	r19, r18
    3f22:	30 95       	com	r19
    3f24:	83 23       	and	r24, r19
    3f26:	88 83       	st	Y, r24
    3f28:	ec 91       	ld	r30, X
    3f2a:	2e 2b       	or	r18, r30
    3f2c:	2c 93       	st	X, r18
    3f2e:	9f bf       	out	0x3f, r25	; 63
    3f30:	06 c0       	rjmp	.+12     	; 0x3f3e <pinMode+0x72>
    3f32:	8f b7       	in	r24, 0x3f	; 63
    3f34:	f8 94       	cli
    3f36:	e8 81       	ld	r30, Y
    3f38:	2e 2b       	or	r18, r30
    3f3a:	28 83       	st	Y, r18
    3f3c:	8f bf       	out	0x3f, r24	; 63
    3f3e:	df 91       	pop	r29
    3f40:	cf 91       	pop	r28
    3f42:	08 95       	ret

00003f44 <digitalWrite>:
    3f44:	1f 93       	push	r17
    3f46:	cf 93       	push	r28
    3f48:	df 93       	push	r29
    3f4a:	28 2f       	mov	r18, r24
    3f4c:	30 e0       	ldi	r19, 0x00	; 0
    3f4e:	f9 01       	movw	r30, r18
    3f50:	e8 54       	subi	r30, 0x48	; 72
    3f52:	f8 4f       	sbci	r31, 0xF8	; 248
    3f54:	84 91       	lpm	r24, Z
    3f56:	f9 01       	movw	r30, r18
    3f58:	e4 53       	subi	r30, 0x34	; 52
    3f5a:	f8 4f       	sbci	r31, 0xF8	; 248
    3f5c:	d4 91       	lpm	r29, Z
    3f5e:	f9 01       	movw	r30, r18
    3f60:	e0 52       	subi	r30, 0x20	; 32
    3f62:	f8 4f       	sbci	r31, 0xF8	; 248
    3f64:	c4 91       	lpm	r28, Z
    3f66:	cc 23       	and	r28, r28
    3f68:	c1 f0       	breq	.+48     	; 0x3f9a <digitalWrite+0x56>
    3f6a:	16 2f       	mov	r17, r22
    3f6c:	81 11       	cpse	r24, r1
    3f6e:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <turnOffPWM>
    3f72:	ec 2f       	mov	r30, r28
    3f74:	f0 e0       	ldi	r31, 0x00	; 0
    3f76:	ee 0f       	add	r30, r30
    3f78:	ff 1f       	adc	r31, r31
    3f7a:	e2 50       	subi	r30, 0x02	; 2
    3f7c:	f8 4f       	sbci	r31, 0xF8	; 248
    3f7e:	a5 91       	lpm	r26, Z+
    3f80:	b4 91       	lpm	r27, Z
    3f82:	9f b7       	in	r25, 0x3f	; 63
    3f84:	f8 94       	cli
    3f86:	11 11       	cpse	r17, r1
    3f88:	04 c0       	rjmp	.+8      	; 0x3f92 <digitalWrite+0x4e>
    3f8a:	8c 91       	ld	r24, X
    3f8c:	d0 95       	com	r29
    3f8e:	d8 23       	and	r29, r24
    3f90:	02 c0       	rjmp	.+4      	; 0x3f96 <digitalWrite+0x52>
    3f92:	ec 91       	ld	r30, X
    3f94:	de 2b       	or	r29, r30
    3f96:	dc 93       	st	X, r29
    3f98:	9f bf       	out	0x3f, r25	; 63
    3f9a:	df 91       	pop	r29
    3f9c:	cf 91       	pop	r28
    3f9e:	1f 91       	pop	r17
    3fa0:	08 95       	ret

00003fa2 <_ZN6StringD1Ev>:
    3fa2:	fc 01       	movw	r30, r24
    3fa4:	80 81       	ld	r24, Z
    3fa6:	91 81       	ldd	r25, Z+1	; 0x01
    3fa8:	0c 94 47 24 	jmp	0x488e	; 0x488e <free>

00003fac <_ZN6String10invalidateEv>:
    3fac:	cf 93       	push	r28
    3fae:	df 93       	push	r29
    3fb0:	ec 01       	movw	r28, r24
    3fb2:	88 81       	ld	r24, Y
    3fb4:	99 81       	ldd	r25, Y+1	; 0x01
    3fb6:	00 97       	sbiw	r24, 0x00	; 0
    3fb8:	11 f0       	breq	.+4      	; 0x3fbe <_ZN6String10invalidateEv+0x12>
    3fba:	0e 94 47 24 	call	0x488e	; 0x488e <free>
    3fbe:	19 82       	std	Y+1, r1	; 0x01
    3fc0:	18 82       	st	Y, r1
    3fc2:	1d 82       	std	Y+5, r1	; 0x05
    3fc4:	1c 82       	std	Y+4, r1	; 0x04
    3fc6:	1b 82       	std	Y+3, r1	; 0x03
    3fc8:	1a 82       	std	Y+2, r1	; 0x02
    3fca:	df 91       	pop	r29
    3fcc:	cf 91       	pop	r28
    3fce:	08 95       	ret

00003fd0 <_ZN6String12changeBufferEj>:
    3fd0:	0f 93       	push	r16
    3fd2:	1f 93       	push	r17
    3fd4:	cf 93       	push	r28
    3fd6:	df 93       	push	r29
    3fd8:	ec 01       	movw	r28, r24
    3fda:	8b 01       	movw	r16, r22
    3fdc:	6f 5f       	subi	r22, 0xFF	; 255
    3fde:	7f 4f       	sbci	r23, 0xFF	; 255
    3fe0:	88 81       	ld	r24, Y
    3fe2:	99 81       	ldd	r25, Y+1	; 0x01
    3fe4:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <realloc>
    3fe8:	00 97       	sbiw	r24, 0x00	; 0
    3fea:	31 f0       	breq	.+12     	; 0x3ff8 <_ZN6String12changeBufferEj+0x28>
    3fec:	99 83       	std	Y+1, r25	; 0x01
    3fee:	88 83       	st	Y, r24
    3ff0:	1b 83       	std	Y+3, r17	; 0x03
    3ff2:	0a 83       	std	Y+2, r16	; 0x02
    3ff4:	81 e0       	ldi	r24, 0x01	; 1
    3ff6:	01 c0       	rjmp	.+2      	; 0x3ffa <_ZN6String12changeBufferEj+0x2a>
    3ff8:	80 e0       	ldi	r24, 0x00	; 0
    3ffa:	df 91       	pop	r29
    3ffc:	cf 91       	pop	r28
    3ffe:	1f 91       	pop	r17
    4000:	0f 91       	pop	r16
    4002:	08 95       	ret

00004004 <_ZN6String7reserveEj>:
    4004:	cf 93       	push	r28
    4006:	df 93       	push	r29
    4008:	ec 01       	movw	r28, r24
    400a:	88 81       	ld	r24, Y
    400c:	99 81       	ldd	r25, Y+1	; 0x01
    400e:	89 2b       	or	r24, r25
    4010:	29 f0       	breq	.+10     	; 0x401c <_ZN6String7reserveEj+0x18>
    4012:	8a 81       	ldd	r24, Y+2	; 0x02
    4014:	9b 81       	ldd	r25, Y+3	; 0x03
    4016:	86 17       	cp	r24, r22
    4018:	97 07       	cpc	r25, r23
    401a:	60 f4       	brcc	.+24     	; 0x4034 <_ZN6String7reserveEj+0x30>
    401c:	ce 01       	movw	r24, r28
    401e:	0e 94 e8 1f 	call	0x3fd0	; 0x3fd0 <_ZN6String12changeBufferEj>
    4022:	88 23       	and	r24, r24
    4024:	41 f0       	breq	.+16     	; 0x4036 <_ZN6String7reserveEj+0x32>
    4026:	8c 81       	ldd	r24, Y+4	; 0x04
    4028:	9d 81       	ldd	r25, Y+5	; 0x05
    402a:	89 2b       	or	r24, r25
    402c:	19 f4       	brne	.+6      	; 0x4034 <_ZN6String7reserveEj+0x30>
    402e:	e8 81       	ld	r30, Y
    4030:	f9 81       	ldd	r31, Y+1	; 0x01
    4032:	10 82       	st	Z, r1
    4034:	81 e0       	ldi	r24, 0x01	; 1
    4036:	df 91       	pop	r29
    4038:	cf 91       	pop	r28
    403a:	08 95       	ret

0000403c <_ZN6String4copyEPKcj>:
    403c:	ef 92       	push	r14
    403e:	ff 92       	push	r15
    4040:	0f 93       	push	r16
    4042:	1f 93       	push	r17
    4044:	cf 93       	push	r28
    4046:	df 93       	push	r29
    4048:	ec 01       	movw	r28, r24
    404a:	7b 01       	movw	r14, r22
    404c:	8a 01       	movw	r16, r20
    404e:	ba 01       	movw	r22, r20
    4050:	0e 94 02 20 	call	0x4004	; 0x4004 <_ZN6String7reserveEj>
    4054:	81 11       	cpse	r24, r1
    4056:	04 c0       	rjmp	.+8      	; 0x4060 <_ZN6String4copyEPKcj+0x24>
    4058:	ce 01       	movw	r24, r28
    405a:	0e 94 d6 1f 	call	0x3fac	; 0x3fac <_ZN6String10invalidateEv>
    405e:	07 c0       	rjmp	.+14     	; 0x406e <_ZN6String4copyEPKcj+0x32>
    4060:	1d 83       	std	Y+5, r17	; 0x05
    4062:	0c 83       	std	Y+4, r16	; 0x04
    4064:	b7 01       	movw	r22, r14
    4066:	88 81       	ld	r24, Y
    4068:	99 81       	ldd	r25, Y+1	; 0x01
    406a:	0e 94 f4 25 	call	0x4be8	; 0x4be8 <strcpy>
    406e:	ce 01       	movw	r24, r28
    4070:	df 91       	pop	r29
    4072:	cf 91       	pop	r28
    4074:	1f 91       	pop	r17
    4076:	0f 91       	pop	r16
    4078:	ff 90       	pop	r15
    407a:	ef 90       	pop	r14
    407c:	08 95       	ret

0000407e <_ZN6StringC1EPKc>:
    407e:	fc 01       	movw	r30, r24
    4080:	11 82       	std	Z+1, r1	; 0x01
    4082:	10 82       	st	Z, r1
    4084:	13 82       	std	Z+3, r1	; 0x03
    4086:	12 82       	std	Z+2, r1	; 0x02
    4088:	15 82       	std	Z+5, r1	; 0x05
    408a:	14 82       	std	Z+4, r1	; 0x04
    408c:	61 15       	cp	r22, r1
    408e:	71 05       	cpc	r23, r1
    4090:	51 f0       	breq	.+20     	; 0x40a6 <_ZN6StringC1EPKc+0x28>
    4092:	fb 01       	movw	r30, r22
    4094:	01 90       	ld	r0, Z+
    4096:	00 20       	and	r0, r0
    4098:	e9 f7       	brne	.-6      	; 0x4094 <_ZN6StringC1EPKc+0x16>
    409a:	31 97       	sbiw	r30, 0x01	; 1
    409c:	af 01       	movw	r20, r30
    409e:	46 1b       	sub	r20, r22
    40a0:	57 0b       	sbc	r21, r23
    40a2:	0c 94 1e 20 	jmp	0x403c	; 0x403c <_ZN6String4copyEPKcj>
    40a6:	08 95       	ret

000040a8 <_ZN6StringaSERKS_>:
    40a8:	cf 93       	push	r28
    40aa:	df 93       	push	r29
    40ac:	ec 01       	movw	r28, r24
    40ae:	fb 01       	movw	r30, r22
    40b0:	86 17       	cp	r24, r22
    40b2:	97 07       	cpc	r25, r23
    40b4:	61 f0       	breq	.+24     	; 0x40ce <_ZN6StringaSERKS_+0x26>
    40b6:	60 81       	ld	r22, Z
    40b8:	71 81       	ldd	r23, Z+1	; 0x01
    40ba:	61 15       	cp	r22, r1
    40bc:	71 05       	cpc	r23, r1
    40be:	29 f0       	breq	.+10     	; 0x40ca <_ZN6StringaSERKS_+0x22>
    40c0:	44 81       	ldd	r20, Z+4	; 0x04
    40c2:	55 81       	ldd	r21, Z+5	; 0x05
    40c4:	0e 94 1e 20 	call	0x403c	; 0x403c <_ZN6String4copyEPKcj>
    40c8:	02 c0       	rjmp	.+4      	; 0x40ce <_ZN6StringaSERKS_+0x26>
    40ca:	0e 94 d6 1f 	call	0x3fac	; 0x3fac <_ZN6String10invalidateEv>
    40ce:	ce 01       	movw	r24, r28
    40d0:	df 91       	pop	r29
    40d2:	cf 91       	pop	r28
    40d4:	08 95       	ret

000040d6 <_ZN6StringC1ERKS_>:
    40d6:	fc 01       	movw	r30, r24
    40d8:	11 82       	std	Z+1, r1	; 0x01
    40da:	10 82       	st	Z, r1
    40dc:	13 82       	std	Z+3, r1	; 0x03
    40de:	12 82       	std	Z+2, r1	; 0x02
    40e0:	15 82       	std	Z+5, r1	; 0x05
    40e2:	14 82       	std	Z+4, r1	; 0x04
    40e4:	0c 94 54 20 	jmp	0x40a8	; 0x40a8 <_ZN6StringaSERKS_>

000040e8 <_ZN6String6concatEPKcj>:
    40e8:	ef 92       	push	r14
    40ea:	ff 92       	push	r15
    40ec:	0f 93       	push	r16
    40ee:	1f 93       	push	r17
    40f0:	cf 93       	push	r28
    40f2:	df 93       	push	r29
    40f4:	61 15       	cp	r22, r1
    40f6:	71 05       	cpc	r23, r1
    40f8:	11 f4       	brne	.+4      	; 0x40fe <_ZN6String6concatEPKcj+0x16>
    40fa:	80 e0       	ldi	r24, 0x00	; 0
    40fc:	1c c0       	rjmp	.+56     	; 0x4136 <_ZN6String6concatEPKcj+0x4e>
    40fe:	41 15       	cp	r20, r1
    4100:	51 05       	cpc	r21, r1
    4102:	c1 f0       	breq	.+48     	; 0x4134 <_ZN6String6concatEPKcj+0x4c>
    4104:	7b 01       	movw	r14, r22
    4106:	ec 01       	movw	r28, r24
    4108:	8c 81       	ldd	r24, Y+4	; 0x04
    410a:	9d 81       	ldd	r25, Y+5	; 0x05
    410c:	8a 01       	movw	r16, r20
    410e:	08 0f       	add	r16, r24
    4110:	19 1f       	adc	r17, r25
    4112:	b8 01       	movw	r22, r16
    4114:	ce 01       	movw	r24, r28
    4116:	0e 94 02 20 	call	0x4004	; 0x4004 <_ZN6String7reserveEj>
    411a:	88 23       	and	r24, r24
    411c:	71 f3       	breq	.-36     	; 0x40fa <_ZN6String6concatEPKcj+0x12>
    411e:	28 81       	ld	r18, Y
    4120:	39 81       	ldd	r19, Y+1	; 0x01
    4122:	8c 81       	ldd	r24, Y+4	; 0x04
    4124:	9d 81       	ldd	r25, Y+5	; 0x05
    4126:	b7 01       	movw	r22, r14
    4128:	82 0f       	add	r24, r18
    412a:	93 1f       	adc	r25, r19
    412c:	0e 94 f4 25 	call	0x4be8	; 0x4be8 <strcpy>
    4130:	1d 83       	std	Y+5, r17	; 0x05
    4132:	0c 83       	std	Y+4, r16	; 0x04
    4134:	81 e0       	ldi	r24, 0x01	; 1
    4136:	df 91       	pop	r29
    4138:	cf 91       	pop	r28
    413a:	1f 91       	pop	r17
    413c:	0f 91       	pop	r16
    413e:	ff 90       	pop	r15
    4140:	ef 90       	pop	r14
    4142:	08 95       	ret

00004144 <_ZN6String6concatEh>:
    4144:	ef 92       	push	r14
    4146:	ff 92       	push	r15
    4148:	0f 93       	push	r16
    414a:	1f 93       	push	r17
    414c:	cf 93       	push	r28
    414e:	df 93       	push	r29
    4150:	00 d0       	rcall	.+0      	; 0x4152 <_ZN6String6concatEh+0xe>
    4152:	00 d0       	rcall	.+0      	; 0x4154 <_ZN6String6concatEh+0x10>
    4154:	cd b7       	in	r28, 0x3d	; 61
    4156:	de b7       	in	r29, 0x3e	; 62
    4158:	7c 01       	movw	r14, r24
    415a:	86 2f       	mov	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    415c:	4a e0       	ldi	r20, 0x0A	; 10
    415e:	8e 01       	movw	r16, r28
    4160:	0f 5f       	subi	r16, 0xFF	; 255
    4162:	1f 4f       	sbci	r17, 0xFF	; 255
    4164:	b8 01       	movw	r22, r16
    4166:	90 e0       	ldi	r25, 0x00	; 0
    4168:	0e 94 fb 25 	call	0x4bf6	; 0x4bf6 <__itoa_ncheck>
    416c:	f8 01       	movw	r30, r16
    416e:	01 90       	ld	r0, Z+
    4170:	00 20       	and	r0, r0
    4172:	e9 f7       	brne	.-6      	; 0x416e <_ZN6String6concatEh+0x2a>
    4174:	31 97       	sbiw	r30, 0x01	; 1
    4176:	af 01       	movw	r20, r30
    4178:	40 1b       	sub	r20, r16
    417a:	51 0b       	sbc	r21, r17
    417c:	b8 01       	movw	r22, r16
    417e:	c7 01       	movw	r24, r14
    4180:	0e 94 74 20 	call	0x40e8	; 0x40e8 <_ZN6String6concatEPKcj>
    4184:	0f 90       	pop	r0
    4186:	0f 90       	pop	r0
    4188:	0f 90       	pop	r0
    418a:	0f 90       	pop	r0
    418c:	df 91       	pop	r29
    418e:	cf 91       	pop	r28
    4190:	1f 91       	pop	r17
    4192:	0f 91       	pop	r16
    4194:	ff 90       	pop	r15
    4196:	ef 90       	pop	r14
    4198:	08 95       	ret

0000419a <_ZN14SoftwareSerial4readEv>:
    419a:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    419e:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    41a2:	28 17       	cp	r18, r24
    41a4:	39 07       	cpc	r19, r25
    41a6:	b9 f4       	brne	.+46     	; 0x41d6 <_ZN14SoftwareSerial4readEv+0x3c>
    41a8:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    41ac:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    41b0:	98 17       	cp	r25, r24
    41b2:	89 f0       	breq	.+34     	; 0x41d6 <_ZN14SoftwareSerial4readEv+0x3c>
    41b4:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    41b8:	f0 e0       	ldi	r31, 0x00	; 0
    41ba:	ea 5b       	subi	r30, 0xBA	; 186
    41bc:	fb 4f       	sbci	r31, 0xFB	; 251
    41be:	80 81       	ld	r24, Z
    41c0:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    41c4:	30 e0       	ldi	r19, 0x00	; 0
    41c6:	2f 5f       	subi	r18, 0xFF	; 255
    41c8:	3f 4f       	sbci	r19, 0xFF	; 255
    41ca:	2f 73       	andi	r18, 0x3F	; 63
    41cc:	33 27       	eor	r19, r19
    41ce:	20 93 44 04 	sts	0x0444, r18	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    41d2:	90 e0       	ldi	r25, 0x00	; 0
    41d4:	08 95       	ret
    41d6:	8f ef       	ldi	r24, 0xFF	; 255
    41d8:	9f ef       	ldi	r25, 0xFF	; 255
    41da:	08 95       	ret

000041dc <_ZN14SoftwareSerial5writeEh>:
    41dc:	1f 93       	push	r17
    41de:	cf 93       	push	r28
    41e0:	df 93       	push	r29
    41e2:	dc 01       	movw	r26, r24
    41e4:	5c 96       	adiw	r26, 0x1c	; 28
    41e6:	8d 91       	ld	r24, X+
    41e8:	9c 91       	ld	r25, X
    41ea:	5d 97       	sbiw	r26, 0x1d	; 29
    41ec:	00 97       	sbiw	r24, 0x00	; 0
    41ee:	39 f4       	brne	.+14     	; 0x41fe <_ZN14SoftwareSerial5writeEh+0x22>
    41f0:	21 e0       	ldi	r18, 0x01	; 1
    41f2:	30 e0       	ldi	r19, 0x00	; 0
    41f4:	13 96       	adiw	r26, 0x03	; 3
    41f6:	3c 93       	st	X, r19
    41f8:	2e 93       	st	-X, r18
    41fa:	12 97       	sbiw	r26, 0x02	; 2
    41fc:	3b c0       	rjmp	.+118    	; 0x4274 <_ZN14SoftwareSerial5writeEh+0x98>
    41fe:	51 96       	adiw	r26, 0x11	; 17
    4200:	ed 91       	ld	r30, X+
    4202:	fc 91       	ld	r31, X
    4204:	52 97       	sbiw	r26, 0x12	; 18
    4206:	50 96       	adiw	r26, 0x10	; 16
    4208:	2c 91       	ld	r18, X
    420a:	50 97       	sbiw	r26, 0x10	; 16
    420c:	32 2f       	mov	r19, r18
    420e:	30 95       	com	r19
    4210:	1f b7       	in	r17, 0x3f	; 63
    4212:	5e 96       	adiw	r26, 0x1e	; 30
    4214:	4c 91       	ld	r20, X
    4216:	5e 97       	sbiw	r26, 0x1e	; 30
    4218:	74 2f       	mov	r23, r20
    421a:	72 70       	andi	r23, 0x02	; 2
    421c:	41 fd       	sbrc	r20, 1
    421e:	60 95       	com	r22
    4220:	f8 94       	cli
    4222:	40 81       	ld	r20, Z
    4224:	77 23       	and	r23, r23
    4226:	11 f0       	breq	.+4      	; 0x422c <_ZN14SoftwareSerial5writeEh+0x50>
    4228:	42 2b       	or	r20, r18
    422a:	01 c0       	rjmp	.+2      	; 0x422e <_ZN14SoftwareSerial5writeEh+0x52>
    422c:	43 23       	and	r20, r19
    422e:	40 83       	st	Z, r20
    4230:	ec 01       	movw	r28, r24
    4232:	21 97       	sbiw	r28, 0x01	; 1
    4234:	f1 f7       	brne	.-4      	; 0x4232 <_ZN14SoftwareSerial5writeEh+0x56>
    4236:	48 e0       	ldi	r20, 0x08	; 8
    4238:	50 81       	ld	r21, Z
    423a:	60 ff       	sbrs	r22, 0
    423c:	02 c0       	rjmp	.+4      	; 0x4242 <_ZN14SoftwareSerial5writeEh+0x66>
    423e:	52 2b       	or	r21, r18
    4240:	01 c0       	rjmp	.+2      	; 0x4244 <_ZN14SoftwareSerial5writeEh+0x68>
    4242:	53 23       	and	r21, r19
    4244:	50 83       	st	Z, r21
    4246:	ec 01       	movw	r28, r24
    4248:	21 97       	sbiw	r28, 0x01	; 1
    424a:	f1 f7       	brne	.-4      	; 0x4248 <_ZN14SoftwareSerial5writeEh+0x6c>
    424c:	66 95       	lsr	r22
    424e:	41 50       	subi	r20, 0x01	; 1
    4250:	99 f7       	brne	.-26     	; 0x4238 <_ZN14SoftwareSerial5writeEh+0x5c>
    4252:	80 81       	ld	r24, Z
    4254:	77 23       	and	r23, r23
    4256:	19 f0       	breq	.+6      	; 0x425e <_ZN14SoftwareSerial5writeEh+0x82>
    4258:	83 23       	and	r24, r19
    425a:	80 83       	st	Z, r24
    425c:	02 c0       	rjmp	.+4      	; 0x4262 <_ZN14SoftwareSerial5writeEh+0x86>
    425e:	28 2b       	or	r18, r24
    4260:	20 83       	st	Z, r18
    4262:	1f bf       	out	0x3f, r17	; 63
    4264:	5c 96       	adiw	r26, 0x1c	; 28
    4266:	8d 91       	ld	r24, X+
    4268:	9c 91       	ld	r25, X
    426a:	5d 97       	sbiw	r26, 0x1d	; 29
    426c:	01 97       	sbiw	r24, 0x01	; 1
    426e:	f1 f7       	brne	.-4      	; 0x426c <_ZN14SoftwareSerial5writeEh+0x90>
    4270:	81 e0       	ldi	r24, 0x01	; 1
    4272:	90 e0       	ldi	r25, 0x00	; 0
    4274:	df 91       	pop	r29
    4276:	cf 91       	pop	r28
    4278:	1f 91       	pop	r17
    427a:	08 95       	ret

0000427c <_ZN14SoftwareSerial5flushEv>:
    427c:	08 95       	ret

0000427e <_ZN14SoftwareSerial4peekEv>:
    427e:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4282:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4286:	28 17       	cp	r18, r24
    4288:	39 07       	cpc	r19, r25
    428a:	71 f4       	brne	.+28     	; 0x42a8 <_ZN14SoftwareSerial4peekEv+0x2a>
    428c:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4290:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4294:	98 17       	cp	r25, r24
    4296:	41 f0       	breq	.+16     	; 0x42a8 <_ZN14SoftwareSerial4peekEv+0x2a>
    4298:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    429c:	f0 e0       	ldi	r31, 0x00	; 0
    429e:	ea 5b       	subi	r30, 0xBA	; 186
    42a0:	fb 4f       	sbci	r31, 0xFB	; 251
    42a2:	80 81       	ld	r24, Z
    42a4:	90 e0       	ldi	r25, 0x00	; 0
    42a6:	08 95       	ret
    42a8:	8f ef       	ldi	r24, 0xFF	; 255
    42aa:	9f ef       	ldi	r25, 0xFF	; 255
    42ac:	08 95       	ret

000042ae <_ZN14SoftwareSerial9availableEv>:
    42ae:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42b2:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42b6:	28 17       	cp	r18, r24
    42b8:	39 07       	cpc	r19, r25
    42ba:	71 f4       	brne	.+28     	; 0x42d8 <_ZN14SoftwareSerial9availableEv+0x2a>
    42bc:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    42c0:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    42c4:	90 e0       	ldi	r25, 0x00	; 0
    42c6:	80 5c       	subi	r24, 0xC0	; 192
    42c8:	9f 4f       	sbci	r25, 0xFF	; 255
    42ca:	82 1b       	sub	r24, r18
    42cc:	91 09       	sbc	r25, r1
    42ce:	60 e4       	ldi	r22, 0x40	; 64
    42d0:	70 e0       	ldi	r23, 0x00	; 0
    42d2:	0e 94 54 23 	call	0x46a8	; 0x46a8 <__divmodhi4>
    42d6:	08 95       	ret
    42d8:	80 e0       	ldi	r24, 0x00	; 0
    42da:	90 e0       	ldi	r25, 0x00	; 0
    42dc:	08 95       	ret

000042de <_ZN14SoftwareSerial13stopListeningEv>:
    42de:	e0 91 86 04 	lds	r30, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42e2:	f0 91 87 04 	lds	r31, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42e6:	e8 17       	cp	r30, r24
    42e8:	f9 07       	cpc	r31, r25
    42ea:	69 f4       	brne	.+26     	; 0x4306 <_ZN14SoftwareSerial13stopListeningEv+0x28>
    42ec:	a3 89       	ldd	r26, Z+19	; 0x13
    42ee:	b4 89       	ldd	r27, Z+20	; 0x14
    42f0:	9c 91       	ld	r25, X
    42f2:	85 89       	ldd	r24, Z+21	; 0x15
    42f4:	80 95       	com	r24
    42f6:	89 23       	and	r24, r25
    42f8:	8c 93       	st	X, r24
    42fa:	10 92 87 04 	sts	0x0487, r1	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42fe:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4302:	81 e0       	ldi	r24, 0x01	; 1
    4304:	08 95       	ret
    4306:	80 e0       	ldi	r24, 0x00	; 0
    4308:	08 95       	ret

0000430a <_ZN14SoftwareSerial6listenEv>:
    430a:	cf 93       	push	r28
    430c:	df 93       	push	r29
    430e:	ec 01       	movw	r28, r24
    4310:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4312:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4314:	89 2b       	or	r24, r25
    4316:	f1 f0       	breq	.+60     	; 0x4354 <_ZN14SoftwareSerial6listenEv+0x4a>
    4318:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    431c:	90 91 87 04 	lds	r25, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4320:	c8 17       	cp	r28, r24
    4322:	d9 07       	cpc	r29, r25
    4324:	b9 f0       	breq	.+46     	; 0x4354 <_ZN14SoftwareSerial6listenEv+0x4a>
    4326:	00 97       	sbiw	r24, 0x00	; 0
    4328:	11 f0       	breq	.+4      	; 0x432e <_ZN14SoftwareSerial6listenEv+0x24>
    432a:	0e 94 6f 21 	call	0x42de	; 0x42de <_ZN14SoftwareSerial13stopListeningEv>
    432e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4330:	8e 7f       	andi	r24, 0xFE	; 254
    4332:	8e 8f       	std	Y+30, r24	; 0x1e
    4334:	10 92 45 04 	sts	0x0445, r1	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4338:	10 92 44 04 	sts	0x0444, r1	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    433c:	d0 93 87 04 	sts	0x0487, r29	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4340:	c0 93 86 04 	sts	0x0486, r28	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4344:	eb 89       	ldd	r30, Y+19	; 0x13
    4346:	fc 89       	ldd	r31, Y+20	; 0x14
    4348:	90 81       	ld	r25, Z
    434a:	8d 89       	ldd	r24, Y+21	; 0x15
    434c:	89 2b       	or	r24, r25
    434e:	80 83       	st	Z, r24
    4350:	81 e0       	ldi	r24, 0x01	; 1
    4352:	01 c0       	rjmp	.+2      	; 0x4356 <_ZN14SoftwareSerial6listenEv+0x4c>
    4354:	80 e0       	ldi	r24, 0x00	; 0
    4356:	df 91       	pop	r29
    4358:	cf 91       	pop	r28
    435a:	08 95       	ret

0000435c <__vector_3>:
    435c:	1f 92       	push	r1
    435e:	0f 92       	push	r0
    4360:	0f b6       	in	r0, 0x3f	; 63
    4362:	0f 92       	push	r0
    4364:	11 24       	eor	r1, r1
    4366:	2f 93       	push	r18
    4368:	3f 93       	push	r19
    436a:	4f 93       	push	r20
    436c:	5f 93       	push	r21
    436e:	6f 93       	push	r22
    4370:	7f 93       	push	r23
    4372:	8f 93       	push	r24
    4374:	9f 93       	push	r25
    4376:	af 93       	push	r26
    4378:	bf 93       	push	r27
    437a:	ef 93       	push	r30
    437c:	ff 93       	push	r31
    437e:	e0 91 86 04 	lds	r30, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4382:	f0 91 87 04 	lds	r31, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4386:	30 97       	sbiw	r30, 0x00	; 0
    4388:	09 f4       	brne	.+2      	; 0x438c <__vector_3+0x30>
    438a:	51 c0       	rjmp	.+162    	; 0x442e <__vector_3+0xd2>
    438c:	96 8d       	ldd	r25, Z+30	; 0x1e
    438e:	a6 85       	ldd	r26, Z+14	; 0x0e
    4390:	b7 85       	ldd	r27, Z+15	; 0x0f
    4392:	85 85       	ldd	r24, Z+13	; 0x0d
    4394:	91 ff       	sbrs	r25, 1
    4396:	04 c0       	rjmp	.+8      	; 0x43a0 <__vector_3+0x44>
    4398:	9c 91       	ld	r25, X
    439a:	89 23       	and	r24, r25
    439c:	29 f4       	brne	.+10     	; 0x43a8 <__vector_3+0x4c>
    439e:	47 c0       	rjmp	.+142    	; 0x442e <__vector_3+0xd2>
    43a0:	9c 91       	ld	r25, X
    43a2:	89 23       	and	r24, r25
    43a4:	09 f0       	breq	.+2      	; 0x43a8 <__vector_3+0x4c>
    43a6:	43 c0       	rjmp	.+134    	; 0x442e <__vector_3+0xd2>
    43a8:	a3 89       	ldd	r26, Z+19	; 0x13
    43aa:	b4 89       	ldd	r27, Z+20	; 0x14
    43ac:	9c 91       	ld	r25, X
    43ae:	85 89       	ldd	r24, Z+21	; 0x15
    43b0:	80 95       	com	r24
    43b2:	89 23       	and	r24, r25
    43b4:	8c 93       	st	X, r24
    43b6:	86 89       	ldd	r24, Z+22	; 0x16
    43b8:	97 89       	ldd	r25, Z+23	; 0x17
    43ba:	01 97       	sbiw	r24, 0x01	; 1
    43bc:	f1 f7       	brne	.-4      	; 0x43ba <__vector_3+0x5e>
    43be:	60 8d       	ldd	r22, Z+24	; 0x18
    43c0:	71 8d       	ldd	r23, Z+25	; 0x19
    43c2:	a6 85       	ldd	r26, Z+14	; 0x0e
    43c4:	b7 85       	ldd	r27, Z+15	; 0x0f
    43c6:	55 85       	ldd	r21, Z+13	; 0x0d
    43c8:	38 e0       	ldi	r19, 0x08	; 8
    43ca:	20 e0       	ldi	r18, 0x00	; 0
    43cc:	cb 01       	movw	r24, r22
    43ce:	01 97       	sbiw	r24, 0x01	; 1
    43d0:	f1 f7       	brne	.-4      	; 0x43ce <__vector_3+0x72>
    43d2:	82 2f       	mov	r24, r18
    43d4:	90 e0       	ldi	r25, 0x00	; 0
    43d6:	95 95       	asr	r25
    43d8:	87 95       	ror	r24
    43da:	28 2f       	mov	r18, r24
    43dc:	4c 91       	ld	r20, X
    43de:	45 23       	and	r20, r21
    43e0:	09 f0       	breq	.+2      	; 0x43e4 <__vector_3+0x88>
    43e2:	20 68       	ori	r18, 0x80	; 128
    43e4:	31 50       	subi	r19, 0x01	; 1
    43e6:	91 f7       	brne	.-28     	; 0x43cc <__vector_3+0x70>
    43e8:	86 8d       	ldd	r24, Z+30	; 0x1e
    43ea:	81 fd       	sbrc	r24, 1
    43ec:	20 95       	com	r18
    43ee:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    43f2:	90 e0       	ldi	r25, 0x00	; 0
    43f4:	01 96       	adiw	r24, 0x01	; 1
    43f6:	8f 73       	andi	r24, 0x3F	; 63
    43f8:	99 27       	eor	r25, r25
    43fa:	30 91 44 04 	lds	r19, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    43fe:	38 17       	cp	r19, r24
    4400:	49 f0       	breq	.+18     	; 0x4414 <__vector_3+0xb8>
    4402:	a0 91 45 04 	lds	r26, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4406:	b0 e0       	ldi	r27, 0x00	; 0
    4408:	aa 5b       	subi	r26, 0xBA	; 186
    440a:	bb 4f       	sbci	r27, 0xFB	; 251
    440c:	2c 93       	st	X, r18
    440e:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4412:	03 c0       	rjmp	.+6      	; 0x441a <__vector_3+0xbe>
    4414:	86 8d       	ldd	r24, Z+30	; 0x1e
    4416:	81 60       	ori	r24, 0x01	; 1
    4418:	86 8f       	std	Z+30, r24	; 0x1e
    441a:	82 8d       	ldd	r24, Z+26	; 0x1a
    441c:	93 8d       	ldd	r25, Z+27	; 0x1b
    441e:	01 97       	sbiw	r24, 0x01	; 1
    4420:	f1 f7       	brne	.-4      	; 0x441e <__vector_3+0xc2>
    4422:	a3 89       	ldd	r26, Z+19	; 0x13
    4424:	b4 89       	ldd	r27, Z+20	; 0x14
    4426:	9c 91       	ld	r25, X
    4428:	85 89       	ldd	r24, Z+21	; 0x15
    442a:	89 2b       	or	r24, r25
    442c:	8c 93       	st	X, r24
    442e:	ff 91       	pop	r31
    4430:	ef 91       	pop	r30
    4432:	bf 91       	pop	r27
    4434:	af 91       	pop	r26
    4436:	9f 91       	pop	r25
    4438:	8f 91       	pop	r24
    443a:	7f 91       	pop	r23
    443c:	6f 91       	pop	r22
    443e:	5f 91       	pop	r21
    4440:	4f 91       	pop	r20
    4442:	3f 91       	pop	r19
    4444:	2f 91       	pop	r18
    4446:	0f 90       	pop	r0
    4448:	0f be       	out	0x3f, r0	; 63
    444a:	0f 90       	pop	r0
    444c:	1f 90       	pop	r1
    444e:	18 95       	reti

00004450 <_ZN14SoftwareSerial5setTXEh>:
    4450:	1f 93       	push	r17
    4452:	cf 93       	push	r28
    4454:	df 93       	push	r29
    4456:	ec 01       	movw	r28, r24
    4458:	16 2f       	mov	r17, r22
    445a:	6e 8d       	ldd	r22, Y+30	; 0x1e
    445c:	66 95       	lsr	r22
    445e:	61 70       	andi	r22, 0x01	; 1
    4460:	81 e0       	ldi	r24, 0x01	; 1
    4462:	68 27       	eor	r22, r24
    4464:	81 2f       	mov	r24, r17
    4466:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
    446a:	61 e0       	ldi	r22, 0x01	; 1
    446c:	81 2f       	mov	r24, r17
    446e:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <pinMode>
    4472:	81 2f       	mov	r24, r17
    4474:	90 e0       	ldi	r25, 0x00	; 0
    4476:	fc 01       	movw	r30, r24
    4478:	e4 53       	subi	r30, 0x34	; 52
    447a:	f8 4f       	sbci	r31, 0xF8	; 248
    447c:	e4 91       	lpm	r30, Z
    447e:	e8 8b       	std	Y+16, r30	; 0x10
    4480:	fc 01       	movw	r30, r24
    4482:	e0 52       	subi	r30, 0x20	; 32
    4484:	f8 4f       	sbci	r31, 0xF8	; 248
    4486:	e4 91       	lpm	r30, Z
    4488:	f0 e0       	ldi	r31, 0x00	; 0
    448a:	ee 0f       	add	r30, r30
    448c:	ff 1f       	adc	r31, r31
    448e:	e2 50       	subi	r30, 0x02	; 2
    4490:	f8 4f       	sbci	r31, 0xF8	; 248
    4492:	85 91       	lpm	r24, Z+
    4494:	94 91       	lpm	r25, Z
    4496:	9a 8b       	std	Y+18, r25	; 0x12
    4498:	89 8b       	std	Y+17, r24	; 0x11
    449a:	df 91       	pop	r29
    449c:	cf 91       	pop	r28
    449e:	1f 91       	pop	r17
    44a0:	08 95       	ret

000044a2 <_ZN14SoftwareSerial5setRXEh>:
    44a2:	1f 93       	push	r17
    44a4:	cf 93       	push	r28
    44a6:	df 93       	push	r29
    44a8:	ec 01       	movw	r28, r24
    44aa:	16 2f       	mov	r17, r22
    44ac:	60 e0       	ldi	r22, 0x00	; 0
    44ae:	81 2f       	mov	r24, r17
    44b0:	0e 94 66 1f 	call	0x3ecc	; 0x3ecc <pinMode>
    44b4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    44b6:	81 fd       	sbrc	r24, 1
    44b8:	04 c0       	rjmp	.+8      	; 0x44c2 <_ZN14SoftwareSerial5setRXEh+0x20>
    44ba:	61 e0       	ldi	r22, 0x01	; 1
    44bc:	81 2f       	mov	r24, r17
    44be:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <digitalWrite>
    44c2:	1c 87       	std	Y+12, r17	; 0x0c
    44c4:	81 2f       	mov	r24, r17
    44c6:	90 e0       	ldi	r25, 0x00	; 0
    44c8:	fc 01       	movw	r30, r24
    44ca:	e4 53       	subi	r30, 0x34	; 52
    44cc:	f8 4f       	sbci	r31, 0xF8	; 248
    44ce:	e4 91       	lpm	r30, Z
    44d0:	ed 87       	std	Y+13, r30	; 0x0d
    44d2:	fc 01       	movw	r30, r24
    44d4:	e0 52       	subi	r30, 0x20	; 32
    44d6:	f8 4f       	sbci	r31, 0xF8	; 248
    44d8:	e4 91       	lpm	r30, Z
    44da:	f0 e0       	ldi	r31, 0x00	; 0
    44dc:	ee 0f       	add	r30, r30
    44de:	ff 1f       	adc	r31, r31
    44e0:	ec 50       	subi	r30, 0x0C	; 12
    44e2:	f8 4f       	sbci	r31, 0xF8	; 248
    44e4:	85 91       	lpm	r24, Z+
    44e6:	94 91       	lpm	r25, Z
    44e8:	9f 87       	std	Y+15, r25	; 0x0f
    44ea:	8e 87       	std	Y+14, r24	; 0x0e
    44ec:	df 91       	pop	r29
    44ee:	cf 91       	pop	r28
    44f0:	1f 91       	pop	r17
    44f2:	08 95       	ret

000044f4 <_ZN14SoftwareSerialC1Ehhb>:
    44f4:	1f 93       	push	r17
    44f6:	cf 93       	push	r28
    44f8:	df 93       	push	r29
    44fa:	ec 01       	movw	r28, r24
    44fc:	16 2f       	mov	r17, r22
    44fe:	1b 82       	std	Y+3, r1	; 0x03
    4500:	1a 82       	std	Y+2, r1	; 0x02
    4502:	88 ee       	ldi	r24, 0xE8	; 232
    4504:	93 e0       	ldi	r25, 0x03	; 3
    4506:	a0 e0       	ldi	r26, 0x00	; 0
    4508:	b0 e0       	ldi	r27, 0x00	; 0
    450a:	8c 83       	std	Y+4, r24	; 0x04
    450c:	9d 83       	std	Y+5, r25	; 0x05
    450e:	ae 83       	std	Y+6, r26	; 0x06
    4510:	bf 83       	std	Y+7, r27	; 0x07
    4512:	8d e8       	ldi	r24, 0x8D	; 141
    4514:	91 e0       	ldi	r25, 0x01	; 1
    4516:	99 83       	std	Y+1, r25	; 0x01
    4518:	88 83       	st	Y, r24
    451a:	1f 8a       	std	Y+23, r1	; 0x17
    451c:	1e 8a       	std	Y+22, r1	; 0x16
    451e:	19 8e       	std	Y+25, r1	; 0x19
    4520:	18 8e       	std	Y+24, r1	; 0x18
    4522:	1b 8e       	std	Y+27, r1	; 0x1b
    4524:	1a 8e       	std	Y+26, r1	; 0x1a
    4526:	1d 8e       	std	Y+29, r1	; 0x1d
    4528:	1c 8e       	std	Y+28, r1	; 0x1c
    452a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    452c:	8e 7f       	andi	r24, 0xFE	; 254
    452e:	20 fb       	bst	r18, 0
    4530:	81 f9       	bld	r24, 1
    4532:	8e 8f       	std	Y+30, r24	; 0x1e
    4534:	64 2f       	mov	r22, r20
    4536:	ce 01       	movw	r24, r28
    4538:	0e 94 28 22 	call	0x4450	; 0x4450 <_ZN14SoftwareSerial5setTXEh>
    453c:	61 2f       	mov	r22, r17
    453e:	ce 01       	movw	r24, r28
    4540:	df 91       	pop	r29
    4542:	cf 91       	pop	r28
    4544:	1f 91       	pop	r17
    4546:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <_ZN14SoftwareSerial5setRXEh>

0000454a <_ZN14SoftwareSerial5beginEl>:
    454a:	cf 93       	push	r28
    454c:	df 93       	push	r29
    454e:	ec 01       	movw	r28, r24
    4550:	9a 01       	movw	r18, r20
    4552:	ab 01       	movw	r20, r22
    4554:	1b 8e       	std	Y+27, r1	; 0x1b
    4556:	1a 8e       	std	Y+26, r1	; 0x1a
    4558:	19 8e       	std	Y+25, r1	; 0x19
    455a:	18 8e       	std	Y+24, r1	; 0x18
    455c:	1f 8a       	std	Y+23, r1	; 0x17
    455e:	1e 8a       	std	Y+22, r1	; 0x16
    4560:	60 e0       	ldi	r22, 0x00	; 0
    4562:	79 e0       	ldi	r23, 0x09	; 9
    4564:	8d e3       	ldi	r24, 0x3D	; 61
    4566:	90 e0       	ldi	r25, 0x00	; 0
    4568:	0e 94 8a 23 	call	0x4714	; 0x4714 <__divmodsi4>
    456c:	f9 01       	movw	r30, r18
    456e:	24 30       	cpi	r18, 0x04	; 4
    4570:	31 05       	cpc	r19, r1
    4572:	18 f0       	brcs	.+6      	; 0x457a <_ZN14SoftwareSerial5beginEl+0x30>
    4574:	c9 01       	movw	r24, r18
    4576:	03 97       	sbiw	r24, 0x03	; 3
    4578:	02 c0       	rjmp	.+4      	; 0x457e <_ZN14SoftwareSerial5beginEl+0x34>
    457a:	81 e0       	ldi	r24, 0x01	; 1
    457c:	90 e0       	ldi	r25, 0x00	; 0
    457e:	9d 8f       	std	Y+29, r25	; 0x1d
    4580:	8c 8f       	std	Y+28, r24	; 0x1c
    4582:	6c 85       	ldd	r22, Y+12	; 0x0c
    4584:	66 31       	cpi	r22, 0x16	; 22
    4586:	08 f0       	brcs	.+2      	; 0x458a <_ZN14SoftwareSerial5beginEl+0x40>
    4588:	69 c0       	rjmp	.+210    	; 0x465c <_ZN14SoftwareSerial5beginEl+0x112>
    458a:	c9 01       	movw	r24, r18
    458c:	96 95       	lsr	r25
    458e:	87 95       	ror	r24
    4590:	84 31       	cpi	r24, 0x14	; 20
    4592:	91 05       	cpc	r25, r1
    4594:	10 f0       	brcs	.+4      	; 0x459a <_ZN14SoftwareSerial5beginEl+0x50>
    4596:	43 97       	sbiw	r24, 0x13	; 19
    4598:	02 c0       	rjmp	.+4      	; 0x459e <_ZN14SoftwareSerial5beginEl+0x54>
    459a:	81 e0       	ldi	r24, 0x01	; 1
    459c:	90 e0       	ldi	r25, 0x00	; 0
    459e:	9f 8b       	std	Y+23, r25	; 0x17
    45a0:	8e 8b       	std	Y+22, r24	; 0x16
    45a2:	36 97       	sbiw	r30, 0x06	; 6
    45a4:	18 f0       	brcs	.+6      	; 0x45ac <_ZN14SoftwareSerial5beginEl+0x62>
    45a6:	c9 01       	movw	r24, r18
    45a8:	05 97       	sbiw	r24, 0x05	; 5
    45aa:	02 c0       	rjmp	.+4      	; 0x45b0 <_ZN14SoftwareSerial5beginEl+0x66>
    45ac:	81 e0       	ldi	r24, 0x01	; 1
    45ae:	90 e0       	ldi	r25, 0x00	; 0
    45b0:	99 8f       	std	Y+25, r25	; 0x19
    45b2:	88 8f       	std	Y+24, r24	; 0x18
    45b4:	c9 01       	movw	r24, r18
    45b6:	88 0f       	add	r24, r24
    45b8:	99 1f       	adc	r25, r25
    45ba:	28 0f       	add	r18, r24
    45bc:	39 1f       	adc	r19, r25
    45be:	36 95       	lsr	r19
    45c0:	27 95       	ror	r18
    45c2:	36 95       	lsr	r19
    45c4:	27 95       	ror	r18
    45c6:	2d 30       	cpi	r18, 0x0D	; 13
    45c8:	31 05       	cpc	r19, r1
    45ca:	18 f0       	brcs	.+6      	; 0x45d2 <_ZN14SoftwareSerial5beginEl+0x88>
    45cc:	2c 50       	subi	r18, 0x0C	; 12
    45ce:	31 09       	sbc	r19, r1
    45d0:	02 c0       	rjmp	.+4      	; 0x45d6 <_ZN14SoftwareSerial5beginEl+0x8c>
    45d2:	21 e0       	ldi	r18, 0x01	; 1
    45d4:	30 e0       	ldi	r19, 0x00	; 0
    45d6:	3b 8f       	std	Y+27, r19	; 0x1b
    45d8:	2a 8f       	std	Y+26, r18	; 0x1a
    45da:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    45de:	68 30       	cpi	r22, 0x08	; 8
    45e0:	50 f0       	brcs	.+20     	; 0x45f6 <_ZN14SoftwareSerial5beginEl+0xac>
    45e2:	21 e0       	ldi	r18, 0x01	; 1
    45e4:	6e 30       	cpi	r22, 0x0E	; 14
    45e6:	08 f4       	brcc	.+2      	; 0x45ea <_ZN14SoftwareSerial5beginEl+0xa0>
    45e8:	20 e0       	ldi	r18, 0x00	; 0
    45ea:	81 e0       	ldi	r24, 0x01	; 1
    45ec:	01 c0       	rjmp	.+2      	; 0x45f0 <_ZN14SoftwareSerial5beginEl+0xa6>
    45ee:	88 0f       	add	r24, r24
    45f0:	2a 95       	dec	r18
    45f2:	ea f7       	brpl	.-6      	; 0x45ee <_ZN14SoftwareSerial5beginEl+0xa4>
    45f4:	01 c0       	rjmp	.+2      	; 0x45f8 <_ZN14SoftwareSerial5beginEl+0xae>
    45f6:	84 e0       	ldi	r24, 0x04	; 4
    45f8:	89 2b       	or	r24, r25
    45fa:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    45fe:	9c 85       	ldd	r25, Y+12	; 0x0c
    4600:	98 30       	cpi	r25, 0x08	; 8
    4602:	38 f0       	brcs	.+14     	; 0x4612 <_ZN14SoftwareSerial5beginEl+0xc8>
    4604:	9e 30       	cpi	r25, 0x0E	; 14
    4606:	40 f0       	brcs	.+16     	; 0x4618 <_ZN14SoftwareSerial5beginEl+0xce>
    4608:	96 31       	cpi	r25, 0x16	; 22
    460a:	48 f0       	brcs	.+18     	; 0x461e <_ZN14SoftwareSerial5beginEl+0xd4>
    460c:	20 e0       	ldi	r18, 0x00	; 0
    460e:	30 e0       	ldi	r19, 0x00	; 0
    4610:	08 c0       	rjmp	.+16     	; 0x4622 <_ZN14SoftwareSerial5beginEl+0xd8>
    4612:	2d e6       	ldi	r18, 0x6D	; 109
    4614:	30 e0       	ldi	r19, 0x00	; 0
    4616:	05 c0       	rjmp	.+10     	; 0x4622 <_ZN14SoftwareSerial5beginEl+0xd8>
    4618:	2b e6       	ldi	r18, 0x6B	; 107
    461a:	30 e0       	ldi	r19, 0x00	; 0
    461c:	02 c0       	rjmp	.+4      	; 0x4622 <_ZN14SoftwareSerial5beginEl+0xd8>
    461e:	2c e6       	ldi	r18, 0x6C	; 108
    4620:	30 e0       	ldi	r19, 0x00	; 0
    4622:	3c 8b       	std	Y+20, r19	; 0x14
    4624:	2b 8b       	std	Y+19, r18	; 0x13
    4626:	98 30       	cpi	r25, 0x08	; 8
    4628:	30 f4       	brcc	.+12     	; 0x4636 <_ZN14SoftwareSerial5beginEl+0xec>
    462a:	81 e0       	ldi	r24, 0x01	; 1
    462c:	01 c0       	rjmp	.+2      	; 0x4630 <_ZN14SoftwareSerial5beginEl+0xe6>
    462e:	88 0f       	add	r24, r24
    4630:	9a 95       	dec	r25
    4632:	ea f7       	brpl	.-6      	; 0x462e <_ZN14SoftwareSerial5beginEl+0xe4>
    4634:	0e c0       	rjmp	.+28     	; 0x4652 <_ZN14SoftwareSerial5beginEl+0x108>
    4636:	29 2f       	mov	r18, r25
    4638:	30 e0       	ldi	r19, 0x00	; 0
    463a:	9e 30       	cpi	r25, 0x0E	; 14
    463c:	18 f4       	brcc	.+6      	; 0x4644 <_ZN14SoftwareSerial5beginEl+0xfa>
    463e:	28 50       	subi	r18, 0x08	; 8
    4640:	31 09       	sbc	r19, r1
    4642:	02 c0       	rjmp	.+4      	; 0x4648 <_ZN14SoftwareSerial5beginEl+0xfe>
    4644:	2e 50       	subi	r18, 0x0E	; 14
    4646:	31 09       	sbc	r19, r1
    4648:	81 e0       	ldi	r24, 0x01	; 1
    464a:	01 c0       	rjmp	.+2      	; 0x464e <_ZN14SoftwareSerial5beginEl+0x104>
    464c:	88 0f       	add	r24, r24
    464e:	2a 95       	dec	r18
    4650:	ea f7       	brpl	.-6      	; 0x464c <_ZN14SoftwareSerial5beginEl+0x102>
    4652:	8d 8b       	std	Y+21, r24	; 0x15
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    4654:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4656:	9d 8d       	ldd	r25, Y+29	; 0x1d
    4658:	01 97       	sbiw	r24, 0x01	; 1
    465a:	f1 f7       	brne	.-4      	; 0x4658 <_ZN14SoftwareSerial5beginEl+0x10e>
    465c:	ce 01       	movw	r24, r28
    465e:	df 91       	pop	r29
    4660:	cf 91       	pop	r28
    4662:	0c 94 85 21 	jmp	0x430a	; 0x430a <_ZN14SoftwareSerial6listenEv>

00004666 <yield>:
    4666:	08 95       	ret

00004668 <__udivmodqi4>:
    4668:	99 1b       	sub	r25, r25
    466a:	79 e0       	ldi	r23, 0x09	; 9
    466c:	04 c0       	rjmp	.+8      	; 0x4676 <__udivmodqi4_ep>

0000466e <__udivmodqi4_loop>:
    466e:	99 1f       	adc	r25, r25
    4670:	96 17       	cp	r25, r22
    4672:	08 f0       	brcs	.+2      	; 0x4676 <__udivmodqi4_ep>
    4674:	96 1b       	sub	r25, r22

00004676 <__udivmodqi4_ep>:
    4676:	88 1f       	adc	r24, r24
    4678:	7a 95       	dec	r23
    467a:	c9 f7       	brne	.-14     	; 0x466e <__udivmodqi4_loop>
    467c:	80 95       	com	r24
    467e:	08 95       	ret

00004680 <__udivmodhi4>:
    4680:	aa 1b       	sub	r26, r26
    4682:	bb 1b       	sub	r27, r27
    4684:	51 e1       	ldi	r21, 0x11	; 17
    4686:	07 c0       	rjmp	.+14     	; 0x4696 <__udivmodhi4_ep>

00004688 <__udivmodhi4_loop>:
    4688:	aa 1f       	adc	r26, r26
    468a:	bb 1f       	adc	r27, r27
    468c:	a6 17       	cp	r26, r22
    468e:	b7 07       	cpc	r27, r23
    4690:	10 f0       	brcs	.+4      	; 0x4696 <__udivmodhi4_ep>
    4692:	a6 1b       	sub	r26, r22
    4694:	b7 0b       	sbc	r27, r23

00004696 <__udivmodhi4_ep>:
    4696:	88 1f       	adc	r24, r24
    4698:	99 1f       	adc	r25, r25
    469a:	5a 95       	dec	r21
    469c:	a9 f7       	brne	.-22     	; 0x4688 <__udivmodhi4_loop>
    469e:	80 95       	com	r24
    46a0:	90 95       	com	r25
    46a2:	bc 01       	movw	r22, r24
    46a4:	cd 01       	movw	r24, r26
    46a6:	08 95       	ret

000046a8 <__divmodhi4>:
    46a8:	97 fb       	bst	r25, 7
    46aa:	07 2e       	mov	r0, r23
    46ac:	16 f4       	brtc	.+4      	; 0x46b2 <__divmodhi4+0xa>
    46ae:	00 94       	com	r0
    46b0:	07 d0       	rcall	.+14     	; 0x46c0 <__divmodhi4_neg1>
    46b2:	77 fd       	sbrc	r23, 7
    46b4:	09 d0       	rcall	.+18     	; 0x46c8 <__divmodhi4_neg2>
    46b6:	0e 94 40 23 	call	0x4680	; 0x4680 <__udivmodhi4>
    46ba:	07 fc       	sbrc	r0, 7
    46bc:	05 d0       	rcall	.+10     	; 0x46c8 <__divmodhi4_neg2>
    46be:	3e f4       	brtc	.+14     	; 0x46ce <__divmodhi4_exit>

000046c0 <__divmodhi4_neg1>:
    46c0:	90 95       	com	r25
    46c2:	81 95       	neg	r24
    46c4:	9f 4f       	sbci	r25, 0xFF	; 255
    46c6:	08 95       	ret

000046c8 <__divmodhi4_neg2>:
    46c8:	70 95       	com	r23
    46ca:	61 95       	neg	r22
    46cc:	7f 4f       	sbci	r23, 0xFF	; 255

000046ce <__divmodhi4_exit>:
    46ce:	08 95       	ret

000046d0 <__udivmodsi4>:
    46d0:	a1 e2       	ldi	r26, 0x21	; 33
    46d2:	1a 2e       	mov	r1, r26
    46d4:	aa 1b       	sub	r26, r26
    46d6:	bb 1b       	sub	r27, r27
    46d8:	fd 01       	movw	r30, r26
    46da:	0d c0       	rjmp	.+26     	; 0x46f6 <__udivmodsi4_ep>

000046dc <__udivmodsi4_loop>:
    46dc:	aa 1f       	adc	r26, r26
    46de:	bb 1f       	adc	r27, r27
    46e0:	ee 1f       	adc	r30, r30
    46e2:	ff 1f       	adc	r31, r31
    46e4:	a2 17       	cp	r26, r18
    46e6:	b3 07       	cpc	r27, r19
    46e8:	e4 07       	cpc	r30, r20
    46ea:	f5 07       	cpc	r31, r21
    46ec:	20 f0       	brcs	.+8      	; 0x46f6 <__udivmodsi4_ep>
    46ee:	a2 1b       	sub	r26, r18
    46f0:	b3 0b       	sbc	r27, r19
    46f2:	e4 0b       	sbc	r30, r20
    46f4:	f5 0b       	sbc	r31, r21

000046f6 <__udivmodsi4_ep>:
    46f6:	66 1f       	adc	r22, r22
    46f8:	77 1f       	adc	r23, r23
    46fa:	88 1f       	adc	r24, r24
    46fc:	99 1f       	adc	r25, r25
    46fe:	1a 94       	dec	r1
    4700:	69 f7       	brne	.-38     	; 0x46dc <__udivmodsi4_loop>
    4702:	60 95       	com	r22
    4704:	70 95       	com	r23
    4706:	80 95       	com	r24
    4708:	90 95       	com	r25
    470a:	9b 01       	movw	r18, r22
    470c:	ac 01       	movw	r20, r24
    470e:	bd 01       	movw	r22, r26
    4710:	cf 01       	movw	r24, r30
    4712:	08 95       	ret

00004714 <__divmodsi4>:
    4714:	05 2e       	mov	r0, r21
    4716:	97 fb       	bst	r25, 7
    4718:	1e f4       	brtc	.+6      	; 0x4720 <__divmodsi4+0xc>
    471a:	00 94       	com	r0
    471c:	0e 94 a1 23 	call	0x4742	; 0x4742 <__negsi2>
    4720:	57 fd       	sbrc	r21, 7
    4722:	07 d0       	rcall	.+14     	; 0x4732 <__divmodsi4_neg2>
    4724:	0e 94 68 23 	call	0x46d0	; 0x46d0 <__udivmodsi4>
    4728:	07 fc       	sbrc	r0, 7
    472a:	03 d0       	rcall	.+6      	; 0x4732 <__divmodsi4_neg2>
    472c:	4e f4       	brtc	.+18     	; 0x4740 <__divmodsi4_exit>
    472e:	0c 94 a1 23 	jmp	0x4742	; 0x4742 <__negsi2>

00004732 <__divmodsi4_neg2>:
    4732:	50 95       	com	r21
    4734:	40 95       	com	r20
    4736:	30 95       	com	r19
    4738:	21 95       	neg	r18
    473a:	3f 4f       	sbci	r19, 0xFF	; 255
    473c:	4f 4f       	sbci	r20, 0xFF	; 255
    473e:	5f 4f       	sbci	r21, 0xFF	; 255

00004740 <__divmodsi4_exit>:
    4740:	08 95       	ret

00004742 <__negsi2>:
    4742:	90 95       	com	r25
    4744:	80 95       	com	r24
    4746:	70 95       	com	r23
    4748:	61 95       	neg	r22
    474a:	7f 4f       	sbci	r23, 0xFF	; 255
    474c:	8f 4f       	sbci	r24, 0xFF	; 255
    474e:	9f 4f       	sbci	r25, 0xFF	; 255
    4750:	08 95       	ret

00004752 <__tablejump2__>:
    4752:	ee 0f       	add	r30, r30
    4754:	ff 1f       	adc	r31, r31
    4756:	05 90       	lpm	r0, Z+
    4758:	f4 91       	lpm	r31, Z
    475a:	e0 2d       	mov	r30, r0
    475c:	09 94       	ijmp

0000475e <malloc>:
    475e:	0f 93       	push	r16
    4760:	1f 93       	push	r17
    4762:	cf 93       	push	r28
    4764:	df 93       	push	r29
    4766:	82 30       	cpi	r24, 0x02	; 2
    4768:	91 05       	cpc	r25, r1
    476a:	10 f4       	brcc	.+4      	; 0x4770 <malloc+0x12>
    476c:	82 e0       	ldi	r24, 0x02	; 2
    476e:	90 e0       	ldi	r25, 0x00	; 0
    4770:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <__flp>
    4774:	f0 91 8b 04 	lds	r31, 0x048B	; 0x80048b <__flp+0x1>
    4778:	20 e0       	ldi	r18, 0x00	; 0
    477a:	30 e0       	ldi	r19, 0x00	; 0
    477c:	a0 e0       	ldi	r26, 0x00	; 0
    477e:	b0 e0       	ldi	r27, 0x00	; 0
    4780:	30 97       	sbiw	r30, 0x00	; 0
    4782:	19 f1       	breq	.+70     	; 0x47ca <malloc+0x6c>
    4784:	40 81       	ld	r20, Z
    4786:	51 81       	ldd	r21, Z+1	; 0x01
    4788:	02 81       	ldd	r16, Z+2	; 0x02
    478a:	13 81       	ldd	r17, Z+3	; 0x03
    478c:	48 17       	cp	r20, r24
    478e:	59 07       	cpc	r21, r25
    4790:	c8 f0       	brcs	.+50     	; 0x47c4 <malloc+0x66>
    4792:	84 17       	cp	r24, r20
    4794:	95 07       	cpc	r25, r21
    4796:	69 f4       	brne	.+26     	; 0x47b2 <malloc+0x54>
    4798:	10 97       	sbiw	r26, 0x00	; 0
    479a:	31 f0       	breq	.+12     	; 0x47a8 <malloc+0x4a>
    479c:	12 96       	adiw	r26, 0x02	; 2
    479e:	0c 93       	st	X, r16
    47a0:	12 97       	sbiw	r26, 0x02	; 2
    47a2:	13 96       	adiw	r26, 0x03	; 3
    47a4:	1c 93       	st	X, r17
    47a6:	27 c0       	rjmp	.+78     	; 0x47f6 <malloc+0x98>
    47a8:	00 93 8a 04 	sts	0x048A, r16	; 0x80048a <__flp>
    47ac:	10 93 8b 04 	sts	0x048B, r17	; 0x80048b <__flp+0x1>
    47b0:	22 c0       	rjmp	.+68     	; 0x47f6 <malloc+0x98>
    47b2:	21 15       	cp	r18, r1
    47b4:	31 05       	cpc	r19, r1
    47b6:	19 f0       	breq	.+6      	; 0x47be <malloc+0x60>
    47b8:	42 17       	cp	r20, r18
    47ba:	53 07       	cpc	r21, r19
    47bc:	18 f4       	brcc	.+6      	; 0x47c4 <malloc+0x66>
    47be:	9a 01       	movw	r18, r20
    47c0:	bd 01       	movw	r22, r26
    47c2:	ef 01       	movw	r28, r30
    47c4:	df 01       	movw	r26, r30
    47c6:	f8 01       	movw	r30, r16
    47c8:	db cf       	rjmp	.-74     	; 0x4780 <malloc+0x22>
    47ca:	21 15       	cp	r18, r1
    47cc:	31 05       	cpc	r19, r1
    47ce:	f9 f0       	breq	.+62     	; 0x480e <malloc+0xb0>
    47d0:	28 1b       	sub	r18, r24
    47d2:	39 0b       	sbc	r19, r25
    47d4:	24 30       	cpi	r18, 0x04	; 4
    47d6:	31 05       	cpc	r19, r1
    47d8:	80 f4       	brcc	.+32     	; 0x47fa <malloc+0x9c>
    47da:	8a 81       	ldd	r24, Y+2	; 0x02
    47dc:	9b 81       	ldd	r25, Y+3	; 0x03
    47de:	61 15       	cp	r22, r1
    47e0:	71 05       	cpc	r23, r1
    47e2:	21 f0       	breq	.+8      	; 0x47ec <malloc+0x8e>
    47e4:	fb 01       	movw	r30, r22
    47e6:	93 83       	std	Z+3, r25	; 0x03
    47e8:	82 83       	std	Z+2, r24	; 0x02
    47ea:	04 c0       	rjmp	.+8      	; 0x47f4 <malloc+0x96>
    47ec:	90 93 8b 04 	sts	0x048B, r25	; 0x80048b <__flp+0x1>
    47f0:	80 93 8a 04 	sts	0x048A, r24	; 0x80048a <__flp>
    47f4:	fe 01       	movw	r30, r28
    47f6:	32 96       	adiw	r30, 0x02	; 2
    47f8:	44 c0       	rjmp	.+136    	; 0x4882 <malloc+0x124>
    47fa:	fe 01       	movw	r30, r28
    47fc:	e2 0f       	add	r30, r18
    47fe:	f3 1f       	adc	r31, r19
    4800:	81 93       	st	Z+, r24
    4802:	91 93       	st	Z+, r25
    4804:	22 50       	subi	r18, 0x02	; 2
    4806:	31 09       	sbc	r19, r1
    4808:	39 83       	std	Y+1, r19	; 0x01
    480a:	28 83       	st	Y, r18
    480c:	3a c0       	rjmp	.+116    	; 0x4882 <malloc+0x124>
    480e:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    4812:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    4816:	23 2b       	or	r18, r19
    4818:	41 f4       	brne	.+16     	; 0x482a <malloc+0xcc>
    481a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    481e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    4822:	30 93 89 04 	sts	0x0489, r19	; 0x800489 <__brkval+0x1>
    4826:	20 93 88 04 	sts	0x0488, r18	; 0x800488 <__brkval>
    482a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    482e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    4832:	21 15       	cp	r18, r1
    4834:	31 05       	cpc	r19, r1
    4836:	41 f4       	brne	.+16     	; 0x4848 <malloc+0xea>
    4838:	2d b7       	in	r18, 0x3d	; 61
    483a:	3e b7       	in	r19, 0x3e	; 62
    483c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    4840:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    4844:	24 1b       	sub	r18, r20
    4846:	35 0b       	sbc	r19, r21
    4848:	e0 91 88 04 	lds	r30, 0x0488	; 0x800488 <__brkval>
    484c:	f0 91 89 04 	lds	r31, 0x0489	; 0x800489 <__brkval+0x1>
    4850:	e2 17       	cp	r30, r18
    4852:	f3 07       	cpc	r31, r19
    4854:	a0 f4       	brcc	.+40     	; 0x487e <malloc+0x120>
    4856:	2e 1b       	sub	r18, r30
    4858:	3f 0b       	sbc	r19, r31
    485a:	28 17       	cp	r18, r24
    485c:	39 07       	cpc	r19, r25
    485e:	78 f0       	brcs	.+30     	; 0x487e <malloc+0x120>
    4860:	ac 01       	movw	r20, r24
    4862:	4e 5f       	subi	r20, 0xFE	; 254
    4864:	5f 4f       	sbci	r21, 0xFF	; 255
    4866:	24 17       	cp	r18, r20
    4868:	35 07       	cpc	r19, r21
    486a:	48 f0       	brcs	.+18     	; 0x487e <malloc+0x120>
    486c:	4e 0f       	add	r20, r30
    486e:	5f 1f       	adc	r21, r31
    4870:	50 93 89 04 	sts	0x0489, r21	; 0x800489 <__brkval+0x1>
    4874:	40 93 88 04 	sts	0x0488, r20	; 0x800488 <__brkval>
    4878:	81 93       	st	Z+, r24
    487a:	91 93       	st	Z+, r25
    487c:	02 c0       	rjmp	.+4      	; 0x4882 <malloc+0x124>
    487e:	e0 e0       	ldi	r30, 0x00	; 0
    4880:	f0 e0       	ldi	r31, 0x00	; 0
    4882:	cf 01       	movw	r24, r30
    4884:	df 91       	pop	r29
    4886:	cf 91       	pop	r28
    4888:	1f 91       	pop	r17
    488a:	0f 91       	pop	r16
    488c:	08 95       	ret

0000488e <free>:
    488e:	cf 93       	push	r28
    4890:	df 93       	push	r29
    4892:	00 97       	sbiw	r24, 0x00	; 0
    4894:	09 f4       	brne	.+2      	; 0x4898 <free+0xa>
    4896:	81 c0       	rjmp	.+258    	; 0x499a <free+0x10c>
    4898:	fc 01       	movw	r30, r24
    489a:	32 97       	sbiw	r30, 0x02	; 2
    489c:	13 82       	std	Z+3, r1	; 0x03
    489e:	12 82       	std	Z+2, r1	; 0x02
    48a0:	a0 91 8a 04 	lds	r26, 0x048A	; 0x80048a <__flp>
    48a4:	b0 91 8b 04 	lds	r27, 0x048B	; 0x80048b <__flp+0x1>
    48a8:	10 97       	sbiw	r26, 0x00	; 0
    48aa:	81 f4       	brne	.+32     	; 0x48cc <free+0x3e>
    48ac:	20 81       	ld	r18, Z
    48ae:	31 81       	ldd	r19, Z+1	; 0x01
    48b0:	82 0f       	add	r24, r18
    48b2:	93 1f       	adc	r25, r19
    48b4:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    48b8:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    48bc:	28 17       	cp	r18, r24
    48be:	39 07       	cpc	r19, r25
    48c0:	51 f5       	brne	.+84     	; 0x4916 <free+0x88>
    48c2:	f0 93 89 04 	sts	0x0489, r31	; 0x800489 <__brkval+0x1>
    48c6:	e0 93 88 04 	sts	0x0488, r30	; 0x800488 <__brkval>
    48ca:	67 c0       	rjmp	.+206    	; 0x499a <free+0x10c>
    48cc:	ed 01       	movw	r28, r26
    48ce:	20 e0       	ldi	r18, 0x00	; 0
    48d0:	30 e0       	ldi	r19, 0x00	; 0
    48d2:	ce 17       	cp	r28, r30
    48d4:	df 07       	cpc	r29, r31
    48d6:	40 f4       	brcc	.+16     	; 0x48e8 <free+0x5a>
    48d8:	4a 81       	ldd	r20, Y+2	; 0x02
    48da:	5b 81       	ldd	r21, Y+3	; 0x03
    48dc:	9e 01       	movw	r18, r28
    48de:	41 15       	cp	r20, r1
    48e0:	51 05       	cpc	r21, r1
    48e2:	f1 f0       	breq	.+60     	; 0x4920 <free+0x92>
    48e4:	ea 01       	movw	r28, r20
    48e6:	f5 cf       	rjmp	.-22     	; 0x48d2 <free+0x44>
    48e8:	d3 83       	std	Z+3, r29	; 0x03
    48ea:	c2 83       	std	Z+2, r28	; 0x02
    48ec:	40 81       	ld	r20, Z
    48ee:	51 81       	ldd	r21, Z+1	; 0x01
    48f0:	84 0f       	add	r24, r20
    48f2:	95 1f       	adc	r25, r21
    48f4:	c8 17       	cp	r28, r24
    48f6:	d9 07       	cpc	r29, r25
    48f8:	59 f4       	brne	.+22     	; 0x4910 <free+0x82>
    48fa:	88 81       	ld	r24, Y
    48fc:	99 81       	ldd	r25, Y+1	; 0x01
    48fe:	84 0f       	add	r24, r20
    4900:	95 1f       	adc	r25, r21
    4902:	02 96       	adiw	r24, 0x02	; 2
    4904:	91 83       	std	Z+1, r25	; 0x01
    4906:	80 83       	st	Z, r24
    4908:	8a 81       	ldd	r24, Y+2	; 0x02
    490a:	9b 81       	ldd	r25, Y+3	; 0x03
    490c:	93 83       	std	Z+3, r25	; 0x03
    490e:	82 83       	std	Z+2, r24	; 0x02
    4910:	21 15       	cp	r18, r1
    4912:	31 05       	cpc	r19, r1
    4914:	29 f4       	brne	.+10     	; 0x4920 <free+0x92>
    4916:	f0 93 8b 04 	sts	0x048B, r31	; 0x80048b <__flp+0x1>
    491a:	e0 93 8a 04 	sts	0x048A, r30	; 0x80048a <__flp>
    491e:	3d c0       	rjmp	.+122    	; 0x499a <free+0x10c>
    4920:	e9 01       	movw	r28, r18
    4922:	fb 83       	std	Y+3, r31	; 0x03
    4924:	ea 83       	std	Y+2, r30	; 0x02
    4926:	49 91       	ld	r20, Y+
    4928:	59 91       	ld	r21, Y+
    492a:	c4 0f       	add	r28, r20
    492c:	d5 1f       	adc	r29, r21
    492e:	ec 17       	cp	r30, r28
    4930:	fd 07       	cpc	r31, r29
    4932:	61 f4       	brne	.+24     	; 0x494c <free+0xbe>
    4934:	80 81       	ld	r24, Z
    4936:	91 81       	ldd	r25, Z+1	; 0x01
    4938:	84 0f       	add	r24, r20
    493a:	95 1f       	adc	r25, r21
    493c:	02 96       	adiw	r24, 0x02	; 2
    493e:	e9 01       	movw	r28, r18
    4940:	99 83       	std	Y+1, r25	; 0x01
    4942:	88 83       	st	Y, r24
    4944:	82 81       	ldd	r24, Z+2	; 0x02
    4946:	93 81       	ldd	r25, Z+3	; 0x03
    4948:	9b 83       	std	Y+3, r25	; 0x03
    494a:	8a 83       	std	Y+2, r24	; 0x02
    494c:	e0 e0       	ldi	r30, 0x00	; 0
    494e:	f0 e0       	ldi	r31, 0x00	; 0
    4950:	12 96       	adiw	r26, 0x02	; 2
    4952:	8d 91       	ld	r24, X+
    4954:	9c 91       	ld	r25, X
    4956:	13 97       	sbiw	r26, 0x03	; 3
    4958:	00 97       	sbiw	r24, 0x00	; 0
    495a:	19 f0       	breq	.+6      	; 0x4962 <free+0xd4>
    495c:	fd 01       	movw	r30, r26
    495e:	dc 01       	movw	r26, r24
    4960:	f7 cf       	rjmp	.-18     	; 0x4950 <free+0xc2>
    4962:	8d 91       	ld	r24, X+
    4964:	9c 91       	ld	r25, X
    4966:	11 97       	sbiw	r26, 0x01	; 1
    4968:	9d 01       	movw	r18, r26
    496a:	2e 5f       	subi	r18, 0xFE	; 254
    496c:	3f 4f       	sbci	r19, 0xFF	; 255
    496e:	82 0f       	add	r24, r18
    4970:	93 1f       	adc	r25, r19
    4972:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    4976:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    497a:	28 17       	cp	r18, r24
    497c:	39 07       	cpc	r19, r25
    497e:	69 f4       	brne	.+26     	; 0x499a <free+0x10c>
    4980:	30 97       	sbiw	r30, 0x00	; 0
    4982:	29 f4       	brne	.+10     	; 0x498e <free+0x100>
    4984:	10 92 8b 04 	sts	0x048B, r1	; 0x80048b <__flp+0x1>
    4988:	10 92 8a 04 	sts	0x048A, r1	; 0x80048a <__flp>
    498c:	02 c0       	rjmp	.+4      	; 0x4992 <free+0x104>
    498e:	13 82       	std	Z+3, r1	; 0x03
    4990:	12 82       	std	Z+2, r1	; 0x02
    4992:	b0 93 89 04 	sts	0x0489, r27	; 0x800489 <__brkval+0x1>
    4996:	a0 93 88 04 	sts	0x0488, r26	; 0x800488 <__brkval>
    499a:	df 91       	pop	r29
    499c:	cf 91       	pop	r28
    499e:	08 95       	ret

000049a0 <realloc>:
    49a0:	a0 e0       	ldi	r26, 0x00	; 0
    49a2:	b0 e0       	ldi	r27, 0x00	; 0
    49a4:	e6 ed       	ldi	r30, 0xD6	; 214
    49a6:	f4 e2       	ldi	r31, 0x24	; 36
    49a8:	0c 94 3c 26 	jmp	0x4c78	; 0x4c78 <__prologue_saves__+0x8>
    49ac:	ec 01       	movw	r28, r24
    49ae:	00 97       	sbiw	r24, 0x00	; 0
    49b0:	21 f4       	brne	.+8      	; 0x49ba <realloc+0x1a>
    49b2:	cb 01       	movw	r24, r22
    49b4:	0e 94 af 23 	call	0x475e	; 0x475e <malloc>
    49b8:	b4 c0       	rjmp	.+360    	; 0x4b22 <realloc+0x182>
    49ba:	fc 01       	movw	r30, r24
    49bc:	e6 0f       	add	r30, r22
    49be:	f7 1f       	adc	r31, r23
    49c0:	9c 01       	movw	r18, r24
    49c2:	22 50       	subi	r18, 0x02	; 2
    49c4:	31 09       	sbc	r19, r1
    49c6:	e2 17       	cp	r30, r18
    49c8:	f3 07       	cpc	r31, r19
    49ca:	08 f4       	brcc	.+2      	; 0x49ce <realloc+0x2e>
    49cc:	a8 c0       	rjmp	.+336    	; 0x4b1e <realloc+0x17e>
    49ce:	d9 01       	movw	r26, r18
    49d0:	0d 91       	ld	r16, X+
    49d2:	1c 91       	ld	r17, X
    49d4:	11 97       	sbiw	r26, 0x01	; 1
    49d6:	06 17       	cp	r16, r22
    49d8:	17 07       	cpc	r17, r23
    49da:	b0 f0       	brcs	.+44     	; 0x4a08 <realloc+0x68>
    49dc:	05 30       	cpi	r16, 0x05	; 5
    49de:	11 05       	cpc	r17, r1
    49e0:	08 f4       	brcc	.+2      	; 0x49e4 <realloc+0x44>
    49e2:	9b c0       	rjmp	.+310    	; 0x4b1a <realloc+0x17a>
    49e4:	c8 01       	movw	r24, r16
    49e6:	04 97       	sbiw	r24, 0x04	; 4
    49e8:	86 17       	cp	r24, r22
    49ea:	97 07       	cpc	r25, r23
    49ec:	08 f4       	brcc	.+2      	; 0x49f0 <realloc+0x50>
    49ee:	95 c0       	rjmp	.+298    	; 0x4b1a <realloc+0x17a>
    49f0:	02 50       	subi	r16, 0x02	; 2
    49f2:	11 09       	sbc	r17, r1
    49f4:	06 1b       	sub	r16, r22
    49f6:	17 0b       	sbc	r17, r23
    49f8:	01 93       	st	Z+, r16
    49fa:	11 93       	st	Z+, r17
    49fc:	6d 93       	st	X+, r22
    49fe:	7c 93       	st	X, r23
    4a00:	cf 01       	movw	r24, r30
    4a02:	0e 94 47 24 	call	0x488e	; 0x488e <free>
    4a06:	89 c0       	rjmp	.+274    	; 0x4b1a <realloc+0x17a>
    4a08:	5b 01       	movw	r10, r22
    4a0a:	a0 1a       	sub	r10, r16
    4a0c:	b1 0a       	sbc	r11, r17
    4a0e:	4c 01       	movw	r8, r24
    4a10:	80 0e       	add	r8, r16
    4a12:	91 1e       	adc	r9, r17
    4a14:	a0 91 8a 04 	lds	r26, 0x048A	; 0x80048a <__flp>
    4a18:	b0 91 8b 04 	lds	r27, 0x048B	; 0x80048b <__flp+0x1>
    4a1c:	61 2c       	mov	r6, r1
    4a1e:	71 2c       	mov	r7, r1
    4a20:	e1 2c       	mov	r14, r1
    4a22:	f1 2c       	mov	r15, r1
    4a24:	10 97       	sbiw	r26, 0x00	; 0
    4a26:	09 f4       	brne	.+2      	; 0x4a2a <realloc+0x8a>
    4a28:	46 c0       	rjmp	.+140    	; 0x4ab6 <realloc+0x116>
    4a2a:	8d 91       	ld	r24, X+
    4a2c:	9c 91       	ld	r25, X
    4a2e:	11 97       	sbiw	r26, 0x01	; 1
    4a30:	a8 15       	cp	r26, r8
    4a32:	b9 05       	cpc	r27, r9
    4a34:	b1 f5       	brne	.+108    	; 0x4aa2 <realloc+0x102>
    4a36:	6c 01       	movw	r12, r24
    4a38:	42 e0       	ldi	r20, 0x02	; 2
    4a3a:	c4 0e       	add	r12, r20
    4a3c:	d1 1c       	adc	r13, r1
    4a3e:	ca 14       	cp	r12, r10
    4a40:	db 04       	cpc	r13, r11
    4a42:	78 f1       	brcs	.+94     	; 0x4aa2 <realloc+0x102>
    4a44:	4c 01       	movw	r8, r24
    4a46:	8a 18       	sub	r8, r10
    4a48:	9b 08       	sbc	r9, r11
    4a4a:	64 01       	movw	r12, r8
    4a4c:	42 e0       	ldi	r20, 0x02	; 2
    4a4e:	c4 0e       	add	r12, r20
    4a50:	d1 1c       	adc	r13, r1
    4a52:	12 96       	adiw	r26, 0x02	; 2
    4a54:	bc 90       	ld	r11, X
    4a56:	12 97       	sbiw	r26, 0x02	; 2
    4a58:	13 96       	adiw	r26, 0x03	; 3
    4a5a:	ac 91       	ld	r26, X
    4a5c:	b5 e0       	ldi	r27, 0x05	; 5
    4a5e:	cb 16       	cp	r12, r27
    4a60:	d1 04       	cpc	r13, r1
    4a62:	40 f0       	brcs	.+16     	; 0x4a74 <realloc+0xd4>
    4a64:	b2 82       	std	Z+2, r11	; 0x02
    4a66:	a3 83       	std	Z+3, r26	; 0x03
    4a68:	91 82       	std	Z+1, r9	; 0x01
    4a6a:	80 82       	st	Z, r8
    4a6c:	d9 01       	movw	r26, r18
    4a6e:	6d 93       	st	X+, r22
    4a70:	7c 93       	st	X, r23
    4a72:	09 c0       	rjmp	.+18     	; 0x4a86 <realloc+0xe6>
    4a74:	0e 5f       	subi	r16, 0xFE	; 254
    4a76:	1f 4f       	sbci	r17, 0xFF	; 255
    4a78:	80 0f       	add	r24, r16
    4a7a:	91 1f       	adc	r25, r17
    4a7c:	f9 01       	movw	r30, r18
    4a7e:	91 83       	std	Z+1, r25	; 0x01
    4a80:	80 83       	st	Z, r24
    4a82:	eb 2d       	mov	r30, r11
    4a84:	fa 2f       	mov	r31, r26
    4a86:	e1 14       	cp	r14, r1
    4a88:	f1 04       	cpc	r15, r1
    4a8a:	31 f0       	breq	.+12     	; 0x4a98 <realloc+0xf8>
    4a8c:	d7 01       	movw	r26, r14
    4a8e:	13 96       	adiw	r26, 0x03	; 3
    4a90:	fc 93       	st	X, r31
    4a92:	ee 93       	st	-X, r30
    4a94:	12 97       	sbiw	r26, 0x02	; 2
    4a96:	41 c0       	rjmp	.+130    	; 0x4b1a <realloc+0x17a>
    4a98:	f0 93 8b 04 	sts	0x048B, r31	; 0x80048b <__flp+0x1>
    4a9c:	e0 93 8a 04 	sts	0x048A, r30	; 0x80048a <__flp>
    4aa0:	3c c0       	rjmp	.+120    	; 0x4b1a <realloc+0x17a>
    4aa2:	68 16       	cp	r6, r24
    4aa4:	79 06       	cpc	r7, r25
    4aa6:	08 f4       	brcc	.+2      	; 0x4aaa <realloc+0x10a>
    4aa8:	3c 01       	movw	r6, r24
    4aaa:	7d 01       	movw	r14, r26
    4aac:	12 96       	adiw	r26, 0x02	; 2
    4aae:	0d 90       	ld	r0, X+
    4ab0:	bc 91       	ld	r27, X
    4ab2:	a0 2d       	mov	r26, r0
    4ab4:	b7 cf       	rjmp	.-146    	; 0x4a24 <realloc+0x84>
    4ab6:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__brkval>
    4aba:	90 91 89 04 	lds	r25, 0x0489	; 0x800489 <__brkval+0x1>
    4abe:	88 16       	cp	r8, r24
    4ac0:	99 06       	cpc	r9, r25
    4ac2:	e1 f4       	brne	.+56     	; 0x4afc <realloc+0x15c>
    4ac4:	66 16       	cp	r6, r22
    4ac6:	77 06       	cpc	r7, r23
    4ac8:	c8 f4       	brcc	.+50     	; 0x4afc <realloc+0x15c>
    4aca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    4ace:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    4ad2:	00 97       	sbiw	r24, 0x00	; 0
    4ad4:	41 f4       	brne	.+16     	; 0x4ae6 <realloc+0x146>
    4ad6:	8d b7       	in	r24, 0x3d	; 61
    4ad8:	9e b7       	in	r25, 0x3e	; 62
    4ada:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    4ade:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    4ae2:	84 1b       	sub	r24, r20
    4ae4:	95 0b       	sbc	r25, r21
    4ae6:	e8 17       	cp	r30, r24
    4ae8:	f9 07       	cpc	r31, r25
    4aea:	c8 f4       	brcc	.+50     	; 0x4b1e <realloc+0x17e>
    4aec:	f0 93 89 04 	sts	0x0489, r31	; 0x800489 <__brkval+0x1>
    4af0:	e0 93 88 04 	sts	0x0488, r30	; 0x800488 <__brkval>
    4af4:	f9 01       	movw	r30, r18
    4af6:	71 83       	std	Z+1, r23	; 0x01
    4af8:	60 83       	st	Z, r22
    4afa:	0f c0       	rjmp	.+30     	; 0x4b1a <realloc+0x17a>
    4afc:	cb 01       	movw	r24, r22
    4afe:	0e 94 af 23 	call	0x475e	; 0x475e <malloc>
    4b02:	7c 01       	movw	r14, r24
    4b04:	00 97       	sbiw	r24, 0x00	; 0
    4b06:	59 f0       	breq	.+22     	; 0x4b1e <realloc+0x17e>
    4b08:	a8 01       	movw	r20, r16
    4b0a:	be 01       	movw	r22, r28
    4b0c:	0e 94 e0 25 	call	0x4bc0	; 0x4bc0 <memcpy>
    4b10:	ce 01       	movw	r24, r28
    4b12:	0e 94 47 24 	call	0x488e	; 0x488e <free>
    4b16:	c7 01       	movw	r24, r14
    4b18:	04 c0       	rjmp	.+8      	; 0x4b22 <realloc+0x182>
    4b1a:	ce 01       	movw	r24, r28
    4b1c:	02 c0       	rjmp	.+4      	; 0x4b22 <realloc+0x182>
    4b1e:	80 e0       	ldi	r24, 0x00	; 0
    4b20:	90 e0       	ldi	r25, 0x00	; 0
    4b22:	cd b7       	in	r28, 0x3d	; 61
    4b24:	de b7       	in	r29, 0x3e	; 62
    4b26:	ee e0       	ldi	r30, 0x0E	; 14
    4b28:	0c 94 58 26 	jmp	0x4cb0	; 0x4cb0 <__epilogue_restores__+0x8>

00004b2c <atoi>:
    4b2c:	fc 01       	movw	r30, r24
    4b2e:	88 27       	eor	r24, r24
    4b30:	99 27       	eor	r25, r25
    4b32:	e8 94       	clt
    4b34:	21 91       	ld	r18, Z+
    4b36:	20 32       	cpi	r18, 0x20	; 32
    4b38:	e9 f3       	breq	.-6      	; 0x4b34 <atoi+0x8>
    4b3a:	29 30       	cpi	r18, 0x09	; 9
    4b3c:	10 f0       	brcs	.+4      	; 0x4b42 <atoi+0x16>
    4b3e:	2e 30       	cpi	r18, 0x0E	; 14
    4b40:	c8 f3       	brcs	.-14     	; 0x4b34 <atoi+0x8>
    4b42:	2b 32       	cpi	r18, 0x2B	; 43
    4b44:	41 f0       	breq	.+16     	; 0x4b56 <atoi+0x2a>
    4b46:	2d 32       	cpi	r18, 0x2D	; 45
    4b48:	39 f4       	brne	.+14     	; 0x4b58 <atoi+0x2c>
    4b4a:	68 94       	set
    4b4c:	04 c0       	rjmp	.+8      	; 0x4b56 <atoi+0x2a>
    4b4e:	0e 94 06 26 	call	0x4c0c	; 0x4c0c <__mulhi_const_10>
    4b52:	82 0f       	add	r24, r18
    4b54:	91 1d       	adc	r25, r1
    4b56:	21 91       	ld	r18, Z+
    4b58:	20 53       	subi	r18, 0x30	; 48
    4b5a:	2a 30       	cpi	r18, 0x0A	; 10
    4b5c:	c0 f3       	brcs	.-16     	; 0x4b4e <atoi+0x22>
    4b5e:	1e f4       	brtc	.+6      	; 0x4b66 <atoi+0x3a>
    4b60:	90 95       	com	r25
    4b62:	81 95       	neg	r24
    4b64:	9f 4f       	sbci	r25, 0xFF	; 255
    4b66:	08 95       	ret

00004b68 <strcmp_P>:
    4b68:	fb 01       	movw	r30, r22
    4b6a:	dc 01       	movw	r26, r24
    4b6c:	8d 91       	ld	r24, X+
    4b6e:	05 90       	lpm	r0, Z+
    4b70:	80 19       	sub	r24, r0
    4b72:	01 10       	cpse	r0, r1
    4b74:	d9 f3       	breq	.-10     	; 0x4b6c <strcmp_P+0x4>
    4b76:	99 0b       	sbc	r25, r25
    4b78:	08 95       	ret

00004b7a <__strlen_P>:
    4b7a:	fc 01       	movw	r30, r24
    4b7c:	05 90       	lpm	r0, Z+
    4b7e:	00 20       	and	r0, r0
    4b80:	e9 f7       	brne	.-6      	; 0x4b7c <__strlen_P+0x2>
    4b82:	80 95       	com	r24
    4b84:	90 95       	com	r25
    4b86:	8e 0f       	add	r24, r30
    4b88:	9f 1f       	adc	r25, r31
    4b8a:	08 95       	ret

00004b8c <strstr_P>:
    4b8c:	fb 01       	movw	r30, r22
    4b8e:	55 91       	lpm	r21, Z+
    4b90:	55 23       	and	r21, r21
    4b92:	a9 f0       	breq	.+42     	; 0x4bbe <strstr_P+0x32>
    4b94:	bf 01       	movw	r22, r30
    4b96:	dc 01       	movw	r26, r24
    4b98:	4d 91       	ld	r20, X+
    4b9a:	45 17       	cp	r20, r21
    4b9c:	41 11       	cpse	r20, r1
    4b9e:	e1 f7       	brne	.-8      	; 0x4b98 <strstr_P+0xc>
    4ba0:	59 f4       	brne	.+22     	; 0x4bb8 <strstr_P+0x2c>
    4ba2:	cd 01       	movw	r24, r26
    4ba4:	05 90       	lpm	r0, Z+
    4ba6:	00 20       	and	r0, r0
    4ba8:	49 f0       	breq	.+18     	; 0x4bbc <strstr_P+0x30>
    4baa:	4d 91       	ld	r20, X+
    4bac:	40 15       	cp	r20, r0
    4bae:	41 11       	cpse	r20, r1
    4bb0:	c9 f3       	breq	.-14     	; 0x4ba4 <strstr_P+0x18>
    4bb2:	fb 01       	movw	r30, r22
    4bb4:	41 11       	cpse	r20, r1
    4bb6:	ef cf       	rjmp	.-34     	; 0x4b96 <strstr_P+0xa>
    4bb8:	81 e0       	ldi	r24, 0x01	; 1
    4bba:	90 e0       	ldi	r25, 0x00	; 0
    4bbc:	01 97       	sbiw	r24, 0x01	; 1
    4bbe:	08 95       	ret

00004bc0 <memcpy>:
    4bc0:	fb 01       	movw	r30, r22
    4bc2:	dc 01       	movw	r26, r24
    4bc4:	02 c0       	rjmp	.+4      	; 0x4bca <memcpy+0xa>
    4bc6:	01 90       	ld	r0, Z+
    4bc8:	0d 92       	st	X+, r0
    4bca:	41 50       	subi	r20, 0x01	; 1
    4bcc:	50 40       	sbci	r21, 0x00	; 0
    4bce:	d8 f7       	brcc	.-10     	; 0x4bc6 <memcpy+0x6>
    4bd0:	08 95       	ret

00004bd2 <strchr>:
    4bd2:	fc 01       	movw	r30, r24
    4bd4:	81 91       	ld	r24, Z+
    4bd6:	86 17       	cp	r24, r22
    4bd8:	21 f0       	breq	.+8      	; 0x4be2 <strchr+0x10>
    4bda:	88 23       	and	r24, r24
    4bdc:	d9 f7       	brne	.-10     	; 0x4bd4 <strchr+0x2>
    4bde:	99 27       	eor	r25, r25
    4be0:	08 95       	ret
    4be2:	31 97       	sbiw	r30, 0x01	; 1
    4be4:	cf 01       	movw	r24, r30
    4be6:	08 95       	ret

00004be8 <strcpy>:
    4be8:	fb 01       	movw	r30, r22
    4bea:	dc 01       	movw	r26, r24
    4bec:	01 90       	ld	r0, Z+
    4bee:	0d 92       	st	X+, r0
    4bf0:	00 20       	and	r0, r0
    4bf2:	e1 f7       	brne	.-8      	; 0x4bec <strcpy+0x4>
    4bf4:	08 95       	ret

00004bf6 <__itoa_ncheck>:
    4bf6:	bb 27       	eor	r27, r27
    4bf8:	4a 30       	cpi	r20, 0x0A	; 10
    4bfa:	31 f4       	brne	.+12     	; 0x4c08 <__itoa_ncheck+0x12>
    4bfc:	99 23       	and	r25, r25
    4bfe:	22 f4       	brpl	.+8      	; 0x4c08 <__itoa_ncheck+0x12>
    4c00:	bd e2       	ldi	r27, 0x2D	; 45
    4c02:	90 95       	com	r25
    4c04:	81 95       	neg	r24
    4c06:	9f 4f       	sbci	r25, 0xFF	; 255
    4c08:	0c 94 0f 26 	jmp	0x4c1e	; 0x4c1e <__utoa_common>

00004c0c <__mulhi_const_10>:
    4c0c:	7a e0       	ldi	r23, 0x0A	; 10
    4c0e:	97 9f       	mul	r25, r23
    4c10:	90 2d       	mov	r25, r0
    4c12:	87 9f       	mul	r24, r23
    4c14:	80 2d       	mov	r24, r0
    4c16:	91 0d       	add	r25, r1
    4c18:	11 24       	eor	r1, r1
    4c1a:	08 95       	ret

00004c1c <__utoa_ncheck>:
    4c1c:	bb 27       	eor	r27, r27

00004c1e <__utoa_common>:
    4c1e:	fb 01       	movw	r30, r22
    4c20:	55 27       	eor	r21, r21
    4c22:	aa 27       	eor	r26, r26
    4c24:	88 0f       	add	r24, r24
    4c26:	99 1f       	adc	r25, r25
    4c28:	aa 1f       	adc	r26, r26
    4c2a:	a4 17       	cp	r26, r20
    4c2c:	10 f0       	brcs	.+4      	; 0x4c32 <__utoa_common+0x14>
    4c2e:	a4 1b       	sub	r26, r20
    4c30:	83 95       	inc	r24
    4c32:	50 51       	subi	r21, 0x10	; 16
    4c34:	b9 f7       	brne	.-18     	; 0x4c24 <__utoa_common+0x6>
    4c36:	a0 5d       	subi	r26, 0xD0	; 208
    4c38:	aa 33       	cpi	r26, 0x3A	; 58
    4c3a:	08 f0       	brcs	.+2      	; 0x4c3e <__utoa_common+0x20>
    4c3c:	a9 5d       	subi	r26, 0xD9	; 217
    4c3e:	a1 93       	st	Z+, r26
    4c40:	00 97       	sbiw	r24, 0x00	; 0
    4c42:	79 f7       	brne	.-34     	; 0x4c22 <__utoa_common+0x4>
    4c44:	b1 11       	cpse	r27, r1
    4c46:	b1 93       	st	Z+, r27
    4c48:	11 92       	st	Z+, r1
    4c4a:	cb 01       	movw	r24, r22
    4c4c:	0c 94 28 26 	jmp	0x4c50	; 0x4c50 <strrev>

00004c50 <strrev>:
    4c50:	dc 01       	movw	r26, r24
    4c52:	fc 01       	movw	r30, r24
    4c54:	67 2f       	mov	r22, r23
    4c56:	71 91       	ld	r23, Z+
    4c58:	77 23       	and	r23, r23
    4c5a:	e1 f7       	brne	.-8      	; 0x4c54 <strrev+0x4>
    4c5c:	32 97       	sbiw	r30, 0x02	; 2
    4c5e:	04 c0       	rjmp	.+8      	; 0x4c68 <strrev+0x18>
    4c60:	7c 91       	ld	r23, X
    4c62:	6d 93       	st	X+, r22
    4c64:	70 83       	st	Z, r23
    4c66:	62 91       	ld	r22, -Z
    4c68:	ae 17       	cp	r26, r30
    4c6a:	bf 07       	cpc	r27, r31
    4c6c:	c8 f3       	brcs	.-14     	; 0x4c60 <strrev+0x10>
    4c6e:	08 95       	ret

00004c70 <__prologue_saves__>:
    4c70:	2f 92       	push	r2
    4c72:	3f 92       	push	r3
    4c74:	4f 92       	push	r4
    4c76:	5f 92       	push	r5
    4c78:	6f 92       	push	r6
    4c7a:	7f 92       	push	r7
    4c7c:	8f 92       	push	r8
    4c7e:	9f 92       	push	r9
    4c80:	af 92       	push	r10
    4c82:	bf 92       	push	r11
    4c84:	cf 92       	push	r12
    4c86:	df 92       	push	r13
    4c88:	ef 92       	push	r14
    4c8a:	ff 92       	push	r15
    4c8c:	0f 93       	push	r16
    4c8e:	1f 93       	push	r17
    4c90:	cf 93       	push	r28
    4c92:	df 93       	push	r29
    4c94:	cd b7       	in	r28, 0x3d	; 61
    4c96:	de b7       	in	r29, 0x3e	; 62
    4c98:	ca 1b       	sub	r28, r26
    4c9a:	db 0b       	sbc	r29, r27
    4c9c:	0f b6       	in	r0, 0x3f	; 63
    4c9e:	f8 94       	cli
    4ca0:	de bf       	out	0x3e, r29	; 62
    4ca2:	0f be       	out	0x3f, r0	; 63
    4ca4:	cd bf       	out	0x3d, r28	; 61
    4ca6:	09 94       	ijmp

00004ca8 <__epilogue_restores__>:
    4ca8:	2a 88       	ldd	r2, Y+18	; 0x12
    4caa:	39 88       	ldd	r3, Y+17	; 0x11
    4cac:	48 88       	ldd	r4, Y+16	; 0x10
    4cae:	5f 84       	ldd	r5, Y+15	; 0x0f
    4cb0:	6e 84       	ldd	r6, Y+14	; 0x0e
    4cb2:	7d 84       	ldd	r7, Y+13	; 0x0d
    4cb4:	8c 84       	ldd	r8, Y+12	; 0x0c
    4cb6:	9b 84       	ldd	r9, Y+11	; 0x0b
    4cb8:	aa 84       	ldd	r10, Y+10	; 0x0a
    4cba:	b9 84       	ldd	r11, Y+9	; 0x09
    4cbc:	c8 84       	ldd	r12, Y+8	; 0x08
    4cbe:	df 80       	ldd	r13, Y+7	; 0x07
    4cc0:	ee 80       	ldd	r14, Y+6	; 0x06
    4cc2:	fd 80       	ldd	r15, Y+5	; 0x05
    4cc4:	0c 81       	ldd	r16, Y+4	; 0x04
    4cc6:	1b 81       	ldd	r17, Y+3	; 0x03
    4cc8:	aa 81       	ldd	r26, Y+2	; 0x02
    4cca:	b9 81       	ldd	r27, Y+1	; 0x01
    4ccc:	ce 0f       	add	r28, r30
    4cce:	d1 1d       	adc	r29, r1
    4cd0:	0f b6       	in	r0, 0x3f	; 63
    4cd2:	f8 94       	cli
    4cd4:	de bf       	out	0x3e, r29	; 62
    4cd6:	0f be       	out	0x3f, r0	; 63
    4cd8:	cd bf       	out	0x3d, r28	; 61
    4cda:	ed 01       	movw	r28, r26
    4cdc:	08 95       	ret

00004cde <__do_global_dtors>:
    4cde:	14 e0       	ldi	r17, 0x04	; 4
    4ce0:	cc e0       	ldi	r28, 0x0C	; 12
    4ce2:	d4 e0       	ldi	r29, 0x04	; 4
    4ce4:	04 c0       	rjmp	.+8      	; 0x4cee <__do_global_dtors+0x10>
    4ce6:	fe 01       	movw	r30, r28
    4ce8:	0e 94 a9 23 	call	0x4752	; 0x4752 <__tablejump2__>
    4cec:	21 96       	adiw	r28, 0x01	; 1
    4cee:	cd 30       	cpi	r28, 0x0D	; 13
    4cf0:	d1 07       	cpc	r29, r17
    4cf2:	c9 f7       	brne	.-14     	; 0x4ce6 <__do_global_dtors+0x8>
    4cf4:	f8 94       	cli

00004cf6 <__stop_program>:
    4cf6:	ff cf       	rjmp	.-2      	; 0x4cf6 <__stop_program>
