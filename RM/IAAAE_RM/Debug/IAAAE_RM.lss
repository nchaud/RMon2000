
IAAAE_RM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800100  00004c7e  00004d12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004c7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002f2  0080019a  0080019a  00004dac  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00004dac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004e0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000d00  00000000  00000000  00004e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00021213  00000000  00000000  00005b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004a1a  00000000  00000000  00026d5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00007335  00000000  00000000  0002b779  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000030b0  00000000  00000000  00032ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005de2  00000000  00000000  00035b60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00011bc1  00000000  00000000  0003b942  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000d00  00000000  00000000  0004d503  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 04 04 	jmp	0x808	; 0x808 <__dtors_end>
       4:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
       8:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
       c:	0c 94 71 21 	jmp	0x42e2	; 0x42e2 <__vector_3>
      10:	0c 94 71 21 	jmp	0x42e2	; 0x42e2 <__vector_3>
      14:	0c 94 71 21 	jmp	0x42e2	; 0x42e2 <__vector_3>
      18:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      1c:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      20:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      24:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      28:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      2c:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      30:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      34:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      38:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      3c:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      40:	0c 94 fd 1d 	jmp	0x3bfa	; 0x3bfa <__vector_16>
      44:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      48:	0c 94 9c 1b 	jmp	0x3738	; 0x3738 <__vector_18>
      4c:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__vector_19>
      50:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      54:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      58:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      5c:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>
      60:	0c 94 78 17 	jmp	0x2ef0	; 0x2ef0 <__vector_24>
      64:	0c 94 2c 04 	jmp	0x858	; 0x858 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	09 3c       	cpi	r16, 0xC9	; 201
      6a:	2d 2d       	mov	r18, r13
      6c:	2d 20       	and	r2, r13
	...

0000006f <_ZZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_jE3__c>:
      6f:	09 2d 2d 2d 3e 20 00                                .---> .

00000076 <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperljE3__c_0>:
      76:	09 3c 2d 2d 2d 20 00                                .<--- .

0000007d <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperljE3__c>:
      7d:	09 2d 2d 2d 3e 20 00                                .---> .

00000084 <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperjE3__c_0>:
      84:	09 3c 2d 2d 2d 20 00                                .<--- .

0000008b <_ZZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperjE3__c>:
      8b:	09 2d 2d 2d 3e 20 00                                .---> .

00000092 <_ZZN13Adafruit_FONA8readlineEjbE3__c>:
      92:	53 50 41 43 45 00                                   SPACE.

00000098 <_ZZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperjE3__c>:
      98:	09 3c 2d 2d 2d 20 00                                .<--- .

0000009f <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c_1>:
      9f:	55 41 00                                            UA.

000000a2 <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c_0>:
      a2:	55 52 4c 00                                         URL.

000000a6 <_ZZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelperE3__c>:
      a6:	43 49 44 00                                         CID.

000000aa <_ZZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_PcE3__c>:
      aa:	43 4f 4e 54 45 4e 54 00                             CONTENT.

000000b2 <_ZZN13Adafruit_FONA12HTTP_readallEjPcE3__c_0>:
      b2:	2b 48 54 54 50 52 45 41 44 3a 20 00                 +HTTPREAD: .

000000be <_ZZN13Adafruit_FONA12HTTP_readallEjPcE3__c>:
      be:	41 54 2b 48 54 54 50 52 45 41 44 3d 30 2c 00        AT+HTTPREAD=0,.

000000cd <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c_1>:
      cd:	2b 48 54 54 50 41 43 54 49 4f 4e 3a 00              +HTTPACTION:.

000000da <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c_0>:
      da:	2b 48 54 54 50 41 43 54 49 4f 4e 3a 00              +HTTPACTION:.

000000e7 <_ZZN13Adafruit_FONA11HTTP_actionEhPjS0_lE3__c>:
      e7:	41 54 2b 48 54 54 50 41 43 54 49 4f 4e 3d 00        AT+HTTPACTION=.

000000f6 <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_2>:
      f6:	44 4f 57 4e 4c 4f 41 44 00                          DOWNLOAD.

000000ff <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_1>:
      ff:	41 54 2b 48 54 54 50 44 41 54 41 3d 00              AT+HTTPDATA=.

0000010c <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c_0>:
     10c:	41 54 2b 48 54 54 50 44 41 54 41 3d 00              AT+HTTPDATA=.

00000119 <_ZZN13Adafruit_FONA9HTTP_dataEmmE3__c>:
     119:	09 2d 2d 2d 3e 20 00                                .---> .

00000120 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_3>:
     120:	22 2c 00                                            ",.

00000123 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_2>:
     123:	22 2c 22 00                                         ",".

00000127 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_1>:
     127:	41 54 2b 48 54 54 50 50 41 52 41 3d 22 00           AT+HTTPPARA=".

00000135 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c_0>:
     135:	41 54 2b 48 54 54 50 50 41 52 41 3d 22 00           AT+HTTPPARA=".

00000143 <_ZZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperbE3__c>:
     143:	09 2d 2d 2d 3e 20 00                                .---> .

0000014a <_ZZN13Adafruit_FONA9HTTP_termEvE3__c>:
     14a:	41 54 2b 48 54 54 50 54 45 52 4d 00                 AT+HTTPTERM.

00000156 <_ZZN13Adafruit_FONA9HTTP_initEvE3__c>:
     156:	41 54 2b 48 54 54 50 49 4e 49 54 00                 AT+HTTPINIT.

00000162 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_4>:
     162:	2c 20 77 65 27 76 65 20 72 65 61 64 20 00           , we've read .

00000170 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_3>:
     170:	2c 20 77 69 74 68 20 6f 75 72 20 6d 61 78 20 6f     , with our max o
     180:	66 20 00                                            f .

00000183 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_2>:
     183:	52 65 63 65 69 76 65 64 20 72 65 73 70 6f 6e 73     Received respons
     193:	65 20 6f 66 20 6c 65 6e 67 74 68 20 00              e of length .

000001a0 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_1>:
     1a0:	46 61 69 6c 65 64 20 74 6f 20 73 65 6e 64 20 64     Failed to send d
     1b0:	61 74 61 2c 20 73 74 61 74 75 73 20 63 6f 64 65     ata, status code
     1c0:	3a 20 00                                            : .

000001c3 <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c_0>:
     1c3:	74 65 78 74 2f 70 6c 61 69 6e 00                    text/plain.

000001ce <_ZZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_E3__c>:
     1ce:	68 74 74 70 3a 2f 2f 72 6d 6f 6e 2e 6b 68 75 64     http://rmon.khud
     1de:	64 61 6d 2e 6f 72 67 2e 75 6b 2f 3f 61 3d 61 64     dam.org.uk/?a=ad
     1ee:	64 00                                               d.

000001f0 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_14>:
     1f0:	41 54 2b 43 47 41 54 54 3d 30 00                    AT+CGATT=0.

000001fb <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_13>:
     1fb:	41 54 2b 53 41 50 42 52 3d 30 2c 31 00              AT+SAPBR=0,1.

00000208 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_11>:
     208:	41 54 2b 43 49 50 53 48 55 54 00                    AT+CIPSHUT.

00000213 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_12>:
     213:	53 48 55 54 20 4f 4b 00                             SHUT OK.

0000021b <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_10>:
     21b:	41 54 2b 43 49 49 43 52 00                          AT+CIICR.

00000224 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_9>:
     224:	41 54 2b 53 41 50 42 52 3d 31 2c 31 00              AT+SAPBR=1,1.

00000231 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_8>:
     231:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 50 57     AT+SAPBR=3,1,"PW
     241:	44 22 2c 00                                         D",.

00000245 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_7>:
     245:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 55 53     AT+SAPBR=3,1,"US
     255:	45 52 22 2c 00                                      ER",.

0000025a <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_6>:
     25a:	41 54 2b 43 53 54 54 3d 22 00                       AT+CSTT=".

00000264 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_5>:
     264:	09 2d 2d 2d 3e 20 00                                .---> .

0000026b <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_4>:
     26b:	41 54 2b 43 53 54 54 3d 22 00                       AT+CSTT=".

00000275 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_3>:
     275:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 41 50     AT+SAPBR=3,1,"AP
     285:	4e 22 2c 00                                         N",.

00000289 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_2>:
     289:	41 54 2b 53 41 50 42 52 3d 33 2c 31 2c 22 43 4f     AT+SAPBR=3,1,"CO
     299:	4e 54 59 50 45 22 2c 22 47 50 52 53 22 00           NTYPE","GPRS".

000002a7 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_1>:
     2a7:	41 54 2b 43 47 41 54 54 3d 31 00                    AT+CGATT=1.

000002b2 <_ZZN13Adafruit_FONA10enableGPRSEbE3__c>:
     2b2:	41 54 2b 43 49 50 53 48 55 54 00                    AT+CIPSHUT.

000002bd <_ZZN13Adafruit_FONA10enableGPRSEbE3__c_0>:
     2bd:	53 48 55 54 20 4f 4b 00                             SHUT OK.

000002c5 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_5>:
     2c5:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000002ce <_ZZN13Adafruit_FONA7getRSSIEvE3__c_6>:
     2ce:	2b 43 52 45 47 3a 20 00                             +CREG: .

000002d6 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_3>:
     2d6:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000002df <_ZZN13Adafruit_FONA7getRSSIEvE3__c_4>:
     2df:	2b 43 52 45 47 3a 20 00                             +CREG: .

000002e7 <_ZZN13Adafruit_FONA7getRSSIEvE3__c_1>:
     2e7:	41 54 2b 43 53 51 00                                AT+CSQ.

000002ee <_ZZN13Adafruit_FONA7getRSSIEvE3__c_2>:
     2ee:	2b 43 53 51 3a 20 00                                +CSQ: .

000002f5 <_ZZN13Adafruit_FONA7getRSSIEvE3__c>:
     2f5:	41 54 2b 43 53 51 00                                AT+CSQ.

000002fc <_ZZN13Adafruit_FONA7getRSSIEvE3__c_0>:
     2fc:	2b 43 53 51 3a 20 00                                +CSQ: .

00000303 <_ZZN13Adafruit_FONA14getBattPercentEPjE3__c>:
     303:	41 54 2b 43 42 43 00                                AT+CBC.

0000030a <_ZZN13Adafruit_FONA14getBattPercentEPjE3__c_0>:
     30a:	2b 43 42 43 3a 20 00                                +CBC: .

00000311 <_ZZN13Adafruit_FONA5beginEhhE3__c_11>:
     311:	53 49 4d 38 30 38 20 52 31 34 00                    SIM808 R14.

0000031c <_ZZN13Adafruit_FONA5beginEhhE3__c_10>:
     31c:	09 3c 2d 2d 2d 20 00                                .<--- .

00000323 <_ZZN13Adafruit_FONA5beginEhhE3__c_9>:
     323:	09 2d 2d 2d 3e 20 00                                .---> .

0000032a <_ZZN13Adafruit_FONA5beginEhhE3__c_8>:
     32a:	41 54 45 30 00                                      ATE0.

0000032f <_ZZN13Adafruit_FONA5beginEhhE3__c_7>:
     32f:	41 54 45 30 00                                      ATE0.

00000334 <_ZZN13Adafruit_FONA5beginEhhE3__c_6>:
     334:	41 54 20 46 61 69 6c 2e 2e 2e 20 6c 61 73 74 20     AT Fail... last 
     344:	64 69 74 63 68 20 61 74 74 65 6d 70 74 2e 00        ditch attempt..

00000353 <_ZZN13Adafruit_FONA5beginEhhE3__c_5>:
     353:	41 54 00                                            AT.

00000356 <_ZZN13Adafruit_FONA5beginEhhE3__c_4>:
     356:	41 54 00                                            AT.

00000359 <_ZZN13Adafruit_FONA5beginEhhE3__c_3>:
     359:	41 54 00                                            AT.

0000035c <_ZZN13Adafruit_FONA5beginEhhE3__c_1>:
     35c:	41 54 00                                            AT.

0000035f <_ZZN13Adafruit_FONA5beginEhhE3__c_2>:
     35f:	41 54 00                                            AT.

00000362 <_ZZN13Adafruit_FONA5beginEhhE3__c_0>:
     362:	41 54 00                                            AT.

00000365 <_ZZN13Adafruit_FONA5beginEhhE3__c>:
     365:	41 74 74 65 6d 70 74 69 6e 67 20 74 6f 20 6f 70     Attempting to op
     375:	65 6e 20 63 6f 6d 6d 20 77 69 74 68 20 41 54 73     en comm with ATs
	...

00000386 <_ZZN13Adafruit_FONAC4EabE3__c_0>:
     386:	4f 4b 00                                            OK.

00000389 <_ZZN13Adafruit_FONAC4EabE3__c>:
     389:	46 4f 4e 41 6e 65 74 00                             FONAnet.

00000391 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_17>:
     391:	20 7c 20 00                                          | .

00000395 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_16>:
     395:	52 65 73 70 6f 6e 73 65 20 43 6f 64 65 3d 00        Response Code=.

000003a4 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_15>:
     3a4:	20 7c 20 00                                          | .

000003a8 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_14>:
     3a8:	52 65 73 70 6f 6e 73 65 20 4c 65 6e 3d 00           Response Len=.

000003b6 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_13>:
     3b6:	20 7c 20 00                                          | .

000003ba <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_12>:
     3ba:	09 52 65 73 70 6f 6e 73 65 20 49 64 3d 00           .Response Id=.

000003c8 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_11>:
     3c8:	20 7c 20 00                                          | .

000003cc <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_10>:
     3cc:	53 65 6e 64 20 53 74 61 74 75 73 3d 00              Send Status=.

000003d9 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_9>:
     3d9:	20 7c 20 00                                          | .

000003dd <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_8>:
     3dd:	47 50 52 53 20 53 74 61 74 75 73 3d 00              GPRS Status=.

000003ea <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_7>:
     3ea:	20 7c 20 00                                          | .

000003ee <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_6>:
     3ee:	09 49 6e 69 74 20 53 74 61 74 75 73 3d 00           .Init Status=.

000003fc <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_5>:
     3fc:	09 00                                               ..

000003fe <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_4>:
     3fe:	20 7c 20 00                                          | .

00000402 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_3>:
     402:	42 61 74 74 25 3d 00                                Batt%=.

00000409 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_2>:
     409:	20 7c 20 00                                          | .

0000040d <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_1>:
     40d:	23 52 65 61 64 69 6e 67 73 3d 00                    #Readings=.

00000418 <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c_0>:
     418:	20 7c 20 00                                          | .

0000041c <_ZZN7Helpers18printDailySendDataEP14DailyCycleDataE3__c>:
     41c:	09 42 6f 6f 74 23 3d 00                             .Boot#=.

00000424 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_7>:
     424:	45 72 72 6f 72 3d 00                                Error=.

0000042b <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_6>:
     42b:	20 7c 20 00                                          | .

0000042f <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_5>:
     42f:	54 65 6d 70 3d 00                                   Temp=.

00000435 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_4>:
     435:	20 7c 20 00                                          | .

00000439 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_3>:
     439:	43 75 72 72 65 6e 74 3d 00                          Current=.

00000442 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_2>:
     442:	20 7c 20 00                                          | .

00000446 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_1>:
     446:	50 56 2d 56 3d 00                                   PV-V=.

0000044c <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c_0>:
     44c:	20 7c 20 00                                          | .

00000450 <_ZZN7Helpers15printSensorDataEP10SensorDataE3__c>:
     450:	42 61 74 74 2d 56 3d 00                             Batt-V=.

00000458 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_7>:
     458:	52 53 53 49 20 45 72 72 6f 72 3f 3d 00              RSSI Error?=.

00000465 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_6>:
     465:	20 7c 20 00                                          | .

00000469 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_5>:
     469:	2c 20 45 72 72 6f 72 3d 00                          , Error=.

00000472 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_4>:
     472:	2c 20 53 74 61 74 75 73 3d 00                       , Status=.

0000047c <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_3>:
     47c:	4e 65 74 77 6f 72 6b 2d 52 65 67 20 52 65 73 43     Network-Reg ResC
     48c:	6f 64 65 3d 00                                      ode=.

00000491 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_2>:
     491:	20 7c 20 00                                          | .

00000495 <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_1>:
     495:	42 45 52 3d 00                                      BER=.

0000049a <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c_0>:
     49a:	20 7c 20 00                                          | .

0000049e <_ZZN7Helpers9printRSSIEP13FONA_GET_RSSIE3__c>:
     49e:	52 53 53 49 3d 00                                   RSSI=.

000004a4 <_ZL12b64_alphabet>:
     4a4:	41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50     ABCDEFGHIJKLMNOP
     4b4:	51 52 53 54 55 56 57 58 59 5a 61 62 63 64 65 66     QRSTUVWXYZabcdef
     4c4:	67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76     ghijklmnopqrstuv
     4d4:	77 78 79 7a 30 31 32 33 34 35 36 37 38 39 2b 2f     wxyz0123456789+/
	...

000004e5 <_ZZ4loopE3__c>:
     4e5:	42 65 68 61 76 69 6f 75 72 00                       Behaviour.

000004ef <_ZZ8sendDatavE3__c_3>:
     4ef:	53 65 6e 64 2d 44 61 74 61 20 53 74 61 74 75 73     Send-Data Status
     4ff:	20 53 6c 6f 74 3a 00                                 Slot:.

00000506 <_ZZ8sendDatavE3__c_2>:
     506:	45 6e 63 6f 64 65 64 20 64 61 74 61 20 63 72 65     Encoded data cre
     516:	61 74 65 64 20 61 6e 64 20 72 65 61 64 79 20 66     ated and ready f
     526:	6f 72 20 73 65 6e 64 3a 00                          or send:.

0000052f <_ZZ8sendDatavE3__c_1>:
     52f:	09 28 46 6f 6e 61 20 49 6e 69 74 20 45 52 52 4f     .(Fona Init ERRO
     53f:	52 29 00                                            R).

00000542 <_ZZ8sendDatavE3__c_0>:
     542:	09 28 46 6f 6e 61 20 49 6e 69 74 20 50 65 6e 64     .(Fona Init Pend
     552:	69 6e 67 2e 2e 2e 29 00                             ing...).

0000055a <_ZZ8sendDatavE3__c>:
     55a:	49 6e 69 74 69 61 6c 69 73 69 6e 67 20 46 6f 6e     Initialising Fon
     56a:	61 20 74 6f 20 73 65 6e 64 20 64 61 74 61 00        a to send data.

00000579 <_ZZ17createEncodedDataPcPhh13FONA_GET_RSSIE3__c>:
     579:	2a 2a 2a 2a 20 54 6f 6f 20 6c 69 74 74 6c 65 20     **** Too little 
     589:	52 41 4d 20 62 65 66 6f 72 65 20 70 61 79 6c 6f     RAM before paylo
     599:	61 64 20 63 72 65 61 74 69 6f 6e 20 2a 2a 2a 00     ad creation ***.

000005a9 <_ZZ12takeReadingsvE3__c>:
     5a9:	54 61 6b 69 6e 67 20 72 65 61 64 69 6e 67 73 2e     Taking readings.
     5b9:	2e 2e 00                                            ...

000005bc <_ZZ21ensureFonaInitialisedbE3__c_9>:
     5bc:	09 20 28 47 6f 6f 64 2d 52 53 53 49 20 2d 20 73     . (Good-RSSI - s
     5cc:	75 63 63 65 73 73 66 75 6c 6c 2c 20 61 6c 6c 20     uccessfull, all 
     5dc:	64 6f 6e 65 29 00                                   done).

000005e2 <_ZZ21ensureFonaInitialisedbE3__c_8>:
     5e2:	09 20 28 57 61 69 74 69 6e 67 20 46 6f 72 20 47     . (Waiting For G
     5f2:	6f 6f 64 2d 52 53 53 49 20 54 69 6d 65 64 20 4f     ood-RSSI Timed O
     602:	75 74 20 2d 20 77 69 6c 6c 20 63 6f 6e 74 69 6e     ut - will contin
     612:	75 65 20 6e 6f 77 29 00                             ue now).

0000061a <_ZZ21ensureFonaInitialisedbE3__c_7>:
     61a:	09 20 28 42 61 64 2d 52 53 53 49 20 2d 20 77 69     . (Bad-RSSI - wi
     62a:	6c 6c 20 63 68 65 63 6b 20 61 67 61 69 6e 20 61     ll check again a
     63a:	66 74 65 72 20 69 6e 74 65 72 76 61 6c 29 00        fter interval).

00000649 <_ZZ21ensureFonaInitialisedbE3__c_6>:
     649:	43 68 65 63 6b 69 6e 67 20 52 53 53 49 20 2d 20     Checking RSSI - 
     659:	63 75 72 72 65 6e 74 6c 79 3a 00                    currently:.

00000664 <_ZZ21ensureFonaInitialisedbE3__c_5>:
     664:	47 50 52 53 20 69 6e 69 74 69 61 6c 69 73 65 64     GPRS initialised
     674:	20 73 75 63 63 65 73 73 66 75 6c 6c 79 20 21 00      successfully !.

00000684 <_ZZ21ensureFonaInitialisedbE3__c_4>:
     684:	41 6c 6c 20 61 74 74 65 6d 70 74 73 20 74 6f 20     All attempts to 
     694:	65 6e 61 62 6c 65 20 47 50 52 53 20 66 61 69 6c     enable GPRS fail
     6a4:	65 64 00                                            ed.

000006a7 <_ZZ21ensureFonaInitialisedbE3__c_3>:
     6a7:	57 69 6c 6c 20 74 72 79 20 74 6f 20 65 6e 61 62     Will try to enab
     6b7:	6c 65 20 47 50 52 53 20 61 67 61 69 6e 20 73 68     le GPRS again sh
     6c7:	6f 72 74 6c 79 00                                   ortly.

000006cd <_ZZ21ensureFonaInitialisedbE3__c_2>:
     6cd:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 73 69     Error initialisi
     6dd:	6e 67 20 47 50 52 53 00                             ng GPRS.

000006e5 <_ZZ21ensureFonaInitialisedbE3__c_1>:
     6e5:	41 74 74 65 6d 70 74 69 6e 67 20 74 6f 20 65 6e     Attempting to en
     6f5:	61 62 6c 65 20 47 50 52 53 2e 2e 2e 00              able GPRS....

00000702 <_ZZ21ensureFonaInitialisedbE3__c_0>:
     702:	45 72 72 6f 72 20 69 6e 69 74 69 61 6c 69 73 69     Error initialisi
     712:	6e 67 20 66 6f 6e 61 2e 2e 2e 00                    ng fona....

0000071d <_ZZ21ensureFonaInitialisedbE3__c>:
     71d:	49 6e 69 74 69 61 6c 69 73 69 6e 67 20 66 6f 6e     Initialising fon
     72d:	61 2e 2e 2e 00                                      a....

00000732 <_ZZ5setupE3__c>:
     732:	53 74 61 72 74 69 6e 67 2e 2e 2e 00                 Starting....

0000073e <_ZZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManagerE3__c_0>:
     73e:	32 20 53 65 6e 73 6f 72 2d 44 61 74 61 73 20 67     2 Sensor-Datas g
     74e:	6f 69 6e 67 20 66 6f 72 20 74 72 61 6e 73 6d 69     oing for transmi
     75e:	73 73 69 6f 6e 3a 00                                ssion:.

00000765 <_ZZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManagerE3__c>:
     765:	2a 2a 2a 2a 00                                      ****.

0000076a <_ZZN13ExtendedTests18endExtendedGsmTestEvE3__c>:
     76a:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 20     ~~~~~~~~~~~~~~~ 
     77a:	45 78 74 65 6e 64 65 64 20 47 53 4d 20 54 65 73     Extended GSM Tes
     78a:	74 20 43 6f 6d 70 6c 65 74 65 7e 7e 7e 7e 7e 7e     t Complete~~~~~~
     79a:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 00                    ~~~~~~~~~~.

000007a5 <digital_pin_to_timer_PGM>:
     7a5:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
     7b5:	00 00 00 00                                         ....

000007b9 <digital_pin_to_bit_mask_PGM>:
     7b9:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     7c9:	04 08 10 20                                         ... 

000007cd <digital_pin_to_port_PGM>:
     7cd:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     7dd:	03 03 03 03                                         ....

000007e1 <port_to_input_PGM>:
     7e1:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000007eb <port_to_output_PGM>:
     7eb:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000007f5 <port_to_mode_PGM>:
     7f5:	00 00 00 00 24 00 27 00 2a 00 00                    ....$.'.*..

00000800 <__ctors_start>:
     800:	8b 14       	cp	r8, r11
     802:	0e 1a       	sub	r0, r30
     804:	fe 1b       	sub	r31, r30

00000806 <__ctors_end>:
     806:	a6 14       	cp	r10, r6

00000808 <__dtors_end>:
     808:	11 24       	eor	r1, r1
     80a:	1f be       	out	0x3f, r1	; 63
     80c:	cf ef       	ldi	r28, 0xFF	; 255
     80e:	d8 e0       	ldi	r29, 0x08	; 8
     810:	de bf       	out	0x3e, r29	; 62
     812:	cd bf       	out	0x3d, r28	; 61

00000814 <__do_copy_data>:
     814:	11 e0       	ldi	r17, 0x01	; 1
     816:	a0 e0       	ldi	r26, 0x00	; 0
     818:	b1 e0       	ldi	r27, 0x01	; 1
     81a:	ee e7       	ldi	r30, 0x7E	; 126
     81c:	fc e4       	ldi	r31, 0x4C	; 76
     81e:	02 c0       	rjmp	.+4      	; 0x824 <__do_copy_data+0x10>
     820:	05 90       	lpm	r0, Z+
     822:	0d 92       	st	X+, r0
     824:	aa 39       	cpi	r26, 0x9A	; 154
     826:	b1 07       	cpc	r27, r17
     828:	d9 f7       	brne	.-10     	; 0x820 <__do_copy_data+0xc>

0000082a <__do_clear_bss>:
     82a:	24 e0       	ldi	r18, 0x04	; 4
     82c:	aa e9       	ldi	r26, 0x9A	; 154
     82e:	b1 e0       	ldi	r27, 0x01	; 1
     830:	01 c0       	rjmp	.+2      	; 0x834 <.do_clear_bss_start>

00000832 <.do_clear_bss_loop>:
     832:	1d 92       	st	X+, r1

00000834 <.do_clear_bss_start>:
     834:	ac 38       	cpi	r26, 0x8C	; 140
     836:	b2 07       	cpc	r27, r18
     838:	e1 f7       	brne	.-8      	; 0x832 <.do_clear_bss_loop>

0000083a <__do_global_ctors>:
     83a:	14 e0       	ldi	r17, 0x04	; 4
     83c:	c3 e0       	ldi	r28, 0x03	; 3
     83e:	d4 e0       	ldi	r29, 0x04	; 4
     840:	04 c0       	rjmp	.+8      	; 0x84a <__do_global_ctors+0x10>
     842:	21 97       	sbiw	r28, 0x01	; 1
     844:	fe 01       	movw	r30, r28
     846:	0e 94 6c 23 	call	0x46d8	; 0x46d8 <__tablejump2__>
     84a:	c0 30       	cpi	r28, 0x00	; 0
     84c:	d1 07       	cpc	r29, r17
     84e:	c9 f7       	brne	.-14     	; 0x842 <__do_global_ctors+0x8>
     850:	0e 94 2c 1c 	call	0x3858	; 0x3858 <main>
     854:	0c 94 32 26 	jmp	0x4c64	; 0x4c64 <__do_global_dtors>

00000858 <__bad_interrupt>:
     858:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000085c <_ZN13Adafruit_FONA9availableEv>:
  return sendParseReply(F("AT+CBC"), F("+CBC: "), p, ',', 1);
}

boolean Adafruit_FONA::getADCVoltage(uint16_t *v) {
  return sendParseReply(F("AT+CADC?"), F("+CADC: 1,"), v);
}
     85c:	83 5e       	subi	r24, 0xE3	; 227
     85e:	9e 4f       	sbci	r25, 0xFE	; 254
     860:	dc 01       	movw	r26, r24
     862:	8d 91       	ld	r24, X+
     864:	9c 91       	ld	r25, X
     866:	dc 01       	movw	r26, r24
     868:	ed 91       	ld	r30, X+
     86a:	fc 91       	ld	r31, X
     86c:	04 80       	ldd	r0, Z+4	; 0x04
     86e:	f5 81       	ldd	r31, Z+5	; 0x05
     870:	e0 2d       	mov	r30, r0
     872:	09 94       	ijmp

00000874 <_ZN13Adafruit_FONA5writeEh>:
     874:	83 5e       	subi	r24, 0xE3	; 227
     876:	9e 4f       	sbci	r25, 0xFE	; 254
     878:	dc 01       	movw	r26, r24
     87a:	8d 91       	ld	r24, X+
     87c:	9c 91       	ld	r25, X
     87e:	dc 01       	movw	r26, r24
     880:	ed 91       	ld	r30, X+
     882:	fc 91       	ld	r31, X
     884:	01 90       	ld	r0, Z+
     886:	f0 81       	ld	r31, Z
     888:	e0 2d       	mov	r30, r0
     88a:	09 94       	ijmp

0000088c <_ZN13Adafruit_FONA4readEv>:
     88c:	83 5e       	subi	r24, 0xE3	; 227
     88e:	9e 4f       	sbci	r25, 0xFE	; 254
     890:	dc 01       	movw	r26, r24
     892:	8d 91       	ld	r24, X+
     894:	9c 91       	ld	r25, X
     896:	dc 01       	movw	r26, r24
     898:	ed 91       	ld	r30, X+
     89a:	fc 91       	ld	r31, X
     89c:	06 80       	ldd	r0, Z+6	; 0x06
     89e:	f7 81       	ldd	r31, Z+7	; 0x07
     8a0:	e0 2d       	mov	r30, r0
     8a2:	09 94       	ijmp

000008a4 <_ZN13Adafruit_FONA4peekEv>:
     8a4:	83 5e       	subi	r24, 0xE3	; 227
     8a6:	9e 4f       	sbci	r25, 0xFE	; 254
     8a8:	dc 01       	movw	r26, r24
     8aa:	8d 91       	ld	r24, X+
     8ac:	9c 91       	ld	r25, X
     8ae:	dc 01       	movw	r26, r24
     8b0:	ed 91       	ld	r30, X+
     8b2:	fc 91       	ld	r31, X
     8b4:	00 84       	ldd	r0, Z+8	; 0x08
     8b6:	f1 85       	ldd	r31, Z+9	; 0x09
     8b8:	e0 2d       	mov	r30, r0
     8ba:	09 94       	ijmp

000008bc <_ZN13Adafruit_FONA5flushEv>:
     8bc:	83 5e       	subi	r24, 0xE3	; 227
     8be:	9e 4f       	sbci	r25, 0xFE	; 254
     8c0:	dc 01       	movw	r26, r24
     8c2:	8d 91       	ld	r24, X+
     8c4:	9c 91       	ld	r25, X
     8c6:	dc 01       	movw	r26, r24
     8c8:	ed 91       	ld	r30, X+
     8ca:	fc 91       	ld	r31, X
     8cc:	02 84       	ldd	r0, Z+10	; 0x0a
     8ce:	f3 85       	ldd	r31, Z+11	; 0x0b
     8d0:	e0 2d       	mov	r30, r0
     8d2:	09 94       	ijmp

000008d4 <_ZN13Adafruit_FONAC1Eab>:
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	ec 01       	movw	r28, r24
     8de:	06 2f       	mov	r16, r22
     8e0:	14 2f       	mov	r17, r20
     8e2:	1b 82       	std	Y+3, r1	; 0x03
     8e4:	1a 82       	std	Y+2, r1	; 0x02
     8e6:	88 ee       	ldi	r24, 0xE8	; 232
     8e8:	93 e0       	ldi	r25, 0x03	; 3
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	8c 83       	std	Y+4, r24	; 0x04
     8f0:	9d 83       	std	Y+5, r25	; 0x05
     8f2:	ae 83       	std	Y+6, r26	; 0x06
     8f4:	bf 83       	std	Y+7, r27	; 0x07
     8f6:	8d e2       	ldi	r24, 0x2D	; 45
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	99 83       	std	Y+1, r25	; 0x01
     8fc:	88 83       	st	Y, r24
     8fe:	83 e0       	ldi	r24, 0x03	; 3
     900:	8e 87       	std	Y+14, r24	; 0x0e
     902:	6c e7       	ldi	r22, 0x7C	; 124
     904:	71 e0       	ldi	r23, 0x01	; 1
     906:	ce 01       	movw	r24, r28
     908:	8b 5e       	subi	r24, 0xEB	; 235
     90a:	9e 4f       	sbci	r25, 0xFE	; 254
     90c:	0e 94 02 20 	call	0x4004	; 0x4004 <_ZN6StringC1EPKc>
     910:	0c 87       	std	Y+12, r16	; 0x0c
     912:	1d 87       	std	Y+13, r17	; 0x0d
     914:	fe 01       	movw	r30, r28
     916:	e2 5f       	subi	r30, 0xF2	; 242
     918:	fe 4f       	sbci	r31, 0xFE	; 254
     91a:	89 e8       	ldi	r24, 0x89	; 137
     91c:	93 e0       	ldi	r25, 0x03	; 3
     91e:	91 83       	std	Z+1, r25	; 0x01
     920:	80 83       	st	Z, r24
     922:	32 96       	adiw	r30, 0x02	; 2
     924:	11 82       	std	Z+1, r1	; 0x01
     926:	10 82       	st	Z, r1
     928:	32 96       	adiw	r30, 0x02	; 2
     92a:	11 82       	std	Z+1, r1	; 0x01
     92c:	10 82       	st	Z, r1
     92e:	3b 96       	adiw	r30, 0x0b	; 11
     930:	11 82       	std	Z+1, r1	; 0x01
     932:	10 82       	st	Z, r1
     934:	39 97       	sbiw	r30, 0x09	; 9
     936:	10 82       	st	Z, r1
     938:	c5 5e       	subi	r28, 0xE5	; 229
     93a:	de 4f       	sbci	r29, 0xFE	; 254
     93c:	86 e8       	ldi	r24, 0x86	; 134
     93e:	93 e0       	ldi	r25, 0x03	; 3
     940:	99 83       	std	Y+1, r25	; 0x01
     942:	88 83       	st	Y, r24
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	0f 91       	pop	r16
     94c:	08 95       	ret

0000094e <_ZN13Adafruit_FONA19internalReadRawDataEPcj>:
     94e:	af 92       	push	r10
     950:	bf 92       	push	r11
     952:	cf 92       	push	r12
     954:	df 92       	push	r13
     956:	ef 92       	push	r14
     958:	ff 92       	push	r15
     95a:	0f 93       	push	r16
     95c:	1f 93       	push	r17
     95e:	cf 93       	push	r28
     960:	df 93       	push	r29
     962:	8c 01       	movw	r16, r24
     964:	5b 01       	movw	r10, r22
     966:	7a 01       	movw	r14, r20
     968:	c1 2c       	mov	r12, r1
     96a:	d1 2c       	mov	r13, r1
     96c:	e5 01       	movw	r28, r10
     96e:	cc 0d       	add	r28, r12
     970:	dd 1d       	adc	r29, r13
     972:	e1 14       	cp	r14, r1
     974:	f1 04       	cpc	r15, r1
     976:	09 f1       	breq	.+66     	; 0x9ba <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x6c>
     978:	d8 01       	movw	r26, r16
     97a:	ed 91       	ld	r30, X+
     97c:	fc 91       	ld	r31, X
     97e:	04 80       	ldd	r0, Z+4	; 0x04
     980:	f5 81       	ldd	r31, Z+5	; 0x05
     982:	e0 2d       	mov	r30, r0
     984:	c8 01       	movw	r24, r16
     986:	09 95       	icall
     988:	89 2b       	or	r24, r25
     98a:	81 f3       	breq	.-32     	; 0x96c <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x1e>
     98c:	d8 01       	movw	r26, r16
     98e:	ed 91       	ld	r30, X+
     990:	fc 91       	ld	r31, X
     992:	06 80       	ldd	r0, Z+6	; 0x06
     994:	f7 81       	ldd	r31, Z+7	; 0x07
     996:	e0 2d       	mov	r30, r0
     998:	c8 01       	movw	r24, r16
     99a:	09 95       	icall
     99c:	89 93       	st	Y+, r24
     99e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     9a2:	95 ff       	sbrs	r25, 5
     9a4:	fc cf       	rjmp	.-8      	; 0x99e <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x50>
     9a6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     9aa:	bf ef       	ldi	r27, 0xFF	; 255
     9ac:	cb 1a       	sub	r12, r27
     9ae:	db 0a       	sbc	r13, r27
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	e8 1a       	sub	r14, r24
     9b4:	f1 08       	sbc	r15, r1
     9b6:	01 f7       	brne	.-64     	; 0x978 <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x2a>
     9b8:	d9 cf       	rjmp	.-78     	; 0x96c <_ZN13Adafruit_FONA19internalReadRawDataEPcj+0x1e>
     9ba:	18 82       	st	Y, r1
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	1f 91       	pop	r17
     9c2:	0f 91       	pop	r16
     9c4:	ff 90       	pop	r15
     9c6:	ef 90       	pop	r14
     9c8:	df 90       	pop	r13
     9ca:	cf 90       	pop	r12
     9cc:	bf 90       	pop	r11
     9ce:	af 90       	pop	r10
     9d0:	08 95       	ret

000009d2 <_ZN13Adafruit_FONA12setUserAgentE6String>:
     9d2:	8b 5e       	subi	r24, 0xEB	; 235
     9d4:	9e 4f       	sbci	r25, 0xFE	; 254
     9d6:	0c 94 17 20 	jmp	0x402e	; 0x402e <_ZN6StringaSERKS_>

000009da <_ZN13Adafruit_FONA10flushInputEv>:
     9da:	0f 93       	push	r16
     9dc:	1f 93       	push	r17
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	ec 01       	movw	r28, r24
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	8c 01       	movw	r16, r24
     9ea:	0f 5f       	subi	r16, 0xFF	; 255
     9ec:	1f 4f       	sbci	r17, 0xFF	; 255
     9ee:	88 97       	sbiw	r24, 0x28	; 40
     9f0:	d8 f4       	brcc	.+54     	; 0xa28 <_ZN13Adafruit_FONA10flushInputEv+0x4e>
     9f2:	e8 81       	ld	r30, Y
     9f4:	f9 81       	ldd	r31, Y+1	; 0x01
     9f6:	04 80       	ldd	r0, Z+4	; 0x04
     9f8:	f5 81       	ldd	r31, Z+5	; 0x05
     9fa:	e0 2d       	mov	r30, r0
     9fc:	ce 01       	movw	r24, r28
     9fe:	09 95       	icall
     a00:	89 2b       	or	r24, r25
     a02:	51 f0       	breq	.+20     	; 0xa18 <_ZN13Adafruit_FONA10flushInputEv+0x3e>
     a04:	e8 81       	ld	r30, Y
     a06:	f9 81       	ldd	r31, Y+1	; 0x01
     a08:	06 80       	ldd	r0, Z+6	; 0x06
     a0a:	f7 81       	ldd	r31, Z+7	; 0x07
     a0c:	e0 2d       	mov	r30, r0
     a0e:	ce 01       	movw	r24, r28
     a10:	09 95       	icall
     a12:	00 e0       	ldi	r16, 0x00	; 0
     a14:	10 e0       	ldi	r17, 0x00	; 0
     a16:	ed cf       	rjmp	.-38     	; 0x9f2 <_ZN13Adafruit_FONA10flushInputEv+0x18>
     a18:	61 e0       	ldi	r22, 0x01	; 1
     a1a:	70 e0       	ldi	r23, 0x00	; 0
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
     a24:	c8 01       	movw	r24, r16
     a26:	e0 cf       	rjmp	.-64     	; 0x9e8 <_ZN13Adafruit_FONA10flushInputEv+0xe>
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	08 95       	ret

00000a32 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>:
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	ec 01       	movw	r28, r24
     a3e:	8b 01       	movw	r16, r22
     a40:	f4 2e       	mov	r15, r20
     a42:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
     a46:	63 e4       	ldi	r22, 0x43	; 67
     a48:	71 e0       	ldi	r23, 0x01	; 1
     a4a:	8e e9       	ldi	r24, 0x9E	; 158
     a4c:	93 e0       	ldi	r25, 0x03	; 3
     a4e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     a52:	65 e3       	ldi	r22, 0x35	; 53
     a54:	71 e0       	ldi	r23, 0x01	; 1
     a56:	8e e9       	ldi	r24, 0x9E	; 158
     a58:	93 e0       	ldi	r25, 0x03	; 3
     a5a:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     a5e:	b8 01       	movw	r22, r16
     a60:	8e e9       	ldi	r24, 0x9E	; 158
     a62:	93 e0       	ldi	r25, 0x03	; 3
     a64:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     a68:	62 e2       	ldi	r22, 0x22	; 34
     a6a:	8e e9       	ldi	r24, 0x9E	; 158
     a6c:	93 e0       	ldi	r25, 0x03	; 3
     a6e:	0e 94 df 1c 	call	0x39be	; 0x39be <_ZN5Print7printlnEc>
     a72:	c3 5e       	subi	r28, 0xE3	; 227
     a74:	de 4f       	sbci	r29, 0xFE	; 254
     a76:	67 e2       	ldi	r22, 0x27	; 39
     a78:	71 e0       	ldi	r23, 0x01	; 1
     a7a:	88 81       	ld	r24, Y
     a7c:	99 81       	ldd	r25, Y+1	; 0x01
     a7e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     a82:	b8 01       	movw	r22, r16
     a84:	88 81       	ld	r24, Y
     a86:	99 81       	ldd	r25, Y+1	; 0x01
     a88:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     a8c:	88 81       	ld	r24, Y
     a8e:	99 81       	ldd	r25, Y+1	; 0x01
     a90:	ff 20       	and	r15, r15
     a92:	19 f0       	breq	.+6      	; 0xa9a <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb+0x68>
     a94:	63 e2       	ldi	r22, 0x23	; 35
     a96:	71 e0       	ldi	r23, 0x01	; 1
     a98:	02 c0       	rjmp	.+4      	; 0xa9e <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb+0x6c>
     a9a:	60 e2       	ldi	r22, 0x20	; 32
     a9c:	71 e0       	ldi	r23, 0x01	; 1
     a9e:	df 91       	pop	r29
     aa0:	cf 91       	pop	r28
     aa2:	1f 91       	pop	r17
     aa4:	0f 91       	pop	r16
     aa6:	ff 90       	pop	r15
     aa8:	0c 94 7c 1c 	jmp	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>

00000aac <_ZN13Adafruit_FONA8readlineEjb>:
     aac:	bf 92       	push	r11
     aae:	cf 92       	push	r12
     ab0:	df 92       	push	r13
     ab2:	ef 92       	push	r14
     ab4:	ff 92       	push	r15
     ab6:	0f 93       	push	r16
     ab8:	1f 93       	push	r17
     aba:	cf 93       	push	r28
     abc:	df 93       	push	r29
     abe:	7c 01       	movw	r14, r24
     ac0:	b4 2e       	mov	r11, r20
     ac2:	8b 01       	movw	r16, r22
     ac4:	00 0f       	add	r16, r16
     ac6:	11 1f       	adc	r17, r17
     ac8:	00 0f       	add	r16, r16
     aca:	11 1f       	adc	r17, r17
     acc:	c0 e0       	ldi	r28, 0x00	; 0
     ace:	d0 e0       	ldi	r29, 0x00	; 0
     ad0:	67 01       	movw	r12, r14
     ad2:	83 ee       	ldi	r24, 0xE3	; 227
     ad4:	c8 1a       	sub	r12, r24
     ad6:	8e ef       	ldi	r24, 0xFE	; 254
     ad8:	d8 0a       	sbc	r13, r24
     ada:	01 15       	cp	r16, r1
     adc:	11 05       	cpc	r17, r1
     ade:	c9 f1       	breq	.+114    	; 0xb52 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     ae0:	ce 3f       	cpi	r28, 0xFE	; 254
     ae2:	d1 05       	cpc	r29, r1
     ae4:	98 f0       	brcs	.+38     	; 0xb0c <_ZN13Adafruit_FONA8readlineEjb+0x60>
     ae6:	62 e9       	ldi	r22, 0x92	; 146
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	8e e9       	ldi	r24, 0x9E	; 158
     aec:	93 e0       	ldi	r25, 0x03	; 3
     aee:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
     af2:	2f c0       	rjmp	.+94     	; 0xb52 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     af4:	f6 01       	movw	r30, r12
     af6:	80 81       	ld	r24, Z
     af8:	91 81       	ldd	r25, Z+1	; 0x01
     afa:	dc 01       	movw	r26, r24
     afc:	ed 91       	ld	r30, X+
     afe:	fc 91       	ld	r31, X
     b00:	06 80       	ldd	r0, Z+6	; 0x06
     b02:	f7 81       	ldd	r31, Z+7	; 0x07
     b04:	e0 2d       	mov	r30, r0
     b06:	09 95       	icall
     b08:	8d 30       	cpi	r24, 0x0D	; 13
     b0a:	69 f4       	brne	.+26     	; 0xb26 <_ZN13Adafruit_FONA8readlineEjb+0x7a>
     b0c:	d6 01       	movw	r26, r12
     b0e:	8d 91       	ld	r24, X+
     b10:	9c 91       	ld	r25, X
     b12:	dc 01       	movw	r26, r24
     b14:	ed 91       	ld	r30, X+
     b16:	fc 91       	ld	r31, X
     b18:	04 80       	ldd	r0, Z+4	; 0x04
     b1a:	f5 81       	ldd	r31, Z+5	; 0x05
     b1c:	e0 2d       	mov	r30, r0
     b1e:	09 95       	icall
     b20:	89 2b       	or	r24, r25
     b22:	41 f7       	brne	.-48     	; 0xaf4 <_ZN13Adafruit_FONA8readlineEjb+0x48>
     b24:	0c c0       	rjmp	.+24     	; 0xb3e <_ZN13Adafruit_FONA8readlineEjb+0x92>
     b26:	8a 30       	cpi	r24, 0x0A	; 10
     b28:	21 f4       	brne	.+8      	; 0xb32 <_ZN13Adafruit_FONA8readlineEjb+0x86>
     b2a:	20 97       	sbiw	r28, 0x00	; 0
     b2c:	79 f3       	breq	.-34     	; 0xb0c <_ZN13Adafruit_FONA8readlineEjb+0x60>
     b2e:	bb 20       	and	r11, r11
     b30:	81 f0       	breq	.+32     	; 0xb52 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b32:	f7 01       	movw	r30, r14
     b34:	ec 0f       	add	r30, r28
     b36:	fd 1f       	adc	r31, r29
     b38:	87 87       	std	Z+15, r24	; 0x0f
     b3a:	21 96       	adiw	r28, 0x01	; 1
     b3c:	e7 cf       	rjmp	.-50     	; 0xb0c <_ZN13Adafruit_FONA8readlineEjb+0x60>
     b3e:	01 50       	subi	r16, 0x01	; 1
     b40:	11 09       	sbc	r17, r1
     b42:	39 f0       	breq	.+14     	; 0xb52 <_ZN13Adafruit_FONA8readlineEjb+0xa6>
     b44:	61 e0       	ldi	r22, 0x01	; 1
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
     b50:	c4 cf       	rjmp	.-120    	; 0xada <_ZN13Adafruit_FONA8readlineEjb+0x2e>
     b52:	f7 01       	movw	r30, r14
     b54:	ec 0f       	add	r30, r28
     b56:	fd 1f       	adc	r31, r29
     b58:	17 86       	std	Z+15, r1	; 0x0f
     b5a:	8c 2f       	mov	r24, r28
     b5c:	df 91       	pop	r29
     b5e:	cf 91       	pop	r28
     b60:	1f 91       	pop	r17
     b62:	0f 91       	pop	r16
     b64:	ff 90       	pop	r15
     b66:	ef 90       	pop	r14
     b68:	df 90       	pop	r13
     b6a:	cf 90       	pop	r12
     b6c:	bf 90       	pop	r11
     b6e:	08 95       	ret

00000b70 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>:
     b70:	0f 93       	push	r16
     b72:	1f 93       	push	r17
     b74:	cf 93       	push	r28
     b76:	df 93       	push	r29
     b78:	ec 01       	movw	r28, r24
     b7a:	8b 01       	movw	r16, r22
     b7c:	ba 01       	movw	r22, r20
     b7e:	40 e0       	ldi	r20, 0x00	; 0
     b80:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
     b84:	68 e9       	ldi	r22, 0x98	; 152
     b86:	70 e0       	ldi	r23, 0x00	; 0
     b88:	8e e9       	ldi	r24, 0x9E	; 158
     b8a:	93 e0       	ldi	r25, 0x03	; 3
     b8c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     b90:	2f 96       	adiw	r28, 0x0f	; 15
     b92:	be 01       	movw	r22, r28
     b94:	8e e9       	ldi	r24, 0x9E	; 158
     b96:	93 e0       	ldi	r25, 0x03	; 3
     b98:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
     b9c:	b8 01       	movw	r22, r16
     b9e:	ce 01       	movw	r24, r28
     ba0:	0e 94 77 25 	call	0x4aee	; 0x4aee <strcmp_P>
     ba4:	21 e0       	ldi	r18, 0x01	; 1
     ba6:	89 2b       	or	r24, r25
     ba8:	09 f0       	breq	.+2      	; 0xbac <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj+0x3c>
     baa:	20 e0       	ldi	r18, 0x00	; 0
     bac:	82 2f       	mov	r24, r18
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	1f 91       	pop	r17
     bb4:	0f 91       	pop	r16
     bb6:	08 95       	ret

00000bb8 <_ZN13Adafruit_FONA13HTTP_para_endEb>:
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	ec 01       	movw	r28, r24
     bbe:	fc 01       	movw	r30, r24
     bc0:	e3 5e       	subi	r30, 0xE3	; 227
     bc2:	fe 4f       	sbci	r31, 0xFE	; 254
     bc4:	66 23       	and	r22, r22
     bc6:	31 f0       	breq	.+12     	; 0xbd4 <_ZN13Adafruit_FONA13HTTP_para_endEb+0x1c>
     bc8:	62 e2       	ldi	r22, 0x22	; 34
     bca:	80 81       	ld	r24, Z
     bcc:	91 81       	ldd	r25, Z+1	; 0x01
     bce:	0e 94 df 1c 	call	0x39be	; 0x39be <_ZN5Print7printlnEc>
     bd2:	04 c0       	rjmp	.+8      	; 0xbdc <_ZN13Adafruit_FONA13HTTP_para_endEb+0x24>
     bd4:	80 81       	ld	r24, Z
     bd6:	91 81       	ldd	r25, Z+1	; 0x01
     bd8:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
     bdc:	fe 01       	movw	r30, r28
     bde:	e5 5e       	subi	r30, 0xE5	; 229
     be0:	fe 4f       	sbci	r31, 0xFE	; 254
     be2:	60 81       	ld	r22, Z
     be4:	71 81       	ldd	r23, Z+1	; 0x01
     be6:	40 e1       	ldi	r20, 0x10	; 16
     be8:	57 e2       	ldi	r21, 0x27	; 39
     bea:	ce 01       	movw	r24, r28
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>

00000bf4 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelper6String>:
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	ec 01       	movw	r28, r24
     bfe:	8a 01       	movw	r16, r20
     c00:	41 e0       	ldi	r20, 0x01	; 1
     c02:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c06:	fe 01       	movw	r30, r28
     c08:	e3 5e       	subi	r30, 0xE3	; 227
     c0a:	fe 4f       	sbci	r31, 0xFE	; 254
     c0c:	b8 01       	movw	r22, r16
     c0e:	80 81       	ld	r24, Z
     c10:	91 81       	ldd	r25, Z+1	; 0x01
     c12:	0e 94 a0 1c 	call	0x3940	; 0x3940 <_ZN5Print5printERK6String>
     c16:	61 e0       	ldi	r22, 0x01	; 1
     c18:	ce 01       	movw	r24, r28
     c1a:	df 91       	pop	r29
     c1c:	cf 91       	pop	r28
     c1e:	1f 91       	pop	r17
     c20:	0f 91       	pop	r16
     c22:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c26 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>:
     c26:	0f 93       	push	r16
     c28:	1f 93       	push	r17
     c2a:	cf 93       	push	r28
     c2c:	df 93       	push	r29
     c2e:	ec 01       	movw	r28, r24
     c30:	8a 01       	movw	r16, r20
     c32:	41 e0       	ldi	r20, 0x01	; 1
     c34:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c38:	fe 01       	movw	r30, r28
     c3a:	e3 5e       	subi	r30, 0xE3	; 227
     c3c:	fe 4f       	sbci	r31, 0xFE	; 254
     c3e:	b8 01       	movw	r22, r16
     c40:	80 81       	ld	r24, Z
     c42:	91 81       	ldd	r25, Z+1	; 0x01
     c44:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     c48:	61 e0       	ldi	r22, 0x01	; 1
     c4a:	ce 01       	movw	r24, r28
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	1f 91       	pop	r17
     c52:	0f 91       	pop	r16
     c54:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c58 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperl>:
     c58:	cf 92       	push	r12
     c5a:	df 92       	push	r13
     c5c:	ef 92       	push	r14
     c5e:	ff 92       	push	r15
     c60:	cf 93       	push	r28
     c62:	df 93       	push	r29
     c64:	ec 01       	movw	r28, r24
     c66:	69 01       	movw	r12, r18
     c68:	7a 01       	movw	r14, r20
     c6a:	40 e0       	ldi	r20, 0x00	; 0
     c6c:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN13Adafruit_FONA15HTTP_para_startEPK19__FlashStringHelperb>
     c70:	fe 01       	movw	r30, r28
     c72:	e3 5e       	subi	r30, 0xE3	; 227
     c74:	fe 4f       	sbci	r31, 0xFE	; 254
     c76:	2a e0       	ldi	r18, 0x0A	; 10
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	b7 01       	movw	r22, r14
     c7c:	a6 01       	movw	r20, r12
     c7e:	80 81       	ld	r24, Z
     c80:	91 81       	ldd	r25, Z+1	; 0x01
     c82:	0e 94 8a 1d 	call	0x3b14	; 0x3b14 <_ZN5Print5printEli>
     c86:	60 e0       	ldi	r22, 0x00	; 0
     c88:	ce 01       	movw	r24, r28
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	ff 90       	pop	r15
     c90:	ef 90       	pop	r14
     c92:	df 90       	pop	r13
     c94:	cf 90       	pop	r12
     c96:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <_ZN13Adafruit_FONA13HTTP_para_endEb>

00000c9a <_ZN13Adafruit_FONA9HTTP_dataEmm>:
     c9a:	4f 92       	push	r4
     c9c:	5f 92       	push	r5
     c9e:	6f 92       	push	r6
     ca0:	7f 92       	push	r7
     ca2:	8f 92       	push	r8
     ca4:	9f 92       	push	r9
     ca6:	af 92       	push	r10
     ca8:	bf 92       	push	r11
     caa:	ef 92       	push	r14
     cac:	ff 92       	push	r15
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	7c 01       	movw	r14, r24
     cb8:	2a 01       	movw	r4, r20
     cba:	3b 01       	movw	r6, r22
     cbc:	48 01       	movw	r8, r16
     cbe:	59 01       	movw	r10, r18
     cc0:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
     cc4:	69 e1       	ldi	r22, 0x19	; 25
     cc6:	71 e0       	ldi	r23, 0x01	; 1
     cc8:	8e e9       	ldi	r24, 0x9E	; 158
     cca:	93 e0       	ldi	r25, 0x03	; 3
     ccc:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     cd0:	6c e0       	ldi	r22, 0x0C	; 12
     cd2:	71 e0       	ldi	r23, 0x01	; 1
     cd4:	8e e9       	ldi	r24, 0x9E	; 158
     cd6:	93 e0       	ldi	r25, 0x03	; 3
     cd8:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     cdc:	2a e0       	ldi	r18, 0x0A	; 10
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	b3 01       	movw	r22, r6
     ce2:	a2 01       	movw	r20, r4
     ce4:	8e e9       	ldi	r24, 0x9E	; 158
     ce6:	93 e0       	ldi	r25, 0x03	; 3
     ce8:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <_ZN5Print5printEmi>
     cec:	6c e2       	ldi	r22, 0x2C	; 44
     cee:	8e e9       	ldi	r24, 0x9E	; 158
     cf0:	93 e0       	ldi	r25, 0x03	; 3
     cf2:	0e 94 b0 1c 	call	0x3960	; 0x3960 <_ZN5Print5printEc>
     cf6:	2a e0       	ldi	r18, 0x0A	; 10
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	b5 01       	movw	r22, r10
     cfc:	a4 01       	movw	r20, r8
     cfe:	8e e9       	ldi	r24, 0x9E	; 158
     d00:	93 e0       	ldi	r25, 0x03	; 3
     d02:	0e 94 78 1d 	call	0x3af0	; 0x3af0 <_ZN5Print7printlnEmi>
     d06:	e7 01       	movw	r28, r14
     d08:	c3 5e       	subi	r28, 0xE3	; 227
     d0a:	de 4f       	sbci	r29, 0xFE	; 254
     d0c:	6f ef       	ldi	r22, 0xFF	; 255
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	88 81       	ld	r24, Y
     d12:	99 81       	ldd	r25, Y+1	; 0x01
     d14:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     d18:	2a e0       	ldi	r18, 0x0A	; 10
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	b3 01       	movw	r22, r6
     d1e:	a2 01       	movw	r20, r4
     d20:	88 81       	ld	r24, Y
     d22:	99 81       	ldd	r25, Y+1	; 0x01
     d24:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <_ZN5Print5printEmi>
     d28:	67 e0       	ldi	r22, 0x07	; 7
     d2a:	71 e0       	ldi	r23, 0x01	; 1
     d2c:	88 81       	ld	r24, Y
     d2e:	99 81       	ldd	r25, Y+1	; 0x01
     d30:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
     d34:	2a e0       	ldi	r18, 0x0A	; 10
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	b5 01       	movw	r22, r10
     d3a:	a4 01       	movw	r20, r8
     d3c:	88 81       	ld	r24, Y
     d3e:	99 81       	ldd	r25, Y+1	; 0x01
     d40:	0e 94 78 1d 	call	0x3af0	; 0x3af0 <_ZN5Print7printlnEmi>
     d44:	40 e1       	ldi	r20, 0x10	; 16
     d46:	57 e2       	ldi	r21, 0x27	; 39
     d48:	66 ef       	ldi	r22, 0xF6	; 246
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	c7 01       	movw	r24, r14
     d4e:	df 91       	pop	r29
     d50:	cf 91       	pop	r28
     d52:	1f 91       	pop	r17
     d54:	0f 91       	pop	r16
     d56:	ff 90       	pop	r15
     d58:	ef 90       	pop	r14
     d5a:	bf 90       	pop	r11
     d5c:	af 90       	pop	r10
     d5e:	9f 90       	pop	r9
     d60:	8f 90       	pop	r8
     d62:	7f 90       	pop	r7
     d64:	6f 90       	pop	r6
     d66:	5f 90       	pop	r5
     d68:	4f 90       	pop	r4
     d6a:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>

00000d6e <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>:
     d6e:	ef 92       	push	r14
     d70:	ff 92       	push	r15
     d72:	0f 93       	push	r16
     d74:	1f 93       	push	r17
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	ec 01       	movw	r28, r24
     d7c:	8b 01       	movw	r16, r22
     d7e:	7a 01       	movw	r14, r20
     d80:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
     d84:	6b e8       	ldi	r22, 0x8B	; 139
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	8e e9       	ldi	r24, 0x9E	; 158
     d8a:	93 e0       	ldi	r25, 0x03	; 3
     d8c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     d90:	b8 01       	movw	r22, r16
     d92:	8e e9       	ldi	r24, 0x9E	; 158
     d94:	93 e0       	ldi	r25, 0x03	; 3
     d96:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
     d9a:	fe 01       	movw	r30, r28
     d9c:	e3 5e       	subi	r30, 0xE3	; 227
     d9e:	fe 4f       	sbci	r31, 0xFE	; 254
     da0:	b8 01       	movw	r22, r16
     da2:	80 81       	ld	r24, Z
     da4:	91 81       	ldd	r25, Z+1	; 0x01
     da6:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
     daa:	40 e0       	ldi	r20, 0x00	; 0
     dac:	b7 01       	movw	r22, r14
     dae:	ce 01       	movw	r24, r28
     db0:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
     db4:	18 2f       	mov	r17, r24
     db6:	64 e8       	ldi	r22, 0x84	; 132
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	8e e9       	ldi	r24, 0x9E	; 158
     dbc:	93 e0       	ldi	r25, 0x03	; 3
     dbe:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     dc2:	be 01       	movw	r22, r28
     dc4:	61 5f       	subi	r22, 0xF1	; 241
     dc6:	7f 4f       	sbci	r23, 0xFF	; 255
     dc8:	8e e9       	ldi	r24, 0x9E	; 158
     dca:	93 e0       	ldi	r25, 0x03	; 3
     dcc:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
     dd0:	81 2f       	mov	r24, r17
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	ff 90       	pop	r15
     ddc:	ef 90       	pop	r14
     dde:	08 95       	ret

00000de0 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>:
     de0:	8f 92       	push	r8
     de2:	9f 92       	push	r9
     de4:	af 92       	push	r10
     de6:	bf 92       	push	r11
     de8:	cf 92       	push	r12
     dea:	df 92       	push	r13
     dec:	ef 92       	push	r14
     dee:	ff 92       	push	r15
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	cf 93       	push	r28
     df6:	df 93       	push	r29
     df8:	ec 01       	movw	r28, r24
     dfa:	6b 01       	movw	r12, r22
     dfc:	49 01       	movw	r8, r18
     dfe:	5a 01       	movw	r10, r20
     e00:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
     e04:	6d e7       	ldi	r22, 0x7D	; 125
     e06:	70 e0       	ldi	r23, 0x00	; 0
     e08:	8e e9       	ldi	r24, 0x9E	; 158
     e0a:	93 e0       	ldi	r25, 0x03	; 3
     e0c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     e10:	b6 01       	movw	r22, r12
     e12:	8e e9       	ldi	r24, 0x9E	; 158
     e14:	93 e0       	ldi	r25, 0x03	; 3
     e16:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     e1a:	2a e0       	ldi	r18, 0x0A	; 10
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	b5 01       	movw	r22, r10
     e20:	a4 01       	movw	r20, r8
     e22:	8e e9       	ldi	r24, 0x9E	; 158
     e24:	93 e0       	ldi	r25, 0x03	; 3
     e26:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN5Print7printlnEli>
     e2a:	7e 01       	movw	r14, r28
     e2c:	83 ee       	ldi	r24, 0xE3	; 227
     e2e:	e8 1a       	sub	r14, r24
     e30:	8e ef       	ldi	r24, 0xFE	; 254
     e32:	f8 0a       	sbc	r15, r24
     e34:	b6 01       	movw	r22, r12
     e36:	f7 01       	movw	r30, r14
     e38:	80 81       	ld	r24, Z
     e3a:	91 81       	ldd	r25, Z+1	; 0x01
     e3c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     e40:	2a e0       	ldi	r18, 0x0A	; 10
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	b5 01       	movw	r22, r10
     e46:	a4 01       	movw	r20, r8
     e48:	f7 01       	movw	r30, r14
     e4a:	80 81       	ld	r24, Z
     e4c:	91 81       	ldd	r25, Z+1	; 0x01
     e4e:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN5Print7printlnEli>
     e52:	40 e0       	ldi	r20, 0x00	; 0
     e54:	b8 01       	movw	r22, r16
     e56:	ce 01       	movw	r24, r28
     e58:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
     e5c:	18 2f       	mov	r17, r24
     e5e:	66 e7       	ldi	r22, 0x76	; 118
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	8e e9       	ldi	r24, 0x9E	; 158
     e64:	93 e0       	ldi	r25, 0x03	; 3
     e66:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     e6a:	be 01       	movw	r22, r28
     e6c:	61 5f       	subi	r22, 0xF1	; 241
     e6e:	7f 4f       	sbci	r23, 0xFF	; 255
     e70:	8e e9       	ldi	r24, 0x9E	; 158
     e72:	93 e0       	ldi	r25, 0x03	; 3
     e74:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
     e78:	81 2f       	mov	r24, r17
     e7a:	df 91       	pop	r29
     e7c:	cf 91       	pop	r28
     e7e:	1f 91       	pop	r17
     e80:	0f 91       	pop	r16
     e82:	ff 90       	pop	r15
     e84:	ef 90       	pop	r14
     e86:	df 90       	pop	r13
     e88:	cf 90       	pop	r12
     e8a:	bf 90       	pop	r11
     e8c:	af 90       	pop	r10
     e8e:	9f 90       	pop	r9
     e90:	8f 90       	pop	r8
     e92:	08 95       	ret

00000e94 <_ZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_j>:
     e94:	af 92       	push	r10
     e96:	bf 92       	push	r11
     e98:	cf 92       	push	r12
     e9a:	df 92       	push	r13
     e9c:	ef 92       	push	r14
     e9e:	ff 92       	push	r15
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	ec 01       	movw	r28, r24
     eaa:	6b 01       	movw	r12, r22
     eac:	7a 01       	movw	r14, r20
     eae:	59 01       	movw	r10, r18
     eb0:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
     eb4:	6f e6       	ldi	r22, 0x6F	; 111
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	8e e9       	ldi	r24, 0x9E	; 158
     eba:	93 e0       	ldi	r25, 0x03	; 3
     ebc:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     ec0:	b6 01       	movw	r22, r12
     ec2:	8e e9       	ldi	r24, 0x9E	; 158
     ec4:	93 e0       	ldi	r25, 0x03	; 3
     ec6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     eca:	62 e2       	ldi	r22, 0x22	; 34
     ecc:	8e e9       	ldi	r24, 0x9E	; 158
     ece:	93 e0       	ldi	r25, 0x03	; 3
     ed0:	0e 94 b0 1c 	call	0x3960	; 0x3960 <_ZN5Print5printEc>
     ed4:	b7 01       	movw	r22, r14
     ed6:	8e e9       	ldi	r24, 0x9E	; 158
     ed8:	93 e0       	ldi	r25, 0x03	; 3
     eda:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     ede:	62 e2       	ldi	r22, 0x22	; 34
     ee0:	8e e9       	ldi	r24, 0x9E	; 158
     ee2:	93 e0       	ldi	r25, 0x03	; 3
     ee4:	0e 94 df 1c 	call	0x39be	; 0x39be <_ZN5Print7printlnEc>
     ee8:	8e 01       	movw	r16, r28
     eea:	03 5e       	subi	r16, 0xE3	; 227
     eec:	1e 4f       	sbci	r17, 0xFE	; 254
     eee:	b6 01       	movw	r22, r12
     ef0:	f8 01       	movw	r30, r16
     ef2:	80 81       	ld	r24, Z
     ef4:	91 81       	ldd	r25, Z+1	; 0x01
     ef6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     efa:	62 e2       	ldi	r22, 0x22	; 34
     efc:	f8 01       	movw	r30, r16
     efe:	80 81       	ld	r24, Z
     f00:	91 81       	ldd	r25, Z+1	; 0x01
     f02:	0e 94 b0 1c 	call	0x3960	; 0x3960 <_ZN5Print5printEc>
     f06:	b7 01       	movw	r22, r14
     f08:	f8 01       	movw	r30, r16
     f0a:	80 81       	ld	r24, Z
     f0c:	91 81       	ldd	r25, Z+1	; 0x01
     f0e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     f12:	62 e2       	ldi	r22, 0x22	; 34
     f14:	f8 01       	movw	r30, r16
     f16:	80 81       	ld	r24, Z
     f18:	91 81       	ldd	r25, Z+1	; 0x01
     f1a:	0e 94 df 1c 	call	0x39be	; 0x39be <_ZN5Print7printlnEc>
     f1e:	40 e0       	ldi	r20, 0x00	; 0
     f20:	b5 01       	movw	r22, r10
     f22:	ce 01       	movw	r24, r28
     f24:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
     f28:	18 2f       	mov	r17, r24
     f2a:	68 e6       	ldi	r22, 0x68	; 104
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	8e e9       	ldi	r24, 0x9E	; 158
     f30:	93 e0       	ldi	r25, 0x03	; 3
     f32:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
     f36:	be 01       	movw	r22, r28
     f38:	61 5f       	subi	r22, 0xF1	; 241
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255
     f3c:	8e e9       	ldi	r24, 0x9E	; 158
     f3e:	93 e0       	ldi	r25, 0x03	; 3
     f40:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
     f44:	81 2f       	mov	r24, r17
     f46:	df 91       	pop	r29
     f48:	cf 91       	pop	r28
     f4a:	1f 91       	pop	r17
     f4c:	0f 91       	pop	r16
     f4e:	ff 90       	pop	r15
     f50:	ef 90       	pop	r14
     f52:	df 90       	pop	r13
     f54:	cf 90       	pop	r12
     f56:	bf 90       	pop	r11
     f58:	af 90       	pop	r10
     f5a:	08 95       	ret

00000f5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>:
     f5c:	0f 93       	push	r16
     f5e:	1f 93       	push	r17
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	ec 01       	movw	r28, r24
     f66:	8a 01       	movw	r16, r20
     f68:	a9 01       	movw	r20, r18
     f6a:	0e 94 b7 06 	call	0xd6e	; 0xd6e <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>
     f6e:	88 23       	and	r24, r24
     f70:	41 f0       	breq	.+16     	; 0xf82 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j+0x26>
     f72:	b8 01       	movw	r22, r16
     f74:	ce 01       	movw	r24, r28
     f76:	0f 96       	adiw	r24, 0x0f	; 15
     f78:	0e 94 77 25 	call	0x4aee	; 0x4aee <strcmp_P>
     f7c:	21 e0       	ldi	r18, 0x01	; 1
     f7e:	89 2b       	or	r24, r25
     f80:	09 f0       	breq	.+2      	; 0xf84 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j+0x28>
     f82:	20 e0       	ldi	r18, 0x00	; 0
     f84:	82 2f       	mov	r24, r18
     f86:	df 91       	pop	r29
     f88:	cf 91       	pop	r28
     f8a:	1f 91       	pop	r17
     f8c:	0f 91       	pop	r16
     f8e:	08 95       	ret

00000f90 <_ZN13Adafruit_FONA5beginEhh>:
     f90:	cf 92       	push	r12
     f92:	df 92       	push	r13
     f94:	ef 92       	push	r14
     f96:	ff 92       	push	r15
     f98:	0f 93       	push	r16
     f9a:	1f 93       	push	r17
     f9c:	cf 93       	push	r28
     f9e:	df 93       	push	r29
     fa0:	ec 01       	movw	r28, r24
     fa2:	f6 2e       	mov	r15, r22
     fa4:	e4 2e       	mov	r14, r20
     fa6:	8f e1       	ldi	r24, 0x1F	; 31
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	0e 94 3b 1c 	call	0x3876	; 0x3876 <_Znwj>
     fae:	8c 01       	movw	r16, r24
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	4e 2d       	mov	r20, r14
     fb4:	6f 2d       	mov	r22, r15
     fb6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN14SoftwareSerialC1Ehhb>
     fba:	7e 01       	movw	r14, r28
     fbc:	83 ee       	ldi	r24, 0xE3	; 227
     fbe:	e8 1a       	sub	r14, r24
     fc0:	8e ef       	ldi	r24, 0xFE	; 254
     fc2:	f8 0a       	sbc	r15, r24
     fc4:	d7 01       	movw	r26, r14
     fc6:	0d 93       	st	X+, r16
     fc8:	1c 93       	st	X, r17
     fca:	40 ec       	ldi	r20, 0xC0	; 192
     fcc:	52 e1       	ldi	r21, 0x12	; 18
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	c8 01       	movw	r24, r16
     fd4:	0e 94 68 22 	call	0x44d0	; 0x44d0 <_ZN14SoftwareSerial5beginEl>
     fd8:	61 e0       	ldi	r22, 0x01	; 1
     fda:	8c 85       	ldd	r24, Y+12	; 0x0c
     fdc:	0e 94 29 1f 	call	0x3e52	; 0x3e52 <pinMode>
     fe0:	61 e0       	ldi	r22, 0x01	; 1
     fe2:	8c 85       	ldd	r24, Y+12	; 0x0c
     fe4:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
     fe8:	6a e0       	ldi	r22, 0x0A	; 10
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	80 e0       	ldi	r24, 0x00	; 0
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
     ff4:	60 e0       	ldi	r22, 0x00	; 0
     ff6:	8c 85       	ldd	r24, Y+12	; 0x0c
     ff8:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
     ffc:	64 e6       	ldi	r22, 0x64	; 100
     ffe:	70 e0       	ldi	r23, 0x00	; 0
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    1008:	61 e0       	ldi	r22, 0x01	; 1
    100a:	8c 85       	ldd	r24, Y+12	; 0x0c
    100c:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
    1010:	65 e6       	ldi	r22, 0x65	; 101
    1012:	73 e0       	ldi	r23, 0x03	; 3
    1014:	8e e9       	ldi	r24, 0x9E	; 158
    1016:	93 e0       	ldi	r25, 0x03	; 3
    1018:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
    101c:	8e e0       	ldi	r24, 0x0E	; 14
    101e:	c8 2e       	mov	r12, r24
    1020:	d1 2c       	mov	r13, r1
    1022:	8e 01       	movw	r16, r28
    1024:	05 5e       	subi	r16, 0xE5	; 229
    1026:	1e 4f       	sbci	r17, 0xFE	; 254
    1028:	f7 01       	movw	r30, r14
    102a:	80 81       	ld	r24, Z
    102c:	91 81       	ldd	r25, Z+1	; 0x01
    102e:	dc 01       	movw	r26, r24
    1030:	ed 91       	ld	r30, X+
    1032:	fc 91       	ld	r31, X
    1034:	04 80       	ldd	r0, Z+4	; 0x04
    1036:	f5 81       	ldd	r31, Z+5	; 0x05
    1038:	e0 2d       	mov	r30, r0
    103a:	09 95       	icall
    103c:	89 2b       	or	r24, r25
    103e:	59 f0       	breq	.+22     	; 0x1056 <_ZN13Adafruit_FONA5beginEhh+0xc6>
    1040:	f7 01       	movw	r30, r14
    1042:	80 81       	ld	r24, Z
    1044:	91 81       	ldd	r25, Z+1	; 0x01
    1046:	dc 01       	movw	r26, r24
    1048:	ed 91       	ld	r30, X+
    104a:	fc 91       	ld	r31, X
    104c:	06 80       	ldd	r0, Z+6	; 0x06
    104e:	f7 81       	ldd	r31, Z+7	; 0x07
    1050:	e0 2d       	mov	r30, r0
    1052:	09 95       	icall
    1054:	e9 cf       	rjmp	.-46     	; 0x1028 <_ZN13Adafruit_FONA5beginEhh+0x98>
    1056:	f8 01       	movw	r30, r16
    1058:	40 81       	ld	r20, Z
    105a:	51 81       	ldd	r21, Z+1	; 0x01
    105c:	24 ef       	ldi	r18, 0xF4	; 244
    105e:	31 e0       	ldi	r19, 0x01	; 1
    1060:	62 e6       	ldi	r22, 0x62	; 98
    1062:	73 e0       	ldi	r23, 0x03	; 3
    1064:	ce 01       	movw	r24, r28
    1066:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    106a:	81 11       	cpse	r24, r1
    106c:	34 c0       	rjmp	.+104    	; 0x10d6 <_ZN13Adafruit_FONA5beginEhh+0x146>
    106e:	d7 01       	movw	r26, r14
    1070:	8d 91       	ld	r24, X+
    1072:	9c 91       	ld	r25, X
    1074:	dc 01       	movw	r26, r24
    1076:	ed 91       	ld	r30, X+
    1078:	fc 91       	ld	r31, X
    107a:	04 80       	ldd	r0, Z+4	; 0x04
    107c:	f5 81       	ldd	r31, Z+5	; 0x05
    107e:	e0 2d       	mov	r30, r0
    1080:	09 95       	icall
    1082:	89 2b       	or	r24, r25
    1084:	59 f0       	breq	.+22     	; 0x109c <_ZN13Adafruit_FONA5beginEhh+0x10c>
    1086:	f7 01       	movw	r30, r14
    1088:	80 81       	ld	r24, Z
    108a:	91 81       	ldd	r25, Z+1	; 0x01
    108c:	dc 01       	movw	r26, r24
    108e:	ed 91       	ld	r30, X+
    1090:	fc 91       	ld	r31, X
    1092:	06 80       	ldd	r0, Z+6	; 0x06
    1094:	f7 81       	ldd	r31, Z+7	; 0x07
    1096:	e0 2d       	mov	r30, r0
    1098:	09 95       	icall
    109a:	e9 cf       	rjmp	.-46     	; 0x106e <_ZN13Adafruit_FONA5beginEhh+0xde>
    109c:	24 ef       	ldi	r18, 0xF4	; 244
    109e:	31 e0       	ldi	r19, 0x01	; 1
    10a0:	4f e5       	ldi	r20, 0x5F	; 95
    10a2:	53 e0       	ldi	r21, 0x03	; 3
    10a4:	6c e5       	ldi	r22, 0x5C	; 92
    10a6:	73 e0       	ldi	r23, 0x03	; 3
    10a8:	ce 01       	movw	r24, r28
    10aa:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    10ae:	81 11       	cpse	r24, r1
    10b0:	12 c0       	rjmp	.+36     	; 0x10d6 <_ZN13Adafruit_FONA5beginEhh+0x146>
    10b2:	64 ef       	ldi	r22, 0xF4	; 244
    10b4:	71 e0       	ldi	r23, 0x01	; 1
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    10be:	b1 e0       	ldi	r27, 0x01	; 1
    10c0:	cb 1a       	sub	r12, r27
    10c2:	d1 08       	sbc	r13, r1
    10c4:	09 f0       	breq	.+2      	; 0x10c8 <_ZN13Adafruit_FONA5beginEhh+0x138>
    10c6:	b0 cf       	rjmp	.-160    	; 0x1028 <_ZN13Adafruit_FONA5beginEhh+0x98>
    10c8:	5e c0       	rjmp	.+188    	; 0x1186 <_ZN13Adafruit_FONA5beginEhh+0x1f6>
    10ca:	64 e6       	ldi	r22, 0x64	; 100
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	80 e0       	ldi	r24, 0x00	; 0
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    10d6:	f8 01       	movw	r30, r16
    10d8:	40 81       	ld	r20, Z
    10da:	51 81       	ldd	r21, Z+1	; 0x01
    10dc:	24 ef       	ldi	r18, 0xF4	; 244
    10de:	31 e0       	ldi	r19, 0x01	; 1
    10e0:	6f e2       	ldi	r22, 0x2F	; 47
    10e2:	73 e0       	ldi	r23, 0x03	; 3
    10e4:	ce 01       	movw	r24, r28
    10e6:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    10ea:	64 e6       	ldi	r22, 0x64	; 100
    10ec:	70 e0       	ldi	r23, 0x00	; 0
    10ee:	80 e0       	ldi	r24, 0x00	; 0
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    10f6:	d8 01       	movw	r26, r16
    10f8:	4d 91       	ld	r20, X+
    10fa:	5c 91       	ld	r21, X
    10fc:	24 ef       	ldi	r18, 0xF4	; 244
    10fe:	31 e0       	ldi	r19, 0x01	; 1
    1100:	6a e2       	ldi	r22, 0x2A	; 42
    1102:	73 e0       	ldi	r23, 0x03	; 3
    1104:	ce 01       	movw	r24, r28
    1106:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    110a:	81 11       	cpse	r24, r1
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <_ZN13Adafruit_FONA5beginEhh+0x182>
    110e:	12 e0       	ldi	r17, 0x02	; 2
    1110:	01 c0       	rjmp	.+2      	; 0x1114 <_ZN13Adafruit_FONA5beginEhh+0x184>
    1112:	11 e0       	ldi	r17, 0x01	; 1
    1114:	64 e6       	ldi	r22, 0x64	; 100
    1116:	70 e0       	ldi	r23, 0x00	; 0
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    1120:	ce 01       	movw	r24, r28
    1122:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
    1126:	63 e2       	ldi	r22, 0x23	; 35
    1128:	73 e0       	ldi	r23, 0x03	; 3
    112a:	8e e9       	ldi	r24, 0x9E	; 158
    112c:	93 e0       	ldi	r25, 0x03	; 3
    112e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1132:	69 e0       	ldi	r22, 0x09	; 9
    1134:	71 e0       	ldi	r23, 0x01	; 1
    1136:	8e e9       	ldi	r24, 0x9E	; 158
    1138:	93 e0       	ldi	r25, 0x03	; 3
    113a:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
    113e:	69 e0       	ldi	r22, 0x09	; 9
    1140:	71 e0       	ldi	r23, 0x01	; 1
    1142:	f7 01       	movw	r30, r14
    1144:	80 81       	ld	r24, Z
    1146:	91 81       	ldd	r25, Z+1	; 0x01
    1148:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
    114c:	41 e0       	ldi	r20, 0x01	; 1
    114e:	64 ef       	ldi	r22, 0xF4	; 244
    1150:	71 e0       	ldi	r23, 0x01	; 1
    1152:	ce 01       	movw	r24, r28
    1154:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
    1158:	6c e1       	ldi	r22, 0x1C	; 28
    115a:	73 e0       	ldi	r23, 0x03	; 3
    115c:	8e e9       	ldi	r24, 0x9E	; 158
    115e:	93 e0       	ldi	r25, 0x03	; 3
    1160:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1164:	2f 96       	adiw	r28, 0x0f	; 15
    1166:	be 01       	movw	r22, r28
    1168:	8e e9       	ldi	r24, 0x9E	; 158
    116a:	93 e0       	ldi	r25, 0x03	; 3
    116c:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
    1170:	61 e1       	ldi	r22, 0x11	; 17
    1172:	73 e0       	ldi	r23, 0x03	; 3
    1174:	ce 01       	movw	r24, r28
    1176:	0e 94 89 25 	call	0x4b12	; 0x4b12 <strstr_P>
    117a:	89 2b       	or	r24, r25
    117c:	11 f4       	brne	.+4      	; 0x1182 <_ZN13Adafruit_FONA5beginEhh+0x1f2>
    117e:	84 e0       	ldi	r24, 0x04	; 4
    1180:	35 c0       	rjmp	.+106    	; 0x11ec <_ZN13Adafruit_FONA5beginEhh+0x25c>
    1182:	81 2f       	mov	r24, r17
    1184:	33 c0       	rjmp	.+102    	; 0x11ec <_ZN13Adafruit_FONA5beginEhh+0x25c>
    1186:	d8 01       	movw	r26, r16
    1188:	4d 91       	ld	r20, X+
    118a:	5c 91       	ld	r21, X
    118c:	24 ef       	ldi	r18, 0xF4	; 244
    118e:	31 e0       	ldi	r19, 0x01	; 1
    1190:	69 e5       	ldi	r22, 0x59	; 89
    1192:	73 e0       	ldi	r23, 0x03	; 3
    1194:	ce 01       	movw	r24, r28
    1196:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    119a:	64 e6       	ldi	r22, 0x64	; 100
    119c:	70 e0       	ldi	r23, 0x00	; 0
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    11a6:	f8 01       	movw	r30, r16
    11a8:	40 81       	ld	r20, Z
    11aa:	51 81       	ldd	r21, Z+1	; 0x01
    11ac:	24 ef       	ldi	r18, 0xF4	; 244
    11ae:	31 e0       	ldi	r19, 0x01	; 1
    11b0:	66 e5       	ldi	r22, 0x56	; 86
    11b2:	73 e0       	ldi	r23, 0x03	; 3
    11b4:	ce 01       	movw	r24, r28
    11b6:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11ba:	64 e6       	ldi	r22, 0x64	; 100
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    11c6:	d8 01       	movw	r26, r16
    11c8:	4d 91       	ld	r20, X+
    11ca:	5c 91       	ld	r21, X
    11cc:	24 ef       	ldi	r18, 0xF4	; 244
    11ce:	31 e0       	ldi	r19, 0x01	; 1
    11d0:	63 e5       	ldi	r22, 0x53	; 83
    11d2:	73 e0       	ldi	r23, 0x03	; 3
    11d4:	ce 01       	movw	r24, r28
    11d6:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    11da:	81 11       	cpse	r24, r1
    11dc:	76 cf       	rjmp	.-276    	; 0x10ca <_ZN13Adafruit_FONA5beginEhh+0x13a>
    11de:	64 e3       	ldi	r22, 0x34	; 52
    11e0:	73 e0       	ldi	r23, 0x03	; 3
    11e2:	8e e9       	ldi	r24, 0x9E	; 158
    11e4:	93 e0       	ldi	r25, 0x03	; 3
    11e6:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
    11ea:	83 e0       	ldi	r24, 0x03	; 3
    11ec:	df 91       	pop	r29
    11ee:	cf 91       	pop	r28
    11f0:	1f 91       	pop	r17
    11f2:	0f 91       	pop	r16
    11f4:	ff 90       	pop	r15
    11f6:	ef 90       	pop	r14
    11f8:	df 90       	pop	r13
    11fa:	cf 90       	pop	r12
    11fc:	08 95       	ret

000011fe <_ZN13Adafruit_FONA9HTTP_initEv>:
    11fe:	fc 01       	movw	r30, r24
    1200:	e5 5e       	subi	r30, 0xE5	; 229
    1202:	fe 4f       	sbci	r31, 0xFE	; 254
    1204:	40 81       	ld	r20, Z
    1206:	51 81       	ldd	r21, Z+1	; 0x01
    1208:	24 ef       	ldi	r18, 0xF4	; 244
    120a:	31 e0       	ldi	r19, 0x01	; 1
    120c:	66 e5       	ldi	r22, 0x56	; 86
    120e:	71 e0       	ldi	r23, 0x01	; 1
    1210:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>

00001214 <_ZN13Adafruit_FONA9HTTP_termEv>:
    1214:	fc 01       	movw	r30, r24
    1216:	e5 5e       	subi	r30, 0xE5	; 229
    1218:	fe 4f       	sbci	r31, 0xFE	; 254
    121a:	40 81       	ld	r20, Z
    121c:	51 81       	ldd	r21, Z+1	; 0x01
    121e:	24 ef       	ldi	r18, 0xF4	; 244
    1220:	31 e0       	ldi	r19, 0x01	; 1
    1222:	6a e4       	ldi	r22, 0x4A	; 74
    1224:	71 e0       	ldi	r23, 0x01	; 1
    1226:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>

0000122a <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper>:
    122a:	ef 92       	push	r14
    122c:	ff 92       	push	r15
    122e:	0f 93       	push	r16
    1230:	1f 93       	push	r17
    1232:	cf 93       	push	r28
    1234:	df 93       	push	r29
    1236:	00 d0       	rcall	.+0      	; 0x1238 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0xe>
    1238:	00 d0       	rcall	.+0      	; 0x123a <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x10>
    123a:	00 d0       	rcall	.+0      	; 0x123c <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x12>
    123c:	cd b7       	in	r28, 0x3d	; 61
    123e:	de b7       	in	r29, 0x3e	; 62
    1240:	8c 01       	movw	r16, r24
    1242:	7b 01       	movw	r14, r22
    1244:	0e 94 0a 09 	call	0x1214	; 0x1214 <_ZN13Adafruit_FONA9HTTP_termEv>
    1248:	c8 01       	movw	r24, r16
    124a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <_ZN13Adafruit_FONA9HTTP_initEv>
    124e:	88 23       	and	r24, r24
    1250:	59 f1       	breq	.+86     	; 0x12a8 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x7e>
    1252:	21 e0       	ldi	r18, 0x01	; 1
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	40 e0       	ldi	r20, 0x00	; 0
    1258:	50 e0       	ldi	r21, 0x00	; 0
    125a:	66 ea       	ldi	r22, 0xA6	; 166
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	c8 01       	movw	r24, r16
    1260:	0e 94 2c 06 	call	0xc58	; 0xc58 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperl>
    1264:	88 23       	and	r24, r24
    1266:	11 f1       	breq	.+68     	; 0x12ac <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x82>
    1268:	a7 01       	movw	r20, r14
    126a:	62 ea       	ldi	r22, 0xA2	; 162
    126c:	70 e0       	ldi	r23, 0x00	; 0
    126e:	c8 01       	movw	r24, r16
    1270:	0e 94 13 06 	call	0xc26	; 0xc26 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>
    1274:	88 23       	and	r24, r24
    1276:	e1 f0       	breq	.+56     	; 0x12b0 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x86>
    1278:	b8 01       	movw	r22, r16
    127a:	6b 5e       	subi	r22, 0xEB	; 235
    127c:	7e 4f       	sbci	r23, 0xFE	; 254
    127e:	ce 01       	movw	r24, r28
    1280:	01 96       	adiw	r24, 0x01	; 1
    1282:	0e 94 2e 20 	call	0x405c	; 0x405c <_ZN6StringC1ERKS_>
    1286:	ae 01       	movw	r20, r28
    1288:	4f 5f       	subi	r20, 0xFF	; 255
    128a:	5f 4f       	sbci	r21, 0xFF	; 255
    128c:	6f e9       	ldi	r22, 0x9F	; 159
    128e:	70 e0       	ldi	r23, 0x00	; 0
    1290:	c8 01       	movw	r24, r16
    1292:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelper6String>
    1296:	18 2f       	mov	r17, r24
    1298:	ce 01       	movw	r24, r28
    129a:	01 96       	adiw	r24, 0x01	; 1
    129c:	0e 94 94 1f 	call	0x3f28	; 0x3f28 <_ZN6StringD1Ev>
    12a0:	11 23       	and	r17, r17
    12a2:	41 f0       	breq	.+16     	; 0x12b4 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8a>
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	07 c0       	rjmp	.+14     	; 0x12b6 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12a8:	82 e0       	ldi	r24, 0x02	; 2
    12aa:	05 c0       	rjmp	.+10     	; 0x12b6 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12ac:	83 e0       	ldi	r24, 0x03	; 3
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12b0:	84 e0       	ldi	r24, 0x04	; 4
    12b2:	01 c0       	rjmp	.+2      	; 0x12b6 <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper+0x8c>
    12b4:	80 e4       	ldi	r24, 0x40	; 64
    12b6:	26 96       	adiw	r28, 0x06	; 6
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	f8 94       	cli
    12bc:	de bf       	out	0x3e, r29	; 62
    12be:	0f be       	out	0x3f, r0	; 63
    12c0:	cd bf       	out	0x3d, r28	; 61
    12c2:	df 91       	pop	r29
    12c4:	cf 91       	pop	r28
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
    12ca:	ff 90       	pop	r15
    12cc:	ef 90       	pop	r14
    12ce:	08 95       	ret

000012d0 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j>:
    12d0:	cf 92       	push	r12
    12d2:	df 92       	push	r13
    12d4:	ef 92       	push	r14
    12d6:	ff 92       	push	r15
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	ec 01       	movw	r28, r24
    12e2:	68 01       	movw	r12, r16
    12e4:	87 01       	movw	r16, r14
    12e6:	0e 94 f0 06 	call	0xde0	; 0xde0 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>
    12ea:	b6 01       	movw	r22, r12
    12ec:	ce 01       	movw	r24, r28
    12ee:	0f 96       	adiw	r24, 0x0f	; 15
    12f0:	0e 94 77 25 	call	0x4aee	; 0x4aee <strcmp_P>
    12f4:	21 e0       	ldi	r18, 0x01	; 1
    12f6:	89 2b       	or	r24, r25
    12f8:	09 f0       	breq	.+2      	; 0x12fc <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j+0x2c>
    12fa:	20 e0       	ldi	r18, 0x00	; 0
    12fc:	82 2f       	mov	r24, r18
    12fe:	df 91       	pop	r29
    1300:	cf 91       	pop	r28
    1302:	1f 91       	pop	r17
    1304:	0f 91       	pop	r16
    1306:	ff 90       	pop	r15
    1308:	ef 90       	pop	r14
    130a:	df 90       	pop	r13
    130c:	cf 90       	pop	r12
    130e:	08 95       	ret

00001310 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>:
    1310:	ef 92       	push	r14
    1312:	ff 92       	push	r15
    1314:	0f 93       	push	r16
    1316:	1f 93       	push	r17
    1318:	cf 93       	push	r28
    131a:	df 93       	push	r29
    131c:	ec 01       	movw	r28, r24
    131e:	79 01       	movw	r14, r18
    1320:	98 01       	movw	r18, r16
    1322:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN13Adafruit_FONA14getReplyQuotedEPK19__FlashStringHelperS2_j>
    1326:	b7 01       	movw	r22, r14
    1328:	ce 01       	movw	r24, r28
    132a:	0f 96       	adiw	r24, 0x0f	; 15
    132c:	0e 94 77 25 	call	0x4aee	; 0x4aee <strcmp_P>
    1330:	21 e0       	ldi	r18, 0x01	; 1
    1332:	89 2b       	or	r24, r25
    1334:	09 f0       	breq	.+2      	; 0x1338 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j+0x28>
    1336:	20 e0       	ldi	r18, 0x00	; 0
    1338:	82 2f       	mov	r24, r18
    133a:	df 91       	pop	r29
    133c:	cf 91       	pop	r28
    133e:	1f 91       	pop	r17
    1340:	0f 91       	pop	r16
    1342:	ff 90       	pop	r15
    1344:	ef 90       	pop	r14
    1346:	08 95       	ret

00001348 <_ZN13Adafruit_FONA10enableGPRSEb>:
    1348:	7f 92       	push	r7
    134a:	8f 92       	push	r8
    134c:	9f 92       	push	r9
    134e:	af 92       	push	r10
    1350:	bf 92       	push	r11
    1352:	cf 92       	push	r12
    1354:	df 92       	push	r13
    1356:	ef 92       	push	r14
    1358:	ff 92       	push	r15
    135a:	0f 93       	push	r16
    135c:	1f 93       	push	r17
    135e:	cf 93       	push	r28
    1360:	df 93       	push	r29
    1362:	ec 01       	movw	r28, r24
    1364:	28 ee       	ldi	r18, 0xE8	; 232
    1366:	3d ef       	ldi	r19, 0xFD	; 253
    1368:	66 23       	and	r22, r22
    136a:	09 f4       	brne	.+2      	; 0x136e <_ZN13Adafruit_FONA10enableGPRSEb+0x26>
    136c:	1f c1       	rjmp	.+574    	; 0x15ac <_ZN13Adafruit_FONA10enableGPRSEb+0x264>
    136e:	4d eb       	ldi	r20, 0xBD	; 189
    1370:	52 e0       	ldi	r21, 0x02	; 2
    1372:	62 eb       	ldi	r22, 0xB2	; 178
    1374:	72 e0       	ldi	r23, 0x02	; 2
    1376:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    137a:	81 11       	cpse	r24, r1
    137c:	03 c0       	rjmp	.+6      	; 0x1384 <_ZN13Adafruit_FONA10enableGPRSEb+0x3c>
    137e:	82 e0       	ldi	r24, 0x02	; 2
    1380:	78 2e       	mov	r7, r24
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <_ZN13Adafruit_FONA10enableGPRSEb+0x40>
    1384:	77 24       	eor	r7, r7
    1386:	73 94       	inc	r7
    1388:	7e 01       	movw	r14, r28
    138a:	85 ee       	ldi	r24, 0xE5	; 229
    138c:	e8 1a       	sub	r14, r24
    138e:	8e ef       	ldi	r24, 0xFE	; 254
    1390:	f8 0a       	sbc	r15, r24
    1392:	f7 01       	movw	r30, r14
    1394:	40 81       	ld	r20, Z
    1396:	51 81       	ldd	r21, Z+1	; 0x01
    1398:	20 e1       	ldi	r18, 0x10	; 16
    139a:	37 e2       	ldi	r19, 0x27	; 39
    139c:	67 ea       	ldi	r22, 0xA7	; 167
    139e:	72 e0       	ldi	r23, 0x02	; 2
    13a0:	ce 01       	movw	r24, r28
    13a2:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13a6:	88 23       	and	r24, r24
    13a8:	09 f4       	brne	.+2      	; 0x13ac <_ZN13Adafruit_FONA10enableGPRSEb+0x64>
    13aa:	25 c1       	rjmp	.+586    	; 0x15f6 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ae>
    13ac:	f7 01       	movw	r30, r14
    13ae:	40 81       	ld	r20, Z
    13b0:	51 81       	ldd	r21, Z+1	; 0x01
    13b2:	20 e1       	ldi	r18, 0x10	; 16
    13b4:	37 e2       	ldi	r19, 0x27	; 39
    13b6:	69 e8       	ldi	r22, 0x89	; 137
    13b8:	72 e0       	ldi	r23, 0x02	; 2
    13ba:	ce 01       	movw	r24, r28
    13bc:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13c0:	88 23       	and	r24, r24
    13c2:	09 f4       	brne	.+2      	; 0x13c6 <_ZN13Adafruit_FONA10enableGPRSEb+0x7e>
    13c4:	1a c1       	rjmp	.+564    	; 0x15fa <_ZN13Adafruit_FONA10enableGPRSEb+0x2b2>
    13c6:	4e 01       	movw	r8, r28
    13c8:	f2 ef       	ldi	r31, 0xF2	; 242
    13ca:	8f 1a       	sub	r8, r31
    13cc:	fe ef       	ldi	r31, 0xFE	; 254
    13ce:	9f 0a       	sbc	r9, r31
    13d0:	f4 01       	movw	r30, r8
    13d2:	40 81       	ld	r20, Z
    13d4:	51 81       	ldd	r21, Z+1	; 0x01
    13d6:	41 15       	cp	r20, r1
    13d8:	51 05       	cpc	r21, r1
    13da:	71 f4       	brne	.+28     	; 0x13f8 <_ZN13Adafruit_FONA10enableGPRSEb+0xb0>
    13dc:	f7 01       	movw	r30, r14
    13de:	40 81       	ld	r20, Z
    13e0:	51 81       	ldd	r21, Z+1	; 0x01
    13e2:	2f ef       	ldi	r18, 0xFF	; 255
    13e4:	3f ef       	ldi	r19, 0xFF	; 255
    13e6:	64 e2       	ldi	r22, 0x24	; 36
    13e8:	72 e0       	ldi	r23, 0x02	; 2
    13ea:	ce 01       	movw	r24, r28
    13ec:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    13f0:	81 11       	cpse	r24, r1
    13f2:	ce c0       	rjmp	.+412    	; 0x1590 <_ZN13Adafruit_FONA10enableGPRSEb+0x248>
    13f4:	89 e0       	ldi	r24, 0x09	; 9
    13f6:	0e c1       	rjmp	.+540    	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    13f8:	f7 01       	movw	r30, r14
    13fa:	20 81       	ld	r18, Z
    13fc:	31 81       	ldd	r19, Z+1	; 0x01
    13fe:	00 e1       	ldi	r16, 0x10	; 16
    1400:	17 e2       	ldi	r17, 0x27	; 39
    1402:	65 e7       	ldi	r22, 0x75	; 117
    1404:	72 e0       	ldi	r23, 0x02	; 2
    1406:	ce 01       	movw	r24, r28
    1408:	0e 94 88 09 	call	0x1310	; 0x1310 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    140c:	88 23       	and	r24, r24
    140e:	09 f4       	brne	.+2      	; 0x1412 <_ZN13Adafruit_FONA10enableGPRSEb+0xca>
    1410:	f6 c0       	rjmp	.+492    	; 0x15fe <_ZN13Adafruit_FONA10enableGPRSEb+0x2b6>
    1412:	ce 01       	movw	r24, r28
    1414:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN13Adafruit_FONA10flushInputEv>
    1418:	8e 01       	movw	r16, r28
    141a:	03 5e       	subi	r16, 0xE3	; 227
    141c:	1e 4f       	sbci	r17, 0xFE	; 254
    141e:	6b e6       	ldi	r22, 0x6B	; 107
    1420:	72 e0       	ldi	r23, 0x02	; 2
    1422:	f8 01       	movw	r30, r16
    1424:	80 81       	ld	r24, Z
    1426:	91 81       	ldd	r25, Z+1	; 0x01
    1428:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    142c:	f4 01       	movw	r30, r8
    142e:	60 81       	ld	r22, Z
    1430:	71 81       	ldd	r23, Z+1	; 0x01
    1432:	f8 01       	movw	r30, r16
    1434:	80 81       	ld	r24, Z
    1436:	91 81       	ldd	r25, Z+1	; 0x01
    1438:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    143c:	5e 01       	movw	r10, r28
    143e:	f0 ef       	ldi	r31, 0xF0	; 240
    1440:	af 1a       	sub	r10, r31
    1442:	fe ef       	ldi	r31, 0xFE	; 254
    1444:	bf 0a       	sbc	r11, r31
    1446:	f5 01       	movw	r30, r10
    1448:	80 81       	ld	r24, Z
    144a:	91 81       	ldd	r25, Z+1	; 0x01
    144c:	89 2b       	or	r24, r25
    144e:	79 f0       	breq	.+30     	; 0x146e <_ZN13Adafruit_FONA10enableGPRSEb+0x126>
    1450:	65 e2       	ldi	r22, 0x25	; 37
    1452:	71 e0       	ldi	r23, 0x01	; 1
    1454:	f8 01       	movw	r30, r16
    1456:	80 81       	ld	r24, Z
    1458:	91 81       	ldd	r25, Z+1	; 0x01
    145a:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    145e:	f5 01       	movw	r30, r10
    1460:	60 81       	ld	r22, Z
    1462:	71 81       	ldd	r23, Z+1	; 0x01
    1464:	f8 01       	movw	r30, r16
    1466:	80 81       	ld	r24, Z
    1468:	91 81       	ldd	r25, Z+1	; 0x01
    146a:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    146e:	6e 01       	movw	r12, r28
    1470:	fe ee       	ldi	r31, 0xEE	; 238
    1472:	cf 1a       	sub	r12, r31
    1474:	fe ef       	ldi	r31, 0xFE	; 254
    1476:	df 0a       	sbc	r13, r31
    1478:	f6 01       	movw	r30, r12
    147a:	80 81       	ld	r24, Z
    147c:	91 81       	ldd	r25, Z+1	; 0x01
    147e:	89 2b       	or	r24, r25
    1480:	79 f0       	breq	.+30     	; 0x14a0 <_ZN13Adafruit_FONA10enableGPRSEb+0x158>
    1482:	65 e2       	ldi	r22, 0x25	; 37
    1484:	71 e0       	ldi	r23, 0x01	; 1
    1486:	f8 01       	movw	r30, r16
    1488:	80 81       	ld	r24, Z
    148a:	91 81       	ldd	r25, Z+1	; 0x01
    148c:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    1490:	f6 01       	movw	r30, r12
    1492:	60 81       	ld	r22, Z
    1494:	71 81       	ldd	r23, Z+1	; 0x01
    1496:	f8 01       	movw	r30, r16
    1498:	80 81       	ld	r24, Z
    149a:	91 81       	ldd	r25, Z+1	; 0x01
    149c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    14a0:	67 e2       	ldi	r22, 0x27	; 39
    14a2:	71 e0       	ldi	r23, 0x01	; 1
    14a4:	f8 01       	movw	r30, r16
    14a6:	80 81       	ld	r24, Z
    14a8:	91 81       	ldd	r25, Z+1	; 0x01
    14aa:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
    14ae:	64 e6       	ldi	r22, 0x64	; 100
    14b0:	72 e0       	ldi	r23, 0x02	; 2
    14b2:	8e e9       	ldi	r24, 0x9E	; 158
    14b4:	93 e0       	ldi	r25, 0x03	; 3
    14b6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    14ba:	6a e5       	ldi	r22, 0x5A	; 90
    14bc:	72 e0       	ldi	r23, 0x02	; 2
    14be:	8e e9       	ldi	r24, 0x9E	; 158
    14c0:	93 e0       	ldi	r25, 0x03	; 3
    14c2:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    14c6:	f4 01       	movw	r30, r8
    14c8:	60 81       	ld	r22, Z
    14ca:	71 81       	ldd	r23, Z+1	; 0x01
    14cc:	8e e9       	ldi	r24, 0x9E	; 158
    14ce:	93 e0       	ldi	r25, 0x03	; 3
    14d0:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    14d4:	f5 01       	movw	r30, r10
    14d6:	80 81       	ld	r24, Z
    14d8:	91 81       	ldd	r25, Z+1	; 0x01
    14da:	89 2b       	or	r24, r25
    14dc:	69 f0       	breq	.+26     	; 0x14f8 <_ZN13Adafruit_FONA10enableGPRSEb+0x1b0>
    14de:	65 e2       	ldi	r22, 0x25	; 37
    14e0:	71 e0       	ldi	r23, 0x01	; 1
    14e2:	8e e9       	ldi	r24, 0x9E	; 158
    14e4:	93 e0       	ldi	r25, 0x03	; 3
    14e6:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    14ea:	f5 01       	movw	r30, r10
    14ec:	60 81       	ld	r22, Z
    14ee:	71 81       	ldd	r23, Z+1	; 0x01
    14f0:	8e e9       	ldi	r24, 0x9E	; 158
    14f2:	93 e0       	ldi	r25, 0x03	; 3
    14f4:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    14f8:	f6 01       	movw	r30, r12
    14fa:	80 81       	ld	r24, Z
    14fc:	91 81       	ldd	r25, Z+1	; 0x01
    14fe:	89 2b       	or	r24, r25
    1500:	69 f0       	breq	.+26     	; 0x151c <_ZN13Adafruit_FONA10enableGPRSEb+0x1d4>
    1502:	65 e2       	ldi	r22, 0x25	; 37
    1504:	71 e0       	ldi	r23, 0x01	; 1
    1506:	8e e9       	ldi	r24, 0x9E	; 158
    1508:	93 e0       	ldi	r25, 0x03	; 3
    150a:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    150e:	f6 01       	movw	r30, r12
    1510:	60 81       	ld	r22, Z
    1512:	71 81       	ldd	r23, Z+1	; 0x01
    1514:	8e e9       	ldi	r24, 0x9E	; 158
    1516:	93 e0       	ldi	r25, 0x03	; 3
    1518:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    151c:	67 e2       	ldi	r22, 0x27	; 39
    151e:	71 e0       	ldi	r23, 0x01	; 1
    1520:	8e e9       	ldi	r24, 0x9E	; 158
    1522:	93 e0       	ldi	r25, 0x03	; 3
    1524:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
    1528:	f7 01       	movw	r30, r14
    152a:	60 81       	ld	r22, Z
    152c:	71 81       	ldd	r23, Z+1	; 0x01
    152e:	40 e1       	ldi	r20, 0x10	; 16
    1530:	57 e2       	ldi	r21, 0x27	; 39
    1532:	ce 01       	movw	r24, r28
    1534:	0e 94 b8 05 	call	0xb70	; 0xb70 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>
    1538:	88 23       	and	r24, r24
    153a:	09 f4       	brne	.+2      	; 0x153e <_ZN13Adafruit_FONA10enableGPRSEb+0x1f6>
    153c:	62 c0       	rjmp	.+196    	; 0x1602 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ba>
    153e:	f5 01       	movw	r30, r10
    1540:	40 81       	ld	r20, Z
    1542:	51 81       	ldd	r21, Z+1	; 0x01
    1544:	41 15       	cp	r20, r1
    1546:	51 05       	cpc	r21, r1
    1548:	39 f4       	brne	.+14     	; 0x1558 <_ZN13Adafruit_FONA10enableGPRSEb+0x210>
    154a:	f6 01       	movw	r30, r12
    154c:	40 81       	ld	r20, Z
    154e:	51 81       	ldd	r21, Z+1	; 0x01
    1550:	41 15       	cp	r20, r1
    1552:	51 05       	cpc	r21, r1
    1554:	79 f4       	brne	.+30     	; 0x1574 <_ZN13Adafruit_FONA10enableGPRSEb+0x22c>
    1556:	42 cf       	rjmp	.-380    	; 0x13dc <_ZN13Adafruit_FONA10enableGPRSEb+0x94>
    1558:	f7 01       	movw	r30, r14
    155a:	20 81       	ld	r18, Z
    155c:	31 81       	ldd	r19, Z+1	; 0x01
    155e:	00 e1       	ldi	r16, 0x10	; 16
    1560:	17 e2       	ldi	r17, 0x27	; 39
    1562:	65 e4       	ldi	r22, 0x45	; 69
    1564:	72 e0       	ldi	r23, 0x02	; 2
    1566:	ce 01       	movw	r24, r28
    1568:	0e 94 88 09 	call	0x1310	; 0x1310 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    156c:	81 11       	cpse	r24, r1
    156e:	ed cf       	rjmp	.-38     	; 0x154a <_ZN13Adafruit_FONA10enableGPRSEb+0x202>
    1570:	87 e0       	ldi	r24, 0x07	; 7
    1572:	50 c0       	rjmp	.+160    	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1574:	f7 01       	movw	r30, r14
    1576:	20 81       	ld	r18, Z
    1578:	31 81       	ldd	r19, Z+1	; 0x01
    157a:	00 e1       	ldi	r16, 0x10	; 16
    157c:	17 e2       	ldi	r17, 0x27	; 39
    157e:	61 e3       	ldi	r22, 0x31	; 49
    1580:	72 e0       	ldi	r23, 0x02	; 2
    1582:	ce 01       	movw	r24, r28
    1584:	0e 94 88 09 	call	0x1310	; 0x1310 <_ZN13Adafruit_FONA20sendCheckReplyQuotedEPK19__FlashStringHelperS2_S2_j>
    1588:	81 11       	cpse	r24, r1
    158a:	28 cf       	rjmp	.-432    	; 0x13dc <_ZN13Adafruit_FONA10enableGPRSEb+0x94>
    158c:	88 e0       	ldi	r24, 0x08	; 8
    158e:	42 c0       	rjmp	.+132    	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1590:	f7 01       	movw	r30, r14
    1592:	40 81       	ld	r20, Z
    1594:	51 81       	ldd	r21, Z+1	; 0x01
    1596:	2f ef       	ldi	r18, 0xFF	; 255
    1598:	3f ef       	ldi	r19, 0xFF	; 255
    159a:	6b e1       	ldi	r22, 0x1B	; 27
    159c:	72 e0       	ldi	r23, 0x02	; 2
    159e:	ce 01       	movw	r24, r28
    15a0:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15a4:	88 23       	and	r24, r24
    15a6:	79 f1       	breq	.+94     	; 0x1606 <_ZN13Adafruit_FONA10enableGPRSEb+0x2be>
    15a8:	87 2d       	mov	r24, r7
    15aa:	34 c0       	rjmp	.+104    	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15ac:	43 e1       	ldi	r20, 0x13	; 19
    15ae:	52 e0       	ldi	r21, 0x02	; 2
    15b0:	68 e0       	ldi	r22, 0x08	; 8
    15b2:	72 e0       	ldi	r23, 0x02	; 2
    15b4:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15b8:	88 23       	and	r24, r24
    15ba:	39 f1       	breq	.+78     	; 0x160a <_ZN13Adafruit_FONA10enableGPRSEb+0x2c2>
    15bc:	8e 01       	movw	r16, r28
    15be:	05 5e       	subi	r16, 0xE5	; 229
    15c0:	1e 4f       	sbci	r17, 0xFE	; 254
    15c2:	f8 01       	movw	r30, r16
    15c4:	40 81       	ld	r20, Z
    15c6:	51 81       	ldd	r21, Z+1	; 0x01
    15c8:	20 e1       	ldi	r18, 0x10	; 16
    15ca:	37 e2       	ldi	r19, 0x27	; 39
    15cc:	6b ef       	ldi	r22, 0xFB	; 251
    15ce:	71 e0       	ldi	r23, 0x01	; 1
    15d0:	ce 01       	movw	r24, r28
    15d2:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15d6:	88 23       	and	r24, r24
    15d8:	d1 f0       	breq	.+52     	; 0x160e <_ZN13Adafruit_FONA10enableGPRSEb+0x2c6>
    15da:	f8 01       	movw	r30, r16
    15dc:	40 81       	ld	r20, Z
    15de:	51 81       	ldd	r21, Z+1	; 0x01
    15e0:	20 e1       	ldi	r18, 0x10	; 16
    15e2:	37 e2       	ldi	r19, 0x27	; 39
    15e4:	60 ef       	ldi	r22, 0xF0	; 240
    15e6:	71 e0       	ldi	r23, 0x01	; 1
    15e8:	ce 01       	movw	r24, r28
    15ea:	0e 94 ae 07 	call	0xf5c	; 0xf5c <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperS2_j>
    15ee:	88 23       	and	r24, r24
    15f0:	81 f0       	breq	.+32     	; 0x1612 <_ZN13Adafruit_FONA10enableGPRSEb+0x2ca>
    15f2:	81 e0       	ldi	r24, 0x01	; 1
    15f4:	0f c0       	rjmp	.+30     	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15f6:	83 e0       	ldi	r24, 0x03	; 3
    15f8:	0d c0       	rjmp	.+26     	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15fa:	84 e0       	ldi	r24, 0x04	; 4
    15fc:	0b c0       	rjmp	.+22     	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    15fe:	85 e0       	ldi	r24, 0x05	; 5
    1600:	09 c0       	rjmp	.+18     	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1602:	86 e0       	ldi	r24, 0x06	; 6
    1604:	07 c0       	rjmp	.+14     	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1606:	8a e0       	ldi	r24, 0x0A	; 10
    1608:	05 c0       	rjmp	.+10     	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    160a:	8b e0       	ldi	r24, 0x0B	; 11
    160c:	03 c0       	rjmp	.+6      	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    160e:	8c e0       	ldi	r24, 0x0C	; 12
    1610:	01 c0       	rjmp	.+2      	; 0x1614 <_ZN13Adafruit_FONA10enableGPRSEb+0x2cc>
    1612:	8d e0       	ldi	r24, 0x0D	; 13
    1614:	df 91       	pop	r29
    1616:	cf 91       	pop	r28
    1618:	1f 91       	pop	r17
    161a:	0f 91       	pop	r16
    161c:	ff 90       	pop	r15
    161e:	ef 90       	pop	r14
    1620:	df 90       	pop	r13
    1622:	cf 90       	pop	r12
    1624:	bf 90       	pop	r11
    1626:	af 90       	pop	r10
    1628:	9f 90       	pop	r9
    162a:	8f 90       	pop	r8
    162c:	7f 90       	pop	r7
    162e:	08 95       	ret

00001630 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>:
    1630:	af 92       	push	r10
    1632:	bf 92       	push	r11
    1634:	cf 92       	push	r12
    1636:	df 92       	push	r13
    1638:	ef 92       	push	r14
    163a:	ff 92       	push	r15
    163c:	0f 93       	push	r16
    163e:	cf 93       	push	r28
    1640:	df 93       	push	r29
    1642:	5b 01       	movw	r10, r22
    1644:	6a 01       	movw	r12, r20
    1646:	e2 2e       	mov	r14, r18
    1648:	0f 96       	adiw	r24, 0x0f	; 15
    164a:	0e 94 89 25 	call	0x4b12	; 0x4b12 <strstr_P>
    164e:	ec 01       	movw	r28, r24
    1650:	89 2b       	or	r24, r25
    1652:	c1 f0       	breq	.+48     	; 0x1684 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x54>
    1654:	c5 01       	movw	r24, r10
    1656:	0e 94 80 25 	call	0x4b00	; 0x4b00 <__strlen_P>
    165a:	8c 0f       	add	r24, r28
    165c:	9d 1f       	adc	r25, r29
    165e:	c0 e0       	ldi	r28, 0x00	; 0
    1660:	f1 2c       	mov	r15, r1
    1662:	c0 17       	cp	r28, r16
    1664:	41 f0       	breq	.+16     	; 0x1676 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x46>
    1666:	b7 01       	movw	r22, r14
    1668:	0e 94 ac 25 	call	0x4b58	; 0x4b58 <strchr>
    166c:	00 97       	sbiw	r24, 0x00	; 0
    166e:	51 f0       	breq	.+20     	; 0x1684 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x54>
    1670:	01 96       	adiw	r24, 0x01	; 1
    1672:	cf 5f       	subi	r28, 0xFF	; 255
    1674:	f6 cf       	rjmp	.-20     	; 0x1662 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x32>
    1676:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <atoi>
    167a:	f6 01       	movw	r30, r12
    167c:	91 83       	std	Z+1, r25	; 0x01
    167e:	80 83       	st	Z, r24
    1680:	81 e0       	ldi	r24, 0x01	; 1
    1682:	01 c0       	rjmp	.+2      	; 0x1686 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch+0x56>
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	df 91       	pop	r29
    1688:	cf 91       	pop	r28
    168a:	0f 91       	pop	r16
    168c:	ff 90       	pop	r15
    168e:	ef 90       	pop	r14
    1690:	df 90       	pop	r13
    1692:	cf 90       	pop	r12
    1694:	bf 90       	pop	r11
    1696:	af 90       	pop	r10
    1698:	08 95       	ret

0000169a <_ZN13Adafruit_FONA12HTTP_readallEjPc>:
    169a:	cf 92       	push	r12
    169c:	df 92       	push	r13
    169e:	ef 92       	push	r14
    16a0:	ff 92       	push	r15
    16a2:	0f 93       	push	r16
    16a4:	1f 93       	push	r17
    16a6:	cf 93       	push	r28
    16a8:	df 93       	push	r29
    16aa:	00 d0       	rcall	.+0      	; 0x16ac <_ZN13Adafruit_FONA12HTTP_readallEjPc+0x12>
    16ac:	cd b7       	in	r28, 0x3d	; 61
    16ae:	de b7       	in	r29, 0x3e	; 62
    16b0:	7c 01       	movw	r14, r24
    16b2:	6a 01       	movw	r12, r20
    16b4:	9b 01       	movw	r18, r22
    16b6:	21 50       	subi	r18, 0x01	; 1
    16b8:	31 09       	sbc	r19, r1
    16ba:	40 e0       	ldi	r20, 0x00	; 0
    16bc:	50 e0       	ldi	r21, 0x00	; 0
    16be:	04 ef       	ldi	r16, 0xF4	; 244
    16c0:	11 e0       	ldi	r17, 0x01	; 1
    16c2:	6e eb       	ldi	r22, 0xBE	; 190
    16c4:	70 e0       	ldi	r23, 0x00	; 0
    16c6:	0e 94 f0 06 	call	0xde0	; 0xde0 <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperlj>
    16ca:	00 e0       	ldi	r16, 0x00	; 0
    16cc:	2c e2       	ldi	r18, 0x2C	; 44
    16ce:	ae 01       	movw	r20, r28
    16d0:	4f 5f       	subi	r20, 0xFF	; 255
    16d2:	5f 4f       	sbci	r21, 0xFF	; 255
    16d4:	62 eb       	ldi	r22, 0xB2	; 178
    16d6:	70 e0       	ldi	r23, 0x00	; 0
    16d8:	c7 01       	movw	r24, r14
    16da:	0e 94 18 0b 	call	0x1630	; 0x1630 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    16de:	88 23       	and	r24, r24
    16e0:	61 f0       	breq	.+24     	; 0x16fa <_ZN13Adafruit_FONA12HTTP_readallEjPc+0x60>
    16e2:	49 81       	ldd	r20, Y+1	; 0x01
    16e4:	5a 81       	ldd	r21, Y+2	; 0x02
    16e6:	b6 01       	movw	r22, r12
    16e8:	c7 01       	movw	r24, r14
    16ea:	0e 94 a7 04 	call	0x94e	; 0x94e <_ZN13Adafruit_FONA19internalReadRawDataEPcj>
    16ee:	40 e0       	ldi	r20, 0x00	; 0
    16f0:	64 ef       	ldi	r22, 0xF4	; 244
    16f2:	71 e0       	ldi	r23, 0x01	; 1
    16f4:	c7 01       	movw	r24, r14
    16f6:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
    16fa:	0f 90       	pop	r0
    16fc:	0f 90       	pop	r0
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	1f 91       	pop	r17
    1704:	0f 91       	pop	r16
    1706:	ff 90       	pop	r15
    1708:	ef 90       	pop	r14
    170a:	df 90       	pop	r13
    170c:	cf 90       	pop	r12
    170e:	08 95       	ret

00001710 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l>:
    1710:	4f 92       	push	r4
    1712:	5f 92       	push	r5
    1714:	6f 92       	push	r6
    1716:	7f 92       	push	r7
    1718:	af 92       	push	r10
    171a:	bf 92       	push	r11
    171c:	cf 92       	push	r12
    171e:	df 92       	push	r13
    1720:	ef 92       	push	r14
    1722:	ff 92       	push	r15
    1724:	0f 93       	push	r16
    1726:	1f 93       	push	r17
    1728:	cf 93       	push	r28
    172a:	df 93       	push	r29
    172c:	ec 01       	movw	r28, r24
    172e:	6a 01       	movw	r12, r20
    1730:	59 01       	movw	r10, r18
    1732:	27 01       	movw	r4, r14
    1734:	38 01       	movw	r6, r16
    1736:	fc 01       	movw	r30, r24
    1738:	e5 5e       	subi	r30, 0xE5	; 229
    173a:	fe 4f       	sbci	r31, 0xFE	; 254
    173c:	00 81       	ld	r16, Z
    173e:	11 81       	ldd	r17, Z+1	; 0x01
    1740:	26 2f       	mov	r18, r22
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	40 e0       	ldi	r20, 0x00	; 0
    1746:	50 e0       	ldi	r21, 0x00	; 0
    1748:	84 ef       	ldi	r24, 0xF4	; 244
    174a:	e8 2e       	mov	r14, r24
    174c:	ff 24       	eor	r15, r15
    174e:	f3 94       	inc	r15
    1750:	67 ee       	ldi	r22, 0xE7	; 231
    1752:	70 e0       	ldi	r23, 0x00	; 0
    1754:	ce 01       	movw	r24, r28
    1756:	0e 94 68 09 	call	0x12d0	; 0x12d0 <_ZN13Adafruit_FONA14sendCheckReplyEPK19__FlashStringHelperlS2_j>
    175a:	88 23       	and	r24, r24
    175c:	09 f1       	breq	.+66     	; 0x17a0 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x90>
    175e:	40 e0       	ldi	r20, 0x00	; 0
    1760:	b2 01       	movw	r22, r4
    1762:	ce 01       	movw	r24, r28
    1764:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
    1768:	01 e0       	ldi	r16, 0x01	; 1
    176a:	2c e2       	ldi	r18, 0x2C	; 44
    176c:	a6 01       	movw	r20, r12
    176e:	6a ed       	ldi	r22, 0xDA	; 218
    1770:	70 e0       	ldi	r23, 0x00	; 0
    1772:	ce 01       	movw	r24, r28
    1774:	0e 94 18 0b 	call	0x1630	; 0x1630 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    1778:	88 23       	and	r24, r24
    177a:	a1 f0       	breq	.+40     	; 0x17a4 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x94>
    177c:	02 e0       	ldi	r16, 0x02	; 2
    177e:	2c e2       	ldi	r18, 0x2C	; 44
    1780:	a5 01       	movw	r20, r10
    1782:	6d ec       	ldi	r22, 0xCD	; 205
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	ce 01       	movw	r24, r28
    1788:	0e 94 18 0b 	call	0x1630	; 0x1630 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    178c:	88 23       	and	r24, r24
    178e:	61 f0       	breq	.+24     	; 0x17a8 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x98>
    1790:	f6 01       	movw	r30, r12
    1792:	80 81       	ld	r24, Z
    1794:	91 81       	ldd	r25, Z+1	; 0x01
    1796:	88 3c       	cpi	r24, 0xC8	; 200
    1798:	91 05       	cpc	r25, r1
    179a:	41 f4       	brne	.+16     	; 0x17ac <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9c>
    179c:	80 e0       	ldi	r24, 0x00	; 0
    179e:	07 c0       	rjmp	.+14     	; 0x17ae <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17a0:	87 e0       	ldi	r24, 0x07	; 7
    17a2:	05 c0       	rjmp	.+10     	; 0x17ae <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17a4:	88 e0       	ldi	r24, 0x08	; 8
    17a6:	03 c0       	rjmp	.+6      	; 0x17ae <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17a8:	89 e0       	ldi	r24, 0x09	; 9
    17aa:	01 c0       	rjmp	.+2      	; 0x17ae <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l+0x9e>
    17ac:	80 e8       	ldi	r24, 0x80	; 128
    17ae:	df 91       	pop	r29
    17b0:	cf 91       	pop	r28
    17b2:	1f 91       	pop	r17
    17b4:	0f 91       	pop	r16
    17b6:	ff 90       	pop	r15
    17b8:	ef 90       	pop	r14
    17ba:	df 90       	pop	r13
    17bc:	cf 90       	pop	r12
    17be:	bf 90       	pop	r11
    17c0:	af 90       	pop	r10
    17c2:	7f 90       	pop	r7
    17c4:	6f 90       	pop	r6
    17c6:	5f 90       	pop	r5
    17c8:	4f 90       	pop	r4
    17ca:	08 95       	ret

000017cc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc>:
    17cc:	2f 92       	push	r2
    17ce:	3f 92       	push	r3
    17d0:	4f 92       	push	r4
    17d2:	5f 92       	push	r5
    17d4:	6f 92       	push	r6
    17d6:	7f 92       	push	r7
    17d8:	8f 92       	push	r8
    17da:	9f 92       	push	r9
    17dc:	af 92       	push	r10
    17de:	bf 92       	push	r11
    17e0:	cf 92       	push	r12
    17e2:	df 92       	push	r13
    17e4:	ef 92       	push	r14
    17e6:	ff 92       	push	r15
    17e8:	0f 93       	push	r16
    17ea:	1f 93       	push	r17
    17ec:	cf 93       	push	r28
    17ee:	df 93       	push	r29
    17f0:	00 d0       	rcall	.+0      	; 0x17f2 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x26>
    17f2:	00 d0       	rcall	.+0      	; 0x17f4 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x28>
    17f4:	1f 92       	push	r1
    17f6:	cd b7       	in	r28, 0x3d	; 61
    17f8:	de b7       	in	r29, 0x3e	; 62
    17fa:	3c 01       	movw	r6, r24
    17fc:	5b 83       	std	Y+3, r21	; 0x03
    17fe:	4a 83       	std	Y+2, r20	; 0x02
    1800:	19 01       	movw	r2, r18
    1802:	28 01       	movw	r4, r16
    1804:	fd 82       	std	Y+5, r15	; 0x05
    1806:	ec 82       	std	Y+4, r14	; 0x04
    1808:	0e 94 15 09 	call	0x122a	; 0x122a <_ZN13Adafruit_FONA10HTTP_setupEPK19__FlashStringHelper>
    180c:	89 83       	std	Y+1, r24	; 0x01
    180e:	8f 70       	andi	r24, 0x0F	; 15
    1810:	82 30       	cpi	r24, 0x02	; 2
    1812:	08 f0       	brcs	.+2      	; 0x1816 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x4a>
    1814:	59 c0       	rjmp	.+178    	; 0x18c8 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfc>
    1816:	4a 81       	ldd	r20, Y+2	; 0x02
    1818:	5b 81       	ldd	r21, Y+3	; 0x03
    181a:	6a ea       	ldi	r22, 0xAA	; 170
    181c:	70 e0       	ldi	r23, 0x00	; 0
    181e:	c3 01       	movw	r24, r6
    1820:	0e 94 13 06 	call	0xc26	; 0xc26 <_ZN13Adafruit_FONA9HTTP_paraEPK19__FlashStringHelperS2_>
    1824:	81 11       	cpse	r24, r1
    1826:	03 c0       	rjmp	.+6      	; 0x182e <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x62>
    1828:	89 81       	ldd	r24, Y+1	; 0x01
    182a:	80 61       	ori	r24, 0x10	; 16
    182c:	89 83       	std	Y+1, r24	; 0x01
    182e:	a2 01       	movw	r20, r4
    1830:	60 e0       	ldi	r22, 0x00	; 0
    1832:	70 e0       	ldi	r23, 0x00	; 0
    1834:	00 ec       	ldi	r16, 0xC0	; 192
    1836:	14 ed       	ldi	r17, 0xD4	; 212
    1838:	21 e0       	ldi	r18, 0x01	; 1
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	c3 01       	movw	r24, r6
    183e:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZN13Adafruit_FONA9HTTP_dataEmm>
    1842:	81 11       	cpse	r24, r1
    1844:	03 c0       	rjmp	.+6      	; 0x184c <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0x80>
    1846:	89 81       	ldd	r24, Y+1	; 0x01
    1848:	85 60       	ori	r24, 0x05	; 5
    184a:	3f c0       	rjmp	.+126    	; 0x18ca <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    184c:	f3 01       	movw	r30, r6
    184e:	e3 5e       	subi	r30, 0xE3	; 227
    1850:	fe 4f       	sbci	r31, 0xFE	; 254
    1852:	80 81       	ld	r24, Z
    1854:	91 81       	ldd	r25, Z+1	; 0x01
    1856:	dc 01       	movw	r26, r24
    1858:	ed 91       	ld	r30, X+
    185a:	fc 91       	ld	r31, X
    185c:	02 80       	ldd	r0, Z+2	; 0x02
    185e:	f3 81       	ldd	r31, Z+3	; 0x03
    1860:	e0 2d       	mov	r30, r0
    1862:	a2 01       	movw	r20, r4
    1864:	b1 01       	movw	r22, r2
    1866:	09 95       	icall
    1868:	f3 01       	movw	r30, r6
    186a:	e5 5e       	subi	r30, 0xE5	; 229
    186c:	fe 4f       	sbci	r31, 0xFE	; 254
    186e:	60 81       	ld	r22, Z
    1870:	71 81       	ldd	r23, Z+1	; 0x01
    1872:	40 e1       	ldi	r20, 0x10	; 16
    1874:	57 e2       	ldi	r21, 0x27	; 39
    1876:	c3 01       	movw	r24, r6
    1878:	0e 94 b8 05 	call	0xb70	; 0xb70 <_ZN13Adafruit_FONA11expectReplyEPK19__FlashStringHelperj>
    187c:	81 11       	cpse	r24, r1
    187e:	03 c0       	rjmp	.+6      	; 0x1886 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xba>
    1880:	89 81       	ldd	r24, Y+1	; 0x01
    1882:	86 60       	ori	r24, 0x06	; 6
    1884:	22 c0       	rjmp	.+68     	; 0x18ca <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    1886:	10 e1       	ldi	r17, 0x10	; 16
    1888:	e1 2e       	mov	r14, r17
    188a:	17 e2       	ldi	r17, 0x27	; 39
    188c:	f1 2e       	mov	r15, r17
    188e:	00 e0       	ldi	r16, 0x00	; 0
    1890:	10 e0       	ldi	r17, 0x00	; 0
    1892:	95 01       	movw	r18, r10
    1894:	4c 81       	ldd	r20, Y+4	; 0x04
    1896:	5d 81       	ldd	r21, Y+5	; 0x05
    1898:	61 e0       	ldi	r22, 0x01	; 1
    189a:	c3 01       	movw	r24, r6
    189c:	0e 94 88 0b 	call	0x1710	; 0x1710 <_ZN13Adafruit_FONA11HTTP_actionEhPjS0_l>
    18a0:	98 2f       	mov	r25, r24
    18a2:	9f 70       	andi	r25, 0x0F	; 15
    18a4:	92 30       	cpi	r25, 0x02	; 2
    18a6:	18 f0       	brcs	.+6      	; 0x18ae <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xe2>
    18a8:	b9 81       	ldd	r27, Y+1	; 0x01
    18aa:	8b 2b       	or	r24, r27
    18ac:	0e c0       	rjmp	.+28     	; 0x18ca <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    18ae:	a4 01       	movw	r20, r8
    18b0:	b6 01       	movw	r22, r12
    18b2:	c3 01       	movw	r24, r6
    18b4:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN13Adafruit_FONA12HTTP_readallEjPc>
    18b8:	81 11       	cpse	r24, r1
    18ba:	03 c0       	rjmp	.+6      	; 0x18c2 <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xf6>
    18bc:	89 81       	ldd	r24, Y+1	; 0x01
    18be:	80 62       	ori	r24, 0x20	; 32
    18c0:	89 83       	std	Y+1, r24	; 0x01
    18c2:	89 81       	ldd	r24, Y+1	; 0x01
    18c4:	81 60       	ori	r24, 0x01	; 1
    18c6:	01 c0       	rjmp	.+2      	; 0x18ca <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc+0xfe>
    18c8:	89 81       	ldd	r24, Y+1	; 0x01
    18ca:	0f 90       	pop	r0
    18cc:	0f 90       	pop	r0
    18ce:	0f 90       	pop	r0
    18d0:	0f 90       	pop	r0
    18d2:	0f 90       	pop	r0
    18d4:	df 91       	pop	r29
    18d6:	cf 91       	pop	r28
    18d8:	1f 91       	pop	r17
    18da:	0f 91       	pop	r16
    18dc:	ff 90       	pop	r15
    18de:	ef 90       	pop	r14
    18e0:	df 90       	pop	r13
    18e2:	cf 90       	pop	r12
    18e4:	bf 90       	pop	r11
    18e6:	af 90       	pop	r10
    18e8:	9f 90       	pop	r9
    18ea:	8f 90       	pop	r8
    18ec:	7f 90       	pop	r7
    18ee:	6f 90       	pop	r6
    18f0:	5f 90       	pop	r5
    18f2:	4f 90       	pop	r4
    18f4:	3f 90       	pop	r3
    18f6:	2f 90       	pop	r2
    18f8:	08 95       	ret

000018fa <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_>:
    18fa:	2f 92       	push	r2
    18fc:	3f 92       	push	r3
    18fe:	4f 92       	push	r4
    1900:	5f 92       	push	r5
    1902:	6f 92       	push	r6
    1904:	7f 92       	push	r7
    1906:	8f 92       	push	r8
    1908:	9f 92       	push	r9
    190a:	af 92       	push	r10
    190c:	bf 92       	push	r11
    190e:	cf 92       	push	r12
    1910:	df 92       	push	r13
    1912:	ef 92       	push	r14
    1914:	ff 92       	push	r15
    1916:	0f 93       	push	r16
    1918:	1f 93       	push	r17
    191a:	cf 93       	push	r28
    191c:	df 93       	push	r29
    191e:	3c 01       	movw	r6, r24
    1920:	e9 01       	movw	r28, r18
    1922:	28 01       	movw	r4, r16
    1924:	17 01       	movw	r2, r14
    1926:	76 01       	movw	r14, r12
    1928:	49 01       	movw	r8, r18
    192a:	51 01       	movw	r10, r2
    192c:	68 01       	movw	r12, r16
    192e:	8a 01       	movw	r16, r20
    1930:	9b 01       	movw	r18, r22
    1932:	43 ec       	ldi	r20, 0xC3	; 195
    1934:	51 e0       	ldi	r21, 0x01	; 1
    1936:	6e ec       	ldi	r22, 0xCE	; 206
    1938:	71 e0       	ldi	r23, 0x01	; 1
    193a:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <_ZN13Adafruit_FONA15HTTP_POST_startEPK19__FlashStringHelperS2_PKhjPjjS5_Pc>
    193e:	18 2f       	mov	r17, r24
    1940:	8f 70       	andi	r24, 0x0F	; 15
    1942:	82 30       	cpi	r24, 0x02	; 2
    1944:	78 f0       	brcs	.+30     	; 0x1964 <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0x6a>
    1946:	60 ea       	ldi	r22, 0xA0	; 160
    1948:	71 e0       	ldi	r23, 0x01	; 1
    194a:	8e e9       	ldi	r24, 0x9E	; 158
    194c:	93 e0       	ldi	r25, 0x03	; 3
    194e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1952:	61 2f       	mov	r22, r17
    1954:	70 e0       	ldi	r23, 0x00	; 0
    1956:	4a e0       	ldi	r20, 0x0A	; 10
    1958:	50 e0       	ldi	r21, 0x00	; 0
    195a:	8e e9       	ldi	r24, 0x9E	; 158
    195c:	93 e0       	ldi	r25, 0x03	; 3
    195e:	0e 94 d9 1d 	call	0x3bb2	; 0x3bb2 <_ZN5Print7printlnEii>
    1962:	33 c0       	rjmp	.+102    	; 0x19ca <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0xd0>
    1964:	63 e8       	ldi	r22, 0x83	; 131
    1966:	71 e0       	ldi	r23, 0x01	; 1
    1968:	8e e9       	ldi	r24, 0x9E	; 158
    196a:	93 e0       	ldi	r25, 0x03	; 3
    196c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1970:	f1 01       	movw	r30, r2
    1972:	60 81       	ld	r22, Z
    1974:	71 81       	ldd	r23, Z+1	; 0x01
    1976:	4a e0       	ldi	r20, 0x0A	; 10
    1978:	50 e0       	ldi	r21, 0x00	; 0
    197a:	8e e9       	ldi	r24, 0x9E	; 158
    197c:	93 e0       	ldi	r25, 0x03	; 3
    197e:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1982:	60 e7       	ldi	r22, 0x70	; 112
    1984:	71 e0       	ldi	r23, 0x01	; 1
    1986:	8e e9       	ldi	r24, 0x9E	; 158
    1988:	93 e0       	ldi	r25, 0x03	; 3
    198a:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    198e:	4a e0       	ldi	r20, 0x0A	; 10
    1990:	50 e0       	ldi	r21, 0x00	; 0
    1992:	b2 01       	movw	r22, r4
    1994:	8e e9       	ldi	r24, 0x9E	; 158
    1996:	93 e0       	ldi	r25, 0x03	; 3
    1998:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    199c:	62 e6       	ldi	r22, 0x62	; 98
    199e:	71 e0       	ldi	r23, 0x01	; 1
    19a0:	8e e9       	ldi	r24, 0x9E	; 158
    19a2:	93 e0       	ldi	r25, 0x03	; 3
    19a4:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    19a8:	fe 01       	movw	r30, r28
    19aa:	01 90       	ld	r0, Z+
    19ac:	00 20       	and	r0, r0
    19ae:	e9 f7       	brne	.-6      	; 0x19aa <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_+0xb0>
    19b0:	31 97       	sbiw	r30, 0x01	; 1
    19b2:	bf 01       	movw	r22, r30
    19b4:	6c 1b       	sub	r22, r28
    19b6:	7d 0b       	sbc	r23, r29
    19b8:	4a e0       	ldi	r20, 0x0A	; 10
    19ba:	50 e0       	ldi	r21, 0x00	; 0
    19bc:	8e e9       	ldi	r24, 0x9E	; 158
    19be:	93 e0       	ldi	r25, 0x03	; 3
    19c0:	0e 94 66 1d 	call	0x3acc	; 0x3acc <_ZN5Print7printlnEji>
    19c4:	c3 01       	movw	r24, r6
    19c6:	0e 94 0a 09 	call	0x1214	; 0x1214 <_ZN13Adafruit_FONA9HTTP_termEv>
    19ca:	81 2f       	mov	r24, r17
    19cc:	df 91       	pop	r29
    19ce:	cf 91       	pop	r28
    19d0:	1f 91       	pop	r17
    19d2:	0f 91       	pop	r16
    19d4:	ff 90       	pop	r15
    19d6:	ef 90       	pop	r14
    19d8:	df 90       	pop	r13
    19da:	cf 90       	pop	r12
    19dc:	bf 90       	pop	r11
    19de:	af 90       	pop	r10
    19e0:	9f 90       	pop	r9
    19e2:	8f 90       	pop	r8
    19e4:	7f 90       	pop	r7
    19e6:	6f 90       	pop	r6
    19e8:	5f 90       	pop	r5
    19ea:	4f 90       	pop	r4
    19ec:	3f 90       	pop	r3
    19ee:	2f 90       	pop	r2
    19f0:	08 95       	ret

000019f2 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>:
    19f2:	af 92       	push	r10
    19f4:	bf 92       	push	r11
    19f6:	cf 92       	push	r12
    19f8:	df 92       	push	r13
    19fa:	ef 92       	push	r14
    19fc:	0f 93       	push	r16
    19fe:	1f 93       	push	r17
    1a00:	cf 93       	push	r28
    1a02:	df 93       	push	r29
    1a04:	ec 01       	movw	r28, r24
    1a06:	6a 01       	movw	r12, r20
    1a08:	59 01       	movw	r10, r18
    1a0a:	10 2f       	mov	r17, r16
    1a0c:	0e 2d       	mov	r16, r14
    1a0e:	44 ef       	ldi	r20, 0xF4	; 244
    1a10:	51 e0       	ldi	r21, 0x01	; 1
    1a12:	0e 94 b7 06 	call	0xd6e	; 0xd6e <_ZN13Adafruit_FONA8getReplyEPK19__FlashStringHelperj>
    1a16:	21 2f       	mov	r18, r17
    1a18:	a5 01       	movw	r20, r10
    1a1a:	b6 01       	movw	r22, r12
    1a1c:	ce 01       	movw	r24, r28
    1a1e:	0e 94 18 0b 	call	0x1630	; 0x1630 <_ZN13Adafruit_FONA10parseReplyEPK19__FlashStringHelperPjch>
    1a22:	18 2f       	mov	r17, r24
    1a24:	88 23       	and	r24, r24
    1a26:	31 f0       	breq	.+12     	; 0x1a34 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch+0x42>
    1a28:	40 e0       	ldi	r20, 0x00	; 0
    1a2a:	64 ef       	ldi	r22, 0xF4	; 244
    1a2c:	71 e0       	ldi	r23, 0x01	; 1
    1a2e:	ce 01       	movw	r24, r28
    1a30:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN13Adafruit_FONA8readlineEjb>
    1a34:	81 2f       	mov	r24, r17
    1a36:	df 91       	pop	r29
    1a38:	cf 91       	pop	r28
    1a3a:	1f 91       	pop	r17
    1a3c:	0f 91       	pop	r16
    1a3e:	ef 90       	pop	r14
    1a40:	df 90       	pop	r13
    1a42:	cf 90       	pop	r12
    1a44:	bf 90       	pop	r11
    1a46:	af 90       	pop	r10
    1a48:	08 95       	ret

00001a4a <_ZN13Adafruit_FONA14getBattPercentEPj>:
    1a4a:	ef 92       	push	r14
    1a4c:	0f 93       	push	r16
    1a4e:	9b 01       	movw	r18, r22
    1a50:	ee 24       	eor	r14, r14
    1a52:	e3 94       	inc	r14
    1a54:	0c e2       	ldi	r16, 0x2C	; 44
    1a56:	4a e0       	ldi	r20, 0x0A	; 10
    1a58:	53 e0       	ldi	r21, 0x03	; 3
    1a5a:	63 e0       	ldi	r22, 0x03	; 3
    1a5c:	73 e0       	ldi	r23, 0x03	; 3
    1a5e:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1a62:	0f 91       	pop	r16
    1a64:	ef 90       	pop	r14
    1a66:	08 95       	ret

00001a68 <_ZN13Adafruit_FONA7getRSSIEv>:
  return strlen(imei);
}

/********* NETWORK *******************************************************/

FONA_GET_RSSI Adafruit_FONA::getRSSI(void) {
    1a68:	cf 92       	push	r12
    1a6a:	df 92       	push	r13
    1a6c:	ef 92       	push	r14
    1a6e:	ff 92       	push	r15
    1a70:	0f 93       	push	r16
    1a72:	1f 93       	push	r17
    1a74:	cf 93       	push	r28
    1a76:	df 93       	push	r29
    1a78:	cd b7       	in	r28, 0x3d	; 61
    1a7a:	de b7       	in	r29, 0x3e	; 62
    1a7c:	28 97       	sbiw	r28, 0x08	; 8
    1a7e:	0f b6       	in	r0, 0x3f	; 63
    1a80:	f8 94       	cli
    1a82:	de bf       	out	0x3e, r29	; 62
    1a84:	0f be       	out	0x3f, r0	; 63
    1a86:	cd bf       	out	0x3d, r28	; 61
    1a88:	6c 01       	movw	r12, r24
	
  FONA_GET_RSSI reply;
  uint16_t rssi=0, ber=0, nsPres=0, nsStat=0;
    1a8a:	18 86       	std	Y+8, r1	; 0x08
    1a8c:	1f 82       	std	Y+7, r1	; 0x07
    1a8e:	1e 82       	std	Y+6, r1	; 0x06
    1a90:	1d 82       	std	Y+5, r1	; 0x05
    1a92:	1c 82       	std	Y+4, r1	; 0x04
    1a94:	1b 82       	std	Y+3, r1	; 0x03
    1a96:	1a 82       	std	Y+2, r1	; 0x02
    1a98:	19 82       	std	Y+1, r1	; 0x01
  uint8_t netReg=0;
  
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &rssi, ',', 0))
    1a9a:	e1 2c       	mov	r14, r1
    1a9c:	0c e2       	ldi	r16, 0x2C	; 44
    1a9e:	9e 01       	movw	r18, r28
    1aa0:	29 5f       	subi	r18, 0xF9	; 249
    1aa2:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa4:	4c ef       	ldi	r20, 0xFC	; 252
    1aa6:	52 e0       	ldi	r21, 0x02	; 2
    1aa8:	65 ef       	ldi	r22, 0xF5	; 245
    1aaa:	72 e0       	ldi	r23, 0x02	; 2
    1aac:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1ab0:	f8 2e       	mov	r15, r24
	  reply.rssiErr = 1;
	
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &ber, ',', 1))
    1ab2:	ee 24       	eor	r14, r14
    1ab4:	e3 94       	inc	r14
    1ab6:	9e 01       	movw	r18, r28
    1ab8:	2b 5f       	subi	r18, 0xFB	; 251
    1aba:	3f 4f       	sbci	r19, 0xFF	; 255
    1abc:	4e ee       	ldi	r20, 0xEE	; 238
    1abe:	52 e0       	ldi	r21, 0x02	; 2
    1ac0:	67 ee       	ldi	r22, 0xE7	; 231
    1ac2:	72 e0       	ldi	r23, 0x02	; 2
    1ac4:	c6 01       	movw	r24, r12
    1ac6:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1aca:	88 23       	and	r24, r24
    1acc:	19 f0       	breq	.+6      	; 0x1ad4 <_ZN13Adafruit_FONA7getRSSIEv+0x6c>
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    1ace:	81 e0       	ldi	r24, 0x01	; 1
    1ad0:	f8 26       	eor	r15, r24
    1ad2:	02 c0       	rjmp	.+4      	; 0x1ad8 <_ZN13Adafruit_FONA7getRSSIEv+0x70>
	  reply.rssiErr = 1;
    1ad4:	ff 24       	eor	r15, r15
    1ad6:	f3 94       	inc	r15
  
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsPres, ',', 0))
    1ad8:	e1 2c       	mov	r14, r1
    1ada:	0c e2       	ldi	r16, 0x2C	; 44
    1adc:	9e 01       	movw	r18, r28
    1ade:	2d 5f       	subi	r18, 0xFD	; 253
    1ae0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae2:	4f ed       	ldi	r20, 0xDF	; 223
    1ae4:	52 e0       	ldi	r21, 0x02	; 2
    1ae6:	66 ed       	ldi	r22, 0xD6	; 214
    1ae8:	72 e0       	ldi	r23, 0x02	; 2
    1aea:	c6 01       	movw	r24, r12
    1aec:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1af0:	88 23       	and	r24, r24
    1af2:	11 f0       	breq	.+4      	; 0x1af8 <_ZN13Adafruit_FONA7getRSSIEv+0x90>
	  netReg |= FONA_GET_NETREG::IS_ERROR;
  else
	  netReg |= nsPres; //Is within GET_NETREG enum bounds
    1af4:	1b 81       	ldd	r17, Y+3	; 0x03
    1af6:	01 c0       	rjmp	.+2      	; 0x1afa <_ZN13Adafruit_FONA7getRSSIEv+0x92>
	
  if (! sendParseReply(F("AT+CSQ"), F("+CSQ: "), &ber, ',', 1))
	  reply.rssiErr = 1;
  
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsPres, ',', 0))
	  netReg |= FONA_GET_NETREG::IS_ERROR;
    1af8:	10 e2       	ldi	r17, 0x20	; 32
  else
	  netReg |= nsPres; //Is within GET_NETREG enum bounds
	
  if (! sendParseReply(F("AT+CREG?"), F("+CREG: "), &nsStat, ',', 1))
    1afa:	ee 24       	eor	r14, r14
    1afc:	e3 94       	inc	r14
    1afe:	0c e2       	ldi	r16, 0x2C	; 44
    1b00:	9e 01       	movw	r18, r28
    1b02:	2f 5f       	subi	r18, 0xFF	; 255
    1b04:	3f 4f       	sbci	r19, 0xFF	; 255
    1b06:	4e ec       	ldi	r20, 0xCE	; 206
    1b08:	52 e0       	ldi	r21, 0x02	; 2
    1b0a:	65 ec       	ldi	r22, 0xC5	; 197
    1b0c:	72 e0       	ldi	r23, 0x02	; 2
    1b0e:	c6 01       	movw	r24, r12
    1b10:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <_ZN13Adafruit_FONA14sendParseReplyEPK19__FlashStringHelperS2_Pjch>
    1b14:	81 11       	cpse	r24, r1
    1b16:	03 c0       	rjmp	.+6      	; 0x1b1e <_ZN13Adafruit_FONA7getRSSIEv+0xb6>
	  netReg |= FONA_GET_NETREG::IS_ERROR;
    1b18:	91 2f       	mov	r25, r17
    1b1a:	90 62       	ori	r25, 0x20	; 32
    1b1c:	02 c0       	rjmp	.+4      	; 0x1b22 <_ZN13Adafruit_FONA7getRSSIEv+0xba>
  else
	  netReg |= nsStat; //Is within GET_NETREG enum bounds
    1b1e:	99 81       	ldd	r25, Y+1	; 0x01
    1b20:	91 2b       	or	r25, r17
  
  //Both are <= 99 so can cast&store in 1 byte fields
  reply.rssi = rssi;
  reply.ber = ber;
    1b22:	7d 81       	ldd	r23, Y+5	; 0x05
  reply.netReg = (FONA_GET_NETREG)netReg;
  
  return reply;
    1b24:	6f 81       	ldd	r22, Y+7	; 0x07
}
    1b26:	8f 2d       	mov	r24, r15
    1b28:	28 96       	adiw	r28, 0x08	; 8
    1b2a:	0f b6       	in	r0, 0x3f	; 63
    1b2c:	f8 94       	cli
    1b2e:	de bf       	out	0x3e, r29	; 62
    1b30:	0f be       	out	0x3f, r0	; 63
    1b32:	cd bf       	out	0x3d, r28	; 61
    1b34:	df 91       	pop	r29
    1b36:	cf 91       	pop	r28
    1b38:	1f 91       	pop	r17
    1b3a:	0f 91       	pop	r16
    1b3c:	ff 90       	pop	r15
    1b3e:	ef 90       	pop	r14
    1b40:	df 90       	pop	r13
    1b42:	cf 90       	pop	r12
    1b44:	08 95       	ret

00001b46 <_ZN10GsmPayloadC1Ev>:
boolean GsmPayload::hasGpsInfo(void) { return _header.hasGpsInfo; }
uint8_t GsmPayload::getModuleId(void) { return _header.moduleId; }
void GsmPayload::setModuleId(uint8_t moduleId) { _header.moduleId = moduleId; }
uint16_t GsmPayload::getBootNumber(void) { return _header.bootNumber; }
void GsmPayload::setBootNumber(uint16_t bootNumber) { _header.bootNumber = bootNumber; }
FONA_GET_RSSI GsmPayload::getRSSI(void) { return _header.rssi; }
    1b46:	fc 01       	movw	r30, r24
    1b48:	10 82       	st	Z, r1
    1b4a:	12 82       	std	Z+2, r1	; 0x02
    1b4c:	11 82       	std	Z+1, r1	; 0x01
    1b4e:	13 82       	std	Z+3, r1	; 0x03
    1b50:	14 82       	std	Z+4, r1	; 0x04
    1b52:	15 82       	std	Z+5, r1	; 0x05
    1b54:	16 82       	std	Z+6, r1	; 0x06
    1b56:	17 82       	std	Z+7, r1	; 0x07
    1b58:	12 86       	std	Z+10, r1	; 0x0a
    1b5a:	11 86       	std	Z+9, r1	; 0x09
    1b5c:	14 86       	std	Z+12, r1	; 0x0c
    1b5e:	13 86       	std	Z+11, r1	; 0x0b
    1b60:	08 95       	ret

00001b62 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>:
    1b62:	2a e0       	ldi	r18, 0x0A	; 10
    1b64:	82 9f       	mul	r24, r18
    1b66:	c0 01       	movw	r24, r0
    1b68:	11 24       	eor	r1, r1
    1b6a:	09 96       	adiw	r24, 0x09	; 9
    1b6c:	0c 94 fa 0f 	jmp	0x1ff4	; 0x1ff4 <_ZN7Helpers14base64_enc_lenEi>

00001b70 <_ZN10GsmPayload16createRawPayloadEPh>:
    1b70:	cf 93       	push	r28
    1b72:	df 93       	push	r29
    1b74:	ec 01       	movw	r28, r24
    1b76:	cb 01       	movw	r24, r22
    1b78:	29 e0       	ldi	r18, 0x09	; 9
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	db 01       	movw	r26, r22
    1b7e:	01 90       	ld	r0, Z+
    1b80:	0d 92       	st	X+, r0
    1b82:	2a 95       	dec	r18
    1b84:	e1 f7       	brne	.-8      	; 0x1b7e <_ZN10GsmPayload16createRawPayloadEPh+0xe>
    1b86:	4b 81       	ldd	r20, Y+3	; 0x03
    1b88:	2a e0       	ldi	r18, 0x0A	; 10
    1b8a:	42 9f       	mul	r20, r18
    1b8c:	a0 01       	movw	r20, r0
    1b8e:	11 24       	eor	r1, r1
    1b90:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b92:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b94:	09 96       	adiw	r24, 0x09	; 9
    1b96:	df 91       	pop	r29
    1b98:	cf 91       	pop	r28
    1b9a:	0c 94 a3 25 	jmp	0x4b46	; 0x4b46 <memcpy>

00001b9e <_ZN10GsmPayload20createEncodedPayloadEPc>:
    1b9e:	af 92       	push	r10
    1ba0:	bf 92       	push	r11
    1ba2:	cf 92       	push	r12
    1ba4:	df 92       	push	r13
    1ba6:	ef 92       	push	r14
    1ba8:	ff 92       	push	r15
    1baa:	0f 93       	push	r16
    1bac:	1f 93       	push	r17
    1bae:	cf 93       	push	r28
    1bb0:	df 93       	push	r29
    1bb2:	cd b7       	in	r28, 0x3d	; 61
    1bb4:	de b7       	in	r29, 0x3e	; 62
    1bb6:	6b 01       	movw	r12, r22
    1bb8:	ed b6       	in	r14, 0x3d	; 61
    1bba:	fe b6       	in	r15, 0x3e	; 62
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	03 81       	ldd	r16, Z+3	; 0x03
    1bc0:	fa e0       	ldi	r31, 0x0A	; 10
    1bc2:	0f 9f       	mul	r16, r31
    1bc4:	80 01       	movw	r16, r0
    1bc6:	11 24       	eor	r1, r1
    1bc8:	07 5f       	subi	r16, 0xF7	; 247
    1bca:	1f 4f       	sbci	r17, 0xFF	; 255
    1bcc:	2d b7       	in	r18, 0x3d	; 61
    1bce:	3e b7       	in	r19, 0x3e	; 62
    1bd0:	20 1b       	sub	r18, r16
    1bd2:	31 0b       	sbc	r19, r17
    1bd4:	0f b6       	in	r0, 0x3f	; 63
    1bd6:	f8 94       	cli
    1bd8:	3e bf       	out	0x3e, r19	; 62
    1bda:	0f be       	out	0x3f, r0	; 63
    1bdc:	2d bf       	out	0x3d, r18	; 61
    1bde:	ed b7       	in	r30, 0x3d	; 61
    1be0:	fe b7       	in	r31, 0x3e	; 62
    1be2:	31 96       	adiw	r30, 0x01	; 1
    1be4:	5f 01       	movw	r10, r30
    1be6:	bf 01       	movw	r22, r30
    1be8:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <_ZN10GsmPayload16createRawPayloadEPh>
    1bec:	a8 01       	movw	r20, r16
    1bee:	b5 01       	movw	r22, r10
    1bf0:	c6 01       	movw	r24, r12
    1bf2:	0e 94 35 10 	call	0x206a	; 0x206a <_ZN7Helpers13base64_encodeEPcPhi>
    1bf6:	0f b6       	in	r0, 0x3f	; 63
    1bf8:	f8 94       	cli
    1bfa:	fe be       	out	0x3e, r15	; 62
    1bfc:	0f be       	out	0x3f, r0	; 63
    1bfe:	ed be       	out	0x3d, r14	; 61
    1c00:	df 91       	pop	r29
    1c02:	cf 91       	pop	r28
    1c04:	1f 91       	pop	r17
    1c06:	0f 91       	pop	r16
    1c08:	ff 90       	pop	r15
    1c0a:	ef 90       	pop	r14
    1c0c:	df 90       	pop	r13
    1c0e:	cf 90       	pop	r12
    1c10:	bf 90       	pop	r11
    1c12:	af 90       	pop	r10
    1c14:	08 95       	ret

00001c16 <_ZN10GsmPayload13setSensorDataEP10SensorDatah>:
    1c16:	fc 01       	movw	r30, r24
    1c18:	74 87       	std	Z+12, r23	; 0x0c
    1c1a:	63 87       	std	Z+11, r22	; 0x0b
    1c1c:	43 83       	std	Z+3, r20	; 0x03
    1c1e:	08 95       	ret

00001c20 <_ZN10GsmPayload11setModuleIdEh>:
    1c20:	fc 01       	movw	r30, r24
    1c22:	60 83       	st	Z, r22
    1c24:	08 95       	ret

00001c26 <_ZN10GsmPayload13setBootNumberEj>:
    1c26:	fc 01       	movw	r30, r24
    1c28:	72 83       	std	Z+2, r23	; 0x02
    1c2a:	61 83       	std	Z+1, r22	; 0x01
    1c2c:	08 95       	ret

00001c2e <_ZN10GsmPayload7setRSSIE13FONA_GET_RSSI>:
void GsmPayload::setRSSI(FONA_GET_RSSI rssi) { _header.rssi = rssi; }
    1c2e:	fc 01       	movw	r30, r24
    1c30:	45 83       	std	Z+5, r20	; 0x05
    1c32:	56 83       	std	Z+6, r21	; 0x06
    1c34:	67 83       	std	Z+7, r22	; 0x07
    1c36:	70 87       	std	Z+8, r23	; 0x08
    1c38:	08 95       	ret

00001c3a <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>:
	for(i = inputLen - 1; input[i] == '='; i--) {
		numEq++;
	}

	return ((6 * inputLen) / 8) - numEq;
}
    1c3a:	cf 93       	push	r28
    1c3c:	df 93       	push	r29
    1c3e:	ec 01       	movw	r28, r24
    1c40:	6e e9       	ldi	r22, 0x9E	; 158
    1c42:	74 e0       	ldi	r23, 0x04	; 4
    1c44:	8e e9       	ldi	r24, 0x9E	; 158
    1c46:	93 e0       	ldi	r25, 0x03	; 3
    1c48:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1c4c:	4a e0       	ldi	r20, 0x0A	; 10
    1c4e:	50 e0       	ldi	r21, 0x00	; 0
    1c50:	68 81       	ld	r22, Y
    1c52:	8e e9       	ldi	r24, 0x9E	; 158
    1c54:	93 e0       	ldi	r25, 0x03	; 3
    1c56:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <_ZN5Print5printEhi>
    1c5a:	6a e9       	ldi	r22, 0x9A	; 154
    1c5c:	74 e0       	ldi	r23, 0x04	; 4
    1c5e:	8e e9       	ldi	r24, 0x9E	; 158
    1c60:	93 e0       	ldi	r25, 0x03	; 3
    1c62:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1c66:	65 e9       	ldi	r22, 0x95	; 149
    1c68:	74 e0       	ldi	r23, 0x04	; 4
    1c6a:	8e e9       	ldi	r24, 0x9E	; 158
    1c6c:	93 e0       	ldi	r25, 0x03	; 3
    1c6e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1c72:	4a e0       	ldi	r20, 0x0A	; 10
    1c74:	50 e0       	ldi	r21, 0x00	; 0
    1c76:	69 81       	ldd	r22, Y+1	; 0x01
    1c78:	8e e9       	ldi	r24, 0x9E	; 158
    1c7a:	93 e0       	ldi	r25, 0x03	; 3
    1c7c:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <_ZN5Print5printEhi>
    1c80:	61 e9       	ldi	r22, 0x91	; 145
    1c82:	74 e0       	ldi	r23, 0x04	; 4
    1c84:	8e e9       	ldi	r24, 0x9E	; 158
    1c86:	93 e0       	ldi	r25, 0x03	; 3
    1c88:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1c8c:	6c e7       	ldi	r22, 0x7C	; 124
    1c8e:	74 e0       	ldi	r23, 0x04	; 4
    1c90:	8e e9       	ldi	r24, 0x9E	; 158
    1c92:	93 e0       	ldi	r25, 0x03	; 3
    1c94:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1c98:	6b 81       	ldd	r22, Y+3	; 0x03
    1c9a:	63 70       	andi	r22, 0x03	; 3
    1c9c:	70 e0       	ldi	r23, 0x00	; 0
    1c9e:	4a e0       	ldi	r20, 0x0A	; 10
    1ca0:	50 e0       	ldi	r21, 0x00	; 0
    1ca2:	8e e9       	ldi	r24, 0x9E	; 158
    1ca4:	93 e0       	ldi	r25, 0x03	; 3
    1ca6:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1caa:	62 e7       	ldi	r22, 0x72	; 114
    1cac:	74 e0       	ldi	r23, 0x04	; 4
    1cae:	8e e9       	ldi	r24, 0x9E	; 158
    1cb0:	93 e0       	ldi	r25, 0x03	; 3
    1cb2:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1cb6:	6b 81       	ldd	r22, Y+3	; 0x03
    1cb8:	6c 71       	andi	r22, 0x1C	; 28
    1cba:	70 e0       	ldi	r23, 0x00	; 0
    1cbc:	75 95       	asr	r23
    1cbe:	67 95       	ror	r22
    1cc0:	75 95       	asr	r23
    1cc2:	67 95       	ror	r22
    1cc4:	4a e0       	ldi	r20, 0x0A	; 10
    1cc6:	50 e0       	ldi	r21, 0x00	; 0
    1cc8:	8e e9       	ldi	r24, 0x9E	; 158
    1cca:	93 e0       	ldi	r25, 0x03	; 3
    1ccc:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1cd0:	69 e6       	ldi	r22, 0x69	; 105
    1cd2:	74 e0       	ldi	r23, 0x04	; 4
    1cd4:	8e e9       	ldi	r24, 0x9E	; 158
    1cd6:	93 e0       	ldi	r25, 0x03	; 3
    1cd8:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1cdc:	6b 81       	ldd	r22, Y+3	; 0x03
    1cde:	65 fb       	bst	r22, 5
    1ce0:	66 27       	eor	r22, r22
    1ce2:	60 f9       	bld	r22, 0
    1ce4:	4a e0       	ldi	r20, 0x0A	; 10
    1ce6:	50 e0       	ldi	r21, 0x00	; 0
    1ce8:	70 e0       	ldi	r23, 0x00	; 0
    1cea:	8e e9       	ldi	r24, 0x9E	; 158
    1cec:	93 e0       	ldi	r25, 0x03	; 3
    1cee:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1cf2:	65 e6       	ldi	r22, 0x65	; 101
    1cf4:	74 e0       	ldi	r23, 0x04	; 4
    1cf6:	8e e9       	ldi	r24, 0x9E	; 158
    1cf8:	93 e0       	ldi	r25, 0x03	; 3
    1cfa:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1cfe:	68 e5       	ldi	r22, 0x58	; 88
    1d00:	74 e0       	ldi	r23, 0x04	; 4
    1d02:	8e e9       	ldi	r24, 0x9E	; 158
    1d04:	93 e0       	ldi	r25, 0x03	; 3
    1d06:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1d0a:	4a e0       	ldi	r20, 0x0A	; 10
    1d0c:	50 e0       	ldi	r21, 0x00	; 0
    1d0e:	6a 81       	ldd	r22, Y+2	; 0x02
    1d10:	8e e9       	ldi	r24, 0x9E	; 158
    1d12:	93 e0       	ldi	r25, 0x03	; 3
    1d14:	df 91       	pop	r29
    1d16:	cf 91       	pop	r28
    1d18:	0c 94 4e 1d 	jmp	0x3a9c	; 0x3a9c <_ZN5Print7printlnEhi>

00001d1c <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>:
    1d1c:	fc 01       	movw	r30, r24
    1d1e:	22 81       	ldd	r18, Z+2	; 0x02
    1d20:	21 11       	cpse	r18, r1
    1d22:	06 c0       	rjmp	.+12     	; 0x1d30 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x14>
    1d24:	90 81       	ld	r25, Z
    1d26:	93 36       	cpi	r25, 0x63	; 99
    1d28:	19 f0       	breq	.+6      	; 0x1d30 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x14>
    1d2a:	81 e0       	ldi	r24, 0x01	; 1
    1d2c:	97 30       	cpi	r25, 0x07	; 7
    1d2e:	08 f4       	brcc	.+2      	; 0x1d32 <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI+0x16>
    1d30:	80 e0       	ldi	r24, 0x00	; 0
    1d32:	08 95       	ret

00001d34 <_ZN7Helpers15printSensorDataEP10SensorData>:
    1d34:	cf 93       	push	r28
    1d36:	df 93       	push	r29
    1d38:	ec 01       	movw	r28, r24
    1d3a:	60 e5       	ldi	r22, 0x50	; 80
    1d3c:	74 e0       	ldi	r23, 0x04	; 4
    1d3e:	8e e9       	ldi	r24, 0x9E	; 158
    1d40:	93 e0       	ldi	r25, 0x03	; 3
    1d42:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1d46:	68 81       	ld	r22, Y
    1d48:	79 81       	ldd	r23, Y+1	; 0x01
    1d4a:	4a e0       	ldi	r20, 0x0A	; 10
    1d4c:	50 e0       	ldi	r21, 0x00	; 0
    1d4e:	8e e9       	ldi	r24, 0x9E	; 158
    1d50:	93 e0       	ldi	r25, 0x03	; 3
    1d52:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1d56:	6c e4       	ldi	r22, 0x4C	; 76
    1d58:	74 e0       	ldi	r23, 0x04	; 4
    1d5a:	8e e9       	ldi	r24, 0x9E	; 158
    1d5c:	93 e0       	ldi	r25, 0x03	; 3
    1d5e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1d62:	66 e4       	ldi	r22, 0x46	; 70
    1d64:	74 e0       	ldi	r23, 0x04	; 4
    1d66:	8e e9       	ldi	r24, 0x9E	; 158
    1d68:	93 e0       	ldi	r25, 0x03	; 3
    1d6a:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1d6e:	6a 81       	ldd	r22, Y+2	; 0x02
    1d70:	7b 81       	ldd	r23, Y+3	; 0x03
    1d72:	4a e0       	ldi	r20, 0x0A	; 10
    1d74:	50 e0       	ldi	r21, 0x00	; 0
    1d76:	8e e9       	ldi	r24, 0x9E	; 158
    1d78:	93 e0       	ldi	r25, 0x03	; 3
    1d7a:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1d7e:	62 e4       	ldi	r22, 0x42	; 66
    1d80:	74 e0       	ldi	r23, 0x04	; 4
    1d82:	8e e9       	ldi	r24, 0x9E	; 158
    1d84:	93 e0       	ldi	r25, 0x03	; 3
    1d86:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1d8a:	69 e3       	ldi	r22, 0x39	; 57
    1d8c:	74 e0       	ldi	r23, 0x04	; 4
    1d8e:	8e e9       	ldi	r24, 0x9E	; 158
    1d90:	93 e0       	ldi	r25, 0x03	; 3
    1d92:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1d96:	6c 81       	ldd	r22, Y+4	; 0x04
    1d98:	7d 81       	ldd	r23, Y+5	; 0x05
    1d9a:	4a e0       	ldi	r20, 0x0A	; 10
    1d9c:	50 e0       	ldi	r21, 0x00	; 0
    1d9e:	8e e9       	ldi	r24, 0x9E	; 158
    1da0:	93 e0       	ldi	r25, 0x03	; 3
    1da2:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1da6:	65 e3       	ldi	r22, 0x35	; 53
    1da8:	74 e0       	ldi	r23, 0x04	; 4
    1daa:	8e e9       	ldi	r24, 0x9E	; 158
    1dac:	93 e0       	ldi	r25, 0x03	; 3
    1dae:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1db2:	6f e2       	ldi	r22, 0x2F	; 47
    1db4:	74 e0       	ldi	r23, 0x04	; 4
    1db6:	8e e9       	ldi	r24, 0x9E	; 158
    1db8:	93 e0       	ldi	r25, 0x03	; 3
    1dba:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1dbe:	6e 81       	ldd	r22, Y+6	; 0x06
    1dc0:	7f 81       	ldd	r23, Y+7	; 0x07
    1dc2:	4a e0       	ldi	r20, 0x0A	; 10
    1dc4:	50 e0       	ldi	r21, 0x00	; 0
    1dc6:	8e e9       	ldi	r24, 0x9E	; 158
    1dc8:	93 e0       	ldi	r25, 0x03	; 3
    1dca:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1dce:	6b e2       	ldi	r22, 0x2B	; 43
    1dd0:	74 e0       	ldi	r23, 0x04	; 4
    1dd2:	8e e9       	ldi	r24, 0x9E	; 158
    1dd4:	93 e0       	ldi	r25, 0x03	; 3
    1dd6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1dda:	64 e2       	ldi	r22, 0x24	; 36
    1ddc:	74 e0       	ldi	r23, 0x04	; 4
    1dde:	8e e9       	ldi	r24, 0x9E	; 158
    1de0:	93 e0       	ldi	r25, 0x03	; 3
    1de2:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1de6:	4a e0       	ldi	r20, 0x0A	; 10
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	68 85       	ldd	r22, Y+8	; 0x08
    1dec:	8e e9       	ldi	r24, 0x9E	; 158
    1dee:	93 e0       	ldi	r25, 0x03	; 3
    1df0:	df 91       	pop	r29
    1df2:	cf 91       	pop	r28
    1df4:	0c 94 4e 1d 	jmp	0x3a9c	; 0x3a9c <_ZN5Print7printlnEhi>

00001df8 <_ZN7Helpers18printDailySendDataEP14DailyCycleData>:
    1df8:	cf 93       	push	r28
    1dfa:	df 93       	push	r29
    1dfc:	ec 01       	movw	r28, r24
    1dfe:	6c e1       	ldi	r22, 0x1C	; 28
    1e00:	74 e0       	ldi	r23, 0x04	; 4
    1e02:	8e e9       	ldi	r24, 0x9E	; 158
    1e04:	93 e0       	ldi	r25, 0x03	; 3
    1e06:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e0a:	69 81       	ldd	r22, Y+1	; 0x01
    1e0c:	7a 81       	ldd	r23, Y+2	; 0x02
    1e0e:	4a e0       	ldi	r20, 0x0A	; 10
    1e10:	50 e0       	ldi	r21, 0x00	; 0
    1e12:	8e e9       	ldi	r24, 0x9E	; 158
    1e14:	93 e0       	ldi	r25, 0x03	; 3
    1e16:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1e1a:	68 e1       	ldi	r22, 0x18	; 24
    1e1c:	74 e0       	ldi	r23, 0x04	; 4
    1e1e:	8e e9       	ldi	r24, 0x9E	; 158
    1e20:	93 e0       	ldi	r25, 0x03	; 3
    1e22:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e26:	6d e0       	ldi	r22, 0x0D	; 13
    1e28:	74 e0       	ldi	r23, 0x04	; 4
    1e2a:	8e e9       	ldi	r24, 0x9E	; 158
    1e2c:	93 e0       	ldi	r25, 0x03	; 3
    1e2e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e32:	4a e0       	ldi	r20, 0x0A	; 10
    1e34:	50 e0       	ldi	r21, 0x00	; 0
    1e36:	6b 81       	ldd	r22, Y+3	; 0x03
    1e38:	8e e9       	ldi	r24, 0x9E	; 158
    1e3a:	93 e0       	ldi	r25, 0x03	; 3
    1e3c:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <_ZN5Print5printEhi>
    1e40:	69 e0       	ldi	r22, 0x09	; 9
    1e42:	74 e0       	ldi	r23, 0x04	; 4
    1e44:	8e e9       	ldi	r24, 0x9E	; 158
    1e46:	93 e0       	ldi	r25, 0x03	; 3
    1e48:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e4c:	62 e0       	ldi	r22, 0x02	; 2
    1e4e:	74 e0       	ldi	r23, 0x04	; 4
    1e50:	8e e9       	ldi	r24, 0x9E	; 158
    1e52:	93 e0       	ldi	r25, 0x03	; 3
    1e54:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e58:	68 81       	ld	r22, Y
    1e5a:	06 2e       	mov	r0, r22
    1e5c:	00 0c       	add	r0, r0
    1e5e:	77 0b       	sbc	r23, r23
    1e60:	4a e0       	ldi	r20, 0x0A	; 10
    1e62:	50 e0       	ldi	r21, 0x00	; 0
    1e64:	8e e9       	ldi	r24, 0x9E	; 158
    1e66:	93 e0       	ldi	r25, 0x03	; 3
    1e68:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1e6c:	6e ef       	ldi	r22, 0xFE	; 254
    1e6e:	73 e0       	ldi	r23, 0x03	; 3
    1e70:	8e e9       	ldi	r24, 0x9E	; 158
    1e72:	93 e0       	ldi	r25, 0x03	; 3
    1e74:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
    1e78:	6c ef       	ldi	r22, 0xFC	; 252
    1e7a:	73 e0       	ldi	r23, 0x03	; 3
    1e7c:	8e e9       	ldi	r24, 0x9E	; 158
    1e7e:	93 e0       	ldi	r25, 0x03	; 3
    1e80:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e84:	ce 01       	movw	r24, r28
    1e86:	04 96       	adiw	r24, 0x04	; 4
    1e88:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>
    1e8c:	6e ee       	ldi	r22, 0xEE	; 238
    1e8e:	73 e0       	ldi	r23, 0x03	; 3
    1e90:	8e e9       	ldi	r24, 0x9E	; 158
    1e92:	93 e0       	ldi	r25, 0x03	; 3
    1e94:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1e98:	68 85       	ldd	r22, Y+8	; 0x08
    1e9a:	70 e0       	ldi	r23, 0x00	; 0
    1e9c:	42 e0       	ldi	r20, 0x02	; 2
    1e9e:	50 e0       	ldi	r21, 0x00	; 0
    1ea0:	8e e9       	ldi	r24, 0x9E	; 158
    1ea2:	93 e0       	ldi	r25, 0x03	; 3
    1ea4:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1ea8:	6a ee       	ldi	r22, 0xEA	; 234
    1eaa:	73 e0       	ldi	r23, 0x03	; 3
    1eac:	8e e9       	ldi	r24, 0x9E	; 158
    1eae:	93 e0       	ldi	r25, 0x03	; 3
    1eb0:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1eb4:	6d ed       	ldi	r22, 0xDD	; 221
    1eb6:	73 e0       	ldi	r23, 0x03	; 3
    1eb8:	8e e9       	ldi	r24, 0x9E	; 158
    1eba:	93 e0       	ldi	r25, 0x03	; 3
    1ebc:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1ec0:	69 85       	ldd	r22, Y+9	; 0x09
    1ec2:	70 e0       	ldi	r23, 0x00	; 0
    1ec4:	42 e0       	ldi	r20, 0x02	; 2
    1ec6:	50 e0       	ldi	r21, 0x00	; 0
    1ec8:	8e e9       	ldi	r24, 0x9E	; 158
    1eca:	93 e0       	ldi	r25, 0x03	; 3
    1ecc:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1ed0:	69 ed       	ldi	r22, 0xD9	; 217
    1ed2:	73 e0       	ldi	r23, 0x03	; 3
    1ed4:	8e e9       	ldi	r24, 0x9E	; 158
    1ed6:	93 e0       	ldi	r25, 0x03	; 3
    1ed8:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1edc:	6c ec       	ldi	r22, 0xCC	; 204
    1ede:	73 e0       	ldi	r23, 0x03	; 3
    1ee0:	8e e9       	ldi	r24, 0x9E	; 158
    1ee2:	93 e0       	ldi	r25, 0x03	; 3
    1ee4:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1ee8:	6a 85       	ldd	r22, Y+10	; 0x0a
    1eea:	70 e0       	ldi	r23, 0x00	; 0
    1eec:	42 e0       	ldi	r20, 0x02	; 2
    1eee:	50 e0       	ldi	r21, 0x00	; 0
    1ef0:	8e e9       	ldi	r24, 0x9E	; 158
    1ef2:	93 e0       	ldi	r25, 0x03	; 3
    1ef4:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    1ef8:	68 ec       	ldi	r22, 0xC8	; 200
    1efa:	73 e0       	ldi	r23, 0x03	; 3
    1efc:	8e e9       	ldi	r24, 0x9E	; 158
    1efe:	93 e0       	ldi	r25, 0x03	; 3
    1f00:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
    1f04:	6a eb       	ldi	r22, 0xBA	; 186
    1f06:	73 e0       	ldi	r23, 0x03	; 3
    1f08:	8e e9       	ldi	r24, 0x9E	; 158
    1f0a:	93 e0       	ldi	r25, 0x03	; 3
    1f0c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1f10:	6f 85       	ldd	r22, Y+15	; 0x0f
    1f12:	78 89       	ldd	r23, Y+16	; 0x10
    1f14:	4a e0       	ldi	r20, 0x0A	; 10
    1f16:	50 e0       	ldi	r21, 0x00	; 0
    1f18:	8e e9       	ldi	r24, 0x9E	; 158
    1f1a:	93 e0       	ldi	r25, 0x03	; 3
    1f1c:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1f20:	66 eb       	ldi	r22, 0xB6	; 182
    1f22:	73 e0       	ldi	r23, 0x03	; 3
    1f24:	8e e9       	ldi	r24, 0x9E	; 158
    1f26:	93 e0       	ldi	r25, 0x03	; 3
    1f28:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1f2c:	68 ea       	ldi	r22, 0xA8	; 168
    1f2e:	73 e0       	ldi	r23, 0x03	; 3
    1f30:	8e e9       	ldi	r24, 0x9E	; 158
    1f32:	93 e0       	ldi	r25, 0x03	; 3
    1f34:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1f38:	6d 85       	ldd	r22, Y+13	; 0x0d
    1f3a:	7e 85       	ldd	r23, Y+14	; 0x0e
    1f3c:	4a e0       	ldi	r20, 0x0A	; 10
    1f3e:	50 e0       	ldi	r21, 0x00	; 0
    1f40:	8e e9       	ldi	r24, 0x9E	; 158
    1f42:	93 e0       	ldi	r25, 0x03	; 3
    1f44:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1f48:	64 ea       	ldi	r22, 0xA4	; 164
    1f4a:	73 e0       	ldi	r23, 0x03	; 3
    1f4c:	8e e9       	ldi	r24, 0x9E	; 158
    1f4e:	93 e0       	ldi	r25, 0x03	; 3
    1f50:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1f54:	65 e9       	ldi	r22, 0x95	; 149
    1f56:	73 e0       	ldi	r23, 0x03	; 3
    1f58:	8e e9       	ldi	r24, 0x9E	; 158
    1f5a:	93 e0       	ldi	r25, 0x03	; 3
    1f5c:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    1f60:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f62:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f64:	4a e0       	ldi	r20, 0x0A	; 10
    1f66:	50 e0       	ldi	r21, 0x00	; 0
    1f68:	8e e9       	ldi	r24, 0x9E	; 158
    1f6a:	93 e0       	ldi	r25, 0x03	; 3
    1f6c:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    1f70:	61 e9       	ldi	r22, 0x91	; 145
    1f72:	73 e0       	ldi	r23, 0x03	; 3
    1f74:	8e e9       	ldi	r24, 0x9E	; 158
    1f76:	93 e0       	ldi	r25, 0x03	; 3
    1f78:	df 91       	pop	r29
    1f7a:	cf 91       	pop	r28
    1f7c:	0c 94 bb 1c 	jmp	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>

00001f80 <_ZN7Helpers12freeListSizeEv>:
    1f80:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <__flp>
    1f84:	f0 91 8b 04 	lds	r31, 0x048B	; 0x80048b <__flp+0x1>
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	30 97       	sbiw	r30, 0x00	; 0
    1f8e:	49 f0       	breq	.+18     	; 0x1fa2 <_ZN7Helpers12freeListSizeEv+0x22>
    1f90:	02 96       	adiw	r24, 0x02	; 2
    1f92:	20 81       	ld	r18, Z
    1f94:	31 81       	ldd	r19, Z+1	; 0x01
    1f96:	82 0f       	add	r24, r18
    1f98:	93 1f       	adc	r25, r19
    1f9a:	02 80       	ldd	r0, Z+2	; 0x02
    1f9c:	f3 81       	ldd	r31, Z+3	; 0x03
    1f9e:	e0 2d       	mov	r30, r0
    1fa0:	f5 cf       	rjmp	.-22     	; 0x1f8c <_ZN7Helpers12freeListSizeEv+0xc>
    1fa2:	08 95       	ret

00001fa4 <_ZN7Helpers10freeMemoryEv>:
    1fa4:	0f 93       	push	r16
    1fa6:	1f 93       	push	r17
    1fa8:	cf 93       	push	r28
    1faa:	df 93       	push	r29
    1fac:	00 d0       	rcall	.+0      	; 0x1fae <_ZN7Helpers10freeMemoryEv+0xa>
    1fae:	cd b7       	in	r28, 0x3d	; 61
    1fb0:	de b7       	in	r29, 0x3e	; 62
    1fb2:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__brkval>
    1fb6:	90 91 89 04 	lds	r25, 0x0489	; 0x800489 <__brkval+0x1>
    1fba:	8e 01       	movw	r16, r28
    1fbc:	0f 5f       	subi	r16, 0xFF	; 255
    1fbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc0:	00 97       	sbiw	r24, 0x00	; 0
    1fc2:	29 f4       	brne	.+10     	; 0x1fce <_ZN7Helpers10freeMemoryEv+0x2a>
    1fc4:	0c 58       	subi	r16, 0x8C	; 140
    1fc6:	14 40       	sbci	r17, 0x04	; 4
    1fc8:	1a 83       	std	Y+2, r17	; 0x02
    1fca:	09 83       	std	Y+1, r16	; 0x01
    1fcc:	0a c0       	rjmp	.+20     	; 0x1fe2 <_ZN7Helpers10freeMemoryEv+0x3e>
    1fce:	08 1b       	sub	r16, r24
    1fd0:	19 0b       	sbc	r17, r25
    1fd2:	1a 83       	std	Y+2, r17	; 0x02
    1fd4:	09 83       	std	Y+1, r16	; 0x01
    1fd6:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <_ZN7Helpers12freeListSizeEv>
    1fda:	80 0f       	add	r24, r16
    1fdc:	91 1f       	adc	r25, r17
    1fde:	9a 83       	std	Y+2, r25	; 0x02
    1fe0:	89 83       	std	Y+1, r24	; 0x01
    1fe2:	89 81       	ldd	r24, Y+1	; 0x01
    1fe4:	9a 81       	ldd	r25, Y+2	; 0x02
    1fe6:	0f 90       	pop	r0
    1fe8:	0f 90       	pop	r0
    1fea:	df 91       	pop	r29
    1fec:	cf 91       	pop	r28
    1fee:	1f 91       	pop	r17
    1ff0:	0f 91       	pop	r16
    1ff2:	08 95       	ret

00001ff4 <_ZN7Helpers14base64_enc_lenEi>:
    1ff4:	9c 01       	movw	r18, r24
    1ff6:	2e 5f       	subi	r18, 0xFE	; 254
    1ff8:	3f 4f       	sbci	r19, 0xFF	; 255
    1ffa:	e3 e0       	ldi	r30, 0x03	; 3
    1ffc:	f0 e0       	ldi	r31, 0x00	; 0
    1ffe:	c9 01       	movw	r24, r18
    2000:	bf 01       	movw	r22, r30
    2002:	0e 94 17 23 	call	0x462e	; 0x462e <__divmodhi4>
    2006:	a9 01       	movw	r20, r18
    2008:	48 1b       	sub	r20, r24
    200a:	59 0b       	sbc	r21, r25
    200c:	ca 01       	movw	r24, r20
    200e:	bf 01       	movw	r22, r30
    2010:	0e 94 17 23 	call	0x462e	; 0x462e <__divmodhi4>
    2014:	cb 01       	movw	r24, r22
    2016:	88 0f       	add	r24, r24
    2018:	99 1f       	adc	r25, r25
    201a:	88 0f       	add	r24, r24
    201c:	99 1f       	adc	r25, r25
    201e:	01 96       	adiw	r24, 0x01	; 1
    2020:	08 95       	ret

00002022 <_Z8a3_to_a4PhS_>:

inline void a3_to_a4(uint8_t * a4, uint8_t * a3) {
    2022:	dc 01       	movw	r26, r24
    2024:	fb 01       	movw	r30, r22
	a4[0] = (a3[0] & 0xfc) >> 2;
    2026:	80 81       	ld	r24, Z
    2028:	86 95       	lsr	r24
    202a:	86 95       	lsr	r24
    202c:	8c 93       	st	X, r24
	a4[1] = ((a3[0] & 0x03) << 4) + ((a3[1] & 0xf0) >> 4);
    202e:	80 81       	ld	r24, Z
    2030:	83 70       	andi	r24, 0x03	; 3
    2032:	91 81       	ldd	r25, Z+1	; 0x01
    2034:	92 95       	swap	r25
    2036:	9f 70       	andi	r25, 0x0F	; 15
    2038:	20 e1       	ldi	r18, 0x10	; 16
    203a:	82 9f       	mul	r24, r18
    203c:	90 0d       	add	r25, r0
    203e:	11 24       	eor	r1, r1
    2040:	11 96       	adiw	r26, 0x01	; 1
    2042:	9c 93       	st	X, r25
    2044:	11 97       	sbiw	r26, 0x01	; 1
	a4[2] = ((a3[1] & 0x0f) << 2) + ((a3[2] & 0xc0) >> 6);
    2046:	91 81       	ldd	r25, Z+1	; 0x01
    2048:	9f 70       	andi	r25, 0x0F	; 15
    204a:	99 0f       	add	r25, r25
    204c:	99 0f       	add	r25, r25
    204e:	22 81       	ldd	r18, Z+2	; 0x02
    2050:	22 95       	swap	r18
    2052:	26 95       	lsr	r18
    2054:	26 95       	lsr	r18
    2056:	23 70       	andi	r18, 0x03	; 3
    2058:	92 0f       	add	r25, r18
    205a:	12 96       	adiw	r26, 0x02	; 2
    205c:	9c 93       	st	X, r25
    205e:	12 97       	sbiw	r26, 0x02	; 2
	a4[3] = (a3[2] & 0x3f);
    2060:	82 81       	ldd	r24, Z+2	; 0x02
    2062:	8f 73       	andi	r24, 0x3F	; 63
    2064:	13 96       	adiw	r26, 0x03	; 3
    2066:	8c 93       	st	X, r24
    2068:	08 95       	ret

0000206a <_ZN7Helpers13base64_encodeEPcPhi>:

/* 
	If *input is string, trailing \0 should NOT be included in the length
	Return length DOES include trailing \0
*/
int16_t Helpers::base64_encode(char *output, uint8_t *input, int16_t inputLen) {
    206a:	6f 92       	push	r6
    206c:	7f 92       	push	r7
    206e:	8f 92       	push	r8
    2070:	9f 92       	push	r9
    2072:	af 92       	push	r10
    2074:	bf 92       	push	r11
    2076:	cf 92       	push	r12
    2078:	df 92       	push	r13
    207a:	ef 92       	push	r14
    207c:	ff 92       	push	r15
    207e:	0f 93       	push	r16
    2080:	1f 93       	push	r17
    2082:	cf 93       	push	r28
    2084:	df 93       	push	r29
    2086:	cd b7       	in	r28, 0x3d	; 61
    2088:	de b7       	in	r29, 0x3e	; 62
    208a:	27 97       	sbiw	r28, 0x07	; 7
    208c:	0f b6       	in	r0, 0x3f	; 63
    208e:	f8 94       	cli
    2090:	de bf       	out	0x3e, r29	; 62
    2092:	0f be       	out	0x3f, r0	; 63
    2094:	cd bf       	out	0x3d, r28	; 61
    2096:	6c 01       	movw	r12, r24
    2098:	5b 01       	movw	r10, r22
    209a:	3b 01       	movw	r6, r22
    209c:	64 0e       	add	r6, r20
    209e:	75 1e       	adc	r7, r21
	
	int16_t i = 0, j = 0;
	int16_t encLen = 0;
    20a0:	e1 2c       	mov	r14, r1
    20a2:	f1 2c       	mov	r15, r1
	If *input is string, trailing \0 should NOT be included in the length
	Return length DOES include trailing \0
*/
int16_t Helpers::base64_encode(char *output, uint8_t *input, int16_t inputLen) {
	
	int16_t i = 0, j = 0;
    20a4:	00 e0       	ldi	r16, 0x00	; 0
    20a6:	10 e0       	ldi	r17, 0x00	; 0
	int16_t encLen = 0;
	uint8_t a3[3];
	uint8_t a4[4];

	while(inputLen--) {
		a3[i++] = *(input++);
    20a8:	4e 01       	movw	r8, r28
    20aa:	85 e0       	ldi	r24, 0x05	; 5
    20ac:	88 0e       	add	r8, r24
    20ae:	91 1c       	adc	r9, r1
	int16_t i = 0, j = 0;
	int16_t encLen = 0;
	uint8_t a3[3];
	uint8_t a4[4];

	while(inputLen--) {
    20b0:	6a 14       	cp	r6, r10
    20b2:	7b 04       	cpc	r7, r11
    20b4:	49 f1       	breq	.+82     	; 0x2108 <_ZN7Helpers13base64_encodeEPcPhi+0x9e>
		a3[i++] = *(input++);
    20b6:	c8 01       	movw	r24, r16
    20b8:	01 96       	adiw	r24, 0x01	; 1
    20ba:	f5 01       	movw	r30, r10
    20bc:	21 91       	ld	r18, Z+
    20be:	5f 01       	movw	r10, r30
    20c0:	f4 01       	movw	r30, r8
    20c2:	e0 0f       	add	r30, r16
    20c4:	f1 1f       	adc	r31, r17
    20c6:	20 83       	st	Z, r18
		if(i == 3) {
    20c8:	83 30       	cpi	r24, 0x03	; 3
    20ca:	91 05       	cpc	r25, r1
    20cc:	11 f0       	breq	.+4      	; 0x20d2 <_ZN7Helpers13base64_encodeEPcPhi+0x68>

			for(i = 0; i < 4; i++) {
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
			}

			i = 0;
    20ce:	8c 01       	movw	r16, r24
    20d0:	ef cf       	rjmp	.-34     	; 0x20b0 <_ZN7Helpers13base64_encodeEPcPhi+0x46>
	uint8_t a4[4];

	while(inputLen--) {
		a3[i++] = *(input++);
		if(i == 3) {
			a3_to_a4(a4, a3);
    20d2:	b4 01       	movw	r22, r8
    20d4:	ce 01       	movw	r24, r28
    20d6:	01 96       	adiw	r24, 0x01	; 1
    20d8:	0e 94 11 10 	call	0x2022	; 0x2022 <_Z8a3_to_a4PhS_>
    20dc:	de 01       	movw	r26, r28
    20de:	11 96       	adiw	r26, 0x01	; 1
    20e0:	c6 01       	movw	r24, r12
    20e2:	8e 0d       	add	r24, r14
    20e4:	9f 1d       	adc	r25, r15

			for(i = 0; i < 4; i++) {
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
    20e6:	ed 91       	ld	r30, X+
    20e8:	f0 e0       	ldi	r31, 0x00	; 0
    20ea:	ec 55       	subi	r30, 0x5C	; 92
    20ec:	fb 4f       	sbci	r31, 0xFB	; 251
    20ee:	24 91       	lpm	r18, Z
    20f0:	fc 01       	movw	r30, r24
    20f2:	21 93       	st	Z+, r18
    20f4:	cf 01       	movw	r24, r30
	while(inputLen--) {
		a3[i++] = *(input++);
		if(i == 3) {
			a3_to_a4(a4, a3);

			for(i = 0; i < 4; i++) {
    20f6:	a8 15       	cp	r26, r8
    20f8:	b9 05       	cpc	r27, r9
    20fa:	a9 f7       	brne	.-22     	; 0x20e6 <_ZN7Helpers13base64_encodeEPcPhi+0x7c>
    20fc:	f4 e0       	ldi	r31, 0x04	; 4
    20fe:	ef 0e       	add	r14, r31
    2100:	f1 1c       	adc	r15, r1
				output[encLen++] = pgm_read_byte(&b64_alphabet[a4[i]]);
			}

			i = 0;
    2102:	80 e0       	ldi	r24, 0x00	; 0
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	e3 cf       	rjmp	.-58     	; 0x20ce <_ZN7Helpers13base64_encodeEPcPhi+0x64>
		}
	}

	if(i) {
    2108:	01 15       	cp	r16, r1
    210a:	11 05       	cpc	r17, r1
    210c:	09 f4       	brne	.+2      	; 0x2110 <_ZN7Helpers13base64_encodeEPcPhi+0xa6>
    210e:	3c c0       	rjmp	.+120    	; 0x2188 <_ZN7Helpers13base64_encodeEPcPhi+0x11e>
    2110:	be 01       	movw	r22, r28
    2112:	6b 5f       	subi	r22, 0xFB	; 251
    2114:	7f 4f       	sbci	r23, 0xFF	; 255
    2116:	fb 01       	movw	r30, r22
    2118:	e0 0f       	add	r30, r16
    211a:	f1 1f       	adc	r31, r17
		for(j = i; j < 3; j++) {
    211c:	cf 01       	movw	r24, r30
    211e:	86 1b       	sub	r24, r22
    2120:	97 0b       	sbc	r25, r23
    2122:	03 97       	sbiw	r24, 0x03	; 3
    2124:	14 f4       	brge	.+4      	; 0x212a <_ZN7Helpers13base64_encodeEPcPhi+0xc0>
			a3[j] = '\0';
    2126:	11 92       	st	Z+, r1
			i = 0;
		}
	}

	if(i) {
		for(j = i; j < 3; j++) {
    2128:	f9 cf       	rjmp	.-14     	; 0x211c <_ZN7Helpers13base64_encodeEPcPhi+0xb2>
			a3[j] = '\0';
		}

		a3_to_a4(a4, a3);
    212a:	ce 01       	movw	r24, r28
    212c:	01 96       	adiw	r24, 0x01	; 1
    212e:	5c 01       	movw	r10, r24
    2130:	0e 94 11 10 	call	0x2022	; 0x2022 <_Z8a3_to_a4PhS_>
    2134:	c6 01       	movw	r24, r12
    2136:	8e 0d       	add	r24, r14
    2138:	9f 1d       	adc	r25, r15
    213a:	d5 01       	movw	r26, r10

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
    213c:	ed 91       	ld	r30, X+
    213e:	f0 e0       	ldi	r31, 0x00	; 0
    2140:	ec 55       	subi	r30, 0x5C	; 92
    2142:	fb 4f       	sbci	r31, 0xFB	; 251
    2144:	24 91       	lpm	r18, Z
    2146:	fc 01       	movw	r30, r24
    2148:	21 93       	st	Z+, r18
    214a:	cf 01       	movw	r24, r30
			a3[j] = '\0';
		}

		a3_to_a4(a4, a3);

		for(j = 0; j < i + 1; j++) {
    214c:	9d 01       	movw	r18, r26
    214e:	2a 19       	sub	r18, r10
    2150:	3b 09       	sbc	r19, r11
    2152:	02 17       	cp	r16, r18
    2154:	13 07       	cpc	r17, r19
    2156:	94 f7       	brge	.-28     	; 0x213c <_ZN7Helpers13base64_encodeEPcPhi+0xd2>
    2158:	ff ef       	ldi	r31, 0xFF	; 255
    215a:	ef 1a       	sub	r14, r31
    215c:	ff 0a       	sbc	r15, r31
    215e:	e0 0e       	add	r14, r16
    2160:	f1 1e       	adc	r15, r17
    2162:	f6 01       	movw	r30, r12
    2164:	ee 0d       	add	r30, r14
    2166:	ff 1d       	adc	r31, r15
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    2168:	0c 19       	sub	r16, r12
    216a:	1d 09       	sbc	r17, r13
    216c:	0e 19       	sub	r16, r14
    216e:	1f 09       	sbc	r17, r15
			output[encLen++] = '=';
    2170:	8d e3       	ldi	r24, 0x3D	; 61
    2172:	7f 01       	movw	r14, r30
    2174:	ec 18       	sub	r14, r12
    2176:	fd 08       	sbc	r15, r13

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    2178:	98 01       	movw	r18, r16
    217a:	2e 0f       	add	r18, r30
    217c:	3f 1f       	adc	r19, r31
    217e:	23 30       	cpi	r18, 0x03	; 3
    2180:	31 05       	cpc	r19, r1
    2182:	14 f4       	brge	.+4      	; 0x2188 <_ZN7Helpers13base64_encodeEPcPhi+0x11e>
			output[encLen++] = '=';
    2184:	81 93       	st	Z+, r24

		for(j = 0; j < i + 1; j++) {
			output[encLen++] = pgm_read_byte(&b64_alphabet[a4[j]]);
		}

		while((i++ < 3)) {
    2186:	f5 cf       	rjmp	.-22     	; 0x2172 <_ZN7Helpers13base64_encodeEPcPhi+0x108>
			output[encLen++] = '=';
		}
	}
	
	output[encLen++] = '\0';
    2188:	f6 01       	movw	r30, r12
    218a:	ee 0d       	add	r30, r14
    218c:	ff 1d       	adc	r31, r15
    218e:	10 82       	st	Z, r1
	
	return encLen;
}
    2190:	c7 01       	movw	r24, r14
    2192:	01 96       	adiw	r24, 0x01	; 1
    2194:	27 96       	adiw	r28, 0x07	; 7
    2196:	0f b6       	in	r0, 0x3f	; 63
    2198:	f8 94       	cli
    219a:	de bf       	out	0x3e, r29	; 62
    219c:	0f be       	out	0x3f, r0	; 63
    219e:	cd bf       	out	0x3d, r28	; 61
    21a0:	df 91       	pop	r29
    21a2:	cf 91       	pop	r28
    21a4:	1f 91       	pop	r17
    21a6:	0f 91       	pop	r16
    21a8:	ff 90       	pop	r15
    21aa:	ef 90       	pop	r14
    21ac:	df 90       	pop	r13
    21ae:	cf 90       	pop	r12
    21b0:	bf 90       	pop	r11
    21b2:	af 90       	pop	r10
    21b4:	9f 90       	pop	r9
    21b6:	8f 90       	pop	r8
    21b8:	7f 90       	pop	r7
    21ba:	6f 90       	pop	r6
    21bc:	08 95       	ret

000021be <setup>:
	// the following line then redirects over SSL will be followed.
	//fona.setHTTPSRedirect(true);


	//Must immediately run as this pin in LOW switches off the system
	pinMode(PIN_SHUTDOWN, OUTPUT);
    21be:	61 e0       	ldi	r22, 0x01	; 1
    21c0:	85 e0       	ldi	r24, 0x05	; 5
    21c2:	0e 94 29 1f 	call	0x3e52	; 0x3e52 <pinMode>
	digitalWrite(PIN_SHUTDOWN, HIGH);
    21c6:	61 e0       	ldi	r22, 0x01	; 1
    21c8:	85 e0       	ldi	r24, 0x05	; 5
    21ca:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>



	delay(3000); //time for above to happen + hardware peripherals to warm up + for user's serial monitor to connect
    21ce:	68 eb       	ldi	r22, 0xB8	; 184
    21d0:	7b e0       	ldi	r23, 0x0B	; 11
    21d2:	80 e0       	ldi	r24, 0x00	; 0
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
	
	
	
	//Turn off redundant Arduino board notification LED controlled by pin 13
	pinMode(13, OUTPUT);
    21da:	61 e0       	ldi	r22, 0x01	; 1
    21dc:	8d e0       	ldi	r24, 0x0D	; 13
    21de:	0e 94 29 1f 	call	0x3e52	; 0x3e52 <pinMode>
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    21e2:	26 e0       	ldi	r18, 0x06	; 6
    21e4:	40 e8       	ldi	r20, 0x80	; 128
    21e6:	55 e2       	ldi	r21, 0x25	; 37
    21e8:	60 e0       	ldi	r22, 0x00	; 0
    21ea:	70 e0       	ldi	r23, 0x00	; 0
    21ec:	8e e9       	ldi	r24, 0x9E	; 158
    21ee:	93 e0       	ldi	r25, 0x03	; 3
    21f0:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN14HardwareSerial5beginEmh>
	
	#ifdef OUTPUT_DEBUG
		Serial.begin(9600); //Writes to Serial output
	#endif
	
	RM_LOGLN(F("Starting..."));
    21f4:	62 e3       	ldi	r22, 0x32	; 50
    21f6:	77 e0       	ldi	r23, 0x07	; 7
    21f8:	8e e9       	ldi	r24, 0x9E	; 158
    21fa:	93 e0       	ldi	r25, 0x03	; 3
    21fc:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
		return;
	}

	if (IS_EXTENDED_GSM_TEST) {
	
		_behaviour |= SYS_BEHAVIOUR::ExtendedGsmTest;
    2200:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    2204:	84 60       	ori	r24, 0x04	; 4
    2206:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
    220a:	08 95       	ret

0000220c <_Z21ensureFonaInitialisedb>:
		_behaviour |= SYS_BEHAVIOUR::SendData;
	}
}

INITIALISING_STATE __initState;
INITIALISING_STATE* ensureFonaInitialised(boolean forDataSend) {
    220c:	0f 93       	push	r16
    220e:	1f 93       	push	r17
    2210:	cf 93       	push	r28
    2212:	df 93       	push	r29
    2214:	cd b7       	in	r28, 0x3d	; 61
    2216:	de b7       	in	r29, 0x3e	; 62
    2218:	2c 97       	sbiw	r28, 0x0c	; 12
    221a:	0f b6       	in	r0, 0x3f	; 63
    221c:	f8 94       	cli
    221e:	de bf       	out	0x3e, r29	; 62
    2220:	0f be       	out	0x3f, r0	; 63
    2222:	cd bf       	out	0x3d, r28	; 61
    2224:	18 2f       	mov	r17, r24

	//boolean isFirstLoop = _initFonaLoopCount == 0;
	++__initState._initFonaLoopCount;
    2226:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    222a:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    222e:	01 96       	adiw	r24, 0x01	; 1
    2230:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__initState+0xa>
    2234:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__initState+0x9>
	
	__initState.isComplete = true;
    2238:	81 e0       	ldi	r24, 0x01	; 1
    223a:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__initState+0x2>
	__initState.fona = &__fona; //Assume this succeeds
    223e:	89 eb       	ldi	r24, 0xB9	; 185
    2240:	91 e0       	ldi	r25, 0x01	; 1
    2242:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <__initState+0x1>
    2246:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__initState>
	
	if (__initState._fonaStatusInit==0) {
    224a:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__initState+0x3>
    224e:	81 11       	cpse	r24, r1
    2250:	34 c0       	rjmp	.+104    	; 0x22ba <_Z21ensureFonaInitialisedb+0xae>
		
		RM_LOGLN(F("Initialising fona..."));
    2252:	6d e1       	ldi	r22, 0x1D	; 29
    2254:	77 e0       	ldi	r23, 0x07	; 7
    2256:	8e e9       	ldi	r24, 0x9E	; 158
    2258:	93 e0       	ldi	r25, 0x03	; 3
    225a:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
		
		FONA_STATUS_INIT ret = __fona.begin(FONA_TX, FONA_RX);
    225e:	42 e0       	ldi	r20, 0x02	; 2
    2260:	63 e0       	ldi	r22, 0x03	; 3
    2262:	89 eb       	ldi	r24, 0xB9	; 185
    2264:	91 e0       	ldi	r25, 0x01	; 1
    2266:	0e 94 c8 07 	call	0xf90	; 0xf90 <_ZN13Adafruit_FONA5beginEhh>
		__initState._fonaStatusInit = ret;
    226a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <__initState+0x3>
		
		//TODO: TEST ! with both single-digit module IDs and double digit
		uint8_t moduleId = mem.getModuleId();
    226e:	8e ea       	ldi	r24, 0xAE	; 174
    2270:	91 e0       	ldi	r25, 0x01	; 1
    2272:	0e 94 6c 15 	call	0x2ad8	; 0x2ad8 <_ZN12RmMemManager11getModuleIdEv>
    2276:	08 2f       	mov	r16, r24
		String userAgentStr = "IAAAE_RMonV3_";
    2278:	69 e3       	ldi	r22, 0x39	; 57
    227a:	71 e0       	ldi	r23, 0x01	; 1
    227c:	ce 01       	movw	r24, r28
    227e:	07 96       	adiw	r24, 0x07	; 7
    2280:	0e 94 02 20 	call	0x4004	; 0x4004 <_ZN6StringC1EPKc>
	// if there's not enough memory for the concatenated value, the string
	// will be left unchanged (but this isn't signalled in any way)
	String & operator += (const String &rhs)	{concat(rhs); return (*this);}
	String & operator += (const char *cstr)		{concat(cstr); return (*this);}
	String & operator += (char c)			{concat(c); return (*this);}
	String & operator += (unsigned char num)		{concat(num); return (*this);}
    2284:	60 2f       	mov	r22, r16
    2286:	ce 01       	movw	r24, r28
    2288:	07 96       	adiw	r24, 0x07	; 7
    228a:	0e 94 65 20 	call	0x40ca	; 0x40ca <_ZN6String6concatEh>
		userAgentStr += moduleId;
		__fona.setUserAgent(userAgentStr);
    228e:	be 01       	movw	r22, r28
    2290:	69 5f       	subi	r22, 0xF9	; 249
    2292:	7f 4f       	sbci	r23, 0xFF	; 255
    2294:	ce 01       	movw	r24, r28
    2296:	01 96       	adiw	r24, 0x01	; 1
    2298:	0e 94 2e 20 	call	0x405c	; 0x405c <_ZN6StringC1ERKS_>
    229c:	be 01       	movw	r22, r28
    229e:	6f 5f       	subi	r22, 0xFF	; 255
    22a0:	7f 4f       	sbci	r23, 0xFF	; 255
    22a2:	89 eb       	ldi	r24, 0xB9	; 185
    22a4:	91 e0       	ldi	r25, 0x01	; 1
    22a6:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <_ZN13Adafruit_FONA12setUserAgentE6String>
    22aa:	ce 01       	movw	r24, r28
    22ac:	01 96       	adiw	r24, 0x01	; 1
    22ae:	0e 94 94 1f 	call	0x3f28	; 0x3f28 <_ZN6StringD1Ev>
		FONA_STATUS_INIT ret = __fona.begin(FONA_TX, FONA_RX);
		__initState._fonaStatusInit = ret;
		
		//TODO: TEST ! with both single-digit module IDs and double digit
		uint8_t moduleId = mem.getModuleId();
		String userAgentStr = "IAAAE_RMonV3_";
    22b2:	ce 01       	movw	r24, r28
    22b4:	07 96       	adiw	r24, 0x07	; 7
    22b6:	0e 94 94 1f 	call	0x3f28	; 0x3f28 <_ZN6StringD1Ev>
		userAgentStr += moduleId;
		__fona.setUserAgent(userAgentStr);
	}

	if (IS_ERR_FSI(__initState._fonaStatusInit)) {
    22ba:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__initState+0x3>
    22be:	83 50       	subi	r24, 0x03	; 3
    22c0:	82 30       	cpi	r24, 0x02	; 2
    22c2:	b0 f4       	brcc	.+44     	; 0x22f0 <_Z21ensureFonaInitialisedb+0xe4>
	
		RM_LOG2(F("Error initialising fona..."), __initState._fonaStatusInit);
    22c4:	62 e0       	ldi	r22, 0x02	; 2
    22c6:	77 e0       	ldi	r23, 0x07	; 7
    22c8:	8e e9       	ldi	r24, 0x9E	; 158
    22ca:	93 e0       	ldi	r25, 0x03	; 3
    22cc:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    22d0:	67 e4       	ldi	r22, 0x47	; 71
    22d2:	71 e0       	ldi	r23, 0x01	; 1
    22d4:	8e e9       	ldi	r24, 0x9E	; 158
    22d6:	93 e0       	ldi	r25, 0x03	; 3
    22d8:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    22dc:	60 91 a1 01 	lds	r22, 0x01A1	; 0x8001a1 <__initState+0x3>
    22e0:	70 e0       	ldi	r23, 0x00	; 0
    22e2:	4a e0       	ldi	r20, 0x0A	; 10
    22e4:	50 e0       	ldi	r21, 0x00	; 0
    22e6:	8e e9       	ldi	r24, 0x9E	; 158
    22e8:	93 e0       	ldi	r25, 0x03	; 3
    22ea:	0e 94 d9 1d 	call	0x3bb2	; 0x3bb2 <_ZN5Print7printlnEii>
    22ee:	65 c0       	rjmp	.+202    	; 0x23ba <_Z21ensureFonaInitialisedb+0x1ae>
		__initState.fona = NULL;
		return &__initState;
	}	

	
	if (forDataSend) {
    22f0:	11 23       	and	r17, r17
    22f2:	09 f4       	brne	.+2      	; 0x22f6 <_Z21ensureFonaInitialisedb+0xea>
    22f4:	b1 c0       	rjmp	.+354    	; 0x2458 <_Z21ensureFonaInitialisedb+0x24c>
		
		//The first enable attempt will happen after GPRS_ENABLE_INTERVAL
		
		if (__initState._gprsStatusInit != 0) {
    22f6:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__initState+0x4>
    22fa:	81 11       	cpse	r24, r1
    22fc:	49 c0       	rjmp	.+146    	; 0x2390 <_Z21ensureFonaInitialisedb+0x184>
			
			//No-op, just return what was calculated the last time
		}
		else if (__initState._initFonaLoopCount % GPRS_ENABLE_INTERVAL != 0) {
    22fe:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    2302:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    2306:	6a e0       	ldi	r22, 0x0A	; 10
    2308:	70 e0       	ldi	r23, 0x00	; 0
    230a:	0e 94 03 23 	call	0x4606	; 0x4606 <__udivmodhi4>
    230e:	89 2b       	or	r24, r25
    2310:	19 f0       	breq	.+6      	; 0x2318 <_Z21ensureFonaInitialisedb+0x10c>
			
			//Try to enable it every x seconds for a period
			__initState.isComplete = false;
    2312:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
    2316:	3c c0       	rjmp	.+120    	; 0x2390 <_Z21ensureFonaInitialisedb+0x184>
		}
		else {
			
			RM_LOGLN(F("Attempting to enable GPRS..."));
    2318:	65 ee       	ldi	r22, 0xE5	; 229
    231a:	76 e0       	ldi	r23, 0x06	; 6
    231c:	8e e9       	ldi	r24, 0x9E	; 158
    231e:	93 e0       	ldi	r25, 0x03	; 3
    2320:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
		
			FONA_STATUS_GPRS_INIT gprsRet = __fona.enableGPRS(true);
    2324:	61 e0       	ldi	r22, 0x01	; 1
    2326:	89 eb       	ldi	r24, 0xB9	; 185
    2328:	91 e0       	ldi	r25, 0x01	; 1
    232a:	0e 94 a4 09 	call	0x1348	; 0x1348 <_ZN13Adafruit_FONA10enableGPRSEb>
    232e:	18 2f       	mov	r17, r24
		
			if (IS_ERR_FSGI(gprsRet)) {
    2330:	8f ef       	ldi	r24, 0xFF	; 255
    2332:	81 0f       	add	r24, r17
    2334:	82 30       	cpi	r24, 0x02	; 2
    2336:	20 f1       	brcs	.+72     	; 0x2380 <_Z21ensureFonaInitialisedb+0x174>
			
				//TODO: Log this
				//But don't log it in eeprom if running a test? Basic=non-writing test vs Extended tests?
			
				RM_LOG2(F("Error initialising GPRS"), gprsRet);
    2338:	6d ec       	ldi	r22, 0xCD	; 205
    233a:	76 e0       	ldi	r23, 0x06	; 6
    233c:	8e e9       	ldi	r24, 0x9E	; 158
    233e:	93 e0       	ldi	r25, 0x03	; 3
    2340:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    2344:	67 e4       	ldi	r22, 0x47	; 71
    2346:	71 e0       	ldi	r23, 0x01	; 1
    2348:	8e e9       	ldi	r24, 0x9E	; 158
    234a:	93 e0       	ldi	r25, 0x03	; 3
    234c:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    2350:	61 2f       	mov	r22, r17
    2352:	70 e0       	ldi	r23, 0x00	; 0
    2354:	4a e0       	ldi	r20, 0x0A	; 10
    2356:	50 e0       	ldi	r21, 0x00	; 0
    2358:	8e e9       	ldi	r24, 0x9E	; 158
    235a:	93 e0       	ldi	r25, 0x03	; 3
    235c:	0e 94 d9 1d 	call	0x3bb2	; 0x3bb2 <_ZN5Print7printlnEii>
				if (__initState._initFonaLoopCount < GPRS_MAX_ENABLE_TIME) {
    2360:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__initState+0x9>
    2364:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__initState+0xa>
    2368:	cc 97       	sbiw	r24, 0x3c	; 60
    236a:	28 f4       	brcc	.+10     	; 0x2376 <_Z21ensureFonaInitialisedb+0x16a>
				
					__initState.isComplete = false;
    236c:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
					RM_LOGLN(F("Will try to enable GPRS again shortly"));
    2370:	67 ea       	ldi	r22, 0xA7	; 167
    2372:	76 e0       	ldi	r23, 0x06	; 6
    2374:	09 c0       	rjmp	.+18     	; 0x2388 <_Z21ensureFonaInitialisedb+0x17c>
				}
				else {
				
					//We've hit the last interval of trying, so all done trying
					__initState._gprsStatusInit = gprsRet;
    2376:	10 93 a2 01 	sts	0x01A2, r17	; 0x8001a2 <__initState+0x4>
					RM_LOGLN(F("All attempts to enable GPRS failed"));
    237a:	64 e8       	ldi	r22, 0x84	; 132
    237c:	76 e0       	ldi	r23, 0x06	; 6
    237e:	04 c0       	rjmp	.+8      	; 0x2388 <_Z21ensureFonaInitialisedb+0x17c>
				}
			}
			else {
			
				//Success, we're done initialising GPRS
				__initState._gprsStatusInit = gprsRet;
    2380:	10 93 a2 01 	sts	0x01A2, r17	; 0x8001a2 <__initState+0x4>
				RM_LOGLN(F("GPRS initialised successfully !"));
    2384:	64 e6       	ldi	r22, 0x64	; 100
    2386:	76 e0       	ldi	r23, 0x06	; 6
    2388:	8e e9       	ldi	r24, 0x9E	; 158
    238a:	93 e0       	ldi	r25, 0x03	; 3
    238c:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
		}
		
		if (__initState._gprsStatusInit != 0) {
    2390:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__initState+0x4>
    2394:	81 50       	subi	r24, 0x01	; 1
    2396:	82 30       	cpi	r24, 0x02	; 2
    2398:	80 f4       	brcc	.+32     	; 0x23ba <_Z21ensureFonaInitialisedb+0x1ae>
				__initState.fona=NULL;
				return &__initState;
			}
			else { //Initialised successfully, now ensure good signal
				
				++__initState._gprsSignalLoopCount;
    239a:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    239e:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    23a2:	01 96       	adiw	r24, 0x01	; 1
    23a4:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <__initState+0xc>
    23a8:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <__initState+0xb>
				
				if (Helpers::isSignalGood(&__initState._rssiStatusInit)) {
    23ac:	83 ea       	ldi	r24, 0xA3	; 163
    23ae:	91 e0       	ldi	r25, 0x01	; 1
    23b0:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>
    23b4:	88 23       	and	r24, r24
    23b6:	31 f0       	breq	.+12     	; 0x23c4 <_Z21ensureFonaInitialisedb+0x1b8>
    23b8:	4f c0       	rjmp	.+158    	; 0x2458 <_Z21ensureFonaInitialisedb+0x24c>
			}
		}
		
		if (__initState._gprsStatusInit != 0) {
			if (IS_ERR_FSGI(__initState._gprsStatusInit)) {
				__initState.fona=NULL;
    23ba:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <__initState+0x1>
    23be:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__initState>
				return &__initState;
    23c2:	4a c0       	rjmp	.+148    	; 0x2458 <_Z21ensureFonaInitialisedb+0x24c>
				
				if (Helpers::isSignalGood(&__initState._rssiStatusInit)) {
					
					//Previously checked - it's fine
				}
				else if (__initState._gprsSignalLoopCount % GPRS_SIGNAL_CHECK_INTERVAL != 0) {
    23c4:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    23c8:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    23cc:	6a e0       	ldi	r22, 0x0A	; 10
    23ce:	70 e0       	ldi	r23, 0x00	; 0
    23d0:	0e 94 03 23 	call	0x4606	; 0x4606 <__udivmodhi4>
    23d4:	89 2b       	or	r24, r25
    23d6:	19 f0       	breq	.+6      	; 0x23de <_Z21ensureFonaInitialisedb+0x1d2>
			
					//Try to enable it every x seconds for a period
					__initState.isComplete = false;
    23d8:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
    23dc:	3d c0       	rjmp	.+122    	; 0x2458 <_Z21ensureFonaInitialisedb+0x24c>
				}
				else {

					RM_LOG(F("Checking RSSI - currently:"));
    23de:	69 e4       	ldi	r22, 0x49	; 73
    23e0:	76 e0       	ldi	r23, 0x06	; 6
    23e2:	8e e9       	ldi	r24, 0x9E	; 158
    23e4:	93 e0       	ldi	r25, 0x03	; 3
    23e6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
					FONA_GET_RSSI rssi = __fona.getRSSI();
    23ea:	89 eb       	ldi	r24, 0xB9	; 185
    23ec:	91 e0       	ldi	r25, 0x01	; 1
    23ee:	0e 94 34 0d 	call	0x1a68	; 0x1a68 <_ZN13Adafruit_FONA7getRSSIEv>
    23f2:	69 83       	std	Y+1, r22	; 0x01
    23f4:	7a 83       	std	Y+2, r23	; 0x02
    23f6:	8b 83       	std	Y+3, r24	; 0x03
    23f8:	9c 83       	std	Y+4, r25	; 0x04
					Helpers::printRSSI(&rssi);					
    23fa:	ce 01       	movw	r24, r28
    23fc:	01 96       	adiw	r24, 0x01	; 1
    23fe:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN7Helpers9printRSSIEP13FONA_GET_RSSI>
					
					if (!Helpers::isSignalGood(&rssi)) {
    2402:	ce 01       	movw	r24, r28
    2404:	01 96       	adiw	r24, 0x01	; 1
    2406:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <_ZN7Helpers12isSignalGoodEP13FONA_GET_RSSI>
    240a:	81 11       	cpse	r24, r1
    240c:	13 c0       	rjmp	.+38     	; 0x2434 <_Z21ensureFonaInitialisedb+0x228>
						
						if (__initState._gprsSignalLoopCount < GPRS_MAX_SIGNAL_WAIT_TIME) {
    240e:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <__initState+0xb>
    2412:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <__initState+0xc>
    2416:	8c 32       	cpi	r24, 0x2C	; 44
    2418:	91 40       	sbci	r25, 0x01	; 1
    241a:	48 f4       	brcc	.+18     	; 0x242e <_Z21ensureFonaInitialisedb+0x222>
							
							__initState.isComplete = false;
    241c:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__initState+0x2>
							RM_LOGLN(F("\t (Bad-RSSI - will check again after interval)"));
    2420:	6a e1       	ldi	r22, 0x1A	; 26
    2422:	76 e0       	ldi	r23, 0x06	; 6
    2424:	8e e9       	ldi	r24, 0x9E	; 158
    2426:	93 e0       	ldi	r25, 0x03	; 3
    2428:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
    242c:	15 c0       	rjmp	.+42     	; 0x2458 <_Z21ensureFonaInitialisedb+0x24c>
						}						
						else {
							
							//Wait-time over for signal, continue regardless of signal value, it may work
							RM_LOGLN(F("\t (Waiting For Good-RSSI Timed Out - will continue now)"));
    242e:	62 ee       	ldi	r22, 0xE2	; 226
    2430:	75 e0       	ldi	r23, 0x05	; 5
    2432:	02 c0       	rjmp	.+4      	; 0x2438 <_Z21ensureFonaInitialisedb+0x22c>
						}
					}
					else {
						
						//All done, signal is good now
						RM_LOGLN(F("\t (Good-RSSI - successfull, all done)"));
    2434:	6c eb       	ldi	r22, 0xBC	; 188
    2436:	75 e0       	ldi	r23, 0x05	; 5
    2438:	8e e9       	ldi	r24, 0x9E	; 158
    243a:	93 e0       	ldi	r25, 0x03	; 3
    243c:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
						__initState._rssiStatusInit = rssi;
    2440:	89 81       	ldd	r24, Y+1	; 0x01
    2442:	9a 81       	ldd	r25, Y+2	; 0x02
    2444:	ab 81       	ldd	r26, Y+3	; 0x03
    2446:	bc 81       	ldd	r27, Y+4	; 0x04
    2448:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <__initState+0x5>
    244c:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <__initState+0x6>
    2450:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__initState+0x7>
    2454:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__initState+0x8>
			return &__initState;
		}
	}
	
	return &__initState;//__fona;
}
    2458:	8e e9       	ldi	r24, 0x9E	; 158
    245a:	91 e0       	ldi	r25, 0x01	; 1
    245c:	2c 96       	adiw	r28, 0x0c	; 12
    245e:	0f b6       	in	r0, 0x3f	; 63
    2460:	f8 94       	cli
    2462:	de bf       	out	0x3e, r29	; 62
    2464:	0f be       	out	0x3f, r0	; 63
    2466:	cd bf       	out	0x3d, r28	; 61
    2468:	df 91       	pop	r29
    246a:	cf 91       	pop	r28
    246c:	1f 91       	pop	r17
    246e:	0f 91       	pop	r16
    2470:	08 95       	ret

00002472 <_Z15switchOffSystemv>:


void switchOffSystem() {
	
	RM_LOGLN("Switching off...");
    2472:	69 e4       	ldi	r22, 0x49	; 73
    2474:	71 e0       	ldi	r23, 0x01	; 1
    2476:	8e e9       	ldi	r24, 0x9E	; 158
    2478:	93 e0       	ldi	r25, 0x03	; 3
    247a:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
	
	digitalWrite(PIN_SHUTDOWN, LOW);
    247e:	60 e0       	ldi	r22, 0x00	; 0
    2480:	85 e0       	ldi	r24, 0x05	; 5
    2482:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
	
	delay(3000); //To allow serial to purge the shutdown message
    2486:	68 eb       	ldi	r22, 0xB8	; 184
    2488:	7b e0       	ldi	r23, 0x0B	; 11
    248a:	80 e0       	ldi	r24, 0x00	; 0
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	0c 94 6c 1e 	jmp	0x3cd8	; 0x3cd8 <delay>

00002492 <_Z12takeReadingsv>:
}


boolean takeReadings() {
    2492:	cf 93       	push	r28
    2494:	df 93       	push	r29
    2496:	cd b7       	in	r28, 0x3d	; 61
    2498:	de b7       	in	r29, 0x3e	; 62
    249a:	2a 97       	sbiw	r28, 0x0a	; 10
    249c:	0f b6       	in	r0, 0x3f	; 63
    249e:	f8 94       	cli
    24a0:	de bf       	out	0x3e, r29	; 62
    24a2:	0f be       	out	0x3f, r0	; 63
    24a4:	cd bf       	out	0x3d, r28	; 61
	
	RM_LOGLN(F("Taking readings..."));
    24a6:	69 ea       	ldi	r22, 0xA9	; 169
    24a8:	75 e0       	ldi	r23, 0x05	; 5
    24aa:	8e e9       	ldi	r24, 0x9E	; 158
    24ac:	93 e0       	ldi	r25, 0x03	; 3
    24ae:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	SensorData sd;
    24b2:	1a 82       	std	Y+2, r1	; 0x02
    24b4:	19 82       	std	Y+1, r1	; 0x01
    24b6:	1c 82       	std	Y+4, r1	; 0x04
    24b8:	1b 82       	std	Y+3, r1	; 0x03
    24ba:	1e 82       	std	Y+6, r1	; 0x06
    24bc:	1d 82       	std	Y+5, r1	; 0x05
    24be:	18 86       	std	Y+8, r1	; 0x08
    24c0:	1f 82       	std	Y+7, r1	; 0x07
    24c2:	19 86       	std	Y+9, r1	; 0x09
    24c4:	81 e0       	ldi	r24, 0x01	; 1
    24c6:	8a 87       	std	Y+10, r24	; 0x0a
	sensorMgr.readData(&sd);
    24c8:	be 01       	movw	r22, r28
    24ca:	6f 5f       	subi	r22, 0xFF	; 255
    24cc:	7f 4f       	sbci	r23, 0xFF	; 255
    24ce:	8c ea       	ldi	r24, 0xAC	; 172
    24d0:	91 e0       	ldi	r25, 0x01	; 1
    24d2:	0e 94 3e 16 	call	0x2c7c	; 0x2c7c <_ZN13SensorManager8readDataEP10SensorData>
	
	return true;
}
    24d6:	81 e0       	ldi	r24, 0x01	; 1
    24d8:	2a 96       	adiw	r28, 0x0a	; 10
    24da:	0f b6       	in	r0, 0x3f	; 63
    24dc:	f8 94       	cli
    24de:	de bf       	out	0x3e, r29	; 62
    24e0:	0f be       	out	0x3f, r0	; 63
    24e2:	cd bf       	out	0x3d, r28	; 61
    24e4:	df 91       	pop	r29
    24e6:	cf 91       	pop	r28
    24e8:	08 95       	ret

000024ea <_Z17createEncodedDataPcPhh13FONA_GET_RSSI>:

void createEncodedData(char* encodedOutput, uint8_t* outputNumLoaded, uint8_t maxReadings, 
					   FONA_GET_RSSI rssi) {
    24ea:	2f 92       	push	r2
    24ec:	3f 92       	push	r3
    24ee:	4f 92       	push	r4
    24f0:	5f 92       	push	r5
    24f2:	6f 92       	push	r6
    24f4:	7f 92       	push	r7
    24f6:	8f 92       	push	r8
    24f8:	9f 92       	push	r9
    24fa:	af 92       	push	r10
    24fc:	bf 92       	push	r11
    24fe:	df 92       	push	r13
    2500:	ef 92       	push	r14
    2502:	ff 92       	push	r15
    2504:	0f 93       	push	r16
    2506:	1f 93       	push	r17
    2508:	cf 93       	push	r28
    250a:	df 93       	push	r29
    250c:	cd b7       	in	r28, 0x3d	; 61
    250e:	de b7       	in	r29, 0x3e	; 62
    2510:	2d 97       	sbiw	r28, 0x0d	; 13
    2512:	0f b6       	in	r0, 0x3f	; 63
    2514:	f8 94       	cli
    2516:	de bf       	out	0x3e, r29	; 62
    2518:	0f be       	out	0x3f, r0	; 63
    251a:	cd bf       	out	0x3d, r28	; 61
    251c:	4c 01       	movw	r8, r24
    251e:	5b 01       	movw	r10, r22
    2520:	d4 2e       	mov	r13, r20
    2522:	28 01       	movw	r4, r16
    2524:	39 01       	movw	r6, r18
	payload.setModuleId(mem.getModuleId());
	payload.setBootNumber(mem.getBootCount());
	payload.setSensorData((SensorData*)&sData, *outputNumLoaded);
	payload.setRSSI(rssi);
	payload.createEncodedPayload(encodedOutput);
}
    2526:	2d b6       	in	r2, 0x3d	; 61
    2528:	3e b6       	in	r3, 0x3e	; 62

void createEncodedData(char* encodedOutput, uint8_t* outputNumLoaded, uint8_t maxReadings, 
					   FONA_GET_RSSI rssi) {
	
	//This will likely be peak of stack usage so warn if low memory !
	int16_t freeRAM = Helpers::freeMemory();
    252a:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <_ZN7Helpers10freeMemoryEv>
    252e:	7c 01       	movw	r14, r24
	int16_t minRAM = (sizeof(SensorData)*maxReadings)
    2530:	0d 2d       	mov	r16, r13
    2532:	10 e0       	ldi	r17, 0x00	; 0
					+sizeof(GsmPayload)
					+100; //Buffer

	if (freeRAM < minRAM)
    2534:	2a e0       	ldi	r18, 0x0A	; 10
    2536:	d2 9e       	mul	r13, r18
    2538:	c0 01       	movw	r24, r0
    253a:	11 24       	eor	r1, r1
    253c:	8f 58       	subi	r24, 0x8F	; 143
    253e:	9f 4f       	sbci	r25, 0xFF	; 255
    2540:	e8 16       	cp	r14, r24
    2542:	f9 06       	cpc	r15, r25
    2544:	34 f4       	brge	.+12     	; 0x2552 <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0x68>
		RM_LOG2(F("**** Too little RAM before payload creation ***"), freeRAM);
    2546:	69 e7       	ldi	r22, 0x79	; 121
    2548:	75 e0       	ldi	r23, 0x05	; 5
    254a:	8e e9       	ldi	r24, 0x9E	; 158
    254c:	93 e0       	ldi	r25, 0x03	; 3
    254e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    2552:	67 e4       	ldi	r22, 0x47	; 71
    2554:	71 e0       	ldi	r23, 0x01	; 1
    2556:	8e e9       	ldi	r24, 0x9E	; 158
    2558:	93 e0       	ldi	r25, 0x03	; 3
    255a:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    255e:	4a e0       	ldi	r20, 0x0A	; 10
    2560:	50 e0       	ldi	r21, 0x00	; 0
    2562:	b7 01       	movw	r22, r14
    2564:	8e e9       	ldi	r24, 0x9E	; 158
    2566:	93 e0       	ldi	r25, 0x03	; 3
    2568:	0e 94 d9 1d 	call	0x3bb2	; 0x3bb2 <_ZN5Print7printlnEii>
	
	SensorData sData[maxReadings];
    256c:	2a e0       	ldi	r18, 0x0A	; 10
    256e:	20 9f       	mul	r18, r16
    2570:	c0 01       	movw	r24, r0
    2572:	21 9f       	mul	r18, r17
    2574:	90 0d       	add	r25, r0
    2576:	11 24       	eor	r1, r1
    2578:	ed b7       	in	r30, 0x3d	; 61
    257a:	fe b7       	in	r31, 0x3e	; 62
    257c:	e8 1b       	sub	r30, r24
    257e:	f9 0b       	sbc	r31, r25
    2580:	0f b6       	in	r0, 0x3f	; 63
    2582:	f8 94       	cli
    2584:	fe bf       	out	0x3e, r31	; 62
    2586:	0f be       	out	0x3f, r0	; 63
    2588:	ed bf       	out	0x3d, r30	; 61
    258a:	2d b7       	in	r18, 0x3d	; 61
    258c:	3e b7       	in	r19, 0x3e	; 62
    258e:	2f 5f       	subi	r18, 0xFF	; 255
    2590:	3f 4f       	sbci	r19, 0xFF	; 255
    2592:	79 01       	movw	r14, r18
    2594:	f9 01       	movw	r30, r18
	
	uint8_t spareBuffer[16] = {0}; //Sets all elems to 0
};


struct SensorData {
    2596:	81 e0       	ldi	r24, 0x01	; 1
    2598:	01 50       	subi	r16, 0x01	; 1
    259a:	11 09       	sbc	r17, r1
    259c:	60 f0       	brcs	.+24     	; 0x25b6 <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0xcc>
    259e:	11 82       	std	Z+1, r1	; 0x01
    25a0:	10 82       	st	Z, r1
    25a2:	13 82       	std	Z+3, r1	; 0x03
    25a4:	12 82       	std	Z+2, r1	; 0x02
    25a6:	15 82       	std	Z+5, r1	; 0x05
    25a8:	14 82       	std	Z+4, r1	; 0x04
    25aa:	17 82       	std	Z+7, r1	; 0x07
    25ac:	16 82       	std	Z+6, r1	; 0x06
    25ae:	10 86       	std	Z+8, r1	; 0x08
    25b0:	81 87       	std	Z+9, r24	; 0x09
    25b2:	3a 96       	adiw	r30, 0x0a	; 10
    25b4:	f1 cf       	rjmp	.-30     	; 0x2598 <_Z17createEncodedDataPcPhh13FONA_GET_RSSI+0xae>
	*outputNumLoaded = mem.loadSensorData((SensorData*)&sData, maxReadings);//, countToSend, &loadedTo);
    25b6:	4d 2d       	mov	r20, r13
    25b8:	b7 01       	movw	r22, r14
    25ba:	8e ea       	ldi	r24, 0xAE	; 174
    25bc:	91 e0       	ldi	r25, 0x01	; 1
    25be:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <_ZN12RmMemManager14loadSensorDataEP10SensorDatah>
    25c2:	f5 01       	movw	r30, r10
    25c4:	80 83       	st	Z, r24
	
	GsmPayload payload;
    25c6:	ce 01       	movw	r24, r28
    25c8:	01 96       	adiw	r24, 0x01	; 1
    25ca:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <_ZN10GsmPayloadC1Ev>
	payload.setModuleId(mem.getModuleId());
    25ce:	8e ea       	ldi	r24, 0xAE	; 174
    25d0:	91 e0       	ldi	r25, 0x01	; 1
    25d2:	0e 94 6c 15 	call	0x2ad8	; 0x2ad8 <_ZN12RmMemManager11getModuleIdEv>
    25d6:	68 2f       	mov	r22, r24
    25d8:	ce 01       	movw	r24, r28
    25da:	01 96       	adiw	r24, 0x01	; 1
    25dc:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <_ZN10GsmPayload11setModuleIdEh>
	payload.setBootNumber(mem.getBootCount());
    25e0:	8e ea       	ldi	r24, 0xAE	; 174
    25e2:	91 e0       	ldi	r25, 0x01	; 1
    25e4:	0e 94 83 15 	call	0x2b06	; 0x2b06 <_ZN12RmMemManager12getBootCountEv>
    25e8:	bc 01       	movw	r22, r24
    25ea:	ce 01       	movw	r24, r28
    25ec:	01 96       	adiw	r24, 0x01	; 1
    25ee:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <_ZN10GsmPayload13setBootNumberEj>
	payload.setSensorData((SensorData*)&sData, *outputNumLoaded);
    25f2:	f5 01       	movw	r30, r10
    25f4:	40 81       	ld	r20, Z
    25f6:	b7 01       	movw	r22, r14
    25f8:	ce 01       	movw	r24, r28
    25fa:	01 96       	adiw	r24, 0x01	; 1
    25fc:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <_ZN10GsmPayload13setSensorDataEP10SensorDatah>
	payload.setRSSI(rssi);
    2600:	b3 01       	movw	r22, r6
    2602:	a2 01       	movw	r20, r4
    2604:	ce 01       	movw	r24, r28
    2606:	01 96       	adiw	r24, 0x01	; 1
    2608:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <_ZN10GsmPayload7setRSSIE13FONA_GET_RSSI>
	payload.createEncodedPayload(encodedOutput);
    260c:	b4 01       	movw	r22, r8
    260e:	ce 01       	movw	r24, r28
    2610:	01 96       	adiw	r24, 0x01	; 1
    2612:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <_ZN10GsmPayload20createEncodedPayloadEPc>
}
    2616:	0f b6       	in	r0, 0x3f	; 63
    2618:	f8 94       	cli
    261a:	3e be       	out	0x3e, r3	; 62
    261c:	0f be       	out	0x3f, r0	; 63
    261e:	2d be       	out	0x3d, r2	; 61
    2620:	2d 96       	adiw	r28, 0x0d	; 13
    2622:	0f b6       	in	r0, 0x3f	; 63
    2624:	f8 94       	cli
    2626:	de bf       	out	0x3e, r29	; 62
    2628:	0f be       	out	0x3f, r0	; 63
    262a:	cd bf       	out	0x3d, r28	; 61
    262c:	df 91       	pop	r29
    262e:	cf 91       	pop	r28
    2630:	1f 91       	pop	r17
    2632:	0f 91       	pop	r16
    2634:	ff 90       	pop	r15
    2636:	ef 90       	pop	r14
    2638:	df 90       	pop	r13
    263a:	bf 90       	pop	r11
    263c:	af 90       	pop	r10
    263e:	9f 90       	pop	r9
    2640:	8f 90       	pop	r8
    2642:	7f 90       	pop	r7
    2644:	6f 90       	pop	r6
    2646:	5f 90       	pop	r5
    2648:	4f 90       	pop	r4
    264a:	3f 90       	pop	r3
    264c:	2f 90       	pop	r2
    264e:	08 95       	ret

00002650 <_Z8sendDatav>:

uint16_t _sendDataLoopCount = 0;
boolean sendData() {
    2650:	3f 92       	push	r3
    2652:	4f 92       	push	r4
    2654:	5f 92       	push	r5
    2656:	6f 92       	push	r6
    2658:	7f 92       	push	r7
    265a:	8f 92       	push	r8
    265c:	9f 92       	push	r9
    265e:	af 92       	push	r10
    2660:	bf 92       	push	r11
    2662:	cf 92       	push	r12
    2664:	df 92       	push	r13
    2666:	ef 92       	push	r14
    2668:	ff 92       	push	r15
    266a:	0f 93       	push	r16
    266c:	1f 93       	push	r17
    266e:	cf 93       	push	r28
    2670:	df 93       	push	r29
    2672:	cd b7       	in	r28, 0x3d	; 61
    2674:	de b7       	in	r29, 0x3e	; 62
    2676:	a3 97       	sbiw	r28, 0x23	; 35
    2678:	0f b6       	in	r0, 0x3f	; 63
    267a:	f8 94       	cli
    267c:	de bf       	out	0x3e, r29	; 62
    267e:	0f be       	out	0x3f, r0	; 63
    2680:	cd bf       	out	0x3d, r28	; 61
	Helpers::printDailySendData(&sendData);
		
	mem.appendDailyEntry(&sendData);
		
	return true;
}
    2682:	4d b6       	in	r4, 0x3d	; 61
    2684:	5e b6       	in	r5, 0x3e	; 62
uint16_t _sendDataLoopCount = 0;
boolean sendData() {
	
	//Increment before doing any work so doesn't get stuck continuously initialising
	//(by being called from 'loop') due to a loop-resetting error raised by FONA
	++_sendDataLoopCount;
    2686:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <_sendDataLoopCount>
    268a:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <_sendDataLoopCount+0x1>
    268e:	01 96       	adiw	r24, 0x01	; 1
    2690:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <_sendDataLoopCount+0x1>
    2694:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <_sendDataLoopCount>
	
	if (_sendDataLoopCount == 1)
    2698:	01 97       	sbiw	r24, 0x01	; 1
    269a:	31 f4       	brne	.+12     	; 0x26a8 <_Z8sendDatav+0x58>
		RM_LOGLN(F("Initialising Fona to send data"));
    269c:	6a e5       	ldi	r22, 0x5A	; 90
    269e:	75 e0       	ldi	r23, 0x05	; 5
    26a0:	8e e9       	ldi	r24, 0x9E	; 158
    26a2:	93 e0       	ldi	r25, 0x03	; 3
    26a4:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	INITIALISING_STATE* sendDataFona = ensureFonaInitialised(true);
    26a8:	81 e0       	ldi	r24, 0x01	; 1
    26aa:	0e 94 06 11 	call	0x220c	; 0x220c <_Z21ensureFonaInitialisedb>
    26ae:	5c 01       	movw	r10, r24
	
	if (!sendDataFona->isComplete) {
    26b0:	fc 01       	movw	r30, r24
    26b2:	32 80       	ldd	r3, Z+2	; 0x02
    26b4:	31 10       	cpse	r3, r1
    26b6:	07 c0       	rjmp	.+14     	; 0x26c6 <_Z8sendDatav+0x76>
		RM_LOGLN(F("\t(Fona Init Pending...)"));
    26b8:	62 e4       	ldi	r22, 0x42	; 66
    26ba:	75 e0       	ldi	r23, 0x05	; 5
    26bc:	8e e9       	ldi	r24, 0x9E	; 158
    26be:	93 e0       	ldi	r25, 0x03	; 3
    26c0:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
		return false; //Still waiting to initialise
    26c4:	ab c0       	rjmp	.+342    	; 0x281c <_Z8sendDatav+0x1cc>
	//NB: This datatype MUST be at end for reverse traversal that happens
	MEM_SLOT_TYPE  dataType = MEM_SLOT_TYPE::SensorMem;
};

/* Stored in ROM (for later checking) to record what happened when trying to send a day's worth of readings */
struct DailyCycleData {
    26c6:	19 82       	std	Y+1, r1	; 0x01
    26c8:	1b 82       	std	Y+3, r1	; 0x03
    26ca:	1a 82       	std	Y+2, r1	; 0x02
    26cc:	1c 82       	std	Y+4, r1	; 0x04
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    26ce:	1d 82       	std	Y+5, r1	; 0x05
    26d0:	1e 82       	std	Y+6, r1	; 0x06
    26d2:	1f 82       	std	Y+7, r1	; 0x07
	//NB: This datatype MUST be at end for reverse traversal that happens
	MEM_SLOT_TYPE  dataType = MEM_SLOT_TYPE::SensorMem;
};

/* Stored in ROM (for later checking) to record what happened when trying to send a day's worth of readings */
struct DailyCycleData {
    26d4:	19 86       	std	Y+9, r1	; 0x09
    26d6:	1a 86       	std	Y+10, r1	; 0x0a
    26d8:	1b 86       	std	Y+11, r1	; 0x0b
    26da:	1d 86       	std	Y+13, r1	; 0x0d
    26dc:	1c 86       	std	Y+12, r1	; 0x0c
    26de:	1f 86       	std	Y+15, r1	; 0x0f
    26e0:	1e 86       	std	Y+14, r1	; 0x0e
    26e2:	19 8a       	std	Y+17, r1	; 0x11
    26e4:	18 8a       	std	Y+16, r1	; 0x10
    26e6:	82 e0       	ldi	r24, 0x02	; 2
    26e8:	8a 8b       	std	Y+18, r24	; 0x12
	}
		
	DailyCycleData sendData;
	sendData.BootNo = mem.getBootCount();
    26ea:	8e ea       	ldi	r24, 0xAE	; 174
    26ec:	91 e0       	ldi	r25, 0x01	; 1
    26ee:	0e 94 83 15 	call	0x2b06	; 0x2b06 <_ZN12RmMemManager12getBootCountEv>
    26f2:	9b 83       	std	Y+3, r25	; 0x03
    26f4:	8a 83       	std	Y+2, r24	; 0x02
	sendData.InitStatus = sendDataFona->_fonaStatusInit;
    26f6:	f5 01       	movw	r30, r10
    26f8:	83 81       	ldd	r24, Z+3	; 0x03
    26fa:	89 87       	std	Y+9, r24	; 0x09
	sendData.GPRSInitStatus = sendDataFona->_gprsStatusInit;
    26fc:	84 81       	ldd	r24, Z+4	; 0x04
    26fe:	8a 87       	std	Y+10, r24	; 0x0a
	sendData.RSSI = sendDataFona->_rssiStatusInit;
    2700:	85 81       	ldd	r24, Z+5	; 0x05
    2702:	96 81       	ldd	r25, Z+6	; 0x06
    2704:	a7 81       	ldd	r26, Z+7	; 0x07
    2706:	b0 85       	ldd	r27, Z+8	; 0x08
    2708:	8d 83       	std	Y+5, r24	; 0x05
    270a:	9e 83       	std	Y+6, r25	; 0x06
    270c:	af 83       	std	Y+7, r26	; 0x07
    270e:	b8 87       	std	Y+8, r27	; 0x08
		
	if (sendDataFona->fona == NULL) {
    2710:	a0 80       	ld	r10, Z
    2712:	b1 80       	ldd	r11, Z+1	; 0x01
    2714:	a1 14       	cp	r10, r1
    2716:	b1 04       	cpc	r11, r1
    2718:	39 f4       	brne	.+14     	; 0x2728 <_Z8sendDatav+0xd8>
		
		RM_LOGLN(F("\t(Fona Init ERROR)"));
    271a:	6f e2       	ldi	r22, 0x2F	; 47
    271c:	75 e0       	ldi	r23, 0x05	; 5
    271e:	8e e9       	ldi	r24, 0x9E	; 158
    2720:	93 e0       	ldi	r25, 0x03	; 3
    2722:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
    2726:	73 c0       	rjmp	.+230    	; 0x280e <_Z8sendDatav+0x1be>
	
	Adafruit_FONA* fona = (Adafruit_FONA*)sendDataFona->fona;
	
	//TODO: Max number of readings to send vs when eeprom rolls over and start from beginning
		 
	uint16_t fullEncodedSz = GsmPayload::getEncodedPayloadSize_S(GPRS_MAX_READINGS_FOR_SEND);
    2728:	84 e1       	ldi	r24, 0x14	; 20
    272a:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>
	char encodedData[fullEncodedSz];
    272e:	2d b7       	in	r18, 0x3d	; 61
    2730:	3e b7       	in	r19, 0x3e	; 62
    2732:	28 1b       	sub	r18, r24
    2734:	39 0b       	sbc	r19, r25
    2736:	0f b6       	in	r0, 0x3f	; 63
    2738:	f8 94       	cli
    273a:	3e bf       	out	0x3e, r19	; 62
    273c:	0f be       	out	0x3f, r0	; 63
    273e:	2d bf       	out	0x3d, r18	; 61
    2740:	8d b7       	in	r24, 0x3d	; 61
    2742:	9e b7       	in	r25, 0x3e	; 62
    2744:	01 96       	adiw	r24, 0x01	; 1
    2746:	4c 01       	movw	r8, r24
		
	//Encode in another method to free up RAM on return for the sending (just in case)
	uint8_t numReadingsLoaded;
	createEncodedData(encodedData, &numReadingsLoaded, GPRS_MAX_READINGS_FOR_SEND, sendData.RSSI);
    2748:	0d 81       	ldd	r16, Y+5	; 0x05
    274a:	1e 81       	ldd	r17, Y+6	; 0x06
    274c:	2f 81       	ldd	r18, Y+7	; 0x07
    274e:	38 85       	ldd	r19, Y+8	; 0x08
    2750:	44 e1       	ldi	r20, 0x14	; 20
    2752:	be 01       	movw	r22, r28
    2754:	6d 5d       	subi	r22, 0xDD	; 221
    2756:	7f 4f       	sbci	r23, 0xFF	; 255
    2758:	0e 94 75 12 	call	0x24ea	; 0x24ea <_Z17createEncodedDataPcPhh13FONA_GET_RSSI>
	sendData.NoOfReadings = numReadingsLoaded;
    275c:	8b a1       	ldd	r24, Y+35	; 0x23
    275e:	8c 83       	std	Y+4, r24	; 0x04
	
	uint16_t actualEncodedSz = GsmPayload::getEncodedPayloadSize_S(numReadingsLoaded);
    2760:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <_ZN10GsmPayload23getEncodedPayloadSize_SEh>
    2764:	3c 01       	movw	r6, r24

	RM_LOGLN(F("Encoded data created and ready for send:"));
    2766:	66 e0       	ldi	r22, 0x06	; 6
    2768:	75 e0       	ldi	r23, 0x05	; 5
    276a:	8e e9       	ldi	r24, 0x9E	; 158
    276c:	93 e0       	ldi	r25, 0x03	; 3
    276e:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
	RM_LOGLN(encodedData);
    2772:	b4 01       	movw	r22, r8
    2774:	8e e9       	ldi	r24, 0x9E	; 158
    2776:	93 e0       	ldi	r25, 0x03	; 3
    2778:	0e 94 cd 1c 	call	0x399a	; 0x399a <_ZN5Print7printlnEPKc>
	
	uint8_t maxResponseSz = 10;
	char response[maxResponseSz] = {0};
    277c:	1b 8a       	std	Y+19, r1	; 0x13
    277e:	1c 8a       	std	Y+20, r1	; 0x14
    2780:	1d 8a       	std	Y+21, r1	; 0x15
    2782:	1e 8a       	std	Y+22, r1	; 0x16
    2784:	1f 8a       	std	Y+23, r1	; 0x17
    2786:	18 8e       	std	Y+24, r1	; 0x18
    2788:	19 8e       	std	Y+25, r1	; 0x19
    278a:	1a 8e       	std	Y+26, r1	; 0x1a
    278c:	1b 8e       	std	Y+27, r1	; 0x1b
    278e:	1c 8e       	std	Y+28, r1	; 0x1c
	uint16_t statuscode=0;
    2790:	1a a2       	std	Y+34, r1	; 0x22
    2792:	19 a2       	std	Y+33, r1	; 0x21
	uint16_t actualResponseLen=0;
    2794:	18 a2       	std	Y+32, r1	; 0x20
    2796:	1f 8e       	std	Y+31, r1	; 0x1f
	FONA_STATUS_GPRS_SEND status =  fona->sendDataOverGprs(
		(uint8_t*)encodedData, actualEncodedSz, 
		response, maxResponseSz, &actualResponseLen, &statuscode);
    2798:	fe 01       	movw	r30, r28
    279a:	b1 96       	adiw	r30, 0x21	; 33
    279c:	6f 01       	movw	r12, r30
    279e:	9e 01       	movw	r18, r28
    27a0:	21 5e       	subi	r18, 0xE1	; 225
    27a2:	3f 4f       	sbci	r19, 0xFF	; 255
    27a4:	79 01       	movw	r14, r18
    27a6:	0a e0       	ldi	r16, 0x0A	; 10
    27a8:	10 e0       	ldi	r17, 0x00	; 0
    27aa:	2c 50       	subi	r18, 0x0C	; 12
    27ac:	31 09       	sbc	r19, r1
    27ae:	a3 01       	movw	r20, r6
    27b0:	b4 01       	movw	r22, r8
    27b2:	c5 01       	movw	r24, r10
    27b4:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <_ZN13Adafruit_FONA16sendDataOverGprsEPhjPcjPjS2_>
    27b8:	78 2e       	mov	r7, r24
	
	//Switch off internet, lowers power consumption	
	fona->enableGPRS(false);
    27ba:	60 e0       	ldi	r22, 0x00	; 0
    27bc:	c5 01       	movw	r24, r10
    27be:	0e 94 a4 09 	call	0x1348	; 0x1348 <_ZN13Adafruit_FONA10enableGPRSEb>

	uint16_t responseId = atoi(response);
    27c2:	ce 01       	movw	r24, r28
    27c4:	43 96       	adiw	r24, 0x13	; 19
    27c6:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <atoi>
    27ca:	4c 01       	movw	r8, r24

	uint16_t battPct;
	if (!fona->getBattPercent(&battPct))
    27cc:	be 01       	movw	r22, r28
    27ce:	63 5e       	subi	r22, 0xE3	; 227
    27d0:	7f 4f       	sbci	r23, 0xFF	; 255
    27d2:	c5 01       	movw	r24, r10
    27d4:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <_ZN13Adafruit_FONA14getBattPercentEPj>
    27d8:	81 11       	cpse	r24, r1
    27da:	02 c0       	rjmp	.+4      	; 0x27e0 <_Z8sendDatav+0x190>
		sendData.BattPct = -1;
    27dc:	8f ef       	ldi	r24, 0xFF	; 255
    27de:	01 c0       	rjmp	.+2      	; 0x27e2 <_Z8sendDatav+0x192>
	else
		sendData.BattPct = battPct;
    27e0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27e2:	89 83       	std	Y+1, r24	; 0x01
	
	sendData.SendStatus = status;
    27e4:	7b 86       	std	Y+11, r7	; 0x0b
	sendData.ResponseHTMLCode = statuscode;
    27e6:	89 a1       	ldd	r24, Y+33	; 0x21
    27e8:	9a a1       	ldd	r25, Y+34	; 0x22
    27ea:	9d 87       	std	Y+13, r25	; 0x0d
    27ec:	8c 87       	std	Y+12, r24	; 0x0c
	sendData.ResponseLength = actualResponseLen;
    27ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
    27f0:	98 a1       	ldd	r25, Y+32	; 0x20
    27f2:	9f 87       	std	Y+15, r25	; 0x0f
    27f4:	8e 87       	std	Y+14, r24	; 0x0e
	sendData.ResponseId = responseId;
    27f6:	99 8a       	std	Y+17, r9	; 0x11
    27f8:	88 8a       	std	Y+16, r8	; 0x10
	
	RM_LOGLN(F("Send-Data Status Slot:"));
    27fa:	6f ee       	ldi	r22, 0xEF	; 239
    27fc:	74 e0       	ldi	r23, 0x04	; 4
    27fe:	8e e9       	ldi	r24, 0x9E	; 158
    2800:	93 e0       	ldi	r25, 0x03	; 3
    2802:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
	Helpers::printDailySendData(&sendData);
    2806:	ce 01       	movw	r24, r28
    2808:	01 96       	adiw	r24, 0x01	; 1
    280a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <_ZN7Helpers18printDailySendDataEP14DailyCycleData>
		
	mem.appendDailyEntry(&sendData);
    280e:	be 01       	movw	r22, r28
    2810:	6f 5f       	subi	r22, 0xFF	; 255
    2812:	7f 4f       	sbci	r23, 0xFF	; 255
    2814:	8e ea       	ldi	r24, 0xAE	; 174
    2816:	91 e0       	ldi	r25, 0x01	; 1
    2818:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData>
		
	return true;
}
    281c:	83 2d       	mov	r24, r3
    281e:	0f b6       	in	r0, 0x3f	; 63
    2820:	f8 94       	cli
    2822:	5e be       	out	0x3e, r5	; 62
    2824:	0f be       	out	0x3f, r0	; 63
    2826:	4d be       	out	0x3d, r4	; 61
    2828:	a3 96       	adiw	r28, 0x23	; 35
    282a:	0f b6       	in	r0, 0x3f	; 63
    282c:	f8 94       	cli
    282e:	de bf       	out	0x3e, r29	; 62
    2830:	0f be       	out	0x3f, r0	; 63
    2832:	cd bf       	out	0x3d, r28	; 61
    2834:	df 91       	pop	r29
    2836:	cf 91       	pop	r28
    2838:	1f 91       	pop	r17
    283a:	0f 91       	pop	r16
    283c:	ff 90       	pop	r15
    283e:	ef 90       	pop	r14
    2840:	df 90       	pop	r13
    2842:	cf 90       	pop	r12
    2844:	bf 90       	pop	r11
    2846:	af 90       	pop	r10
    2848:	9f 90       	pop	r9
    284a:	8f 90       	pop	r8
    284c:	7f 90       	pop	r7
    284e:	6f 90       	pop	r6
    2850:	5f 90       	pop	r5
    2852:	4f 90       	pop	r4
    2854:	3f 90       	pop	r3
    2856:	08 95       	ret

00002858 <loop>:

//Loop-scoped variables
uint16_t _timerCounter = 0;
void loop() {

	delay(1000);
    2858:	68 ee       	ldi	r22, 0xE8	; 232
    285a:	73 e0       	ldi	r23, 0x03	; 3
    285c:	80 e0       	ldi	r24, 0x00	; 0
    285e:	90 e0       	ldi	r25, 0x00	; 0
    2860:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
	++_timerCounter;
    2864:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
    2868:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
    286c:	01 96       	adiw	r24, 0x01	; 1
    286e:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
    2872:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>

	RM_LOG2(F("Behaviour"), _behaviour);
    2876:	65 ee       	ldi	r22, 0xE5	; 229
    2878:	74 e0       	ldi	r23, 0x04	; 4
    287a:	8e e9       	ldi	r24, 0x9E	; 158
    287c:	93 e0       	ldi	r25, 0x03	; 3
    287e:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    2882:	67 e4       	ldi	r22, 0x47	; 71
    2884:	71 e0       	ldi	r23, 0x01	; 1
    2886:	8e e9       	ldi	r24, 0x9E	; 158
    2888:	93 e0       	ldi	r25, 0x03	; 3
    288a:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN5Print5printEPKc>
    288e:	4a e0       	ldi	r20, 0x0A	; 10
    2890:	50 e0       	ldi	r21, 0x00	; 0
    2892:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <_behaviour>
    2896:	8e e9       	ldi	r24, 0x9E	; 158
    2898:	93 e0       	ldi	r25, 0x03	; 3
    289a:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <_ZN5Print7printlnEhi>
	
	if((_behaviour&SYS_BEHAVIOUR::TakeReadings) != 0) {
    289e:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28a2:	80 ff       	sbrs	r24, 0
    28a4:	09 c0       	rjmp	.+18     	; 0x28b8 <loop+0x60>
		
		if (takeReadings())
    28a6:	0e 94 49 12 	call	0x2492	; 0x2492 <_Z12takeReadingsv>
    28aa:	88 23       	and	r24, r24
    28ac:	29 f0       	breq	.+10     	; 0x28b8 <loop+0x60>
			_behaviour &= ~SYS_BEHAVIOUR::TakeReadings;
    28ae:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28b2:	8e 7f       	andi	r24, 0xFE	; 254
    28b4:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
	}
	
	if ((_behaviour&SYS_BEHAVIOUR::SendData) != 0) {
    28b8:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28bc:	81 ff       	sbrs	r24, 1
    28be:	09 c0       	rjmp	.+18     	; 0x28d2 <loop+0x7a>
		
		if (sendData())
    28c0:	0e 94 28 13 	call	0x2650	; 0x2650 <_Z8sendDatav>
    28c4:	88 23       	and	r24, r24
    28c6:	29 f0       	breq	.+10     	; 0x28d2 <loop+0x7a>
			_behaviour &= ~SYS_BEHAVIOUR::SendData;
    28c8:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28cc:	8d 7f       	andi	r24, 0xFD	; 253
    28ce:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
	}

	if ((_behaviour&SYS_BEHAVIOUR::ExtendedGsmTest) != 0) {
    28d2:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28d6:	82 ff       	sbrs	r24, 2
    28d8:	17 c0       	rjmp	.+46     	; 0x2908 <loop+0xb0>
	
		if (_timerCounter == 1)
    28da:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
    28de:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
    28e2:	01 97       	sbiw	r24, 0x01	; 1
    28e4:	31 f4       	brne	.+12     	; 0x28f2 <loop+0x9a>
			ExtendedTests::startExtendedGsmTest(&__fona, &mem);
    28e6:	6e ea       	ldi	r22, 0xAE	; 174
    28e8:	71 e0       	ldi	r23, 0x01	; 1
    28ea:	89 eb       	ldi	r24, 0xB9	; 185
    28ec:	91 e0       	ldi	r25, 0x01	; 1
    28ee:	0e 94 1e 1a 	call	0x343c	; 0x343c <_ZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManager>
	
		if (sendData()) {
    28f2:	0e 94 28 13 	call	0x2650	; 0x2650 <_Z8sendDatav>
    28f6:	88 23       	and	r24, r24
    28f8:	39 f0       	breq	.+14     	; 0x2908 <loop+0xb0>
			
			_behaviour &= ~SYS_BEHAVIOUR::ExtendedGsmTest;
    28fa:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    28fe:	8b 7f       	andi	r24, 0xFB	; 251
    2900:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_behaviour>
			ExtendedTests::endExtendedGsmTest();
    2904:	0e 94 12 1a 	call	0x3424	; 0x3424 <_ZN13ExtendedTests18endExtendedGsmTestEv>
		}
	}

	if (_behaviour == SYS_BEHAVIOUR::DoNothing) {
    2908:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_behaviour>
    290c:	81 11       	cpse	r24, r1
    290e:	02 c0       	rjmp	.+4      	; 0x2914 <loop+0xbc>
		
		switchOffSystem();
    2910:	0c 94 39 12 	jmp	0x2472	; 0x2472 <_Z15switchOffSystemv>
    2914:	08 95       	ret

00002916 <_GLOBAL__sub_I___fona>:
#include "SensorManager.h"
#include "ExtendedTests.h"


//C++ instances
Adafruit_FONA __fona = Adafruit_FONA(FONA_RST, IS_GSM_MOCK);
    2916:	41 e0       	ldi	r20, 0x01	; 1
    2918:	64 e0       	ldi	r22, 0x04	; 4
    291a:	89 eb       	ldi	r24, 0xB9	; 185
    291c:	91 e0       	ldi	r25, 0x01	; 1
    291e:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZN13Adafruit_FONAC1Eab>
RmMemManager mem = RmMemManager(false);
    2922:	60 e0       	ldi	r22, 0x00	; 0
    2924:	8e ea       	ldi	r24, 0xAE	; 174
    2926:	91 e0       	ldi	r25, 0x01	; 1
    2928:	0e 94 b7 14 	call	0x296e	; 0x296e <_ZN12RmMemManagerC1Eb>
SensorManager sensorMgr = SensorManager(true);
    292c:	61 e0       	ldi	r22, 0x01	; 1
    292e:	8c ea       	ldi	r24, 0xAC	; 172
    2930:	91 e0       	ldi	r25, 0x01	; 1
    2932:	0e 94 0b 16 	call	0x2c16	; 0x2c16 <_ZN13SensorManagerC1Eb>
	uint8_t rssiErr	= 0;
	
	FONA_GET_NETREG netReg;
};

struct INITIALISING_STATE {
    2936:	ee e9       	ldi	r30, 0x9E	; 158
    2938:	f1 e0       	ldi	r31, 0x01	; 1
    293a:	12 82       	std	Z+2, r1	; 0x02
#define NETREG_ACTUALVAL_NETSTAT(val) \
	NETREG_ONLY_NETSTAT(val)>>2
#define NETREG_ACTUALVAL_ERROR(val) \
	NETREG_ONLY_ERROR(val)>>5

struct FONA_GET_RSSI {
    293c:	15 82       	std	Z+5, r1	; 0x05
    293e:	16 82       	std	Z+6, r1	; 0x06
    2940:	17 82       	std	Z+7, r1	; 0x07
	uint8_t rssiErr	= 0;
	
	FONA_GET_NETREG netReg;
};

struct INITIALISING_STATE {
    2942:	12 86       	std	Z+10, r1	; 0x0a
    2944:	11 86       	std	Z+9, r1	; 0x09
    2946:	14 86       	std	Z+12, r1	; 0x0c
    2948:	13 86       	std	Z+11, r1	; 0x0b
    294a:	08 95       	ret

0000294c <_GLOBAL__sub_D___fona>:
#define prog_char_strcpy(to, fromprogmem)		strcpy_P((to), (fromprogmem))




class Adafruit_FONA : public FONAStreamType {
    294c:	8d e2       	ldi	r24, 0x2D	; 45
    294e:	91 e0       	ldi	r25, 0x01	; 1
    2950:	90 93 ba 01 	sts	0x01BA, r25	; 0x8001ba <__fona+0x1>
    2954:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <__fona>
    2958:	8e ec       	ldi	r24, 0xCE	; 206
    295a:	92 e0       	ldi	r25, 0x02	; 2
    295c:	0c 94 94 1f 	jmp	0x3f28	; 0x3f28 <_ZN6StringD1Ev>

00002960 <_ZN7TwoWire5writeEi>:
		RM_LOG(F(", Char="));
		RM_LOGLNFMT(val1, HEX);
	}
	
	return numFailures;
}
    2960:	dc 01       	movw	r26, r24
    2962:	ed 91       	ld	r30, X+
    2964:	fc 91       	ld	r31, X
    2966:	01 90       	ld	r0, Z+
    2968:	f0 81       	ld	r31, Z
    296a:	e0 2d       	mov	r30, r0
    296c:	09 94       	ijmp

0000296e <_ZN12RmMemManagerC1Eb>:
    296e:	fc 01       	movw	r30, r24
    2970:	14 82       	std	Z+4, r1	; 0x04
    2972:	15 82       	std	Z+5, r1	; 0x05
    2974:	16 82       	std	Z+6, r1	; 0x06
    2976:	17 82       	std	Z+7, r1	; 0x07
    2978:	80 e8       	ldi	r24, 0x80	; 128
    297a:	80 87       	std	Z+8, r24	; 0x08
    297c:	81 87       	std	Z+9, r24	; 0x09
    297e:	12 86       	std	Z+10, r1	; 0x0a
    2980:	63 83       	std	Z+3, r22	; 0x03
    2982:	61 11       	cpse	r22, r1
    2984:	04 c0       	rjmp	.+8      	; 0x298e <_ZN12RmMemManagerC1Eb+0x20>
    2986:	86 e4       	ldi	r24, 0x46	; 70
    2988:	93 e0       	ldi	r25, 0x03	; 3
    298a:	0c 94 73 19 	jmp	0x32e6	; 0x32e6 <_ZN7TwoWire5beginEv>
    298e:	08 95       	ret

00002990 <_Z13internalWritejPhh>:
    2990:	ef 92       	push	r14
    2992:	ff 92       	push	r15
    2994:	0f 93       	push	r16
    2996:	1f 93       	push	r17
    2998:	cf 93       	push	r28
    299a:	df 93       	push	r29
    299c:	eb 01       	movw	r28, r22
    299e:	7b 01       	movw	r14, r22
    29a0:	e4 0e       	add	r14, r20
    29a2:	f1 1c       	adc	r15, r1
    29a4:	8c 01       	movw	r16, r24
    29a6:	ce 15       	cp	r28, r14
    29a8:	df 05       	cpc	r29, r15
    29aa:	21 f1       	breq	.+72     	; 0x29f4 <_Z13internalWritejPhh+0x64>
    29ac:	60 e5       	ldi	r22, 0x50	; 80
    29ae:	70 e0       	ldi	r23, 0x00	; 0
    29b0:	86 e4       	ldi	r24, 0x46	; 70
    29b2:	93 e0       	ldi	r25, 0x03	; 3
    29b4:	0e 94 8f 19 	call	0x331e	; 0x331e <_ZN7TwoWire17beginTransmissionEi>
    29b8:	61 2f       	mov	r22, r17
    29ba:	70 e0       	ldi	r23, 0x00	; 0
    29bc:	86 e4       	ldi	r24, 0x46	; 70
    29be:	93 e0       	ldi	r25, 0x03	; 3
    29c0:	0e 94 b0 14 	call	0x2960	; 0x2960 <_ZN7TwoWire5writeEi>
    29c4:	b8 01       	movw	r22, r16
    29c6:	77 27       	eor	r23, r23
    29c8:	86 e4       	ldi	r24, 0x46	; 70
    29ca:	93 e0       	ldi	r25, 0x03	; 3
    29cc:	0e 94 b0 14 	call	0x2960	; 0x2960 <_ZN7TwoWire5writeEi>
    29d0:	69 91       	ld	r22, Y+
    29d2:	86 e4       	ldi	r24, 0x46	; 70
    29d4:	93 e0       	ldi	r25, 0x03	; 3
    29d6:	0e 94 34 19 	call	0x3268	; 0x3268 <_ZN7TwoWire5writeEh>
    29da:	86 e4       	ldi	r24, 0x46	; 70
    29dc:	93 e0       	ldi	r25, 0x03	; 3
    29de:	0e 94 0b 1a 	call	0x3416	; 0x3416 <_ZN7TwoWire15endTransmissionEv>
    29e2:	6f e0       	ldi	r22, 0x0F	; 15
    29e4:	70 e0       	ldi	r23, 0x00	; 0
    29e6:	80 e0       	ldi	r24, 0x00	; 0
    29e8:	90 e0       	ldi	r25, 0x00	; 0
    29ea:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <delay>
    29ee:	0f 5f       	subi	r16, 0xFF	; 255
    29f0:	1f 4f       	sbci	r17, 0xFF	; 255
    29f2:	d9 cf       	rjmp	.-78     	; 0x29a6 <_Z13internalWritejPhh+0x16>
    29f4:	df 91       	pop	r29
    29f6:	cf 91       	pop	r28
    29f8:	1f 91       	pop	r17
    29fa:	0f 91       	pop	r16
    29fc:	ff 90       	pop	r15
    29fe:	ef 90       	pop	r14
    2a00:	08 95       	ret

00002a02 <_Z12internalReadjPhh>:
    2a02:	ef 92       	push	r14
    2a04:	ff 92       	push	r15
    2a06:	0f 93       	push	r16
    2a08:	1f 93       	push	r17
    2a0a:	cf 93       	push	r28
    2a0c:	df 93       	push	r29
    2a0e:	eb 01       	movw	r28, r22
    2a10:	7b 01       	movw	r14, r22
    2a12:	e4 0e       	add	r14, r20
    2a14:	f1 1c       	adc	r15, r1
    2a16:	8c 01       	movw	r16, r24
    2a18:	ce 15       	cp	r28, r14
    2a1a:	df 05       	cpc	r29, r15
    2a1c:	71 f1       	breq	.+92     	; 0x2a7a <_Z12internalReadjPhh+0x78>
    2a1e:	60 e5       	ldi	r22, 0x50	; 80
    2a20:	70 e0       	ldi	r23, 0x00	; 0
    2a22:	86 e4       	ldi	r24, 0x46	; 70
    2a24:	93 e0       	ldi	r25, 0x03	; 3
    2a26:	0e 94 8f 19 	call	0x331e	; 0x331e <_ZN7TwoWire17beginTransmissionEi>
    2a2a:	61 2f       	mov	r22, r17
    2a2c:	70 e0       	ldi	r23, 0x00	; 0
    2a2e:	86 e4       	ldi	r24, 0x46	; 70
    2a30:	93 e0       	ldi	r25, 0x03	; 3
    2a32:	0e 94 b0 14 	call	0x2960	; 0x2960 <_ZN7TwoWire5writeEi>
    2a36:	b8 01       	movw	r22, r16
    2a38:	77 27       	eor	r23, r23
    2a3a:	86 e4       	ldi	r24, 0x46	; 70
    2a3c:	93 e0       	ldi	r25, 0x03	; 3
    2a3e:	0e 94 b0 14 	call	0x2960	; 0x2960 <_ZN7TwoWire5writeEi>
    2a42:	86 e4       	ldi	r24, 0x46	; 70
    2a44:	93 e0       	ldi	r25, 0x03	; 3
    2a46:	0e 94 0b 1a 	call	0x3416	; 0x3416 <_ZN7TwoWire15endTransmissionEv>
    2a4a:	41 e0       	ldi	r20, 0x01	; 1
    2a4c:	50 e0       	ldi	r21, 0x00	; 0
    2a4e:	60 e5       	ldi	r22, 0x50	; 80
    2a50:	70 e0       	ldi	r23, 0x00	; 0
    2a52:	86 e4       	ldi	r24, 0x46	; 70
    2a54:	93 e0       	ldi	r25, 0x03	; 3
    2a56:	0e 94 08 1a 	call	0x3410	; 0x3410 <_ZN7TwoWire11requestFromEii>
    2a5a:	86 e4       	ldi	r24, 0x46	; 70
    2a5c:	93 e0       	ldi	r25, 0x03	; 3
    2a5e:	0e 94 a5 18 	call	0x314a	; 0x314a <_ZN7TwoWire9availableEv>
    2a62:	89 2b       	or	r24, r25
    2a64:	29 f0       	breq	.+10     	; 0x2a70 <_Z12internalReadjPhh+0x6e>
    2a66:	86 e4       	ldi	r24, 0x46	; 70
    2a68:	93 e0       	ldi	r25, 0x03	; 3
    2a6a:	0e 94 ad 18 	call	0x315a	; 0x315a <_ZN7TwoWire4readEv>
    2a6e:	01 c0       	rjmp	.+2      	; 0x2a72 <_Z12internalReadjPhh+0x70>
    2a70:	8f ef       	ldi	r24, 0xFF	; 255
    2a72:	89 93       	st	Y+, r24
    2a74:	0f 5f       	subi	r16, 0xFF	; 255
    2a76:	1f 4f       	sbci	r17, 0xFF	; 255
    2a78:	cf cf       	rjmp	.-98     	; 0x2a18 <_Z12internalReadjPhh+0x16>
    2a7a:	df 91       	pop	r29
    2a7c:	cf 91       	pop	r28
    2a7e:	1f 91       	pop	r17
    2a80:	0f 91       	pop	r16
    2a82:	ff 90       	pop	r15
    2a84:	ef 90       	pop	r14
    2a86:	08 95       	ret

00002a88 <_ZN12RmMemManager18getUCharFromMemoryEj>:
    2a88:	cf 93       	push	r28
    2a8a:	df 93       	push	r29
    2a8c:	1f 92       	push	r1
    2a8e:	cd b7       	in	r28, 0x3d	; 61
    2a90:	de b7       	in	r29, 0x3e	; 62
    2a92:	cb 01       	movw	r24, r22
    2a94:	41 e0       	ldi	r20, 0x01	; 1
    2a96:	be 01       	movw	r22, r28
    2a98:	6f 5f       	subi	r22, 0xFF	; 255
    2a9a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a9c:	0e 94 01 15 	call	0x2a02	; 0x2a02 <_Z12internalReadjPhh>
    2aa0:	89 81       	ldd	r24, Y+1	; 0x01
    2aa2:	0f 90       	pop	r0
    2aa4:	df 91       	pop	r29
    2aa6:	cf 91       	pop	r28
    2aa8:	08 95       	ret

00002aaa <_ZN12RmMemManager19incrementCycleCountEv>:
    2aaa:	cf 93       	push	r28
    2aac:	df 93       	push	r29
    2aae:	1f 92       	push	r1
    2ab0:	cd b7       	in	r28, 0x3d	; 61
    2ab2:	de b7       	in	r29, 0x3e	; 62
    2ab4:	63 e0       	ldi	r22, 0x03	; 3
    2ab6:	70 e0       	ldi	r23, 0x00	; 0
    2ab8:	0e 94 44 15 	call	0x2a88	; 0x2a88 <_ZN12RmMemManager18getUCharFromMemoryEj>
    2abc:	8f 5f       	subi	r24, 0xFF	; 255
    2abe:	89 83       	std	Y+1, r24	; 0x01
    2ac0:	41 e0       	ldi	r20, 0x01	; 1
    2ac2:	be 01       	movw	r22, r28
    2ac4:	6f 5f       	subi	r22, 0xFF	; 255
    2ac6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ac8:	83 e0       	ldi	r24, 0x03	; 3
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	0e 94 c8 14 	call	0x2990	; 0x2990 <_Z13internalWritejPhh>
    2ad0:	0f 90       	pop	r0
    2ad2:	df 91       	pop	r29
    2ad4:	cf 91       	pop	r28
    2ad6:	08 95       	ret

00002ad8 <_ZN12RmMemManager11getModuleIdEv>:
    2ad8:	60 e0       	ldi	r22, 0x00	; 0
    2ada:	70 e0       	ldi	r23, 0x00	; 0
    2adc:	0c 94 44 15 	jmp	0x2a88	; 0x2a88 <_ZN12RmMemManager18getUCharFromMemoryEj>

00002ae0 <_ZN12RmMemManager19getUShortFromMemoryEj>:
    2ae0:	cf 93       	push	r28
    2ae2:	df 93       	push	r29
    2ae4:	00 d0       	rcall	.+0      	; 0x2ae6 <_ZN12RmMemManager19getUShortFromMemoryEj+0x6>
    2ae6:	cd b7       	in	r28, 0x3d	; 61
    2ae8:	de b7       	in	r29, 0x3e	; 62
    2aea:	cb 01       	movw	r24, r22
    2aec:	42 e0       	ldi	r20, 0x02	; 2
    2aee:	be 01       	movw	r22, r28
    2af0:	6f 5f       	subi	r22, 0xFF	; 255
    2af2:	7f 4f       	sbci	r23, 0xFF	; 255
    2af4:	0e 94 01 15 	call	0x2a02	; 0x2a02 <_Z12internalReadjPhh>
    2af8:	89 81       	ldd	r24, Y+1	; 0x01
    2afa:	9a 81       	ldd	r25, Y+2	; 0x02
    2afc:	0f 90       	pop	r0
    2afe:	0f 90       	pop	r0
    2b00:	df 91       	pop	r29
    2b02:	cf 91       	pop	r28
    2b04:	08 95       	ret

00002b06 <_ZN12RmMemManager12getBootCountEv>:
    2b06:	61 e0       	ldi	r22, 0x01	; 1
    2b08:	70 e0       	ldi	r23, 0x00	; 0
    2b0a:	0c 94 70 15 	jmp	0x2ae0	; 0x2ae0 <_ZN12RmMemManager19getUShortFromMemoryEj>

00002b0e <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData>:
    2b0e:	cf 92       	push	r12
    2b10:	df 92       	push	r13
    2b12:	ef 92       	push	r14
    2b14:	ff 92       	push	r15
    2b16:	0f 93       	push	r16
    2b18:	1f 93       	push	r17
    2b1a:	cf 93       	push	r28
    2b1c:	df 93       	push	r29
    2b1e:	00 d0       	rcall	.+0      	; 0x2b20 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData+0x12>
    2b20:	cd b7       	in	r28, 0x3d	; 61
    2b22:	de b7       	in	r29, 0x3e	; 62
    2b24:	7c 01       	movw	r14, r24
    2b26:	6b 01       	movw	r12, r22
    2b28:	64 e0       	ldi	r22, 0x04	; 4
    2b2a:	70 e0       	ldi	r23, 0x00	; 0
    2b2c:	0e 94 70 15 	call	0x2ae0	; 0x2ae0 <_ZN12RmMemManager19getUShortFromMemoryEj>
    2b30:	8c 01       	movw	r16, r24
    2b32:	42 96       	adiw	r24, 0x12	; 18
    2b34:	8f 3f       	cpi	r24, 0xFF	; 255
    2b36:	9f 47       	sbci	r25, 0x7F	; 127
    2b38:	28 f0       	brcs	.+10     	; 0x2b44 <_ZN12RmMemManager16appendDailyEntryEP14DailyCycleData+0x36>
    2b3a:	c7 01       	movw	r24, r14
    2b3c:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <_ZN12RmMemManager19incrementCycleCountEv>
    2b40:	0e e1       	ldi	r16, 0x1E	; 30
    2b42:	10 e0       	ldi	r17, 0x00	; 0
    2b44:	42 e1       	ldi	r20, 0x12	; 18
    2b46:	b6 01       	movw	r22, r12
    2b48:	c8 01       	movw	r24, r16
    2b4a:	0e 94 c8 14 	call	0x2990	; 0x2990 <_Z13internalWritejPhh>
    2b4e:	0e 5e       	subi	r16, 0xEE	; 238
    2b50:	1f 4f       	sbci	r17, 0xFF	; 255
    2b52:	1a 83       	std	Y+2, r17	; 0x02
    2b54:	09 83       	std	Y+1, r16	; 0x01
    2b56:	42 e0       	ldi	r20, 0x02	; 2
    2b58:	be 01       	movw	r22, r28
    2b5a:	6f 5f       	subi	r22, 0xFF	; 255
    2b5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b5e:	84 e0       	ldi	r24, 0x04	; 4
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	0e 94 c8 14 	call	0x2990	; 0x2990 <_Z13internalWritejPhh>
    2b66:	0f 90       	pop	r0
    2b68:	0f 90       	pop	r0
    2b6a:	df 91       	pop	r29
    2b6c:	cf 91       	pop	r28
    2b6e:	1f 91       	pop	r17
    2b70:	0f 91       	pop	r16
    2b72:	ff 90       	pop	r15
    2b74:	ef 90       	pop	r14
    2b76:	df 90       	pop	r13
    2b78:	cf 90       	pop	r12
    2b7a:	08 95       	ret

00002b7c <_ZN12RmMemManager14loadSensorDataEP10SensorDatah>:
	RM_LOG(F("*** FAIL PRINT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}
 
/* Returns the number of readings read */
uint8_t RmMemManager::loadSensorData(SensorData* buffer, uint8_t maxNoOfReadings) {
    2b7c:	af 92       	push	r10
    2b7e:	bf 92       	push	r11
    2b80:	cf 92       	push	r12
    2b82:	df 92       	push	r13
    2b84:	ef 92       	push	r14
    2b86:	ff 92       	push	r15
    2b88:	0f 93       	push	r16
    2b8a:	1f 93       	push	r17
    2b8c:	cf 93       	push	r28
    2b8e:	df 93       	push	r29
    2b90:	7c 01       	movw	r14, r24
    2b92:	6b 01       	movw	r12, r22
    2b94:	d4 2f       	mov	r29, r20

	if (mockSensorData != NULL) {
    2b96:	fc 01       	movw	r30, r24
    2b98:	60 81       	ld	r22, Z
    2b9a:	71 81       	ldd	r23, Z+1	; 0x01
    2b9c:	61 15       	cp	r22, r1
    2b9e:	71 05       	cpc	r23, r1
    2ba0:	59 f0       	breq	.+22     	; 0x2bb8 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x3c>
		
		memcpy(buffer, mockSensorData, sizeof(SensorData)*numMockSensorData);
    2ba2:	42 81       	ldd	r20, Z+2	; 0x02
    2ba4:	fa e0       	ldi	r31, 0x0A	; 10
    2ba6:	4f 9f       	mul	r20, r31
    2ba8:	a0 01       	movw	r20, r0
    2baa:	11 24       	eor	r1, r1
    2bac:	c6 01       	movw	r24, r12
    2bae:	0e 94 a3 25 	call	0x4b46	; 0x4b46 <memcpy>
		return numMockSensorData;
    2bb2:	f7 01       	movw	r30, r14
    2bb4:	82 81       	ldd	r24, Z+2	; 0x02
    2bb6:	24 c0       	rjmp	.+72     	; 0x2c00 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x84>
	}

	uint8_t numReadings = 0;
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
    2bb8:	64 e0       	ldi	r22, 0x04	; 4
    2bba:	70 e0       	ldi	r23, 0x00	; 0
    2bbc:	0e 94 70 15 	call	0x2ae0	; 0x2ae0 <_ZN12RmMemManager19getUShortFromMemoryEj>
    2bc0:	8c 01       	movw	r16, r24
    2bc2:	01 50       	subi	r16, 0x01	; 1
    2bc4:	11 09       	sbc	r17, r1
		
		memcpy(buffer, mockSensorData, sizeof(SensorData)*numMockSensorData);
		return numMockSensorData;
	}

	uint8_t numReadings = 0;
    2bc6:	c0 e0       	ldi	r28, 0x00	; 0
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
	
	while(true) {
		
		if (numReadings == maxNoOfReadings)
    2bc8:	cd 17       	cp	r28, r29
    2bca:	c9 f0       	breq	.+50     	; 0x2bfe <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
			break;
			
		uint16_t prevMemSlotTypeAddr = currSlotStartAddr-1; //The MEM_SLOT_TYPE address of the previous slot
	
		if (prevMemSlotTypeAddr <= (sizeof(MEMLOC_START) + sizeof(ModuleMeta)))
    2bcc:	01 32       	cpi	r16, 0x21	; 33
    2bce:	11 05       	cpc	r17, r1
    2bd0:	b0 f0       	brcs	.+44     	; 0x2bfe <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
			break; //We're at the very beginning - either module has just been deployed or mem has wrapped (& we'll ignore this one day's readings)
	
		uint8_t slotType = (MEM_SLOT_TYPE)getUCharFromMemory(prevMemSlotTypeAddr);
    2bd2:	b8 01       	movw	r22, r16
    2bd4:	c7 01       	movw	r24, r14
    2bd6:	0e 94 44 15 	call	0x2a88	; 0x2a88 <_ZN12RmMemManager18getUCharFromMemoryEj>
    2bda:	58 01       	movw	r10, r16
    2bdc:	fa e0       	ldi	r31, 0x0A	; 10
    2bde:	af 1a       	sub	r10, r31
    2be0:	b1 08       	sbc	r11, r1
		
		if (slotType == MEM_SLOT_TYPE::SensorMem) {
    2be2:	81 30       	cpi	r24, 0x01	; 1
    2be4:	61 f4       	brne	.+24     	; 0x2bfe <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x82>
		
			uint16_t prevSlotStartAddr = currSlotStartAddr - sizeof(SensorData);
			internalRead(prevSlotStartAddr, (uint8_t*)buffer, sizeof(SensorData));
    2be6:	4a e0       	ldi	r20, 0x0A	; 10
    2be8:	b6 01       	movw	r22, r12
    2bea:	c8 01       	movw	r24, r16
    2bec:	09 97       	sbiw	r24, 0x09	; 9
    2bee:	0e 94 01 15 	call	0x2a02	; 0x2a02 <_Z12internalReadjPhh>
			
			buffer += sizeof(SensorData);
    2bf2:	84 e6       	ldi	r24, 0x64	; 100
    2bf4:	c8 0e       	add	r12, r24
    2bf6:	d1 1c       	adc	r13, r1
			currSlotStartAddr -= sizeof(SensorData);
			++numReadings;
    2bf8:	cf 5f       	subi	r28, 0xFF	; 255

	uint8_t numReadings = 0;
	uint16_t freeMemAddress = MEMLOC_START + offsetof(ModuleMeta, nextFreeWriteAddr);
	uint16_t currSlotStartAddr = getUShortFromMemory(freeMemAddress);
	
	while(true) {
    2bfa:	85 01       	movw	r16, r10
    2bfc:	e5 cf       	rjmp	.-54     	; 0x2bc8 <_ZN12RmMemManager14loadSensorDataEP10SensorDatah+0x4c>
    2bfe:	8c 2f       	mov	r24, r28
			break;
		}
	}

	return numReadings;
}
    2c00:	df 91       	pop	r29
    2c02:	cf 91       	pop	r28
    2c04:	1f 91       	pop	r17
    2c06:	0f 91       	pop	r16
    2c08:	ff 90       	pop	r15
    2c0a:	ef 90       	pop	r14
    2c0c:	df 90       	pop	r13
    2c0e:	cf 90       	pop	r12
    2c10:	bf 90       	pop	r11
    2c12:	af 90       	pop	r10
    2c14:	08 95       	ret

00002c16 <_ZN13SensorManagerC1Eb>:
	while (bit_is_set(ADCSRA,ADSC));
	result = ADCL;
	result |= ADCH<<8;
	result = 1125300L / result; // Back-calculate AVcc in mV
	return result / 1000;
}
    2c16:	fc 01       	movw	r30, r24
    2c18:	60 83       	st	Z, r22
    2c1a:	08 95       	ret

00002c1c <_ZN13SensorManager16takeSampleAnalogEh>:

//Returns (analog_reading * vcc)
uint16_t SensorManager::takeSampleAnalog(uint8_t pinNo)	{
	
	if (_isMock)
    2c1c:	fc 01       	movw	r30, r24
    2c1e:	80 81       	ld	r24, Z
    2c20:	81 11       	cpse	r24, r1
    2c22:	03 c0       	rjmp	.+6      	; 0x2c2a <_ZN13SensorManager16takeSampleAnalogEh+0xe>
		return 5;
	
	uint16_t batt = analogRead(pinNo);
    2c24:	86 2f       	mov	r24, r22
    2c26:	0c 94 e3 1e 	jmp	0x3dc6	; 0x3dc6 <analogRead>
	
	//float vcc = readVcc();
	//batt *= vcc;
	
	return batt;
}
    2c2a:	85 e0       	ldi	r24, 0x05	; 5
    2c2c:	90 e0       	ldi	r25, 0x00	; 0
    2c2e:	08 95       	ret

00002c30 <_ZN13SensorManager11getMockDataEP10SensorData>:

void SensorManager::getMockData(SensorData* ret) {
    2c30:	fc 01       	movw	r30, r24
    2c32:	db 01       	movw	r26, r22
	
	++__mockDataCounter; //After 255, will roll back to 0, fine for tests
    2c34:	81 81       	ldd	r24, Z+1	; 0x01
    2c36:	8f 5f       	subi	r24, 0xFF	; 255
    2c38:	81 83       	std	Z+1, r24	; 0x01
	
	ret->battVoltage = __mockDataCounter;
    2c3a:	90 e0       	ldi	r25, 0x00	; 0
    2c3c:	11 96       	adiw	r26, 0x01	; 1
    2c3e:	9c 93       	st	X, r25
    2c40:	8e 93       	st	-X, r24
	ret->pVVoltage = __mockDataCounter*10;
    2c42:	81 81       	ldd	r24, Z+1	; 0x01
    2c44:	2a e0       	ldi	r18, 0x0A	; 10
    2c46:	82 9f       	mul	r24, r18
    2c48:	c0 01       	movw	r24, r0
    2c4a:	11 24       	eor	r1, r1
    2c4c:	13 96       	adiw	r26, 0x03	; 3
    2c4e:	9c 93       	st	X, r25
    2c50:	8e 93       	st	-X, r24
    2c52:	12 97       	sbiw	r26, 0x02	; 2
	ret->current = __mockDataCounter%7;
    2c54:	81 81       	ldd	r24, Z+1	; 0x01
    2c56:	67 e0       	ldi	r22, 0x07	; 7
    2c58:	0e 94 f7 22 	call	0x45ee	; 0x45ee <__udivmodqi4>
    2c5c:	89 2f       	mov	r24, r25
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	15 96       	adiw	r26, 0x05	; 5
    2c62:	9c 93       	st	X, r25
    2c64:	8e 93       	st	-X, r24
    2c66:	14 97       	sbiw	r26, 0x04	; 4
	ret->temperature = __mockDataCounter*100;
    2c68:	81 81       	ldd	r24, Z+1	; 0x01
    2c6a:	24 e6       	ldi	r18, 0x64	; 100
    2c6c:	82 9f       	mul	r24, r18
    2c6e:	c0 01       	movw	r24, r0
    2c70:	11 24       	eor	r1, r1
    2c72:	17 96       	adiw	r26, 0x07	; 7
    2c74:	9c 93       	st	X, r25
    2c76:	8e 93       	st	-X, r24
    2c78:	16 97       	sbiw	r26, 0x06	; 6
    2c7a:	08 95       	ret

00002c7c <_ZN13SensorManager8readDataEP10SensorData>:
	
	//return ret;
}

void SensorManager::readData(SensorData* ret) {
    2c7c:	af 92       	push	r10
    2c7e:	bf 92       	push	r11
    2c80:	cf 92       	push	r12
    2c82:	df 92       	push	r13
    2c84:	ef 92       	push	r14
    2c86:	ff 92       	push	r15
    2c88:	0f 93       	push	r16
    2c8a:	1f 93       	push	r17
    2c8c:	cf 93       	push	r28
    2c8e:	df 93       	push	r29
    2c90:	8c 01       	movw	r16, r24
    2c92:	eb 01       	movw	r28, r22
	
	if (_isMock) {
    2c94:	fc 01       	movw	r30, r24
    2c96:	80 81       	ld	r24, Z
    2c98:	88 23       	and	r24, r24
    2c9a:	21 f0       	breq	.+8      	; 0x2ca4 <_ZN13SensorManager8readDataEP10SensorData+0x28>
		this->getMockData(ret);
    2c9c:	c8 01       	movw	r24, r16
    2c9e:	0e 94 18 16 	call	0x2c30	; 0x2c30 <_ZN13SensorManager11getMockDataEP10SensorData>
    2ca2:	1b c0       	rjmp	.+54     	; 0x2cda <_ZN13SensorManager8readDataEP10SensorData+0x5e>
	}
	else {
		uint16_t pvRaw   = takeSampleAnalog(PIN_PV_VOLTAGE);
    2ca4:	6e e0       	ldi	r22, 0x0E	; 14
    2ca6:	c8 01       	movw	r24, r16
    2ca8:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN13SensorManager16takeSampleAnalogEh>
    2cac:	6c 01       	movw	r12, r24
		uint16_t battRaw = takeSampleAnalog(PIN_BATT_VOLTAGE);
    2cae:	6f e0       	ldi	r22, 0x0F	; 15
    2cb0:	c8 01       	movw	r24, r16
    2cb2:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN13SensorManager16takeSampleAnalogEh>
    2cb6:	5c 01       	movw	r10, r24
		uint16_t currentRaw = takeSampleAnalog(PIN_CURRENT);
    2cb8:	61 e1       	ldi	r22, 0x11	; 17
    2cba:	c8 01       	movw	r24, r16
    2cbc:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN13SensorManager16takeSampleAnalogEh>
    2cc0:	7c 01       	movw	r14, r24
		uint16_t tempRaw = takeSampleAnalog(PIN_TEMP);
    2cc2:	60 e1       	ldi	r22, 0x10	; 16
    2cc4:	c8 01       	movw	r24, r16
    2cc6:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN13SensorManager16takeSampleAnalogEh>

		ret->battVoltage = battRaw;
    2cca:	b9 82       	std	Y+1, r11	; 0x01
    2ccc:	a8 82       	st	Y, r10
		ret->pVVoltage = pvRaw;
    2cce:	db 82       	std	Y+3, r13	; 0x03
    2cd0:	ca 82       	std	Y+2, r12	; 0x02
		ret->current = currentRaw;
    2cd2:	fd 82       	std	Y+5, r15	; 0x05
    2cd4:	ec 82       	std	Y+4, r14	; 0x04
		ret->temperature = tempRaw;
    2cd6:	9f 83       	std	Y+7, r25	; 0x07
    2cd8:	8e 83       	std	Y+6, r24	; 0x06
	}
	
	Helpers::printSensorData(ret);
    2cda:	ce 01       	movw	r24, r28
	
	//return ret;
}
    2cdc:	df 91       	pop	r29
    2cde:	cf 91       	pop	r28
    2ce0:	1f 91       	pop	r17
    2ce2:	0f 91       	pop	r16
    2ce4:	ff 90       	pop	r15
    2ce6:	ef 90       	pop	r14
    2ce8:	df 90       	pop	r13
    2cea:	cf 90       	pop	r12
    2cec:	bf 90       	pop	r11
    2cee:	af 90       	pop	r10
		ret->pVVoltage = pvRaw;
		ret->current = currentRaw;
		ret->temperature = tempRaw;
	}
	
	Helpers::printSensorData(ret);
    2cf0:	0c 94 9a 0e 	jmp	0x1d34	; 0x1d34 <_ZN7Helpers15printSensorDataEP10SensorData>

00002cf4 <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    2cf4:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2cf8:	81 e0       	ldi	r24, 0x01	; 1
    2cfa:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <twi_sendStop>
    2cfe:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2d02:	61 e0       	ldi	r22, 0x01	; 1
    2d04:	82 e1       	ldi	r24, 0x12	; 18
    2d06:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
    2d0a:	61 e0       	ldi	r22, 0x01	; 1
    2d0c:	83 e1       	ldi	r24, 0x13	; 19
    2d0e:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
    2d12:	e9 eb       	ldi	r30, 0xB9	; 185
    2d14:	f0 e0       	ldi	r31, 0x00	; 0
    2d16:	80 81       	ld	r24, Z
    2d18:	8e 7f       	andi	r24, 0xFE	; 254
    2d1a:	80 83       	st	Z, r24
    2d1c:	80 81       	ld	r24, Z
    2d1e:	8d 7f       	andi	r24, 0xFD	; 253
    2d20:	80 83       	st	Z, r24
    2d22:	88 e4       	ldi	r24, 0x48	; 72
    2d24:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    2d28:	85 e4       	ldi	r24, 0x45	; 69
    2d2a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2d2e:	08 95       	ret

00002d30 <twi_readFrom>:
    2d30:	41 32       	cpi	r20, 0x21	; 33
    2d32:	08 f0       	brcs	.+2      	; 0x2d36 <twi_readFrom+0x6>
    2d34:	43 c0       	rjmp	.+134    	; 0x2dbc <twi_readFrom+0x8c>
    2d36:	90 91 45 03 	lds	r25, 0x0345	; 0x800345 <twi_state>
    2d3a:	91 11       	cpse	r25, r1
    2d3c:	fc cf       	rjmp	.-8      	; 0x2d36 <twi_readFrom+0x6>
    2d3e:	91 e0       	ldi	r25, 0x01	; 1
    2d40:	90 93 45 03 	sts	0x0345, r25	; 0x800345 <twi_state>
    2d44:	20 93 43 03 	sts	0x0343, r18	; 0x800343 <twi_sendStop>
    2d48:	2f ef       	ldi	r18, 0xFF	; 255
    2d4a:	20 93 d8 02 	sts	0x02D8, r18	; 0x8002d8 <twi_error>
    2d4e:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <twi_masterBufferIndex>
    2d52:	24 0f       	add	r18, r20
    2d54:	20 93 1c 03 	sts	0x031C, r18	; 0x80031c <twi_masterBufferLength>
    2d58:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <twi_slarw>
    2d5c:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <twi_slarw>
    2d60:	88 0f       	add	r24, r24
    2d62:	89 2b       	or	r24, r25
    2d64:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <twi_slarw>
    2d68:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <twi_inRepStart>
    2d6c:	81 30       	cpi	r24, 0x01	; 1
    2d6e:	61 f4       	brne	.+24     	; 0x2d88 <twi_readFrom+0x58>
    2d70:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2d74:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2d78:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2d7c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2d80:	83 fd       	sbrc	r24, 3
    2d82:	f8 cf       	rjmp	.-16     	; 0x2d74 <twi_readFrom+0x44>
    2d84:	85 ec       	ldi	r24, 0xC5	; 197
    2d86:	01 c0       	rjmp	.+2      	; 0x2d8a <twi_readFrom+0x5a>
    2d88:	85 ee       	ldi	r24, 0xE5	; 229
    2d8a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2d8e:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <twi_state>
    2d92:	81 30       	cpi	r24, 0x01	; 1
    2d94:	e1 f3       	breq	.-8      	; 0x2d8e <twi_readFrom+0x5e>
    2d96:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2d9a:	84 17       	cp	r24, r20
    2d9c:	10 f4       	brcc	.+4      	; 0x2da2 <twi_readFrom+0x72>
    2d9e:	40 91 1d 03 	lds	r20, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2da2:	ae e1       	ldi	r26, 0x1E	; 30
    2da4:	b3 e0       	ldi	r27, 0x03	; 3
    2da6:	96 2f       	mov	r25, r22
    2da8:	fb 01       	movw	r30, r22
    2daa:	8e 2f       	mov	r24, r30
    2dac:	89 1b       	sub	r24, r25
    2dae:	84 17       	cp	r24, r20
    2db0:	18 f4       	brcc	.+6      	; 0x2db8 <twi_readFrom+0x88>
    2db2:	8d 91       	ld	r24, X+
    2db4:	81 93       	st	Z+, r24
    2db6:	f9 cf       	rjmp	.-14     	; 0x2daa <twi_readFrom+0x7a>
    2db8:	84 2f       	mov	r24, r20
    2dba:	08 95       	ret
    2dbc:	80 e0       	ldi	r24, 0x00	; 0
    2dbe:	08 95       	ret

00002dc0 <twi_writeTo>:
    2dc0:	0f 93       	push	r16
    2dc2:	41 32       	cpi	r20, 0x21	; 33
    2dc4:	08 f0       	brcs	.+2      	; 0x2dc8 <twi_writeTo+0x8>
    2dc6:	4a c0       	rjmp	.+148    	; 0x2e5c <twi_writeTo+0x9c>
    2dc8:	90 91 45 03 	lds	r25, 0x0345	; 0x800345 <twi_state>
    2dcc:	91 11       	cpse	r25, r1
    2dce:	fc cf       	rjmp	.-8      	; 0x2dc8 <twi_writeTo+0x8>
    2dd0:	32 e0       	ldi	r19, 0x02	; 2
    2dd2:	30 93 45 03 	sts	0x0345, r19	; 0x800345 <twi_state>
    2dd6:	00 93 43 03 	sts	0x0343, r16	; 0x800343 <twi_sendStop>
    2dda:	3f ef       	ldi	r19, 0xFF	; 255
    2ddc:	30 93 d8 02 	sts	0x02D8, r19	; 0x8002d8 <twi_error>
    2de0:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <twi_masterBufferIndex>
    2de4:	40 93 1c 03 	sts	0x031C, r20	; 0x80031c <twi_masterBufferLength>
    2de8:	56 2f       	mov	r21, r22
    2dea:	ae e1       	ldi	r26, 0x1E	; 30
    2dec:	b3 e0       	ldi	r27, 0x03	; 3
    2dee:	fb 01       	movw	r30, r22
    2df0:	3e 2f       	mov	r19, r30
    2df2:	35 1b       	sub	r19, r21
    2df4:	34 17       	cp	r19, r20
    2df6:	18 f4       	brcc	.+6      	; 0x2dfe <twi_writeTo+0x3e>
    2df8:	31 91       	ld	r19, Z+
    2dfa:	3d 93       	st	X+, r19
    2dfc:	f9 cf       	rjmp	.-14     	; 0x2df0 <twi_writeTo+0x30>
    2dfe:	10 92 44 03 	sts	0x0344, r1	; 0x800344 <twi_slarw>
    2e02:	30 91 44 03 	lds	r19, 0x0344	; 0x800344 <twi_slarw>
    2e06:	88 0f       	add	r24, r24
    2e08:	83 2b       	or	r24, r19
    2e0a:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <twi_slarw>
    2e0e:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <twi_inRepStart>
    2e12:	81 30       	cpi	r24, 0x01	; 1
    2e14:	61 f4       	brne	.+24     	; 0x2e2e <twi_writeTo+0x6e>
    2e16:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <twi_inRepStart>
    2e1a:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2e1e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2e22:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2e26:	83 fd       	sbrc	r24, 3
    2e28:	f8 cf       	rjmp	.-16     	; 0x2e1a <twi_writeTo+0x5a>
    2e2a:	85 ec       	ldi	r24, 0xC5	; 197
    2e2c:	01 c0       	rjmp	.+2      	; 0x2e30 <twi_writeTo+0x70>
    2e2e:	85 ee       	ldi	r24, 0xE5	; 229
    2e30:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2e34:	22 23       	and	r18, r18
    2e36:	21 f0       	breq	.+8      	; 0x2e40 <twi_writeTo+0x80>
    2e38:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <twi_state>
    2e3c:	82 30       	cpi	r24, 0x02	; 2
    2e3e:	d1 f3       	breq	.-12     	; 0x2e34 <twi_writeTo+0x74>
    2e40:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e44:	8f 3f       	cpi	r24, 0xFF	; 255
    2e46:	79 f0       	breq	.+30     	; 0x2e66 <twi_writeTo+0xa6>
    2e48:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e4c:	80 32       	cpi	r24, 0x20	; 32
    2e4e:	41 f0       	breq	.+16     	; 0x2e60 <twi_writeTo+0xa0>
    2e50:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <twi_error>
    2e54:	80 33       	cpi	r24, 0x30	; 48
    2e56:	31 f0       	breq	.+12     	; 0x2e64 <twi_writeTo+0xa4>
    2e58:	94 e0       	ldi	r25, 0x04	; 4
    2e5a:	05 c0       	rjmp	.+10     	; 0x2e66 <twi_writeTo+0xa6>
    2e5c:	91 e0       	ldi	r25, 0x01	; 1
    2e5e:	03 c0       	rjmp	.+6      	; 0x2e66 <twi_writeTo+0xa6>
    2e60:	92 e0       	ldi	r25, 0x02	; 2
    2e62:	01 c0       	rjmp	.+2      	; 0x2e66 <twi_writeTo+0xa6>
    2e64:	93 e0       	ldi	r25, 0x03	; 3
    2e66:	89 2f       	mov	r24, r25
    2e68:	0f 91       	pop	r16
    2e6a:	08 95       	ret

00002e6c <twi_transmit>:
    2e6c:	40 91 fa 02 	lds	r20, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2e70:	26 2f       	mov	r18, r22
    2e72:	30 e0       	ldi	r19, 0x00	; 0
    2e74:	24 0f       	add	r18, r20
    2e76:	31 1d       	adc	r19, r1
    2e78:	21 32       	cpi	r18, 0x21	; 33
    2e7a:	31 05       	cpc	r19, r1
    2e7c:	dc f4       	brge	.+54     	; 0x2eb4 <twi_transmit+0x48>
    2e7e:	20 91 45 03 	lds	r18, 0x0345	; 0x800345 <twi_state>
    2e82:	24 30       	cpi	r18, 0x04	; 4
    2e84:	c9 f4       	brne	.+50     	; 0x2eb8 <twi_transmit+0x4c>
    2e86:	fc 01       	movw	r30, r24
    2e88:	80 e0       	ldi	r24, 0x00	; 0
    2e8a:	90 e0       	ldi	r25, 0x00	; 0
    2e8c:	86 17       	cp	r24, r22
    2e8e:	58 f4       	brcc	.+22     	; 0x2ea6 <twi_transmit+0x3a>
    2e90:	30 91 fa 02 	lds	r19, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2e94:	21 91       	ld	r18, Z+
    2e96:	dc 01       	movw	r26, r24
    2e98:	a4 50       	subi	r26, 0x04	; 4
    2e9a:	bd 4f       	sbci	r27, 0xFD	; 253
    2e9c:	a3 0f       	add	r26, r19
    2e9e:	b1 1d       	adc	r27, r1
    2ea0:	2c 93       	st	X, r18
    2ea2:	01 96       	adiw	r24, 0x01	; 1
    2ea4:	f3 cf       	rjmp	.-26     	; 0x2e8c <twi_transmit+0x20>
    2ea6:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    2eaa:	68 0f       	add	r22, r24
    2eac:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <twi_txBufferLength>
    2eb0:	80 e0       	ldi	r24, 0x00	; 0
    2eb2:	08 95       	ret
    2eb4:	81 e0       	ldi	r24, 0x01	; 1
    2eb6:	08 95       	ret
    2eb8:	82 e0       	ldi	r24, 0x02	; 2
    2eba:	08 95       	ret

00002ebc <twi_attachSlaveRxEvent>:
    2ebc:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <twi_onSlaveReceive+0x1>
    2ec0:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <twi_onSlaveReceive>
    2ec4:	08 95       	ret

00002ec6 <twi_attachSlaveTxEvent>:
    2ec6:	90 93 41 03 	sts	0x0341, r25	; 0x800341 <twi_onSlaveTransmit+0x1>
    2eca:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <twi_onSlaveTransmit>
    2ece:	08 95       	ret

00002ed0 <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    2ed0:	85 ed       	ldi	r24, 0xD5	; 213
    2ed2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    2ed6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    2eda:	84 fd       	sbrc	r24, 4
    2edc:	fc cf       	rjmp	.-8      	; 0x2ed6 <twi_stop+0x6>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    2ede:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2ee2:	08 95       	ret

00002ee4 <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    2ee4:	85 ec       	ldi	r24, 0xC5	; 197
    2ee6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

  // update twi state
  twi_state = TWI_READY;
    2eea:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
    2eee:	08 95       	ret

00002ef0 <__vector_24>:
}

ISR(TWI_vect)
{
    2ef0:	1f 92       	push	r1
    2ef2:	0f 92       	push	r0
    2ef4:	0f b6       	in	r0, 0x3f	; 63
    2ef6:	0f 92       	push	r0
    2ef8:	11 24       	eor	r1, r1
    2efa:	2f 93       	push	r18
    2efc:	3f 93       	push	r19
    2efe:	4f 93       	push	r20
    2f00:	5f 93       	push	r21
    2f02:	6f 93       	push	r22
    2f04:	7f 93       	push	r23
    2f06:	8f 93       	push	r24
    2f08:	9f 93       	push	r25
    2f0a:	af 93       	push	r26
    2f0c:	bf 93       	push	r27
    2f0e:	ef 93       	push	r30
    2f10:	ff 93       	push	r31
  switch(TW_STATUS){
    2f12:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2f16:	88 7f       	andi	r24, 0xF8	; 248
    2f18:	80 36       	cpi	r24, 0x60	; 96
    2f1a:	09 f4       	brne	.+2      	; 0x2f1e <__vector_24+0x2e>
    2f1c:	9e c0       	rjmp	.+316    	; 0x305a <__vector_24+0x16a>
    2f1e:	78 f5       	brcc	.+94     	; 0x2f7e <__vector_24+0x8e>
    2f20:	88 32       	cpi	r24, 0x28	; 40
    2f22:	09 f4       	brne	.+2      	; 0x2f26 <__vector_24+0x36>
    2f24:	5d c0       	rjmp	.+186    	; 0x2fe0 <__vector_24+0xf0>
    2f26:	90 f4       	brcc	.+36     	; 0x2f4c <__vector_24+0x5c>
    2f28:	80 31       	cpi	r24, 0x10	; 16
    2f2a:	09 f4       	brne	.+2      	; 0x2f2e <__vector_24+0x3e>
    2f2c:	56 c0       	rjmp	.+172    	; 0x2fda <__vector_24+0xea>
    2f2e:	38 f4       	brcc	.+14     	; 0x2f3e <__vector_24+0x4e>
    2f30:	88 23       	and	r24, r24
    2f32:	09 f4       	brne	.+2      	; 0x2f36 <__vector_24+0x46>
    2f34:	f5 c0       	rjmp	.+490    	; 0x3120 <__vector_24+0x230>
    2f36:	88 30       	cpi	r24, 0x08	; 8
    2f38:	09 f4       	brne	.+2      	; 0x2f3c <__vector_24+0x4c>
    2f3a:	4f c0       	rjmp	.+158    	; 0x2fda <__vector_24+0xea>
    2f3c:	f5 c0       	rjmp	.+490    	; 0x3128 <__vector_24+0x238>
    2f3e:	88 31       	cpi	r24, 0x18	; 24
    2f40:	09 f4       	brne	.+2      	; 0x2f44 <__vector_24+0x54>
    2f42:	4e c0       	rjmp	.+156    	; 0x2fe0 <__vector_24+0xf0>
    2f44:	80 32       	cpi	r24, 0x20	; 32
    2f46:	09 f4       	brne	.+2      	; 0x2f4a <__vector_24+0x5a>
    2f48:	5f c0       	rjmp	.+190    	; 0x3008 <__vector_24+0x118>
    2f4a:	ee c0       	rjmp	.+476    	; 0x3128 <__vector_24+0x238>
    2f4c:	80 34       	cpi	r24, 0x40	; 64
    2f4e:	09 f4       	brne	.+2      	; 0x2f52 <__vector_24+0x62>
    2f50:	6a c0       	rjmp	.+212    	; 0x3026 <__vector_24+0x136>
    2f52:	58 f4       	brcc	.+22     	; 0x2f6a <__vector_24+0x7a>
    2f54:	80 33       	cpi	r24, 0x30	; 48
    2f56:	09 f4       	brne	.+2      	; 0x2f5a <__vector_24+0x6a>
    2f58:	57 c0       	rjmp	.+174    	; 0x3008 <__vector_24+0x118>
    2f5a:	88 33       	cpi	r24, 0x38	; 56
    2f5c:	09 f0       	breq	.+2      	; 0x2f60 <__vector_24+0x70>
    2f5e:	e4 c0       	rjmp	.+456    	; 0x3128 <__vector_24+0x238>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    2f60:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <twi_error>
      twi_releaseBus();
    2f64:	0e 94 72 17 	call	0x2ee4	; 0x2ee4 <twi_releaseBus>
      break;
    2f68:	df c0       	rjmp	.+446    	; 0x3128 <__vector_24+0x238>
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2f6a:	80 35       	cpi	r24, 0x50	; 80
    2f6c:	09 f4       	brne	.+2      	; 0x2f70 <__vector_24+0x80>
    2f6e:	4f c0       	rjmp	.+158    	; 0x300e <__vector_24+0x11e>
    2f70:	88 35       	cpi	r24, 0x58	; 88
    2f72:	09 f4       	brne	.+2      	; 0x2f76 <__vector_24+0x86>
    2f74:	5d c0       	rjmp	.+186    	; 0x3030 <__vector_24+0x140>
    2f76:	88 34       	cpi	r24, 0x48	; 72
    2f78:	09 f0       	breq	.+2      	; 0x2f7c <__vector_24+0x8c>
    2f7a:	d6 c0       	rjmp	.+428    	; 0x3128 <__vector_24+0x238>
    2f7c:	d3 c0       	rjmp	.+422    	; 0x3124 <__vector_24+0x234>
    2f7e:	88 39       	cpi	r24, 0x98	; 152
    2f80:	09 f4       	brne	.+2      	; 0x2f84 <__vector_24+0x94>
    2f82:	c4 c0       	rjmp	.+392    	; 0x310c <__vector_24+0x21c>
    2f84:	a8 f4       	brcc	.+42     	; 0x2fb0 <__vector_24+0xc0>
    2f86:	88 37       	cpi	r24, 0x78	; 120
    2f88:	09 f4       	brne	.+2      	; 0x2f8c <__vector_24+0x9c>
    2f8a:	67 c0       	rjmp	.+206    	; 0x305a <__vector_24+0x16a>
    2f8c:	38 f4       	brcc	.+14     	; 0x2f9c <__vector_24+0xac>
    2f8e:	88 36       	cpi	r24, 0x68	; 104
    2f90:	09 f4       	brne	.+2      	; 0x2f94 <__vector_24+0xa4>
    2f92:	63 c0       	rjmp	.+198    	; 0x305a <__vector_24+0x16a>
    2f94:	80 37       	cpi	r24, 0x70	; 112
    2f96:	09 f4       	brne	.+2      	; 0x2f9a <__vector_24+0xaa>
    2f98:	60 c0       	rjmp	.+192    	; 0x305a <__vector_24+0x16a>
    2f9a:	c6 c0       	rjmp	.+396    	; 0x3128 <__vector_24+0x238>
    2f9c:	88 38       	cpi	r24, 0x88	; 136
    2f9e:	09 f4       	brne	.+2      	; 0x2fa2 <__vector_24+0xb2>
    2fa0:	b5 c0       	rjmp	.+362    	; 0x310c <__vector_24+0x21c>
    2fa2:	80 39       	cpi	r24, 0x90	; 144
    2fa4:	09 f4       	brne	.+2      	; 0x2fa8 <__vector_24+0xb8>
    2fa6:	5f c0       	rjmp	.+190    	; 0x3066 <__vector_24+0x176>
    2fa8:	80 38       	cpi	r24, 0x80	; 128
    2faa:	09 f0       	breq	.+2      	; 0x2fae <__vector_24+0xbe>
    2fac:	bd c0       	rjmp	.+378    	; 0x3128 <__vector_24+0x238>
    2fae:	5b c0       	rjmp	.+182    	; 0x3066 <__vector_24+0x176>
    2fb0:	80 3b       	cpi	r24, 0xB0	; 176
    2fb2:	09 f4       	brne	.+2      	; 0x2fb6 <__vector_24+0xc6>
    2fb4:	83 c0       	rjmp	.+262    	; 0x30bc <__vector_24+0x1cc>
    2fb6:	38 f4       	brcc	.+14     	; 0x2fc6 <__vector_24+0xd6>
    2fb8:	80 3a       	cpi	r24, 0xA0	; 160
    2fba:	09 f4       	brne	.+2      	; 0x2fbe <__vector_24+0xce>
    2fbc:	66 c0       	rjmp	.+204    	; 0x308a <__vector_24+0x19a>
    2fbe:	88 3a       	cpi	r24, 0xA8	; 168
    2fc0:	09 f4       	brne	.+2      	; 0x2fc4 <__vector_24+0xd4>
    2fc2:	7c c0       	rjmp	.+248    	; 0x30bc <__vector_24+0x1cc>
    2fc4:	b1 c0       	rjmp	.+354    	; 0x3128 <__vector_24+0x238>
    2fc6:	80 3c       	cpi	r24, 0xC0	; 192
    2fc8:	09 f4       	brne	.+2      	; 0x2fcc <__vector_24+0xdc>
    2fca:	a4 c0       	rjmp	.+328    	; 0x3114 <__vector_24+0x224>
    2fcc:	88 3c       	cpi	r24, 0xC8	; 200
    2fce:	09 f4       	brne	.+2      	; 0x2fd2 <__vector_24+0xe2>
    2fd0:	a1 c0       	rjmp	.+322    	; 0x3114 <__vector_24+0x224>
    2fd2:	88 3b       	cpi	r24, 0xB8	; 184
    2fd4:	09 f4       	brne	.+2      	; 0x2fd8 <__vector_24+0xe8>
    2fd6:	87 c0       	rjmp	.+270    	; 0x30e6 <__vector_24+0x1f6>
    2fd8:	a7 c0       	rjmp	.+334    	; 0x3128 <__vector_24+0x238>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    2fda:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <twi_slarw>
    2fde:	10 c0       	rjmp	.+32     	; 0x3000 <__vector_24+0x110>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    2fe0:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2fe4:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <twi_masterBufferLength>
    2fe8:	98 17       	cp	r25, r24
    2fea:	70 f5       	brcc	.+92     	; 0x3048 <__vector_24+0x158>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    2fec:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    2ff0:	81 e0       	ldi	r24, 0x01	; 1
    2ff2:	8e 0f       	add	r24, r30
    2ff4:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    2ff8:	f0 e0       	ldi	r31, 0x00	; 0
    2ffa:	e2 5e       	subi	r30, 0xE2	; 226
    2ffc:	fc 4f       	sbci	r31, 0xFC	; 252
    2ffe:	80 81       	ld	r24, Z
    3000:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3004:	85 ec       	ldi	r24, 0xC5	; 197
    3006:	83 c0       	rjmp	.+262    	; 0x310e <__vector_24+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    3008:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <twi_error>
    300c:	8b c0       	rjmp	.+278    	; 0x3124 <__vector_24+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    300e:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3012:	81 e0       	ldi	r24, 0x01	; 1
    3014:	8e 0f       	add	r24, r30
    3016:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    301a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    301e:	f0 e0       	ldi	r31, 0x00	; 0
    3020:	e2 5e       	subi	r30, 0xE2	; 226
    3022:	fc 4f       	sbci	r31, 0xFC	; 252
    3024:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3026:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <twi_masterBufferIndex>
    302a:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <twi_masterBufferLength>
    302e:	6b c0       	rjmp	.+214    	; 0x3106 <__vector_24+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3030:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <twi_masterBufferIndex>
    3034:	81 e0       	ldi	r24, 0x01	; 1
    3036:	8e 0f       	add	r24, r30
    3038:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <twi_masterBufferIndex>
    303c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    3040:	f0 e0       	ldi	r31, 0x00	; 0
    3042:	e2 5e       	subi	r30, 0xE2	; 226
    3044:	fc 4f       	sbci	r31, 0xFC	; 252
    3046:	80 83       	st	Z, r24
	if (twi_sendStop)
    3048:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <twi_sendStop>
    304c:	81 11       	cpse	r24, r1
    304e:	6a c0       	rjmp	.+212    	; 0x3124 <__vector_24+0x234>
          twi_stop();
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    3050:	81 e0       	ldi	r24, 0x01	; 1
    3052:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <twi_inRepStart>
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    3056:	84 ea       	ldi	r24, 0xA4	; 164
    3058:	5e c0       	rjmp	.+188    	; 0x3116 <__vector_24+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    305a:	83 e0       	ldi	r24, 0x03	; 3
    305c:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    3060:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <twi_rxBufferIndex>
    3064:	cf cf       	rjmp	.-98     	; 0x3004 <__vector_24+0x114>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    3066:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    306a:	80 32       	cpi	r24, 0x20	; 32
    306c:	08 f0       	brcs	.+2      	; 0x3070 <__vector_24+0x180>
    306e:	4e c0       	rjmp	.+156    	; 0x310c <__vector_24+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    3070:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    3074:	81 e0       	ldi	r24, 0x01	; 1
    3076:	8e 0f       	add	r24, r30
    3078:	80 93 d9 02 	sts	0x02D9, r24	; 0x8002d9 <twi_rxBufferIndex>
    307c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    3080:	f0 e0       	ldi	r31, 0x00	; 0
    3082:	e6 52       	subi	r30, 0x26	; 38
    3084:	fd 4f       	sbci	r31, 0xFD	; 253
    3086:	80 83       	st	Z, r24
    3088:	bd cf       	rjmp	.-134    	; 0x3004 <__vector_24+0x114>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    308a:	0e 94 72 17 	call	0x2ee4	; 0x2ee4 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    308e:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    3092:	80 32       	cpi	r24, 0x20	; 32
    3094:	30 f4       	brcc	.+12     	; 0x30a2 <__vector_24+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    3096:	e0 91 d9 02 	lds	r30, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    309a:	f0 e0       	ldi	r31, 0x00	; 0
    309c:	e6 52       	subi	r30, 0x26	; 38
    309e:	fd 4f       	sbci	r31, 0xFD	; 253
    30a0:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    30a2:	60 91 d9 02 	lds	r22, 0x02D9	; 0x8002d9 <twi_rxBufferIndex>
    30a6:	70 e0       	ldi	r23, 0x00	; 0
    30a8:	e0 91 3e 03 	lds	r30, 0x033E	; 0x80033e <twi_onSlaveReceive>
    30ac:	f0 91 3f 03 	lds	r31, 0x033F	; 0x80033f <twi_onSlaveReceive+0x1>
    30b0:	8a ed       	ldi	r24, 0xDA	; 218
    30b2:	92 e0       	ldi	r25, 0x02	; 2
    30b4:	09 95       	icall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    30b6:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <twi_rxBufferIndex>
      break;
    30ba:	36 c0       	rjmp	.+108    	; 0x3128 <__vector_24+0x238>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    30bc:	84 e0       	ldi	r24, 0x04	; 4
    30be:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    30c2:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    30c6:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    30ca:	e0 91 40 03 	lds	r30, 0x0340	; 0x800340 <twi_onSlaveTransmit>
    30ce:	f0 91 41 03 	lds	r31, 0x0341	; 0x800341 <twi_onSlaveTransmit+0x1>
    30d2:	09 95       	icall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    30d4:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    30d8:	81 11       	cpse	r24, r1
    30da:	05 c0       	rjmp	.+10     	; 0x30e6 <__vector_24+0x1f6>
        twi_txBufferLength = 1;
    30dc:	81 e0       	ldi	r24, 0x01	; 1
    30de:	80 93 fa 02 	sts	0x02FA, r24	; 0x8002fa <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    30e2:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    30e6:	e0 91 fb 02 	lds	r30, 0x02FB	; 0x8002fb <twi_txBufferIndex>
    30ea:	81 e0       	ldi	r24, 0x01	; 1
    30ec:	8e 0f       	add	r24, r30
    30ee:	80 93 fb 02 	sts	0x02FB, r24	; 0x8002fb <twi_txBufferIndex>
    30f2:	f0 e0       	ldi	r31, 0x00	; 0
    30f4:	e4 50       	subi	r30, 0x04	; 4
    30f6:	fd 4f       	sbci	r31, 0xFD	; 253
    30f8:	80 81       	ld	r24, Z
    30fa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    30fe:	90 91 fb 02 	lds	r25, 0x02FB	; 0x8002fb <twi_txBufferIndex>
    3102:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <twi_txBufferLength>
    3106:	98 17       	cp	r25, r24
    3108:	08 f4       	brcc	.+2      	; 0x310c <__vector_24+0x21c>
    310a:	7c cf       	rjmp	.-264    	; 0x3004 <__vector_24+0x114>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    310c:	85 e8       	ldi	r24, 0x85	; 133
    310e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3112:	0a c0       	rjmp	.+20     	; 0x3128 <__vector_24+0x238>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3114:	85 ec       	ldi	r24, 0xC5	; 197
    3116:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    311a:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <twi_state>
      break;
    311e:	04 c0       	rjmp	.+8      	; 0x3128 <__vector_24+0x238>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    3120:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <twi_error>
      twi_stop();
    3124:	0e 94 68 17 	call	0x2ed0	; 0x2ed0 <twi_stop>
      break;
  }
}
    3128:	ff 91       	pop	r31
    312a:	ef 91       	pop	r30
    312c:	bf 91       	pop	r27
    312e:	af 91       	pop	r26
    3130:	9f 91       	pop	r25
    3132:	8f 91       	pop	r24
    3134:	7f 91       	pop	r23
    3136:	6f 91       	pop	r22
    3138:	5f 91       	pop	r21
    313a:	4f 91       	pop	r20
    313c:	3f 91       	pop	r19
    313e:	2f 91       	pop	r18
    3140:	0f 90       	pop	r0
    3142:	0f be       	out	0x3f, r0	; 63
    3144:	0f 90       	pop	r0
    3146:	1f 90       	pop	r1
    3148:	18 95       	reti

0000314a <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    314a:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    314e:	90 e0       	ldi	r25, 0x00	; 0
    3150:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3154:	82 1b       	sub	r24, r18
    3156:	91 09       	sbc	r25, r1
    3158:	08 95       	ret

0000315a <_ZN7TwoWire4readEv>:
    315a:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    315e:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    3162:	98 17       	cp	r25, r24
    3164:	50 f4       	brcc	.+20     	; 0x317a <_ZN7TwoWire4readEv+0x20>
    3166:	e9 2f       	mov	r30, r25
    3168:	f0 e0       	ldi	r31, 0x00	; 0
    316a:	e4 58       	subi	r30, 0x84	; 132
    316c:	fc 4f       	sbci	r31, 0xFC	; 252
    316e:	20 81       	ld	r18, Z
    3170:	30 e0       	ldi	r19, 0x00	; 0
    3172:	9f 5f       	subi	r25, 0xFF	; 255
    3174:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3178:	02 c0       	rjmp	.+4      	; 0x317e <_ZN7TwoWire4readEv+0x24>
    317a:	2f ef       	ldi	r18, 0xFF	; 255
    317c:	3f ef       	ldi	r19, 0xFF	; 255
    317e:	c9 01       	movw	r24, r18
    3180:	08 95       	ret

00003182 <_ZN7TwoWire4peekEv>:
    3182:	e0 91 7b 03 	lds	r30, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    3186:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    318a:	e8 17       	cp	r30, r24
    318c:	30 f4       	brcc	.+12     	; 0x319a <_ZN7TwoWire4peekEv+0x18>
    318e:	f0 e0       	ldi	r31, 0x00	; 0
    3190:	e4 58       	subi	r30, 0x84	; 132
    3192:	fc 4f       	sbci	r31, 0xFC	; 252
    3194:	80 81       	ld	r24, Z
    3196:	90 e0       	ldi	r25, 0x00	; 0
    3198:	08 95       	ret
    319a:	8f ef       	ldi	r24, 0xFF	; 255
    319c:	9f ef       	ldi	r25, 0xFF	; 255
    319e:	08 95       	ret

000031a0 <_ZN7TwoWire5flushEv>:
    31a0:	08 95       	ret

000031a2 <_ZN7TwoWire16onReceiveServiceEPhi>:
    31a2:	cf 93       	push	r28
    31a4:	df 93       	push	r29
    31a6:	ec 01       	movw	r28, r24
    31a8:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <_ZN7TwoWire14user_onReceiveE>
    31ac:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <_ZN7TwoWire14user_onReceiveE+0x1>
    31b0:	30 97       	sbiw	r30, 0x00	; 0
    31b2:	f1 f0       	breq	.+60     	; 0x31f0 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    31b4:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31b8:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31bc:	98 17       	cp	r25, r24
    31be:	c0 f0       	brcs	.+48     	; 0x31f0 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    31c0:	90 e0       	ldi	r25, 0x00	; 0
    31c2:	29 2f       	mov	r18, r25
    31c4:	30 e0       	ldi	r19, 0x00	; 0
    31c6:	26 17       	cp	r18, r22
    31c8:	37 07       	cpc	r19, r23
    31ca:	54 f4       	brge	.+20     	; 0x31e0 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    31cc:	de 01       	movw	r26, r28
    31ce:	a2 0f       	add	r26, r18
    31d0:	b3 1f       	adc	r27, r19
    31d2:	4c 91       	ld	r20, X
    31d4:	d9 01       	movw	r26, r18
    31d6:	a4 58       	subi	r26, 0x84	; 132
    31d8:	bc 4f       	sbci	r27, 0xFC	; 252
    31da:	4c 93       	st	X, r20
    31dc:	9f 5f       	subi	r25, 0xFF	; 255
    31de:	f1 cf       	rjmp	.-30     	; 0x31c2 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    31e0:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    31e4:	60 93 7a 03 	sts	0x037A, r22	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    31e8:	cb 01       	movw	r24, r22
    31ea:	df 91       	pop	r29
    31ec:	cf 91       	pop	r28
    31ee:	09 94       	ijmp
    31f0:	df 91       	pop	r29
    31f2:	cf 91       	pop	r28
    31f4:	08 95       	ret

000031f6 <_ZN7TwoWire16onRequestServiceEv>:
    31f6:	e0 91 54 03 	lds	r30, 0x0354	; 0x800354 <_ZN7TwoWire14user_onRequestE>
    31fa:	f0 91 55 03 	lds	r31, 0x0355	; 0x800355 <_ZN7TwoWire14user_onRequestE+0x1>
    31fe:	30 97       	sbiw	r30, 0x00	; 0
    3200:	29 f0       	breq	.+10     	; 0x320c <_ZN7TwoWire16onRequestServiceEv+0x16>
    3202:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3206:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    320a:	09 94       	ijmp
    320c:	08 95       	ret

0000320e <_ZN7TwoWire5writeEPKhj>:
    320e:	cf 92       	push	r12
    3210:	df 92       	push	r13
    3212:	ef 92       	push	r14
    3214:	ff 92       	push	r15
    3216:	0f 93       	push	r16
    3218:	1f 93       	push	r17
    321a:	cf 93       	push	r28
    321c:	df 93       	push	r29
    321e:	7c 01       	movw	r14, r24
    3220:	cb 01       	movw	r24, r22
    3222:	8a 01       	movw	r16, r20
    3224:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <_ZN7TwoWire12transmittingE>
    3228:	22 23       	and	r18, r18
    322a:	89 f0       	breq	.+34     	; 0x324e <_ZN7TwoWire5writeEPKhj+0x40>
    322c:	eb 01       	movw	r28, r22
    322e:	6b 01       	movw	r12, r22
    3230:	c4 0e       	add	r12, r20
    3232:	d5 1e       	adc	r13, r21
    3234:	cc 15       	cp	r28, r12
    3236:	dd 05       	cpc	r29, r13
    3238:	69 f0       	breq	.+26     	; 0x3254 <_ZN7TwoWire5writeEPKhj+0x46>
    323a:	69 91       	ld	r22, Y+
    323c:	d7 01       	movw	r26, r14
    323e:	ed 91       	ld	r30, X+
    3240:	fc 91       	ld	r31, X
    3242:	01 90       	ld	r0, Z+
    3244:	f0 81       	ld	r31, Z
    3246:	e0 2d       	mov	r30, r0
    3248:	c7 01       	movw	r24, r14
    324a:	09 95       	icall
    324c:	f3 cf       	rjmp	.-26     	; 0x3234 <_ZN7TwoWire5writeEPKhj+0x26>
    324e:	64 2f       	mov	r22, r20
    3250:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <twi_transmit>
    3254:	c8 01       	movw	r24, r16
    3256:	df 91       	pop	r29
    3258:	cf 91       	pop	r28
    325a:	1f 91       	pop	r17
    325c:	0f 91       	pop	r16
    325e:	ff 90       	pop	r15
    3260:	ef 90       	pop	r14
    3262:	df 90       	pop	r13
    3264:	cf 90       	pop	r12
    3266:	08 95       	ret

00003268 <_ZN7TwoWire5writeEh>:
    3268:	cf 93       	push	r28
    326a:	df 93       	push	r29
    326c:	1f 92       	push	r1
    326e:	cd b7       	in	r28, 0x3d	; 61
    3270:	de b7       	in	r29, 0x3e	; 62
    3272:	69 83       	std	Y+1, r22	; 0x01
    3274:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <_ZN7TwoWire12transmittingE>
    3278:	22 23       	and	r18, r18
    327a:	d1 f0       	breq	.+52     	; 0x32b0 <_ZN7TwoWire5writeEh+0x48>
    327c:	20 91 57 03 	lds	r18, 0x0357	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3280:	20 32       	cpi	r18, 0x20	; 32
    3282:	40 f0       	brcs	.+16     	; 0x3294 <_ZN7TwoWire5writeEh+0x2c>
    3284:	21 e0       	ldi	r18, 0x01	; 1
    3286:	30 e0       	ldi	r19, 0x00	; 0
    3288:	fc 01       	movw	r30, r24
    328a:	33 83       	std	Z+3, r19	; 0x03
    328c:	22 83       	std	Z+2, r18	; 0x02
    328e:	80 e0       	ldi	r24, 0x00	; 0
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	15 c0       	rjmp	.+42     	; 0x32be <_ZN7TwoWire5writeEh+0x56>
    3294:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3298:	e8 2f       	mov	r30, r24
    329a:	f0 e0       	ldi	r31, 0x00	; 0
    329c:	e7 5a       	subi	r30, 0xA7	; 167
    329e:	fc 4f       	sbci	r31, 0xFC	; 252
    32a0:	99 81       	ldd	r25, Y+1	; 0x01
    32a2:	90 83       	st	Z, r25
    32a4:	8f 5f       	subi	r24, 0xFF	; 255
    32a6:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    32aa:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    32ae:	05 c0       	rjmp	.+10     	; 0x32ba <_ZN7TwoWire5writeEh+0x52>
    32b0:	61 e0       	ldi	r22, 0x01	; 1
    32b2:	ce 01       	movw	r24, r28
    32b4:	01 96       	adiw	r24, 0x01	; 1
    32b6:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <twi_transmit>
    32ba:	81 e0       	ldi	r24, 0x01	; 1
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	0f 90       	pop	r0
    32c0:	df 91       	pop	r29
    32c2:	cf 91       	pop	r28
    32c4:	08 95       	ret

000032c6 <_ZN7TwoWireC1Ev>:
    32c6:	fc 01       	movw	r30, r24
    32c8:	13 82       	std	Z+3, r1	; 0x03
    32ca:	12 82       	std	Z+2, r1	; 0x02
    32cc:	88 ee       	ldi	r24, 0xE8	; 232
    32ce:	93 e0       	ldi	r25, 0x03	; 3
    32d0:	a0 e0       	ldi	r26, 0x00	; 0
    32d2:	b0 e0       	ldi	r27, 0x00	; 0
    32d4:	84 83       	std	Z+4, r24	; 0x04
    32d6:	95 83       	std	Z+5, r25	; 0x05
    32d8:	a6 83       	std	Z+6, r26	; 0x06
    32da:	b7 83       	std	Z+7, r27	; 0x07
    32dc:	8e e5       	ldi	r24, 0x5E	; 94
    32de:	91 e0       	ldi	r25, 0x01	; 1
    32e0:	91 83       	std	Z+1, r25	; 0x01
    32e2:	80 83       	st	Z, r24
    32e4:	08 95       	ret

000032e6 <_ZN7TwoWire5beginEv>:
    32e6:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    32ea:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    32ee:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    32f2:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    32f6:	0e 94 7a 16 	call	0x2cf4	; 0x2cf4 <twi_init>
    32fa:	8b ef       	ldi	r24, 0xFB	; 251
    32fc:	98 e1       	ldi	r25, 0x18	; 24
    32fe:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <twi_attachSlaveTxEvent>
    3302:	81 ed       	ldi	r24, 0xD1	; 209
    3304:	98 e1       	ldi	r25, 0x18	; 24
    3306:	0c 94 5e 17 	jmp	0x2ebc	; 0x2ebc <twi_attachSlaveRxEvent>

0000330a <_ZN7TwoWire17beginTransmissionEh>:
    330a:	81 e0       	ldi	r24, 0x01	; 1
    330c:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <_ZN7TwoWire12transmittingE>
    3310:	60 93 79 03 	sts	0x0379, r22	; 0x800379 <_ZN7TwoWire9txAddressE>
    3314:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    3318:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    331c:	08 95       	ret

0000331e <_ZN7TwoWire17beginTransmissionEi>:
    331e:	0c 94 85 19 	jmp	0x330a	; 0x330a <_ZN7TwoWire17beginTransmissionEh>

00003322 <_ZN7TwoWire15endTransmissionEh>:
    3322:	0f 93       	push	r16
    3324:	06 2f       	mov	r16, r22
    3326:	21 e0       	ldi	r18, 0x01	; 1
    3328:	40 91 57 03 	lds	r20, 0x0357	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    332c:	69 e5       	ldi	r22, 0x59	; 89
    332e:	73 e0       	ldi	r23, 0x03	; 3
    3330:	80 91 79 03 	lds	r24, 0x0379	; 0x800379 <_ZN7TwoWire9txAddressE>
    3334:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <twi_writeTo>
    3338:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_ZN7TwoWire13txBufferIndexE>
    333c:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_ZN7TwoWire14txBufferLengthE>
    3340:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <_ZN7TwoWire12transmittingE>
    3344:	0f 91       	pop	r16
    3346:	08 95       	ret

00003348 <_ZN7TwoWire11requestFromEhhmhh>:
    3348:	4f 92       	push	r4
    334a:	5f 92       	push	r5
    334c:	6f 92       	push	r6
    334e:	7f 92       	push	r7
    3350:	af 92       	push	r10
    3352:	bf 92       	push	r11
    3354:	cf 92       	push	r12
    3356:	ef 92       	push	r14
    3358:	ff 92       	push	r15
    335a:	0f 93       	push	r16
    335c:	1f 93       	push	r17
    335e:	cf 93       	push	r28
    3360:	df 93       	push	r29
    3362:	5c 01       	movw	r10, r24
    3364:	f6 2e       	mov	r15, r22
    3366:	d4 2f       	mov	r29, r20
    3368:	28 01       	movw	r4, r16
    336a:	39 01       	movw	r6, r18
    336c:	ee 20       	and	r14, r14
    336e:	21 f1       	breq	.+72     	; 0x33b8 <_ZN7TwoWire11requestFromEhhmhh+0x70>
    3370:	0e 94 85 19 	call	0x330a	; 0x330a <_ZN7TwoWire17beginTransmissionEh>
    3374:	ce 2d       	mov	r28, r14
    3376:	c4 30       	cpi	r28, 0x04	; 4
    3378:	08 f0       	brcs	.+2      	; 0x337c <_ZN7TwoWire11requestFromEhhmhh+0x34>
    337a:	c3 e0       	ldi	r28, 0x03	; 3
    337c:	c1 50       	subi	r28, 0x01	; 1
    337e:	c0 f0       	brcs	.+48     	; 0x33b0 <_ZN7TwoWire11requestFromEhhmhh+0x68>
    3380:	28 e0       	ldi	r18, 0x08	; 8
    3382:	c2 9f       	mul	r28, r18
    3384:	c0 01       	movw	r24, r0
    3386:	11 24       	eor	r1, r1
    3388:	a3 01       	movw	r20, r6
    338a:	92 01       	movw	r18, r4
    338c:	04 c0       	rjmp	.+8      	; 0x3396 <_ZN7TwoWire11requestFromEhhmhh+0x4e>
    338e:	56 95       	lsr	r21
    3390:	47 95       	ror	r20
    3392:	37 95       	ror	r19
    3394:	27 95       	ror	r18
    3396:	8a 95       	dec	r24
    3398:	d2 f7       	brpl	.-12     	; 0x338e <_ZN7TwoWire11requestFromEhhmhh+0x46>
    339a:	ca 01       	movw	r24, r20
    339c:	b9 01       	movw	r22, r18
    339e:	d5 01       	movw	r26, r10
    33a0:	ed 91       	ld	r30, X+
    33a2:	fc 91       	ld	r31, X
    33a4:	01 90       	ld	r0, Z+
    33a6:	f0 81       	ld	r31, Z
    33a8:	e0 2d       	mov	r30, r0
    33aa:	c5 01       	movw	r24, r10
    33ac:	09 95       	icall
    33ae:	e6 cf       	rjmp	.-52     	; 0x337c <_ZN7TwoWire11requestFromEhhmhh+0x34>
    33b0:	60 e0       	ldi	r22, 0x00	; 0
    33b2:	c5 01       	movw	r24, r10
    33b4:	0e 94 91 19 	call	0x3322	; 0x3322 <_ZN7TwoWire15endTransmissionEh>
    33b8:	4d 2f       	mov	r20, r29
    33ba:	d1 32       	cpi	r29, 0x21	; 33
    33bc:	08 f0       	brcs	.+2      	; 0x33c0 <_ZN7TwoWire11requestFromEhhmhh+0x78>
    33be:	40 e2       	ldi	r20, 0x20	; 32
    33c0:	2c 2d       	mov	r18, r12
    33c2:	6c e7       	ldi	r22, 0x7C	; 124
    33c4:	73 e0       	ldi	r23, 0x03	; 3
    33c6:	8f 2d       	mov	r24, r15
    33c8:	0e 94 98 16 	call	0x2d30	; 0x2d30 <twi_readFrom>
    33cc:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <_ZN7TwoWire13rxBufferIndexE>
    33d0:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <_ZN7TwoWire14rxBufferLengthE>
    33d4:	df 91       	pop	r29
    33d6:	cf 91       	pop	r28
    33d8:	1f 91       	pop	r17
    33da:	0f 91       	pop	r16
    33dc:	ff 90       	pop	r15
    33de:	ef 90       	pop	r14
    33e0:	cf 90       	pop	r12
    33e2:	bf 90       	pop	r11
    33e4:	af 90       	pop	r10
    33e6:	7f 90       	pop	r7
    33e8:	6f 90       	pop	r6
    33ea:	5f 90       	pop	r5
    33ec:	4f 90       	pop	r4
    33ee:	08 95       	ret

000033f0 <_ZN7TwoWire11requestFromEhhh>:
    33f0:	cf 92       	push	r12
    33f2:	ef 92       	push	r14
    33f4:	0f 93       	push	r16
    33f6:	1f 93       	push	r17
    33f8:	c2 2e       	mov	r12, r18
    33fa:	e1 2c       	mov	r14, r1
    33fc:	00 e0       	ldi	r16, 0x00	; 0
    33fe:	10 e0       	ldi	r17, 0x00	; 0
    3400:	98 01       	movw	r18, r16
    3402:	0e 94 a4 19 	call	0x3348	; 0x3348 <_ZN7TwoWire11requestFromEhhmhh>
    3406:	1f 91       	pop	r17
    3408:	0f 91       	pop	r16
    340a:	ef 90       	pop	r14
    340c:	cf 90       	pop	r12
    340e:	08 95       	ret

00003410 <_ZN7TwoWire11requestFromEii>:
    3410:	21 e0       	ldi	r18, 0x01	; 1
    3412:	0c 94 f8 19 	jmp	0x33f0	; 0x33f0 <_ZN7TwoWire11requestFromEhhh>

00003416 <_ZN7TwoWire15endTransmissionEv>:
    3416:	61 e0       	ldi	r22, 0x01	; 1
    3418:	0c 94 91 19 	jmp	0x3322	; 0x3322 <_ZN7TwoWire15endTransmissionEh>

0000341c <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    341c:	86 e4       	ldi	r24, 0x46	; 70
    341e:	93 e0       	ldi	r25, 0x03	; 3
    3420:	0c 94 63 19 	jmp	0x32c6	; 0x32c6 <_ZN7TwoWireC1Ev>

00003424 <_ZN13ExtendedTests18endExtendedGsmTestEv>:
void ExtendedTests::endExtendedGsmTest() {
	
#if IS_EXTENDED_GSM_TEST == true

	//Clear dynamic memory
	free(_mockData);
    3424:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    3428:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    342c:	0e 94 0a 24 	call	0x4814	; 0x4814 <free>
	
	//Do verification of data test (somehow?)
	
	
	RM_LOGLN(F("~~~~~~~~~~~~~~~ Extended GSM Test Complete~~~~~~~~~~~~~~~~"));
    3430:	6a e6       	ldi	r22, 0x6A	; 106
    3432:	77 e0       	ldi	r23, 0x07	; 7
    3434:	8e e9       	ldi	r24, 0x9E	; 158
    3436:	93 e0       	ldi	r25, 0x03	; 3
    3438:	0c 94 bb 1c 	jmp	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>

0000343c <_ZN13ExtendedTests20startExtendedGsmTestEP13Adafruit_FONAP12RmMemManager>:
#else
	RM_LOGLN(F("*** FAIL EGT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}

void ExtendedTests::startExtendedGsmTest(Adafruit_FONA* fona, RmMemManager* mem) {
    343c:	cf 93       	push	r28
    343e:	df 93       	push	r29
    3440:	eb 01       	movw	r28, r22
	
#if IS_EXTENDED_GSM_TEST == true

    Serial.println(F("****"));
    3442:	65 e6       	ldi	r22, 0x65	; 101
    3444:	77 e0       	ldi	r23, 0x07	; 7
    3446:	8e e9       	ldi	r24, 0x9E	; 158
    3448:	93 e0       	ldi	r25, 0x03	; 3
    344a:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
	
	//Malloc as the data will be sent later on when gsm connection made
	_mockData = (SensorData*)malloc(sizeof(SensorData)*2);
    344e:	84 e1       	ldi	r24, 0x14	; 20
    3450:	90 e0       	ldi	r25, 0x00	; 0
    3452:	0e 94 72 23 	call	0x46e4	; 0x46e4 <malloc>
    3456:	fc 01       	movw	r30, r24
    3458:	90 93 9d 03 	sts	0x039D, r25	; 0x80039d <_mockData+0x1>
    345c:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <_mockData>


//RMonV3 types/flags test

void writeMockSD(SensorData* iSd, uint8_t i){
	iSd->battVoltage = (i+1);
    3460:	81 e0       	ldi	r24, 0x01	; 1
    3462:	90 e0       	ldi	r25, 0x00	; 0
    3464:	91 83       	std	Z+1, r25	; 0x01
    3466:	80 83       	st	Z, r24
	iSd->current = (i+1)*10;
    3468:	8a e0       	ldi	r24, 0x0A	; 10
    346a:	90 e0       	ldi	r25, 0x00	; 0
    346c:	95 83       	std	Z+5, r25	; 0x05
    346e:	84 83       	std	Z+4, r24	; 0x04
	iSd->pVVoltage = (i+1)*100;
    3470:	84 e6       	ldi	r24, 0x64	; 100
    3472:	90 e0       	ldi	r25, 0x00	; 0
    3474:	93 83       	std	Z+3, r25	; 0x03
    3476:	82 83       	std	Z+2, r24	; 0x02
	iSd->temperature = (i+1)+50;
    3478:	83 e3       	ldi	r24, 0x33	; 51
    347a:	90 e0       	ldi	r25, 0x00	; 0
    347c:	97 83       	std	Z+7, r25	; 0x07
    347e:	86 83       	std	Z+6, r24	; 0x06
	iSd->errorChar = i%5==0?3:0;
    3480:	83 e0       	ldi	r24, 0x03	; 3
    3482:	80 87       	std	Z+8, r24	; 0x08


//RMonV3 types/flags test

void writeMockSD(SensorData* iSd, uint8_t i){
	iSd->battVoltage = (i+1);
    3484:	82 e0       	ldi	r24, 0x02	; 2
    3486:	90 e0       	ldi	r25, 0x00	; 0
    3488:	93 87       	std	Z+11, r25	; 0x0b
    348a:	82 87       	std	Z+10, r24	; 0x0a
	iSd->current = (i+1)*10;
    348c:	84 e1       	ldi	r24, 0x14	; 20
    348e:	90 e0       	ldi	r25, 0x00	; 0
    3490:	97 87       	std	Z+15, r25	; 0x0f
    3492:	86 87       	std	Z+14, r24	; 0x0e
	iSd->pVVoltage = (i+1)*100;
    3494:	88 ec       	ldi	r24, 0xC8	; 200
    3496:	90 e0       	ldi	r25, 0x00	; 0
    3498:	95 87       	std	Z+13, r25	; 0x0d
    349a:	84 87       	std	Z+12, r24	; 0x0c
	iSd->temperature = (i+1)+50;
    349c:	84 e3       	ldi	r24, 0x34	; 52
    349e:	90 e0       	ldi	r25, 0x00	; 0
    34a0:	91 8b       	std	Z+17, r25	; 0x11
    34a2:	80 8b       	std	Z+16, r24	; 0x10
	iSd->errorChar = i%5==0?3:0;
    34a4:	12 8a       	std	Z+18, r1	; 0x12
	//Malloc as the data will be sent later on when gsm connection made
	_mockData = (SensorData*)malloc(sizeof(SensorData)*2);
	writeMockSD(_mockData, 0);
	writeMockSD(_mockData+1, 1);
	
	Serial.println(F("2 Sensor-Datas going for transmission:"));
    34a6:	6e e3       	ldi	r22, 0x3E	; 62
    34a8:	77 e0       	ldi	r23, 0x07	; 7
    34aa:	8e e9       	ldi	r24, 0x9E	; 158
    34ac:	93 e0       	ldi	r25, 0x03	; 3
    34ae:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN5Print7printlnEPK19__FlashStringHelper>
	Helpers::printSensorData(_mockData);
    34b2:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    34b6:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    34ba:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <_ZN7Helpers15printSensorDataEP10SensorData>
	Helpers::printSensorData(_mockData+1);
    34be:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    34c2:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    34c6:	0a 96       	adiw	r24, 0x0a	; 10
    34c8:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <_ZN7Helpers15printSensorDataEP10SensorData>
	
	mem->mockSensorData = _mockData;
    34cc:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <_mockData>
    34d0:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <_mockData+0x1>
    34d4:	99 83       	std	Y+1, r25	; 0x01
    34d6:	88 83       	st	Y, r24
	mem->numMockSensorData = 2;
    34d8:	82 e0       	ldi	r24, 0x02	; 2
    34da:	8a 83       	std	Y+2, r24	; 0x02
	
#else
	RM_LOGLN(F("*** FAIL EGT ***")); //Sync Broken - inclusion of code should be sync'd with flag
#endif
}
    34dc:	df 91       	pop	r29
    34de:	cf 91       	pop	r28
    34e0:	08 95       	ret

000034e2 <_ZN14HardwareSerial9availableEv>:
    34e2:	fc 01       	movw	r30, r24
    34e4:	91 8d       	ldd	r25, Z+25	; 0x19
    34e6:	22 8d       	ldd	r18, Z+26	; 0x1a
    34e8:	89 2f       	mov	r24, r25
    34ea:	90 e0       	ldi	r25, 0x00	; 0
    34ec:	80 5c       	subi	r24, 0xC0	; 192
    34ee:	9f 4f       	sbci	r25, 0xFF	; 255
    34f0:	82 1b       	sub	r24, r18
    34f2:	91 09       	sbc	r25, r1
    34f4:	8f 73       	andi	r24, 0x3F	; 63
    34f6:	99 27       	eor	r25, r25
    34f8:	08 95       	ret

000034fa <_ZN14HardwareSerial4peekEv>:
    34fa:	fc 01       	movw	r30, r24
    34fc:	91 8d       	ldd	r25, Z+25	; 0x19
    34fe:	82 8d       	ldd	r24, Z+26	; 0x1a
    3500:	98 17       	cp	r25, r24
    3502:	31 f0       	breq	.+12     	; 0x3510 <_ZN14HardwareSerial4peekEv+0x16>
    3504:	82 8d       	ldd	r24, Z+26	; 0x1a
    3506:	e8 0f       	add	r30, r24
    3508:	f1 1d       	adc	r31, r1
    350a:	85 8d       	ldd	r24, Z+29	; 0x1d
    350c:	90 e0       	ldi	r25, 0x00	; 0
    350e:	08 95       	ret
    3510:	8f ef       	ldi	r24, 0xFF	; 255
    3512:	9f ef       	ldi	r25, 0xFF	; 255
    3514:	08 95       	ret

00003516 <_ZN14HardwareSerial4readEv>:
    3516:	fc 01       	movw	r30, r24
    3518:	91 8d       	ldd	r25, Z+25	; 0x19
    351a:	82 8d       	ldd	r24, Z+26	; 0x1a
    351c:	98 17       	cp	r25, r24
    351e:	61 f0       	breq	.+24     	; 0x3538 <_ZN14HardwareSerial4readEv+0x22>
    3520:	82 8d       	ldd	r24, Z+26	; 0x1a
    3522:	df 01       	movw	r26, r30
    3524:	a8 0f       	add	r26, r24
    3526:	b1 1d       	adc	r27, r1
    3528:	5d 96       	adiw	r26, 0x1d	; 29
    352a:	8c 91       	ld	r24, X
    352c:	92 8d       	ldd	r25, Z+26	; 0x1a
    352e:	9f 5f       	subi	r25, 0xFF	; 255
    3530:	9f 73       	andi	r25, 0x3F	; 63
    3532:	92 8f       	std	Z+26, r25	; 0x1a
    3534:	90 e0       	ldi	r25, 0x00	; 0
    3536:	08 95       	ret
    3538:	8f ef       	ldi	r24, 0xFF	; 255
    353a:	9f ef       	ldi	r25, 0xFF	; 255
    353c:	08 95       	ret

0000353e <_Z14serialEventRunv>:
    353e:	84 ef       	ldi	r24, 0xF4	; 244
    3540:	9b e1       	ldi	r25, 0x1B	; 27
    3542:	89 2b       	or	r24, r25
    3544:	49 f0       	breq	.+18     	; 0x3558 <_Z14serialEventRunv+0x1a>
    3546:	80 e0       	ldi	r24, 0x00	; 0
    3548:	90 e0       	ldi	r25, 0x00	; 0
    354a:	89 2b       	or	r24, r25
    354c:	29 f0       	breq	.+10     	; 0x3558 <_Z14serialEventRunv+0x1a>
    354e:	0e 94 f4 1b 	call	0x37e8	; 0x37e8 <_Z17Serial0_availablev>
    3552:	81 11       	cpse	r24, r1
    3554:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    3558:	08 95       	ret

0000355a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
    355a:	fc 01       	movw	r30, r24
    355c:	84 8d       	ldd	r24, Z+28	; 0x1c
    355e:	df 01       	movw	r26, r30
    3560:	a8 0f       	add	r26, r24
    3562:	b1 1d       	adc	r27, r1
    3564:	a3 5a       	subi	r26, 0xA3	; 163
    3566:	bf 4f       	sbci	r27, 0xFF	; 255
    3568:	2c 91       	ld	r18, X
    356a:	84 8d       	ldd	r24, Z+28	; 0x1c
    356c:	90 e0       	ldi	r25, 0x00	; 0
    356e:	01 96       	adiw	r24, 0x01	; 1
    3570:	8f 73       	andi	r24, 0x3F	; 63
    3572:	99 27       	eor	r25, r25
    3574:	84 8f       	std	Z+28, r24	; 0x1c
    3576:	a6 89       	ldd	r26, Z+22	; 0x16
    3578:	b7 89       	ldd	r27, Z+23	; 0x17
    357a:	2c 93       	st	X, r18
    357c:	a0 89       	ldd	r26, Z+16	; 0x10
    357e:	b1 89       	ldd	r27, Z+17	; 0x11
    3580:	8c 91       	ld	r24, X
    3582:	80 64       	ori	r24, 0x40	; 64
    3584:	8c 93       	st	X, r24
    3586:	93 8d       	ldd	r25, Z+27	; 0x1b
    3588:	84 8d       	ldd	r24, Z+28	; 0x1c
    358a:	98 13       	cpse	r25, r24
    358c:	06 c0       	rjmp	.+12     	; 0x359a <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    358e:	02 88       	ldd	r0, Z+18	; 0x12
    3590:	f3 89       	ldd	r31, Z+19	; 0x13
    3592:	e0 2d       	mov	r30, r0
    3594:	80 81       	ld	r24, Z
    3596:	8f 7d       	andi	r24, 0xDF	; 223
    3598:	80 83       	st	Z, r24
    359a:	08 95       	ret

0000359c <_ZN14HardwareSerial5writeEh>:
    359c:	ef 92       	push	r14
    359e:	ff 92       	push	r15
    35a0:	0f 93       	push	r16
    35a2:	1f 93       	push	r17
    35a4:	cf 93       	push	r28
    35a6:	df 93       	push	r29
    35a8:	ec 01       	movw	r28, r24
    35aa:	81 e0       	ldi	r24, 0x01	; 1
    35ac:	88 8f       	std	Y+24, r24	; 0x18
    35ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
    35b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    35b2:	98 13       	cpse	r25, r24
    35b4:	05 c0       	rjmp	.+10     	; 0x35c0 <_ZN14HardwareSerial5writeEh+0x24>
    35b6:	e8 89       	ldd	r30, Y+16	; 0x10
    35b8:	f9 89       	ldd	r31, Y+17	; 0x11
    35ba:	80 81       	ld	r24, Z
    35bc:	85 fd       	sbrc	r24, 5
    35be:	24 c0       	rjmp	.+72     	; 0x3608 <_ZN14HardwareSerial5writeEh+0x6c>
    35c0:	f6 2e       	mov	r15, r22
    35c2:	0b 8d       	ldd	r16, Y+27	; 0x1b
    35c4:	10 e0       	ldi	r17, 0x00	; 0
    35c6:	0f 5f       	subi	r16, 0xFF	; 255
    35c8:	1f 4f       	sbci	r17, 0xFF	; 255
    35ca:	0f 73       	andi	r16, 0x3F	; 63
    35cc:	11 27       	eor	r17, r17
    35ce:	e0 2e       	mov	r14, r16
    35d0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    35d2:	e8 12       	cpse	r14, r24
    35d4:	0c c0       	rjmp	.+24     	; 0x35ee <_ZN14HardwareSerial5writeEh+0x52>
    35d6:	0f b6       	in	r0, 0x3f	; 63
    35d8:	07 fc       	sbrc	r0, 7
    35da:	fa cf       	rjmp	.-12     	; 0x35d0 <_ZN14HardwareSerial5writeEh+0x34>
    35dc:	e8 89       	ldd	r30, Y+16	; 0x10
    35de:	f9 89       	ldd	r31, Y+17	; 0x11
    35e0:	80 81       	ld	r24, Z
    35e2:	85 ff       	sbrs	r24, 5
    35e4:	f5 cf       	rjmp	.-22     	; 0x35d0 <_ZN14HardwareSerial5writeEh+0x34>
    35e6:	ce 01       	movw	r24, r28
    35e8:	0e 94 ad 1a 	call	0x355a	; 0x355a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    35ec:	f1 cf       	rjmp	.-30     	; 0x35d0 <_ZN14HardwareSerial5writeEh+0x34>
    35ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35f0:	fe 01       	movw	r30, r28
    35f2:	e8 0f       	add	r30, r24
    35f4:	f1 1d       	adc	r31, r1
    35f6:	e3 5a       	subi	r30, 0xA3	; 163
    35f8:	ff 4f       	sbci	r31, 0xFF	; 255
    35fa:	f0 82       	st	Z, r15
    35fc:	0b 8f       	std	Y+27, r16	; 0x1b
    35fe:	ea 89       	ldd	r30, Y+18	; 0x12
    3600:	fb 89       	ldd	r31, Y+19	; 0x13
    3602:	80 81       	ld	r24, Z
    3604:	80 62       	ori	r24, 0x20	; 32
    3606:	07 c0       	rjmp	.+14     	; 0x3616 <_ZN14HardwareSerial5writeEh+0x7a>
    3608:	ee 89       	ldd	r30, Y+22	; 0x16
    360a:	ff 89       	ldd	r31, Y+23	; 0x17
    360c:	60 83       	st	Z, r22
    360e:	e8 89       	ldd	r30, Y+16	; 0x10
    3610:	f9 89       	ldd	r31, Y+17	; 0x11
    3612:	80 81       	ld	r24, Z
    3614:	80 64       	ori	r24, 0x40	; 64
    3616:	80 83       	st	Z, r24
    3618:	81 e0       	ldi	r24, 0x01	; 1
    361a:	90 e0       	ldi	r25, 0x00	; 0
    361c:	df 91       	pop	r29
    361e:	cf 91       	pop	r28
    3620:	1f 91       	pop	r17
    3622:	0f 91       	pop	r16
    3624:	ff 90       	pop	r15
    3626:	ef 90       	pop	r14
    3628:	08 95       	ret

0000362a <_ZN14HardwareSerial5flushEv>:
    362a:	cf 93       	push	r28
    362c:	df 93       	push	r29
    362e:	ec 01       	movw	r28, r24
    3630:	88 8d       	ldd	r24, Y+24	; 0x18
    3632:	88 23       	and	r24, r24
    3634:	c9 f0       	breq	.+50     	; 0x3668 <_ZN14HardwareSerial5flushEv+0x3e>
    3636:	ea 89       	ldd	r30, Y+18	; 0x12
    3638:	fb 89       	ldd	r31, Y+19	; 0x13
    363a:	80 81       	ld	r24, Z
    363c:	85 fd       	sbrc	r24, 5
    363e:	05 c0       	rjmp	.+10     	; 0x364a <_ZN14HardwareSerial5flushEv+0x20>
    3640:	a8 89       	ldd	r26, Y+16	; 0x10
    3642:	b9 89       	ldd	r27, Y+17	; 0x11
    3644:	8c 91       	ld	r24, X
    3646:	86 fd       	sbrc	r24, 6
    3648:	0f c0       	rjmp	.+30     	; 0x3668 <_ZN14HardwareSerial5flushEv+0x3e>
    364a:	0f b6       	in	r0, 0x3f	; 63
    364c:	07 fc       	sbrc	r0, 7
    364e:	f5 cf       	rjmp	.-22     	; 0x363a <_ZN14HardwareSerial5flushEv+0x10>
    3650:	80 81       	ld	r24, Z
    3652:	85 ff       	sbrs	r24, 5
    3654:	f2 cf       	rjmp	.-28     	; 0x363a <_ZN14HardwareSerial5flushEv+0x10>
    3656:	a8 89       	ldd	r26, Y+16	; 0x10
    3658:	b9 89       	ldd	r27, Y+17	; 0x11
    365a:	8c 91       	ld	r24, X
    365c:	85 ff       	sbrs	r24, 5
    365e:	ed cf       	rjmp	.-38     	; 0x363a <_ZN14HardwareSerial5flushEv+0x10>
    3660:	ce 01       	movw	r24, r28
    3662:	0e 94 ad 1a 	call	0x355a	; 0x355a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3666:	e7 cf       	rjmp	.-50     	; 0x3636 <_ZN14HardwareSerial5flushEv+0xc>
    3668:	df 91       	pop	r29
    366a:	cf 91       	pop	r28
    366c:	08 95       	ret

0000366e <_ZN14HardwareSerial5beginEmh>:
    366e:	cf 92       	push	r12
    3670:	df 92       	push	r13
    3672:	ef 92       	push	r14
    3674:	ff 92       	push	r15
    3676:	1f 93       	push	r17
    3678:	cf 93       	push	r28
    367a:	df 93       	push	r29
    367c:	ec 01       	movw	r28, r24
    367e:	6a 01       	movw	r12, r20
    3680:	7b 01       	movw	r14, r22
    3682:	12 2f       	mov	r17, r18
    3684:	e8 89       	ldd	r30, Y+16	; 0x10
    3686:	f9 89       	ldd	r31, Y+17	; 0x11
    3688:	82 e0       	ldi	r24, 0x02	; 2
    368a:	80 83       	st	Z, r24
    368c:	41 15       	cp	r20, r1
    368e:	51 4e       	sbci	r21, 0xE1	; 225
    3690:	61 05       	cpc	r22, r1
    3692:	71 05       	cpc	r23, r1
    3694:	b1 f0       	breq	.+44     	; 0x36c2 <_ZN14HardwareSerial5beginEmh+0x54>
    3696:	60 e0       	ldi	r22, 0x00	; 0
    3698:	79 e0       	ldi	r23, 0x09	; 9
    369a:	8d e3       	ldi	r24, 0x3D	; 61
    369c:	90 e0       	ldi	r25, 0x00	; 0
    369e:	a7 01       	movw	r20, r14
    36a0:	96 01       	movw	r18, r12
    36a2:	0e 94 2b 23 	call	0x4656	; 0x4656 <__udivmodsi4>
    36a6:	da 01       	movw	r26, r20
    36a8:	c9 01       	movw	r24, r18
    36aa:	01 97       	sbiw	r24, 0x01	; 1
    36ac:	a1 09       	sbc	r26, r1
    36ae:	b1 09       	sbc	r27, r1
    36b0:	b6 95       	lsr	r27
    36b2:	a7 95       	ror	r26
    36b4:	97 95       	ror	r25
    36b6:	87 95       	ror	r24
    36b8:	9c 01       	movw	r18, r24
    36ba:	21 15       	cp	r18, r1
    36bc:	80 e1       	ldi	r24, 0x10	; 16
    36be:	38 07       	cpc	r19, r24
    36c0:	a8 f0       	brcs	.+42     	; 0x36ec <_ZN14HardwareSerial5beginEmh+0x7e>
    36c2:	e8 89       	ldd	r30, Y+16	; 0x10
    36c4:	f9 89       	ldd	r31, Y+17	; 0x11
    36c6:	10 82       	st	Z, r1
    36c8:	60 e8       	ldi	r22, 0x80	; 128
    36ca:	74 e8       	ldi	r23, 0x84	; 132
    36cc:	8e e1       	ldi	r24, 0x1E	; 30
    36ce:	90 e0       	ldi	r25, 0x00	; 0
    36d0:	a7 01       	movw	r20, r14
    36d2:	96 01       	movw	r18, r12
    36d4:	0e 94 2b 23 	call	0x4656	; 0x4656 <__udivmodsi4>
    36d8:	da 01       	movw	r26, r20
    36da:	c9 01       	movw	r24, r18
    36dc:	01 97       	sbiw	r24, 0x01	; 1
    36de:	a1 09       	sbc	r26, r1
    36e0:	b1 09       	sbc	r27, r1
    36e2:	b6 95       	lsr	r27
    36e4:	a7 95       	ror	r26
    36e6:	97 95       	ror	r25
    36e8:	87 95       	ror	r24
    36ea:	9c 01       	movw	r18, r24
    36ec:	ec 85       	ldd	r30, Y+12	; 0x0c
    36ee:	fd 85       	ldd	r31, Y+13	; 0x0d
    36f0:	30 83       	st	Z, r19
    36f2:	ee 85       	ldd	r30, Y+14	; 0x0e
    36f4:	ff 85       	ldd	r31, Y+15	; 0x0f
    36f6:	20 83       	st	Z, r18
    36f8:	18 8e       	std	Y+24, r1	; 0x18
    36fa:	ec 89       	ldd	r30, Y+20	; 0x14
    36fc:	fd 89       	ldd	r31, Y+21	; 0x15
    36fe:	10 83       	st	Z, r17
    3700:	ea 89       	ldd	r30, Y+18	; 0x12
    3702:	fb 89       	ldd	r31, Y+19	; 0x13
    3704:	80 81       	ld	r24, Z
    3706:	80 61       	ori	r24, 0x10	; 16
    3708:	80 83       	st	Z, r24
    370a:	ea 89       	ldd	r30, Y+18	; 0x12
    370c:	fb 89       	ldd	r31, Y+19	; 0x13
    370e:	80 81       	ld	r24, Z
    3710:	88 60       	ori	r24, 0x08	; 8
    3712:	80 83       	st	Z, r24
    3714:	ea 89       	ldd	r30, Y+18	; 0x12
    3716:	fb 89       	ldd	r31, Y+19	; 0x13
    3718:	80 81       	ld	r24, Z
    371a:	80 68       	ori	r24, 0x80	; 128
    371c:	80 83       	st	Z, r24
    371e:	ea 89       	ldd	r30, Y+18	; 0x12
    3720:	fb 89       	ldd	r31, Y+19	; 0x13
    3722:	80 81       	ld	r24, Z
    3724:	8f 7d       	andi	r24, 0xDF	; 223
    3726:	80 83       	st	Z, r24
    3728:	df 91       	pop	r29
    372a:	cf 91       	pop	r28
    372c:	1f 91       	pop	r17
    372e:	ff 90       	pop	r15
    3730:	ef 90       	pop	r14
    3732:	df 90       	pop	r13
    3734:	cf 90       	pop	r12
    3736:	08 95       	ret

00003738 <__vector_18>:
    3738:	1f 92       	push	r1
    373a:	0f 92       	push	r0
    373c:	0f b6       	in	r0, 0x3f	; 63
    373e:	0f 92       	push	r0
    3740:	11 24       	eor	r1, r1
    3742:	2f 93       	push	r18
    3744:	8f 93       	push	r24
    3746:	9f 93       	push	r25
    3748:	ef 93       	push	r30
    374a:	ff 93       	push	r31
    374c:	e0 91 ae 03 	lds	r30, 0x03AE	; 0x8003ae <Serial+0x10>
    3750:	f0 91 af 03 	lds	r31, 0x03AF	; 0x8003af <Serial+0x11>
    3754:	80 81       	ld	r24, Z
    3756:	e0 91 b4 03 	lds	r30, 0x03B4	; 0x8003b4 <Serial+0x16>
    375a:	f0 91 b5 03 	lds	r31, 0x03B5	; 0x8003b5 <Serial+0x17>
    375e:	82 fd       	sbrc	r24, 2
    3760:	12 c0       	rjmp	.+36     	; 0x3786 <__vector_18+0x4e>
    3762:	90 81       	ld	r25, Z
    3764:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <Serial+0x19>
    3768:	8f 5f       	subi	r24, 0xFF	; 255
    376a:	8f 73       	andi	r24, 0x3F	; 63
    376c:	20 91 b8 03 	lds	r18, 0x03B8	; 0x8003b8 <Serial+0x1a>
    3770:	82 17       	cp	r24, r18
    3772:	51 f0       	breq	.+20     	; 0x3788 <__vector_18+0x50>
    3774:	e0 91 b7 03 	lds	r30, 0x03B7	; 0x8003b7 <Serial+0x19>
    3778:	f0 e0       	ldi	r31, 0x00	; 0
    377a:	e2 56       	subi	r30, 0x62	; 98
    377c:	fc 4f       	sbci	r31, 0xFC	; 252
    377e:	95 8f       	std	Z+29, r25	; 0x1d
    3780:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <Serial+0x19>
    3784:	01 c0       	rjmp	.+2      	; 0x3788 <__vector_18+0x50>
    3786:	80 81       	ld	r24, Z
    3788:	ff 91       	pop	r31
    378a:	ef 91       	pop	r30
    378c:	9f 91       	pop	r25
    378e:	8f 91       	pop	r24
    3790:	2f 91       	pop	r18
    3792:	0f 90       	pop	r0
    3794:	0f be       	out	0x3f, r0	; 63
    3796:	0f 90       	pop	r0
    3798:	1f 90       	pop	r1
    379a:	18 95       	reti

0000379c <__vector_19>:
    379c:	1f 92       	push	r1
    379e:	0f 92       	push	r0
    37a0:	0f b6       	in	r0, 0x3f	; 63
    37a2:	0f 92       	push	r0
    37a4:	11 24       	eor	r1, r1
    37a6:	2f 93       	push	r18
    37a8:	3f 93       	push	r19
    37aa:	4f 93       	push	r20
    37ac:	5f 93       	push	r21
    37ae:	6f 93       	push	r22
    37b0:	7f 93       	push	r23
    37b2:	8f 93       	push	r24
    37b4:	9f 93       	push	r25
    37b6:	af 93       	push	r26
    37b8:	bf 93       	push	r27
    37ba:	ef 93       	push	r30
    37bc:	ff 93       	push	r31
    37be:	8e e9       	ldi	r24, 0x9E	; 158
    37c0:	93 e0       	ldi	r25, 0x03	; 3
    37c2:	0e 94 ad 1a 	call	0x355a	; 0x355a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    37c6:	ff 91       	pop	r31
    37c8:	ef 91       	pop	r30
    37ca:	bf 91       	pop	r27
    37cc:	af 91       	pop	r26
    37ce:	9f 91       	pop	r25
    37d0:	8f 91       	pop	r24
    37d2:	7f 91       	pop	r23
    37d4:	6f 91       	pop	r22
    37d6:	5f 91       	pop	r21
    37d8:	4f 91       	pop	r20
    37da:	3f 91       	pop	r19
    37dc:	2f 91       	pop	r18
    37de:	0f 90       	pop	r0
    37e0:	0f be       	out	0x3f, r0	; 63
    37e2:	0f 90       	pop	r0
    37e4:	1f 90       	pop	r1
    37e6:	18 95       	reti

000037e8 <_Z17Serial0_availablev>:
    37e8:	8e e9       	ldi	r24, 0x9E	; 158
    37ea:	93 e0       	ldi	r25, 0x03	; 3
    37ec:	0e 94 71 1a 	call	0x34e2	; 0x34e2 <_ZN14HardwareSerial9availableEv>
    37f0:	21 e0       	ldi	r18, 0x01	; 1
    37f2:	89 2b       	or	r24, r25
    37f4:	09 f4       	brne	.+2      	; 0x37f8 <_Z17Serial0_availablev+0x10>
    37f6:	20 e0       	ldi	r18, 0x00	; 0
    37f8:	82 2f       	mov	r24, r18
    37fa:	08 95       	ret

000037fc <_GLOBAL__sub_I___vector_18>:
    37fc:	ee e9       	ldi	r30, 0x9E	; 158
    37fe:	f3 e0       	ldi	r31, 0x03	; 3
    3800:	13 82       	std	Z+3, r1	; 0x03
    3802:	12 82       	std	Z+2, r1	; 0x02
    3804:	88 ee       	ldi	r24, 0xE8	; 232
    3806:	93 e0       	ldi	r25, 0x03	; 3
    3808:	a0 e0       	ldi	r26, 0x00	; 0
    380a:	b0 e0       	ldi	r27, 0x00	; 0
    380c:	84 83       	std	Z+4, r24	; 0x04
    380e:	95 83       	std	Z+5, r25	; 0x05
    3810:	a6 83       	std	Z+6, r26	; 0x06
    3812:	b7 83       	std	Z+7, r27	; 0x07
    3814:	8e e6       	ldi	r24, 0x6E	; 110
    3816:	91 e0       	ldi	r25, 0x01	; 1
    3818:	91 83       	std	Z+1, r25	; 0x01
    381a:	80 83       	st	Z, r24
    381c:	85 ec       	ldi	r24, 0xC5	; 197
    381e:	90 e0       	ldi	r25, 0x00	; 0
    3820:	95 87       	std	Z+13, r25	; 0x0d
    3822:	84 87       	std	Z+12, r24	; 0x0c
    3824:	84 ec       	ldi	r24, 0xC4	; 196
    3826:	90 e0       	ldi	r25, 0x00	; 0
    3828:	97 87       	std	Z+15, r25	; 0x0f
    382a:	86 87       	std	Z+14, r24	; 0x0e
    382c:	80 ec       	ldi	r24, 0xC0	; 192
    382e:	90 e0       	ldi	r25, 0x00	; 0
    3830:	91 8b       	std	Z+17, r25	; 0x11
    3832:	80 8b       	std	Z+16, r24	; 0x10
    3834:	81 ec       	ldi	r24, 0xC1	; 193
    3836:	90 e0       	ldi	r25, 0x00	; 0
    3838:	93 8b       	std	Z+19, r25	; 0x13
    383a:	82 8b       	std	Z+18, r24	; 0x12
    383c:	82 ec       	ldi	r24, 0xC2	; 194
    383e:	90 e0       	ldi	r25, 0x00	; 0
    3840:	95 8b       	std	Z+21, r25	; 0x15
    3842:	84 8b       	std	Z+20, r24	; 0x14
    3844:	86 ec       	ldi	r24, 0xC6	; 198
    3846:	90 e0       	ldi	r25, 0x00	; 0
    3848:	97 8b       	std	Z+23, r25	; 0x17
    384a:	86 8b       	std	Z+22, r24	; 0x16
    384c:	11 8e       	std	Z+25, r1	; 0x19
    384e:	12 8e       	std	Z+26, r1	; 0x1a
    3850:	13 8e       	std	Z+27, r1	; 0x1b
    3852:	14 8e       	std	Z+28, r1	; 0x1c
    3854:	08 95       	ret

00003856 <initVariant>:
    3856:	08 95       	ret

00003858 <main>:
    3858:	0e 94 a8 1e 	call	0x3d50	; 0x3d50 <init>
    385c:	0e 94 2b 1c 	call	0x3856	; 0x3856 <initVariant>
    3860:	0e 94 df 10 	call	0x21be	; 0x21be <setup>
    3864:	cf e9       	ldi	r28, 0x9F	; 159
    3866:	da e1       	ldi	r29, 0x1A	; 26
    3868:	0e 94 2c 14 	call	0x2858	; 0x2858 <loop>
    386c:	20 97       	sbiw	r28, 0x00	; 0
    386e:	e1 f3       	breq	.-8      	; 0x3868 <main+0x10>
    3870:	0e 94 9f 1a 	call	0x353e	; 0x353e <_Z14serialEventRunv>
    3874:	f9 cf       	rjmp	.-14     	; 0x3868 <main+0x10>

00003876 <_Znwj>:
    3876:	0c 94 72 23 	jmp	0x46e4	; 0x46e4 <malloc>

0000387a <_ZN5Print5writeEPKhj>:
    387a:	cf 92       	push	r12
    387c:	df 92       	push	r13
    387e:	ef 92       	push	r14
    3880:	ff 92       	push	r15
    3882:	0f 93       	push	r16
    3884:	1f 93       	push	r17
    3886:	cf 93       	push	r28
    3888:	df 93       	push	r29
    388a:	6c 01       	movw	r12, r24
    388c:	7a 01       	movw	r14, r20
    388e:	8b 01       	movw	r16, r22
    3890:	c0 e0       	ldi	r28, 0x00	; 0
    3892:	d0 e0       	ldi	r29, 0x00	; 0
    3894:	ce 15       	cp	r28, r14
    3896:	df 05       	cpc	r29, r15
    3898:	81 f0       	breq	.+32     	; 0x38ba <_ZN5Print5writeEPKhj+0x40>
    389a:	d8 01       	movw	r26, r16
    389c:	6d 91       	ld	r22, X+
    389e:	8d 01       	movw	r16, r26
    38a0:	d6 01       	movw	r26, r12
    38a2:	ed 91       	ld	r30, X+
    38a4:	fc 91       	ld	r31, X
    38a6:	01 90       	ld	r0, Z+
    38a8:	f0 81       	ld	r31, Z
    38aa:	e0 2d       	mov	r30, r0
    38ac:	c6 01       	movw	r24, r12
    38ae:	09 95       	icall
    38b0:	89 2b       	or	r24, r25
    38b2:	11 f0       	breq	.+4      	; 0x38b8 <_ZN5Print5writeEPKhj+0x3e>
    38b4:	21 96       	adiw	r28, 0x01	; 1
    38b6:	ee cf       	rjmp	.-36     	; 0x3894 <_ZN5Print5writeEPKhj+0x1a>
    38b8:	7e 01       	movw	r14, r28
    38ba:	c7 01       	movw	r24, r14
    38bc:	df 91       	pop	r29
    38be:	cf 91       	pop	r28
    38c0:	1f 91       	pop	r17
    38c2:	0f 91       	pop	r16
    38c4:	ff 90       	pop	r15
    38c6:	ef 90       	pop	r14
    38c8:	df 90       	pop	r13
    38ca:	cf 90       	pop	r12
    38cc:	08 95       	ret

000038ce <_ZN5Print5writeEPKc>:
    38ce:	61 15       	cp	r22, r1
    38d0:	71 05       	cpc	r23, r1
    38d2:	79 f0       	breq	.+30     	; 0x38f2 <_ZN5Print5writeEPKc+0x24>
    38d4:	fb 01       	movw	r30, r22
    38d6:	01 90       	ld	r0, Z+
    38d8:	00 20       	and	r0, r0
    38da:	e9 f7       	brne	.-6      	; 0x38d6 <_ZN5Print5writeEPKc+0x8>
    38dc:	31 97       	sbiw	r30, 0x01	; 1
    38de:	af 01       	movw	r20, r30
    38e0:	46 1b       	sub	r20, r22
    38e2:	57 0b       	sbc	r21, r23
    38e4:	dc 01       	movw	r26, r24
    38e6:	ed 91       	ld	r30, X+
    38e8:	fc 91       	ld	r31, X
    38ea:	02 80       	ldd	r0, Z+2	; 0x02
    38ec:	f3 81       	ldd	r31, Z+3	; 0x03
    38ee:	e0 2d       	mov	r30, r0
    38f0:	09 94       	ijmp
    38f2:	80 e0       	ldi	r24, 0x00	; 0
    38f4:	90 e0       	ldi	r25, 0x00	; 0
    38f6:	08 95       	ret

000038f8 <_ZN5Print5printEPK19__FlashStringHelper>:
    38f8:	ef 92       	push	r14
    38fa:	ff 92       	push	r15
    38fc:	0f 93       	push	r16
    38fe:	1f 93       	push	r17
    3900:	cf 93       	push	r28
    3902:	df 93       	push	r29
    3904:	8c 01       	movw	r16, r24
    3906:	7b 01       	movw	r14, r22
    3908:	c0 e0       	ldi	r28, 0x00	; 0
    390a:	d0 e0       	ldi	r29, 0x00	; 0
    390c:	f7 01       	movw	r30, r14
    390e:	ec 0f       	add	r30, r28
    3910:	fd 1f       	adc	r31, r29
    3912:	64 91       	lpm	r22, Z
    3914:	66 23       	and	r22, r22
    3916:	61 f0       	breq	.+24     	; 0x3930 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    3918:	d8 01       	movw	r26, r16
    391a:	ed 91       	ld	r30, X+
    391c:	fc 91       	ld	r31, X
    391e:	01 90       	ld	r0, Z+
    3920:	f0 81       	ld	r31, Z
    3922:	e0 2d       	mov	r30, r0
    3924:	c8 01       	movw	r24, r16
    3926:	09 95       	icall
    3928:	89 2b       	or	r24, r25
    392a:	11 f0       	breq	.+4      	; 0x3930 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    392c:	21 96       	adiw	r28, 0x01	; 1
    392e:	ee cf       	rjmp	.-36     	; 0x390c <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    3930:	ce 01       	movw	r24, r28
    3932:	df 91       	pop	r29
    3934:	cf 91       	pop	r28
    3936:	1f 91       	pop	r17
    3938:	0f 91       	pop	r16
    393a:	ff 90       	pop	r15
    393c:	ef 90       	pop	r14
    393e:	08 95       	ret

00003940 <_ZN5Print5printERK6String>:
    3940:	db 01       	movw	r26, r22
    3942:	14 96       	adiw	r26, 0x04	; 4
    3944:	4d 91       	ld	r20, X+
    3946:	5c 91       	ld	r21, X
    3948:	15 97       	sbiw	r26, 0x05	; 5
    394a:	6d 91       	ld	r22, X+
    394c:	7c 91       	ld	r23, X
    394e:	dc 01       	movw	r26, r24
    3950:	ed 91       	ld	r30, X+
    3952:	fc 91       	ld	r31, X
    3954:	02 80       	ldd	r0, Z+2	; 0x02
    3956:	f3 81       	ldd	r31, Z+3	; 0x03
    3958:	e0 2d       	mov	r30, r0
    395a:	09 94       	ijmp

0000395c <_ZN5Print5printEPKc>:
    395c:	0c 94 67 1c 	jmp	0x38ce	; 0x38ce <_ZN5Print5writeEPKc>

00003960 <_ZN5Print5printEc>:
    3960:	dc 01       	movw	r26, r24
    3962:	ed 91       	ld	r30, X+
    3964:	fc 91       	ld	r31, X
    3966:	01 90       	ld	r0, Z+
    3968:	f0 81       	ld	r31, Z
    396a:	e0 2d       	mov	r30, r0
    396c:	09 94       	ijmp

0000396e <_ZN5Print7printlnEv>:
    396e:	6a e7       	ldi	r22, 0x7A	; 122
    3970:	71 e0       	ldi	r23, 0x01	; 1
    3972:	0c 94 67 1c 	jmp	0x38ce	; 0x38ce <_ZN5Print5writeEPKc>

00003976 <_ZN5Print7printlnEPK19__FlashStringHelper>:
    3976:	0f 93       	push	r16
    3978:	1f 93       	push	r17
    397a:	cf 93       	push	r28
    397c:	df 93       	push	r29
    397e:	ec 01       	movw	r28, r24
    3980:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_ZN5Print5printEPK19__FlashStringHelper>
    3984:	8c 01       	movw	r16, r24
    3986:	ce 01       	movw	r24, r28
    3988:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    398c:	80 0f       	add	r24, r16
    398e:	91 1f       	adc	r25, r17
    3990:	df 91       	pop	r29
    3992:	cf 91       	pop	r28
    3994:	1f 91       	pop	r17
    3996:	0f 91       	pop	r16
    3998:	08 95       	ret

0000399a <_ZN5Print7printlnEPKc>:
    399a:	0f 93       	push	r16
    399c:	1f 93       	push	r17
    399e:	cf 93       	push	r28
    39a0:	df 93       	push	r29
    39a2:	ec 01       	movw	r28, r24
    39a4:	0e 94 67 1c 	call	0x38ce	; 0x38ce <_ZN5Print5writeEPKc>
    39a8:	8c 01       	movw	r16, r24
    39aa:	ce 01       	movw	r24, r28
    39ac:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    39b0:	80 0f       	add	r24, r16
    39b2:	91 1f       	adc	r25, r17
    39b4:	df 91       	pop	r29
    39b6:	cf 91       	pop	r28
    39b8:	1f 91       	pop	r17
    39ba:	0f 91       	pop	r16
    39bc:	08 95       	ret

000039be <_ZN5Print7printlnEc>:
    39be:	0f 93       	push	r16
    39c0:	1f 93       	push	r17
    39c2:	cf 93       	push	r28
    39c4:	df 93       	push	r29
    39c6:	ec 01       	movw	r28, r24
    39c8:	0e 94 b0 1c 	call	0x3960	; 0x3960 <_ZN5Print5printEc>
    39cc:	8c 01       	movw	r16, r24
    39ce:	ce 01       	movw	r24, r28
    39d0:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    39d4:	80 0f       	add	r24, r16
    39d6:	91 1f       	adc	r25, r17
    39d8:	df 91       	pop	r29
    39da:	cf 91       	pop	r28
    39dc:	1f 91       	pop	r17
    39de:	0f 91       	pop	r16
    39e0:	08 95       	ret

000039e2 <_ZN5Print11printNumberEmh>:
    39e2:	8f 92       	push	r8
    39e4:	9f 92       	push	r9
    39e6:	af 92       	push	r10
    39e8:	bf 92       	push	r11
    39ea:	ef 92       	push	r14
    39ec:	ff 92       	push	r15
    39ee:	0f 93       	push	r16
    39f0:	1f 93       	push	r17
    39f2:	cf 93       	push	r28
    39f4:	df 93       	push	r29
    39f6:	cd b7       	in	r28, 0x3d	; 61
    39f8:	de b7       	in	r29, 0x3e	; 62
    39fa:	a1 97       	sbiw	r28, 0x21	; 33
    39fc:	0f b6       	in	r0, 0x3f	; 63
    39fe:	f8 94       	cli
    3a00:	de bf       	out	0x3e, r29	; 62
    3a02:	0f be       	out	0x3f, r0	; 63
    3a04:	cd bf       	out	0x3d, r28	; 61
    3a06:	7c 01       	movw	r14, r24
    3a08:	fa 01       	movw	r30, r20
    3a0a:	cb 01       	movw	r24, r22
    3a0c:	19 a2       	std	Y+33, r1	; 0x21
    3a0e:	22 30       	cpi	r18, 0x02	; 2
    3a10:	08 f4       	brcc	.+2      	; 0x3a14 <_ZN5Print11printNumberEmh+0x32>
    3a12:	2a e0       	ldi	r18, 0x0A	; 10
    3a14:	8e 01       	movw	r16, r28
    3a16:	0f 5d       	subi	r16, 0xDF	; 223
    3a18:	1f 4f       	sbci	r17, 0xFF	; 255
    3a1a:	82 2e       	mov	r8, r18
    3a1c:	91 2c       	mov	r9, r1
    3a1e:	a1 2c       	mov	r10, r1
    3a20:	b1 2c       	mov	r11, r1
    3a22:	bf 01       	movw	r22, r30
    3a24:	a5 01       	movw	r20, r10
    3a26:	94 01       	movw	r18, r8
    3a28:	0e 94 2b 23 	call	0x4656	; 0x4656 <__udivmodsi4>
    3a2c:	f9 01       	movw	r30, r18
    3a2e:	ca 01       	movw	r24, r20
    3a30:	01 50       	subi	r16, 0x01	; 1
    3a32:	11 09       	sbc	r17, r1
    3a34:	6a 30       	cpi	r22, 0x0A	; 10
    3a36:	10 f4       	brcc	.+4      	; 0x3a3c <_ZN5Print11printNumberEmh+0x5a>
    3a38:	60 5d       	subi	r22, 0xD0	; 208
    3a3a:	01 c0       	rjmp	.+2      	; 0x3a3e <_ZN5Print11printNumberEmh+0x5c>
    3a3c:	69 5c       	subi	r22, 0xC9	; 201
    3a3e:	d8 01       	movw	r26, r16
    3a40:	6c 93       	st	X, r22
    3a42:	23 2b       	or	r18, r19
    3a44:	24 2b       	or	r18, r20
    3a46:	25 2b       	or	r18, r21
    3a48:	61 f7       	brne	.-40     	; 0x3a22 <_ZN5Print11printNumberEmh+0x40>
    3a4a:	b8 01       	movw	r22, r16
    3a4c:	c7 01       	movw	r24, r14
    3a4e:	0e 94 67 1c 	call	0x38ce	; 0x38ce <_ZN5Print5writeEPKc>
    3a52:	a1 96       	adiw	r28, 0x21	; 33
    3a54:	0f b6       	in	r0, 0x3f	; 63
    3a56:	f8 94       	cli
    3a58:	de bf       	out	0x3e, r29	; 62
    3a5a:	0f be       	out	0x3f, r0	; 63
    3a5c:	cd bf       	out	0x3d, r28	; 61
    3a5e:	df 91       	pop	r29
    3a60:	cf 91       	pop	r28
    3a62:	1f 91       	pop	r17
    3a64:	0f 91       	pop	r16
    3a66:	ff 90       	pop	r15
    3a68:	ef 90       	pop	r14
    3a6a:	bf 90       	pop	r11
    3a6c:	af 90       	pop	r10
    3a6e:	9f 90       	pop	r9
    3a70:	8f 90       	pop	r8
    3a72:	08 95       	ret

00003a74 <_ZN5Print5printEmi>:
    3a74:	21 15       	cp	r18, r1
    3a76:	31 05       	cpc	r19, r1
    3a78:	41 f4       	brne	.+16     	; 0x3a8a <_ZN5Print5printEmi+0x16>
    3a7a:	dc 01       	movw	r26, r24
    3a7c:	ed 91       	ld	r30, X+
    3a7e:	fc 91       	ld	r31, X
    3a80:	01 90       	ld	r0, Z+
    3a82:	f0 81       	ld	r31, Z
    3a84:	e0 2d       	mov	r30, r0
    3a86:	64 2f       	mov	r22, r20
    3a88:	09 94       	ijmp
    3a8a:	0c 94 f1 1c 	jmp	0x39e2	; 0x39e2 <_ZN5Print11printNumberEmh>

00003a8e <_ZN5Print5printEhi>:
    3a8e:	9a 01       	movw	r18, r20
    3a90:	46 2f       	mov	r20, r22
    3a92:	50 e0       	ldi	r21, 0x00	; 0
    3a94:	60 e0       	ldi	r22, 0x00	; 0
    3a96:	70 e0       	ldi	r23, 0x00	; 0
    3a98:	0c 94 3a 1d 	jmp	0x3a74	; 0x3a74 <_ZN5Print5printEmi>

00003a9c <_ZN5Print7printlnEhi>:
    3a9c:	0f 93       	push	r16
    3a9e:	1f 93       	push	r17
    3aa0:	cf 93       	push	r28
    3aa2:	df 93       	push	r29
    3aa4:	ec 01       	movw	r28, r24
    3aa6:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <_ZN5Print5printEhi>
    3aaa:	8c 01       	movw	r16, r24
    3aac:	ce 01       	movw	r24, r28
    3aae:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    3ab2:	80 0f       	add	r24, r16
    3ab4:	91 1f       	adc	r25, r17
    3ab6:	df 91       	pop	r29
    3ab8:	cf 91       	pop	r28
    3aba:	1f 91       	pop	r17
    3abc:	0f 91       	pop	r16
    3abe:	08 95       	ret

00003ac0 <_ZN5Print5printEji>:
    3ac0:	9a 01       	movw	r18, r20
    3ac2:	ab 01       	movw	r20, r22
    3ac4:	60 e0       	ldi	r22, 0x00	; 0
    3ac6:	70 e0       	ldi	r23, 0x00	; 0
    3ac8:	0c 94 3a 1d 	jmp	0x3a74	; 0x3a74 <_ZN5Print5printEmi>

00003acc <_ZN5Print7printlnEji>:
    3acc:	0f 93       	push	r16
    3ace:	1f 93       	push	r17
    3ad0:	cf 93       	push	r28
    3ad2:	df 93       	push	r29
    3ad4:	ec 01       	movw	r28, r24
    3ad6:	0e 94 60 1d 	call	0x3ac0	; 0x3ac0 <_ZN5Print5printEji>
    3ada:	8c 01       	movw	r16, r24
    3adc:	ce 01       	movw	r24, r28
    3ade:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    3ae2:	80 0f       	add	r24, r16
    3ae4:	91 1f       	adc	r25, r17
    3ae6:	df 91       	pop	r29
    3ae8:	cf 91       	pop	r28
    3aea:	1f 91       	pop	r17
    3aec:	0f 91       	pop	r16
    3aee:	08 95       	ret

00003af0 <_ZN5Print7printlnEmi>:
    3af0:	0f 93       	push	r16
    3af2:	1f 93       	push	r17
    3af4:	cf 93       	push	r28
    3af6:	df 93       	push	r29
    3af8:	ec 01       	movw	r28, r24
    3afa:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <_ZN5Print5printEmi>
    3afe:	8c 01       	movw	r16, r24
    3b00:	ce 01       	movw	r24, r28
    3b02:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    3b06:	80 0f       	add	r24, r16
    3b08:	91 1f       	adc	r25, r17
    3b0a:	df 91       	pop	r29
    3b0c:	cf 91       	pop	r28
    3b0e:	1f 91       	pop	r17
    3b10:	0f 91       	pop	r16
    3b12:	08 95       	ret

00003b14 <_ZN5Print5printEli>:
    3b14:	cf 92       	push	r12
    3b16:	df 92       	push	r13
    3b18:	ef 92       	push	r14
    3b1a:	ff 92       	push	r15
    3b1c:	0f 93       	push	r16
    3b1e:	1f 93       	push	r17
    3b20:	cf 93       	push	r28
    3b22:	df 93       	push	r29
    3b24:	21 15       	cp	r18, r1
    3b26:	31 05       	cpc	r19, r1
    3b28:	81 f4       	brne	.+32     	; 0x3b4a <_ZN5Print5printEli+0x36>
    3b2a:	dc 01       	movw	r26, r24
    3b2c:	ed 91       	ld	r30, X+
    3b2e:	fc 91       	ld	r31, X
    3b30:	01 90       	ld	r0, Z+
    3b32:	f0 81       	ld	r31, Z
    3b34:	e0 2d       	mov	r30, r0
    3b36:	64 2f       	mov	r22, r20
    3b38:	df 91       	pop	r29
    3b3a:	cf 91       	pop	r28
    3b3c:	1f 91       	pop	r17
    3b3e:	0f 91       	pop	r16
    3b40:	ff 90       	pop	r15
    3b42:	ef 90       	pop	r14
    3b44:	df 90       	pop	r13
    3b46:	cf 90       	pop	r12
    3b48:	09 94       	ijmp
    3b4a:	2a 30       	cpi	r18, 0x0A	; 10
    3b4c:	31 05       	cpc	r19, r1
    3b4e:	01 f5       	brne	.+64     	; 0x3b90 <_ZN5Print5printEli+0x7c>
    3b50:	77 ff       	sbrs	r23, 7
    3b52:	1d c0       	rjmp	.+58     	; 0x3b8e <_ZN5Print5printEli+0x7a>
    3b54:	6a 01       	movw	r12, r20
    3b56:	7b 01       	movw	r14, r22
    3b58:	ec 01       	movw	r28, r24
    3b5a:	6d e2       	ldi	r22, 0x2D	; 45
    3b5c:	0e 94 b0 1c 	call	0x3960	; 0x3960 <_ZN5Print5printEc>
    3b60:	8c 01       	movw	r16, r24
    3b62:	44 27       	eor	r20, r20
    3b64:	55 27       	eor	r21, r21
    3b66:	ba 01       	movw	r22, r20
    3b68:	4c 19       	sub	r20, r12
    3b6a:	5d 09       	sbc	r21, r13
    3b6c:	6e 09       	sbc	r22, r14
    3b6e:	7f 09       	sbc	r23, r15
    3b70:	2a e0       	ldi	r18, 0x0A	; 10
    3b72:	ce 01       	movw	r24, r28
    3b74:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <_ZN5Print11printNumberEmh>
    3b78:	80 0f       	add	r24, r16
    3b7a:	91 1f       	adc	r25, r17
    3b7c:	df 91       	pop	r29
    3b7e:	cf 91       	pop	r28
    3b80:	1f 91       	pop	r17
    3b82:	0f 91       	pop	r16
    3b84:	ff 90       	pop	r15
    3b86:	ef 90       	pop	r14
    3b88:	df 90       	pop	r13
    3b8a:	cf 90       	pop	r12
    3b8c:	08 95       	ret
    3b8e:	2a e0       	ldi	r18, 0x0A	; 10
    3b90:	df 91       	pop	r29
    3b92:	cf 91       	pop	r28
    3b94:	1f 91       	pop	r17
    3b96:	0f 91       	pop	r16
    3b98:	ff 90       	pop	r15
    3b9a:	ef 90       	pop	r14
    3b9c:	df 90       	pop	r13
    3b9e:	cf 90       	pop	r12
    3ba0:	0c 94 f1 1c 	jmp	0x39e2	; 0x39e2 <_ZN5Print11printNumberEmh>

00003ba4 <_ZN5Print5printEii>:
    3ba4:	9a 01       	movw	r18, r20
    3ba6:	ab 01       	movw	r20, r22
    3ba8:	77 0f       	add	r23, r23
    3baa:	66 0b       	sbc	r22, r22
    3bac:	77 0b       	sbc	r23, r23
    3bae:	0c 94 8a 1d 	jmp	0x3b14	; 0x3b14 <_ZN5Print5printEli>

00003bb2 <_ZN5Print7printlnEii>:
    3bb2:	0f 93       	push	r16
    3bb4:	1f 93       	push	r17
    3bb6:	cf 93       	push	r28
    3bb8:	df 93       	push	r29
    3bba:	ec 01       	movw	r28, r24
    3bbc:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <_ZN5Print5printEii>
    3bc0:	8c 01       	movw	r16, r24
    3bc2:	ce 01       	movw	r24, r28
    3bc4:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    3bc8:	80 0f       	add	r24, r16
    3bca:	91 1f       	adc	r25, r17
    3bcc:	df 91       	pop	r29
    3bce:	cf 91       	pop	r28
    3bd0:	1f 91       	pop	r17
    3bd2:	0f 91       	pop	r16
    3bd4:	08 95       	ret

00003bd6 <_ZN5Print7printlnEli>:
    3bd6:	0f 93       	push	r16
    3bd8:	1f 93       	push	r17
    3bda:	cf 93       	push	r28
    3bdc:	df 93       	push	r29
    3bde:	ec 01       	movw	r28, r24
    3be0:	0e 94 8a 1d 	call	0x3b14	; 0x3b14 <_ZN5Print5printEli>
    3be4:	8c 01       	movw	r16, r24
    3be6:	ce 01       	movw	r24, r28
    3be8:	0e 94 b7 1c 	call	0x396e	; 0x396e <_ZN5Print7printlnEv>
    3bec:	80 0f       	add	r24, r16
    3bee:	91 1f       	adc	r25, r17
    3bf0:	df 91       	pop	r29
    3bf2:	cf 91       	pop	r28
    3bf4:	1f 91       	pop	r17
    3bf6:	0f 91       	pop	r16
    3bf8:	08 95       	ret

00003bfa <__vector_16>:
    3bfa:	1f 92       	push	r1
    3bfc:	0f 92       	push	r0
    3bfe:	0f b6       	in	r0, 0x3f	; 63
    3c00:	0f 92       	push	r0
    3c02:	11 24       	eor	r1, r1
    3c04:	2f 93       	push	r18
    3c06:	3f 93       	push	r19
    3c08:	8f 93       	push	r24
    3c0a:	9f 93       	push	r25
    3c0c:	af 93       	push	r26
    3c0e:	bf 93       	push	r27
    3c10:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <timer0_millis>
    3c14:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <timer0_millis+0x1>
    3c18:	a0 91 3e 04 	lds	r26, 0x043E	; 0x80043e <timer0_millis+0x2>
    3c1c:	b0 91 3f 04 	lds	r27, 0x043F	; 0x80043f <timer0_millis+0x3>
    3c20:	30 91 3b 04 	lds	r19, 0x043B	; 0x80043b <timer0_fract>
    3c24:	23 e0       	ldi	r18, 0x03	; 3
    3c26:	23 0f       	add	r18, r19
    3c28:	2d 37       	cpi	r18, 0x7D	; 125
    3c2a:	20 f4       	brcc	.+8      	; 0x3c34 <__vector_16+0x3a>
    3c2c:	01 96       	adiw	r24, 0x01	; 1
    3c2e:	a1 1d       	adc	r26, r1
    3c30:	b1 1d       	adc	r27, r1
    3c32:	05 c0       	rjmp	.+10     	; 0x3c3e <__vector_16+0x44>
    3c34:	26 e8       	ldi	r18, 0x86	; 134
    3c36:	23 0f       	add	r18, r19
    3c38:	02 96       	adiw	r24, 0x02	; 2
    3c3a:	a1 1d       	adc	r26, r1
    3c3c:	b1 1d       	adc	r27, r1
    3c3e:	20 93 3b 04 	sts	0x043B, r18	; 0x80043b <timer0_fract>
    3c42:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <timer0_millis>
    3c46:	90 93 3d 04 	sts	0x043D, r25	; 0x80043d <timer0_millis+0x1>
    3c4a:	a0 93 3e 04 	sts	0x043E, r26	; 0x80043e <timer0_millis+0x2>
    3c4e:	b0 93 3f 04 	sts	0x043F, r27	; 0x80043f <timer0_millis+0x3>
    3c52:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <timer0_overflow_count>
    3c56:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <timer0_overflow_count+0x1>
    3c5a:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <timer0_overflow_count+0x2>
    3c5e:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <timer0_overflow_count+0x3>
    3c62:	01 96       	adiw	r24, 0x01	; 1
    3c64:	a1 1d       	adc	r26, r1
    3c66:	b1 1d       	adc	r27, r1
    3c68:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <timer0_overflow_count>
    3c6c:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <timer0_overflow_count+0x1>
    3c70:	a0 93 42 04 	sts	0x0442, r26	; 0x800442 <timer0_overflow_count+0x2>
    3c74:	b0 93 43 04 	sts	0x0443, r27	; 0x800443 <timer0_overflow_count+0x3>
    3c78:	bf 91       	pop	r27
    3c7a:	af 91       	pop	r26
    3c7c:	9f 91       	pop	r25
    3c7e:	8f 91       	pop	r24
    3c80:	3f 91       	pop	r19
    3c82:	2f 91       	pop	r18
    3c84:	0f 90       	pop	r0
    3c86:	0f be       	out	0x3f, r0	; 63
    3c88:	0f 90       	pop	r0
    3c8a:	1f 90       	pop	r1
    3c8c:	18 95       	reti

00003c8e <micros>:
    3c8e:	3f b7       	in	r19, 0x3f	; 63
    3c90:	f8 94       	cli
    3c92:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <timer0_overflow_count>
    3c96:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <timer0_overflow_count+0x1>
    3c9a:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <timer0_overflow_count+0x2>
    3c9e:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <timer0_overflow_count+0x3>
    3ca2:	26 b5       	in	r18, 0x26	; 38
    3ca4:	a8 9b       	sbis	0x15, 0	; 21
    3ca6:	05 c0       	rjmp	.+10     	; 0x3cb2 <micros+0x24>
    3ca8:	2f 3f       	cpi	r18, 0xFF	; 255
    3caa:	19 f0       	breq	.+6      	; 0x3cb2 <micros+0x24>
    3cac:	01 96       	adiw	r24, 0x01	; 1
    3cae:	a1 1d       	adc	r26, r1
    3cb0:	b1 1d       	adc	r27, r1
    3cb2:	3f bf       	out	0x3f, r19	; 63
    3cb4:	ba 2f       	mov	r27, r26
    3cb6:	a9 2f       	mov	r26, r25
    3cb8:	98 2f       	mov	r25, r24
    3cba:	88 27       	eor	r24, r24
    3cbc:	82 0f       	add	r24, r18
    3cbe:	91 1d       	adc	r25, r1
    3cc0:	a1 1d       	adc	r26, r1
    3cc2:	b1 1d       	adc	r27, r1
    3cc4:	bc 01       	movw	r22, r24
    3cc6:	cd 01       	movw	r24, r26
    3cc8:	42 e0       	ldi	r20, 0x02	; 2
    3cca:	66 0f       	add	r22, r22
    3ccc:	77 1f       	adc	r23, r23
    3cce:	88 1f       	adc	r24, r24
    3cd0:	99 1f       	adc	r25, r25
    3cd2:	4a 95       	dec	r20
    3cd4:	d1 f7       	brne	.-12     	; 0x3cca <micros+0x3c>
    3cd6:	08 95       	ret

00003cd8 <delay>:
    3cd8:	8f 92       	push	r8
    3cda:	9f 92       	push	r9
    3cdc:	af 92       	push	r10
    3cde:	bf 92       	push	r11
    3ce0:	cf 92       	push	r12
    3ce2:	df 92       	push	r13
    3ce4:	ef 92       	push	r14
    3ce6:	ff 92       	push	r15
    3ce8:	6b 01       	movw	r12, r22
    3cea:	7c 01       	movw	r14, r24
    3cec:	0e 94 47 1e 	call	0x3c8e	; 0x3c8e <micros>
    3cf0:	4b 01       	movw	r8, r22
    3cf2:	5c 01       	movw	r10, r24
    3cf4:	c1 14       	cp	r12, r1
    3cf6:	d1 04       	cpc	r13, r1
    3cf8:	e1 04       	cpc	r14, r1
    3cfa:	f1 04       	cpc	r15, r1
    3cfc:	01 f1       	breq	.+64     	; 0x3d3e <delay+0x66>
    3cfe:	0e 94 f6 22 	call	0x45ec	; 0x45ec <yield>
    3d02:	0e 94 47 1e 	call	0x3c8e	; 0x3c8e <micros>
    3d06:	dc 01       	movw	r26, r24
    3d08:	cb 01       	movw	r24, r22
    3d0a:	88 19       	sub	r24, r8
    3d0c:	99 09       	sbc	r25, r9
    3d0e:	aa 09       	sbc	r26, r10
    3d10:	bb 09       	sbc	r27, r11
    3d12:	88 3e       	cpi	r24, 0xE8	; 232
    3d14:	93 40       	sbci	r25, 0x03	; 3
    3d16:	a1 05       	cpc	r26, r1
    3d18:	b1 05       	cpc	r27, r1
    3d1a:	60 f3       	brcs	.-40     	; 0x3cf4 <delay+0x1c>
    3d1c:	21 e0       	ldi	r18, 0x01	; 1
    3d1e:	c2 1a       	sub	r12, r18
    3d20:	d1 08       	sbc	r13, r1
    3d22:	e1 08       	sbc	r14, r1
    3d24:	f1 08       	sbc	r15, r1
    3d26:	88 ee       	ldi	r24, 0xE8	; 232
    3d28:	88 0e       	add	r8, r24
    3d2a:	83 e0       	ldi	r24, 0x03	; 3
    3d2c:	98 1e       	adc	r9, r24
    3d2e:	a1 1c       	adc	r10, r1
    3d30:	b1 1c       	adc	r11, r1
    3d32:	c1 14       	cp	r12, r1
    3d34:	d1 04       	cpc	r13, r1
    3d36:	e1 04       	cpc	r14, r1
    3d38:	f1 04       	cpc	r15, r1
    3d3a:	19 f7       	brne	.-58     	; 0x3d02 <delay+0x2a>
    3d3c:	db cf       	rjmp	.-74     	; 0x3cf4 <delay+0x1c>
    3d3e:	ff 90       	pop	r15
    3d40:	ef 90       	pop	r14
    3d42:	df 90       	pop	r13
    3d44:	cf 90       	pop	r12
    3d46:	bf 90       	pop	r11
    3d48:	af 90       	pop	r10
    3d4a:	9f 90       	pop	r9
    3d4c:	8f 90       	pop	r8
    3d4e:	08 95       	ret

00003d50 <init>:
    3d50:	78 94       	sei
    3d52:	84 b5       	in	r24, 0x24	; 36
    3d54:	82 60       	ori	r24, 0x02	; 2
    3d56:	84 bd       	out	0x24, r24	; 36
    3d58:	84 b5       	in	r24, 0x24	; 36
    3d5a:	81 60       	ori	r24, 0x01	; 1
    3d5c:	84 bd       	out	0x24, r24	; 36
    3d5e:	85 b5       	in	r24, 0x25	; 37
    3d60:	82 60       	ori	r24, 0x02	; 2
    3d62:	85 bd       	out	0x25, r24	; 37
    3d64:	85 b5       	in	r24, 0x25	; 37
    3d66:	81 60       	ori	r24, 0x01	; 1
    3d68:	85 bd       	out	0x25, r24	; 37
    3d6a:	ee e6       	ldi	r30, 0x6E	; 110
    3d6c:	f0 e0       	ldi	r31, 0x00	; 0
    3d6e:	80 81       	ld	r24, Z
    3d70:	81 60       	ori	r24, 0x01	; 1
    3d72:	80 83       	st	Z, r24
    3d74:	e1 e8       	ldi	r30, 0x81	; 129
    3d76:	f0 e0       	ldi	r31, 0x00	; 0
    3d78:	10 82       	st	Z, r1
    3d7a:	80 81       	ld	r24, Z
    3d7c:	82 60       	ori	r24, 0x02	; 2
    3d7e:	80 83       	st	Z, r24
    3d80:	80 81       	ld	r24, Z
    3d82:	81 60       	ori	r24, 0x01	; 1
    3d84:	80 83       	st	Z, r24
    3d86:	e0 e8       	ldi	r30, 0x80	; 128
    3d88:	f0 e0       	ldi	r31, 0x00	; 0
    3d8a:	80 81       	ld	r24, Z
    3d8c:	81 60       	ori	r24, 0x01	; 1
    3d8e:	80 83       	st	Z, r24
    3d90:	e1 eb       	ldi	r30, 0xB1	; 177
    3d92:	f0 e0       	ldi	r31, 0x00	; 0
    3d94:	80 81       	ld	r24, Z
    3d96:	84 60       	ori	r24, 0x04	; 4
    3d98:	80 83       	st	Z, r24
    3d9a:	e0 eb       	ldi	r30, 0xB0	; 176
    3d9c:	f0 e0       	ldi	r31, 0x00	; 0
    3d9e:	80 81       	ld	r24, Z
    3da0:	81 60       	ori	r24, 0x01	; 1
    3da2:	80 83       	st	Z, r24
    3da4:	ea e7       	ldi	r30, 0x7A	; 122
    3da6:	f0 e0       	ldi	r31, 0x00	; 0
    3da8:	80 81       	ld	r24, Z
    3daa:	84 60       	ori	r24, 0x04	; 4
    3dac:	80 83       	st	Z, r24
    3dae:	80 81       	ld	r24, Z
    3db0:	82 60       	ori	r24, 0x02	; 2
    3db2:	80 83       	st	Z, r24
    3db4:	80 81       	ld	r24, Z
    3db6:	81 60       	ori	r24, 0x01	; 1
    3db8:	80 83       	st	Z, r24
    3dba:	80 81       	ld	r24, Z
    3dbc:	80 68       	ori	r24, 0x80	; 128
    3dbe:	80 83       	st	Z, r24
    3dc0:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3dc4:	08 95       	ret

00003dc6 <analogRead>:
    3dc6:	8e 30       	cpi	r24, 0x0E	; 14
    3dc8:	08 f0       	brcs	.+2      	; 0x3dcc <analogRead+0x6>
    3dca:	8e 50       	subi	r24, 0x0E	; 14
    3dcc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <analog_reference>
    3dd0:	90 e4       	ldi	r25, 0x40	; 64
    3dd2:	29 9f       	mul	r18, r25
    3dd4:	90 01       	movw	r18, r0
    3dd6:	11 24       	eor	r1, r1
    3dd8:	87 70       	andi	r24, 0x07	; 7
    3dda:	82 2b       	or	r24, r18
    3ddc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3de0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3de4:	80 64       	ori	r24, 0x40	; 64
    3de6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3dea:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3dee:	86 fd       	sbrc	r24, 6
    3df0:	fc cf       	rjmp	.-8      	; 0x3dea <analogRead+0x24>
    3df2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    3df6:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    3dfa:	90 e0       	ldi	r25, 0x00	; 0
    3dfc:	92 2b       	or	r25, r18
    3dfe:	08 95       	ret

00003e00 <turnOffPWM>:
    3e00:	83 30       	cpi	r24, 0x03	; 3
    3e02:	81 f0       	breq	.+32     	; 0x3e24 <turnOffPWM+0x24>
    3e04:	28 f4       	brcc	.+10     	; 0x3e10 <turnOffPWM+0x10>
    3e06:	81 30       	cpi	r24, 0x01	; 1
    3e08:	99 f0       	breq	.+38     	; 0x3e30 <turnOffPWM+0x30>
    3e0a:	82 30       	cpi	r24, 0x02	; 2
    3e0c:	a1 f0       	breq	.+40     	; 0x3e36 <turnOffPWM+0x36>
    3e0e:	08 95       	ret
    3e10:	87 30       	cpi	r24, 0x07	; 7
    3e12:	a9 f0       	breq	.+42     	; 0x3e3e <turnOffPWM+0x3e>
    3e14:	88 30       	cpi	r24, 0x08	; 8
    3e16:	b9 f0       	breq	.+46     	; 0x3e46 <turnOffPWM+0x46>
    3e18:	84 30       	cpi	r24, 0x04	; 4
    3e1a:	d1 f4       	brne	.+52     	; 0x3e50 <turnOffPWM+0x50>
    3e1c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e20:	8f 7d       	andi	r24, 0xDF	; 223
    3e22:	03 c0       	rjmp	.+6      	; 0x3e2a <turnOffPWM+0x2a>
    3e24:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e28:	8f 77       	andi	r24, 0x7F	; 127
    3e2a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3e2e:	08 95       	ret
    3e30:	84 b5       	in	r24, 0x24	; 36
    3e32:	8f 77       	andi	r24, 0x7F	; 127
    3e34:	02 c0       	rjmp	.+4      	; 0x3e3a <turnOffPWM+0x3a>
    3e36:	84 b5       	in	r24, 0x24	; 36
    3e38:	8f 7d       	andi	r24, 0xDF	; 223
    3e3a:	84 bd       	out	0x24, r24	; 36
    3e3c:	08 95       	ret
    3e3e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3e42:	8f 77       	andi	r24, 0x7F	; 127
    3e44:	03 c0       	rjmp	.+6      	; 0x3e4c <turnOffPWM+0x4c>
    3e46:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3e4a:	8f 7d       	andi	r24, 0xDF	; 223
    3e4c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3e50:	08 95       	ret

00003e52 <pinMode>:
    3e52:	cf 93       	push	r28
    3e54:	df 93       	push	r29
    3e56:	90 e0       	ldi	r25, 0x00	; 0
    3e58:	fc 01       	movw	r30, r24
    3e5a:	e7 54       	subi	r30, 0x47	; 71
    3e5c:	f8 4f       	sbci	r31, 0xF8	; 248
    3e5e:	24 91       	lpm	r18, Z
    3e60:	fc 01       	movw	r30, r24
    3e62:	e3 53       	subi	r30, 0x33	; 51
    3e64:	f8 4f       	sbci	r31, 0xF8	; 248
    3e66:	84 91       	lpm	r24, Z
    3e68:	88 23       	and	r24, r24
    3e6a:	61 f1       	breq	.+88     	; 0x3ec4 <pinMode+0x72>
    3e6c:	90 e0       	ldi	r25, 0x00	; 0
    3e6e:	88 0f       	add	r24, r24
    3e70:	99 1f       	adc	r25, r25
    3e72:	fc 01       	movw	r30, r24
    3e74:	eb 50       	subi	r30, 0x0B	; 11
    3e76:	f8 4f       	sbci	r31, 0xF8	; 248
    3e78:	c5 91       	lpm	r28, Z+
    3e7a:	d4 91       	lpm	r29, Z
    3e7c:	fc 01       	movw	r30, r24
    3e7e:	e5 51       	subi	r30, 0x15	; 21
    3e80:	f8 4f       	sbci	r31, 0xF8	; 248
    3e82:	a5 91       	lpm	r26, Z+
    3e84:	b4 91       	lpm	r27, Z
    3e86:	61 11       	cpse	r22, r1
    3e88:	09 c0       	rjmp	.+18     	; 0x3e9c <pinMode+0x4a>
    3e8a:	9f b7       	in	r25, 0x3f	; 63
    3e8c:	f8 94       	cli
    3e8e:	88 81       	ld	r24, Y
    3e90:	20 95       	com	r18
    3e92:	82 23       	and	r24, r18
    3e94:	88 83       	st	Y, r24
    3e96:	ec 91       	ld	r30, X
    3e98:	2e 23       	and	r18, r30
    3e9a:	0b c0       	rjmp	.+22     	; 0x3eb2 <pinMode+0x60>
    3e9c:	62 30       	cpi	r22, 0x02	; 2
    3e9e:	61 f4       	brne	.+24     	; 0x3eb8 <pinMode+0x66>
    3ea0:	9f b7       	in	r25, 0x3f	; 63
    3ea2:	f8 94       	cli
    3ea4:	88 81       	ld	r24, Y
    3ea6:	32 2f       	mov	r19, r18
    3ea8:	30 95       	com	r19
    3eaa:	83 23       	and	r24, r19
    3eac:	88 83       	st	Y, r24
    3eae:	ec 91       	ld	r30, X
    3eb0:	2e 2b       	or	r18, r30
    3eb2:	2c 93       	st	X, r18
    3eb4:	9f bf       	out	0x3f, r25	; 63
    3eb6:	06 c0       	rjmp	.+12     	; 0x3ec4 <pinMode+0x72>
    3eb8:	8f b7       	in	r24, 0x3f	; 63
    3eba:	f8 94       	cli
    3ebc:	e8 81       	ld	r30, Y
    3ebe:	2e 2b       	or	r18, r30
    3ec0:	28 83       	st	Y, r18
    3ec2:	8f bf       	out	0x3f, r24	; 63
    3ec4:	df 91       	pop	r29
    3ec6:	cf 91       	pop	r28
    3ec8:	08 95       	ret

00003eca <digitalWrite>:
    3eca:	1f 93       	push	r17
    3ecc:	cf 93       	push	r28
    3ece:	df 93       	push	r29
    3ed0:	28 2f       	mov	r18, r24
    3ed2:	30 e0       	ldi	r19, 0x00	; 0
    3ed4:	f9 01       	movw	r30, r18
    3ed6:	eb 55       	subi	r30, 0x5B	; 91
    3ed8:	f8 4f       	sbci	r31, 0xF8	; 248
    3eda:	84 91       	lpm	r24, Z
    3edc:	f9 01       	movw	r30, r18
    3ede:	e7 54       	subi	r30, 0x47	; 71
    3ee0:	f8 4f       	sbci	r31, 0xF8	; 248
    3ee2:	d4 91       	lpm	r29, Z
    3ee4:	f9 01       	movw	r30, r18
    3ee6:	e3 53       	subi	r30, 0x33	; 51
    3ee8:	f8 4f       	sbci	r31, 0xF8	; 248
    3eea:	c4 91       	lpm	r28, Z
    3eec:	cc 23       	and	r28, r28
    3eee:	c1 f0       	breq	.+48     	; 0x3f20 <digitalWrite+0x56>
    3ef0:	16 2f       	mov	r17, r22
    3ef2:	81 11       	cpse	r24, r1
    3ef4:	0e 94 00 1f 	call	0x3e00	; 0x3e00 <turnOffPWM>
    3ef8:	ec 2f       	mov	r30, r28
    3efa:	f0 e0       	ldi	r31, 0x00	; 0
    3efc:	ee 0f       	add	r30, r30
    3efe:	ff 1f       	adc	r31, r31
    3f00:	e5 51       	subi	r30, 0x15	; 21
    3f02:	f8 4f       	sbci	r31, 0xF8	; 248
    3f04:	a5 91       	lpm	r26, Z+
    3f06:	b4 91       	lpm	r27, Z
    3f08:	9f b7       	in	r25, 0x3f	; 63
    3f0a:	f8 94       	cli
    3f0c:	11 11       	cpse	r17, r1
    3f0e:	04 c0       	rjmp	.+8      	; 0x3f18 <digitalWrite+0x4e>
    3f10:	8c 91       	ld	r24, X
    3f12:	d0 95       	com	r29
    3f14:	d8 23       	and	r29, r24
    3f16:	02 c0       	rjmp	.+4      	; 0x3f1c <digitalWrite+0x52>
    3f18:	ec 91       	ld	r30, X
    3f1a:	de 2b       	or	r29, r30
    3f1c:	dc 93       	st	X, r29
    3f1e:	9f bf       	out	0x3f, r25	; 63
    3f20:	df 91       	pop	r29
    3f22:	cf 91       	pop	r28
    3f24:	1f 91       	pop	r17
    3f26:	08 95       	ret

00003f28 <_ZN6StringD1Ev>:
    3f28:	fc 01       	movw	r30, r24
    3f2a:	80 81       	ld	r24, Z
    3f2c:	91 81       	ldd	r25, Z+1	; 0x01
    3f2e:	0c 94 0a 24 	jmp	0x4814	; 0x4814 <free>

00003f32 <_ZN6String10invalidateEv>:
    3f32:	cf 93       	push	r28
    3f34:	df 93       	push	r29
    3f36:	ec 01       	movw	r28, r24
    3f38:	88 81       	ld	r24, Y
    3f3a:	99 81       	ldd	r25, Y+1	; 0x01
    3f3c:	00 97       	sbiw	r24, 0x00	; 0
    3f3e:	11 f0       	breq	.+4      	; 0x3f44 <_ZN6String10invalidateEv+0x12>
    3f40:	0e 94 0a 24 	call	0x4814	; 0x4814 <free>
    3f44:	19 82       	std	Y+1, r1	; 0x01
    3f46:	18 82       	st	Y, r1
    3f48:	1d 82       	std	Y+5, r1	; 0x05
    3f4a:	1c 82       	std	Y+4, r1	; 0x04
    3f4c:	1b 82       	std	Y+3, r1	; 0x03
    3f4e:	1a 82       	std	Y+2, r1	; 0x02
    3f50:	df 91       	pop	r29
    3f52:	cf 91       	pop	r28
    3f54:	08 95       	ret

00003f56 <_ZN6String12changeBufferEj>:
    3f56:	0f 93       	push	r16
    3f58:	1f 93       	push	r17
    3f5a:	cf 93       	push	r28
    3f5c:	df 93       	push	r29
    3f5e:	ec 01       	movw	r28, r24
    3f60:	8b 01       	movw	r16, r22
    3f62:	6f 5f       	subi	r22, 0xFF	; 255
    3f64:	7f 4f       	sbci	r23, 0xFF	; 255
    3f66:	88 81       	ld	r24, Y
    3f68:	99 81       	ldd	r25, Y+1	; 0x01
    3f6a:	0e 94 93 24 	call	0x4926	; 0x4926 <realloc>
    3f6e:	00 97       	sbiw	r24, 0x00	; 0
    3f70:	31 f0       	breq	.+12     	; 0x3f7e <_ZN6String12changeBufferEj+0x28>
    3f72:	99 83       	std	Y+1, r25	; 0x01
    3f74:	88 83       	st	Y, r24
    3f76:	1b 83       	std	Y+3, r17	; 0x03
    3f78:	0a 83       	std	Y+2, r16	; 0x02
    3f7a:	81 e0       	ldi	r24, 0x01	; 1
    3f7c:	01 c0       	rjmp	.+2      	; 0x3f80 <_ZN6String12changeBufferEj+0x2a>
    3f7e:	80 e0       	ldi	r24, 0x00	; 0
    3f80:	df 91       	pop	r29
    3f82:	cf 91       	pop	r28
    3f84:	1f 91       	pop	r17
    3f86:	0f 91       	pop	r16
    3f88:	08 95       	ret

00003f8a <_ZN6String7reserveEj>:
    3f8a:	cf 93       	push	r28
    3f8c:	df 93       	push	r29
    3f8e:	ec 01       	movw	r28, r24
    3f90:	88 81       	ld	r24, Y
    3f92:	99 81       	ldd	r25, Y+1	; 0x01
    3f94:	89 2b       	or	r24, r25
    3f96:	29 f0       	breq	.+10     	; 0x3fa2 <_ZN6String7reserveEj+0x18>
    3f98:	8a 81       	ldd	r24, Y+2	; 0x02
    3f9a:	9b 81       	ldd	r25, Y+3	; 0x03
    3f9c:	86 17       	cp	r24, r22
    3f9e:	97 07       	cpc	r25, r23
    3fa0:	60 f4       	brcc	.+24     	; 0x3fba <_ZN6String7reserveEj+0x30>
    3fa2:	ce 01       	movw	r24, r28
    3fa4:	0e 94 ab 1f 	call	0x3f56	; 0x3f56 <_ZN6String12changeBufferEj>
    3fa8:	88 23       	and	r24, r24
    3faa:	41 f0       	breq	.+16     	; 0x3fbc <_ZN6String7reserveEj+0x32>
    3fac:	8c 81       	ldd	r24, Y+4	; 0x04
    3fae:	9d 81       	ldd	r25, Y+5	; 0x05
    3fb0:	89 2b       	or	r24, r25
    3fb2:	19 f4       	brne	.+6      	; 0x3fba <_ZN6String7reserveEj+0x30>
    3fb4:	e8 81       	ld	r30, Y
    3fb6:	f9 81       	ldd	r31, Y+1	; 0x01
    3fb8:	10 82       	st	Z, r1
    3fba:	81 e0       	ldi	r24, 0x01	; 1
    3fbc:	df 91       	pop	r29
    3fbe:	cf 91       	pop	r28
    3fc0:	08 95       	ret

00003fc2 <_ZN6String4copyEPKcj>:
    3fc2:	ef 92       	push	r14
    3fc4:	ff 92       	push	r15
    3fc6:	0f 93       	push	r16
    3fc8:	1f 93       	push	r17
    3fca:	cf 93       	push	r28
    3fcc:	df 93       	push	r29
    3fce:	ec 01       	movw	r28, r24
    3fd0:	7b 01       	movw	r14, r22
    3fd2:	8a 01       	movw	r16, r20
    3fd4:	ba 01       	movw	r22, r20
    3fd6:	0e 94 c5 1f 	call	0x3f8a	; 0x3f8a <_ZN6String7reserveEj>
    3fda:	81 11       	cpse	r24, r1
    3fdc:	04 c0       	rjmp	.+8      	; 0x3fe6 <_ZN6String4copyEPKcj+0x24>
    3fde:	ce 01       	movw	r24, r28
    3fe0:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <_ZN6String10invalidateEv>
    3fe4:	07 c0       	rjmp	.+14     	; 0x3ff4 <_ZN6String4copyEPKcj+0x32>
    3fe6:	1d 83       	std	Y+5, r17	; 0x05
    3fe8:	0c 83       	std	Y+4, r16	; 0x04
    3fea:	b7 01       	movw	r22, r14
    3fec:	88 81       	ld	r24, Y
    3fee:	99 81       	ldd	r25, Y+1	; 0x01
    3ff0:	0e 94 b7 25 	call	0x4b6e	; 0x4b6e <strcpy>
    3ff4:	ce 01       	movw	r24, r28
    3ff6:	df 91       	pop	r29
    3ff8:	cf 91       	pop	r28
    3ffa:	1f 91       	pop	r17
    3ffc:	0f 91       	pop	r16
    3ffe:	ff 90       	pop	r15
    4000:	ef 90       	pop	r14
    4002:	08 95       	ret

00004004 <_ZN6StringC1EPKc>:
    4004:	fc 01       	movw	r30, r24
    4006:	11 82       	std	Z+1, r1	; 0x01
    4008:	10 82       	st	Z, r1
    400a:	13 82       	std	Z+3, r1	; 0x03
    400c:	12 82       	std	Z+2, r1	; 0x02
    400e:	15 82       	std	Z+5, r1	; 0x05
    4010:	14 82       	std	Z+4, r1	; 0x04
    4012:	61 15       	cp	r22, r1
    4014:	71 05       	cpc	r23, r1
    4016:	51 f0       	breq	.+20     	; 0x402c <_ZN6StringC1EPKc+0x28>
    4018:	fb 01       	movw	r30, r22
    401a:	01 90       	ld	r0, Z+
    401c:	00 20       	and	r0, r0
    401e:	e9 f7       	brne	.-6      	; 0x401a <_ZN6StringC1EPKc+0x16>
    4020:	31 97       	sbiw	r30, 0x01	; 1
    4022:	af 01       	movw	r20, r30
    4024:	46 1b       	sub	r20, r22
    4026:	57 0b       	sbc	r21, r23
    4028:	0c 94 e1 1f 	jmp	0x3fc2	; 0x3fc2 <_ZN6String4copyEPKcj>
    402c:	08 95       	ret

0000402e <_ZN6StringaSERKS_>:
    402e:	cf 93       	push	r28
    4030:	df 93       	push	r29
    4032:	ec 01       	movw	r28, r24
    4034:	fb 01       	movw	r30, r22
    4036:	86 17       	cp	r24, r22
    4038:	97 07       	cpc	r25, r23
    403a:	61 f0       	breq	.+24     	; 0x4054 <_ZN6StringaSERKS_+0x26>
    403c:	60 81       	ld	r22, Z
    403e:	71 81       	ldd	r23, Z+1	; 0x01
    4040:	61 15       	cp	r22, r1
    4042:	71 05       	cpc	r23, r1
    4044:	29 f0       	breq	.+10     	; 0x4050 <_ZN6StringaSERKS_+0x22>
    4046:	44 81       	ldd	r20, Z+4	; 0x04
    4048:	55 81       	ldd	r21, Z+5	; 0x05
    404a:	0e 94 e1 1f 	call	0x3fc2	; 0x3fc2 <_ZN6String4copyEPKcj>
    404e:	02 c0       	rjmp	.+4      	; 0x4054 <_ZN6StringaSERKS_+0x26>
    4050:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <_ZN6String10invalidateEv>
    4054:	ce 01       	movw	r24, r28
    4056:	df 91       	pop	r29
    4058:	cf 91       	pop	r28
    405a:	08 95       	ret

0000405c <_ZN6StringC1ERKS_>:
    405c:	fc 01       	movw	r30, r24
    405e:	11 82       	std	Z+1, r1	; 0x01
    4060:	10 82       	st	Z, r1
    4062:	13 82       	std	Z+3, r1	; 0x03
    4064:	12 82       	std	Z+2, r1	; 0x02
    4066:	15 82       	std	Z+5, r1	; 0x05
    4068:	14 82       	std	Z+4, r1	; 0x04
    406a:	0c 94 17 20 	jmp	0x402e	; 0x402e <_ZN6StringaSERKS_>

0000406e <_ZN6String6concatEPKcj>:
    406e:	ef 92       	push	r14
    4070:	ff 92       	push	r15
    4072:	0f 93       	push	r16
    4074:	1f 93       	push	r17
    4076:	cf 93       	push	r28
    4078:	df 93       	push	r29
    407a:	61 15       	cp	r22, r1
    407c:	71 05       	cpc	r23, r1
    407e:	11 f4       	brne	.+4      	; 0x4084 <_ZN6String6concatEPKcj+0x16>
    4080:	80 e0       	ldi	r24, 0x00	; 0
    4082:	1c c0       	rjmp	.+56     	; 0x40bc <_ZN6String6concatEPKcj+0x4e>
    4084:	41 15       	cp	r20, r1
    4086:	51 05       	cpc	r21, r1
    4088:	c1 f0       	breq	.+48     	; 0x40ba <_ZN6String6concatEPKcj+0x4c>
    408a:	7b 01       	movw	r14, r22
    408c:	ec 01       	movw	r28, r24
    408e:	8c 81       	ldd	r24, Y+4	; 0x04
    4090:	9d 81       	ldd	r25, Y+5	; 0x05
    4092:	8a 01       	movw	r16, r20
    4094:	08 0f       	add	r16, r24
    4096:	19 1f       	adc	r17, r25
    4098:	b8 01       	movw	r22, r16
    409a:	ce 01       	movw	r24, r28
    409c:	0e 94 c5 1f 	call	0x3f8a	; 0x3f8a <_ZN6String7reserveEj>
    40a0:	88 23       	and	r24, r24
    40a2:	71 f3       	breq	.-36     	; 0x4080 <_ZN6String6concatEPKcj+0x12>
    40a4:	28 81       	ld	r18, Y
    40a6:	39 81       	ldd	r19, Y+1	; 0x01
    40a8:	8c 81       	ldd	r24, Y+4	; 0x04
    40aa:	9d 81       	ldd	r25, Y+5	; 0x05
    40ac:	b7 01       	movw	r22, r14
    40ae:	82 0f       	add	r24, r18
    40b0:	93 1f       	adc	r25, r19
    40b2:	0e 94 b7 25 	call	0x4b6e	; 0x4b6e <strcpy>
    40b6:	1d 83       	std	Y+5, r17	; 0x05
    40b8:	0c 83       	std	Y+4, r16	; 0x04
    40ba:	81 e0       	ldi	r24, 0x01	; 1
    40bc:	df 91       	pop	r29
    40be:	cf 91       	pop	r28
    40c0:	1f 91       	pop	r17
    40c2:	0f 91       	pop	r16
    40c4:	ff 90       	pop	r15
    40c6:	ef 90       	pop	r14
    40c8:	08 95       	ret

000040ca <_ZN6String6concatEh>:
    40ca:	ef 92       	push	r14
    40cc:	ff 92       	push	r15
    40ce:	0f 93       	push	r16
    40d0:	1f 93       	push	r17
    40d2:	cf 93       	push	r28
    40d4:	df 93       	push	r29
    40d6:	00 d0       	rcall	.+0      	; 0x40d8 <_ZN6String6concatEh+0xe>
    40d8:	00 d0       	rcall	.+0      	; 0x40da <_ZN6String6concatEh+0x10>
    40da:	cd b7       	in	r28, 0x3d	; 61
    40dc:	de b7       	in	r29, 0x3e	; 62
    40de:	7c 01       	movw	r14, r24
    40e0:	86 2f       	mov	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    40e2:	4a e0       	ldi	r20, 0x0A	; 10
    40e4:	8e 01       	movw	r16, r28
    40e6:	0f 5f       	subi	r16, 0xFF	; 255
    40e8:	1f 4f       	sbci	r17, 0xFF	; 255
    40ea:	b8 01       	movw	r22, r16
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	0e 94 be 25 	call	0x4b7c	; 0x4b7c <__itoa_ncheck>
    40f2:	f8 01       	movw	r30, r16
    40f4:	01 90       	ld	r0, Z+
    40f6:	00 20       	and	r0, r0
    40f8:	e9 f7       	brne	.-6      	; 0x40f4 <_ZN6String6concatEh+0x2a>
    40fa:	31 97       	sbiw	r30, 0x01	; 1
    40fc:	af 01       	movw	r20, r30
    40fe:	40 1b       	sub	r20, r16
    4100:	51 0b       	sbc	r21, r17
    4102:	b8 01       	movw	r22, r16
    4104:	c7 01       	movw	r24, r14
    4106:	0e 94 37 20 	call	0x406e	; 0x406e <_ZN6String6concatEPKcj>
    410a:	0f 90       	pop	r0
    410c:	0f 90       	pop	r0
    410e:	0f 90       	pop	r0
    4110:	0f 90       	pop	r0
    4112:	df 91       	pop	r29
    4114:	cf 91       	pop	r28
    4116:	1f 91       	pop	r17
    4118:	0f 91       	pop	r16
    411a:	ff 90       	pop	r15
    411c:	ef 90       	pop	r14
    411e:	08 95       	ret

00004120 <_ZN14SoftwareSerial4readEv>:
    4120:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4124:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4128:	28 17       	cp	r18, r24
    412a:	39 07       	cpc	r19, r25
    412c:	b9 f4       	brne	.+46     	; 0x415c <_ZN14SoftwareSerial4readEv+0x3c>
    412e:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4132:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4136:	98 17       	cp	r25, r24
    4138:	89 f0       	breq	.+34     	; 0x415c <_ZN14SoftwareSerial4readEv+0x3c>
    413a:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    413e:	f0 e0       	ldi	r31, 0x00	; 0
    4140:	ea 5b       	subi	r30, 0xBA	; 186
    4142:	fb 4f       	sbci	r31, 0xFB	; 251
    4144:	80 81       	ld	r24, Z
    4146:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    414a:	30 e0       	ldi	r19, 0x00	; 0
    414c:	2f 5f       	subi	r18, 0xFF	; 255
    414e:	3f 4f       	sbci	r19, 0xFF	; 255
    4150:	2f 73       	andi	r18, 0x3F	; 63
    4152:	33 27       	eor	r19, r19
    4154:	20 93 44 04 	sts	0x0444, r18	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4158:	90 e0       	ldi	r25, 0x00	; 0
    415a:	08 95       	ret
    415c:	8f ef       	ldi	r24, 0xFF	; 255
    415e:	9f ef       	ldi	r25, 0xFF	; 255
    4160:	08 95       	ret

00004162 <_ZN14SoftwareSerial5writeEh>:
    4162:	1f 93       	push	r17
    4164:	cf 93       	push	r28
    4166:	df 93       	push	r29
    4168:	dc 01       	movw	r26, r24
    416a:	5c 96       	adiw	r26, 0x1c	; 28
    416c:	8d 91       	ld	r24, X+
    416e:	9c 91       	ld	r25, X
    4170:	5d 97       	sbiw	r26, 0x1d	; 29
    4172:	00 97       	sbiw	r24, 0x00	; 0
    4174:	39 f4       	brne	.+14     	; 0x4184 <_ZN14SoftwareSerial5writeEh+0x22>
    4176:	21 e0       	ldi	r18, 0x01	; 1
    4178:	30 e0       	ldi	r19, 0x00	; 0
    417a:	13 96       	adiw	r26, 0x03	; 3
    417c:	3c 93       	st	X, r19
    417e:	2e 93       	st	-X, r18
    4180:	12 97       	sbiw	r26, 0x02	; 2
    4182:	3b c0       	rjmp	.+118    	; 0x41fa <_ZN14SoftwareSerial5writeEh+0x98>
    4184:	51 96       	adiw	r26, 0x11	; 17
    4186:	ed 91       	ld	r30, X+
    4188:	fc 91       	ld	r31, X
    418a:	52 97       	sbiw	r26, 0x12	; 18
    418c:	50 96       	adiw	r26, 0x10	; 16
    418e:	2c 91       	ld	r18, X
    4190:	50 97       	sbiw	r26, 0x10	; 16
    4192:	32 2f       	mov	r19, r18
    4194:	30 95       	com	r19
    4196:	1f b7       	in	r17, 0x3f	; 63
    4198:	5e 96       	adiw	r26, 0x1e	; 30
    419a:	4c 91       	ld	r20, X
    419c:	5e 97       	sbiw	r26, 0x1e	; 30
    419e:	74 2f       	mov	r23, r20
    41a0:	72 70       	andi	r23, 0x02	; 2
    41a2:	41 fd       	sbrc	r20, 1
    41a4:	60 95       	com	r22
    41a6:	f8 94       	cli
    41a8:	40 81       	ld	r20, Z
    41aa:	77 23       	and	r23, r23
    41ac:	11 f0       	breq	.+4      	; 0x41b2 <_ZN14SoftwareSerial5writeEh+0x50>
    41ae:	42 2b       	or	r20, r18
    41b0:	01 c0       	rjmp	.+2      	; 0x41b4 <_ZN14SoftwareSerial5writeEh+0x52>
    41b2:	43 23       	and	r20, r19
    41b4:	40 83       	st	Z, r20
    41b6:	ec 01       	movw	r28, r24
    41b8:	21 97       	sbiw	r28, 0x01	; 1
    41ba:	f1 f7       	brne	.-4      	; 0x41b8 <_ZN14SoftwareSerial5writeEh+0x56>
    41bc:	48 e0       	ldi	r20, 0x08	; 8
    41be:	50 81       	ld	r21, Z
    41c0:	60 ff       	sbrs	r22, 0
    41c2:	02 c0       	rjmp	.+4      	; 0x41c8 <_ZN14SoftwareSerial5writeEh+0x66>
    41c4:	52 2b       	or	r21, r18
    41c6:	01 c0       	rjmp	.+2      	; 0x41ca <_ZN14SoftwareSerial5writeEh+0x68>
    41c8:	53 23       	and	r21, r19
    41ca:	50 83       	st	Z, r21
    41cc:	ec 01       	movw	r28, r24
    41ce:	21 97       	sbiw	r28, 0x01	; 1
    41d0:	f1 f7       	brne	.-4      	; 0x41ce <_ZN14SoftwareSerial5writeEh+0x6c>
    41d2:	66 95       	lsr	r22
    41d4:	41 50       	subi	r20, 0x01	; 1
    41d6:	99 f7       	brne	.-26     	; 0x41be <_ZN14SoftwareSerial5writeEh+0x5c>
    41d8:	80 81       	ld	r24, Z
    41da:	77 23       	and	r23, r23
    41dc:	19 f0       	breq	.+6      	; 0x41e4 <_ZN14SoftwareSerial5writeEh+0x82>
    41de:	83 23       	and	r24, r19
    41e0:	80 83       	st	Z, r24
    41e2:	02 c0       	rjmp	.+4      	; 0x41e8 <_ZN14SoftwareSerial5writeEh+0x86>
    41e4:	28 2b       	or	r18, r24
    41e6:	20 83       	st	Z, r18
    41e8:	1f bf       	out	0x3f, r17	; 63
    41ea:	5c 96       	adiw	r26, 0x1c	; 28
    41ec:	8d 91       	ld	r24, X+
    41ee:	9c 91       	ld	r25, X
    41f0:	5d 97       	sbiw	r26, 0x1d	; 29
    41f2:	01 97       	sbiw	r24, 0x01	; 1
    41f4:	f1 f7       	brne	.-4      	; 0x41f2 <_ZN14SoftwareSerial5writeEh+0x90>
    41f6:	81 e0       	ldi	r24, 0x01	; 1
    41f8:	90 e0       	ldi	r25, 0x00	; 0
    41fa:	df 91       	pop	r29
    41fc:	cf 91       	pop	r28
    41fe:	1f 91       	pop	r17
    4200:	08 95       	ret

00004202 <_ZN14SoftwareSerial5flushEv>:
    4202:	08 95       	ret

00004204 <_ZN14SoftwareSerial4peekEv>:
    4204:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4208:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    420c:	28 17       	cp	r18, r24
    420e:	39 07       	cpc	r19, r25
    4210:	71 f4       	brne	.+28     	; 0x422e <_ZN14SoftwareSerial4peekEv+0x2a>
    4212:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4216:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    421a:	98 17       	cp	r25, r24
    421c:	41 f0       	breq	.+16     	; 0x422e <_ZN14SoftwareSerial4peekEv+0x2a>
    421e:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4222:	f0 e0       	ldi	r31, 0x00	; 0
    4224:	ea 5b       	subi	r30, 0xBA	; 186
    4226:	fb 4f       	sbci	r31, 0xFB	; 251
    4228:	80 81       	ld	r24, Z
    422a:	90 e0       	ldi	r25, 0x00	; 0
    422c:	08 95       	ret
    422e:	8f ef       	ldi	r24, 0xFF	; 255
    4230:	9f ef       	ldi	r25, 0xFF	; 255
    4232:	08 95       	ret

00004234 <_ZN14SoftwareSerial9availableEv>:
    4234:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4238:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    423c:	28 17       	cp	r18, r24
    423e:	39 07       	cpc	r19, r25
    4240:	71 f4       	brne	.+28     	; 0x425e <_ZN14SoftwareSerial9availableEv+0x2a>
    4242:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4246:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    424a:	90 e0       	ldi	r25, 0x00	; 0
    424c:	80 5c       	subi	r24, 0xC0	; 192
    424e:	9f 4f       	sbci	r25, 0xFF	; 255
    4250:	82 1b       	sub	r24, r18
    4252:	91 09       	sbc	r25, r1
    4254:	60 e4       	ldi	r22, 0x40	; 64
    4256:	70 e0       	ldi	r23, 0x00	; 0
    4258:	0e 94 17 23 	call	0x462e	; 0x462e <__divmodhi4>
    425c:	08 95       	ret
    425e:	80 e0       	ldi	r24, 0x00	; 0
    4260:	90 e0       	ldi	r25, 0x00	; 0
    4262:	08 95       	ret

00004264 <_ZN14SoftwareSerial13stopListeningEv>:
    4264:	e0 91 86 04 	lds	r30, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4268:	f0 91 87 04 	lds	r31, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    426c:	e8 17       	cp	r30, r24
    426e:	f9 07       	cpc	r31, r25
    4270:	69 f4       	brne	.+26     	; 0x428c <_ZN14SoftwareSerial13stopListeningEv+0x28>
    4272:	a3 89       	ldd	r26, Z+19	; 0x13
    4274:	b4 89       	ldd	r27, Z+20	; 0x14
    4276:	9c 91       	ld	r25, X
    4278:	85 89       	ldd	r24, Z+21	; 0x15
    427a:	80 95       	com	r24
    427c:	89 23       	and	r24, r25
    427e:	8c 93       	st	X, r24
    4280:	10 92 87 04 	sts	0x0487, r1	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    4284:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4288:	81 e0       	ldi	r24, 0x01	; 1
    428a:	08 95       	ret
    428c:	80 e0       	ldi	r24, 0x00	; 0
    428e:	08 95       	ret

00004290 <_ZN14SoftwareSerial6listenEv>:
    4290:	cf 93       	push	r28
    4292:	df 93       	push	r29
    4294:	ec 01       	movw	r28, r24
    4296:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4298:	9b 8d       	ldd	r25, Y+27	; 0x1b
    429a:	89 2b       	or	r24, r25
    429c:	f1 f0       	breq	.+60     	; 0x42da <_ZN14SoftwareSerial6listenEv+0x4a>
    429e:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42a2:	90 91 87 04 	lds	r25, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42a6:	c8 17       	cp	r28, r24
    42a8:	d9 07       	cpc	r29, r25
    42aa:	b9 f0       	breq	.+46     	; 0x42da <_ZN14SoftwareSerial6listenEv+0x4a>
    42ac:	00 97       	sbiw	r24, 0x00	; 0
    42ae:	11 f0       	breq	.+4      	; 0x42b4 <_ZN14SoftwareSerial6listenEv+0x24>
    42b0:	0e 94 32 21 	call	0x4264	; 0x4264 <_ZN14SoftwareSerial13stopListeningEv>
    42b4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    42b6:	8e 7f       	andi	r24, 0xFE	; 254
    42b8:	8e 8f       	std	Y+30, r24	; 0x1e
    42ba:	10 92 45 04 	sts	0x0445, r1	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    42be:	10 92 44 04 	sts	0x0444, r1	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    42c2:	d0 93 87 04 	sts	0x0487, r29	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    42c6:	c0 93 86 04 	sts	0x0486, r28	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    42ca:	eb 89       	ldd	r30, Y+19	; 0x13
    42cc:	fc 89       	ldd	r31, Y+20	; 0x14
    42ce:	90 81       	ld	r25, Z
    42d0:	8d 89       	ldd	r24, Y+21	; 0x15
    42d2:	89 2b       	or	r24, r25
    42d4:	80 83       	st	Z, r24
    42d6:	81 e0       	ldi	r24, 0x01	; 1
    42d8:	01 c0       	rjmp	.+2      	; 0x42dc <_ZN14SoftwareSerial6listenEv+0x4c>
    42da:	80 e0       	ldi	r24, 0x00	; 0
    42dc:	df 91       	pop	r29
    42de:	cf 91       	pop	r28
    42e0:	08 95       	ret

000042e2 <__vector_3>:
    42e2:	1f 92       	push	r1
    42e4:	0f 92       	push	r0
    42e6:	0f b6       	in	r0, 0x3f	; 63
    42e8:	0f 92       	push	r0
    42ea:	11 24       	eor	r1, r1
    42ec:	2f 93       	push	r18
    42ee:	3f 93       	push	r19
    42f0:	4f 93       	push	r20
    42f2:	5f 93       	push	r21
    42f4:	6f 93       	push	r22
    42f6:	7f 93       	push	r23
    42f8:	8f 93       	push	r24
    42fa:	9f 93       	push	r25
    42fc:	af 93       	push	r26
    42fe:	bf 93       	push	r27
    4300:	ef 93       	push	r30
    4302:	ff 93       	push	r31
    4304:	e0 91 86 04 	lds	r30, 0x0486	; 0x800486 <_ZN14SoftwareSerial13active_objectE>
    4308:	f0 91 87 04 	lds	r31, 0x0487	; 0x800487 <_ZN14SoftwareSerial13active_objectE+0x1>
    430c:	30 97       	sbiw	r30, 0x00	; 0
    430e:	09 f4       	brne	.+2      	; 0x4312 <__vector_3+0x30>
    4310:	51 c0       	rjmp	.+162    	; 0x43b4 <__vector_3+0xd2>
    4312:	96 8d       	ldd	r25, Z+30	; 0x1e
    4314:	a6 85       	ldd	r26, Z+14	; 0x0e
    4316:	b7 85       	ldd	r27, Z+15	; 0x0f
    4318:	85 85       	ldd	r24, Z+13	; 0x0d
    431a:	91 ff       	sbrs	r25, 1
    431c:	04 c0       	rjmp	.+8      	; 0x4326 <__vector_3+0x44>
    431e:	9c 91       	ld	r25, X
    4320:	89 23       	and	r24, r25
    4322:	29 f4       	brne	.+10     	; 0x432e <__vector_3+0x4c>
    4324:	47 c0       	rjmp	.+142    	; 0x43b4 <__vector_3+0xd2>
    4326:	9c 91       	ld	r25, X
    4328:	89 23       	and	r24, r25
    432a:	09 f0       	breq	.+2      	; 0x432e <__vector_3+0x4c>
    432c:	43 c0       	rjmp	.+134    	; 0x43b4 <__vector_3+0xd2>
    432e:	a3 89       	ldd	r26, Z+19	; 0x13
    4330:	b4 89       	ldd	r27, Z+20	; 0x14
    4332:	9c 91       	ld	r25, X
    4334:	85 89       	ldd	r24, Z+21	; 0x15
    4336:	80 95       	com	r24
    4338:	89 23       	and	r24, r25
    433a:	8c 93       	st	X, r24
    433c:	86 89       	ldd	r24, Z+22	; 0x16
    433e:	97 89       	ldd	r25, Z+23	; 0x17
    4340:	01 97       	sbiw	r24, 0x01	; 1
    4342:	f1 f7       	brne	.-4      	; 0x4340 <__vector_3+0x5e>
    4344:	60 8d       	ldd	r22, Z+24	; 0x18
    4346:	71 8d       	ldd	r23, Z+25	; 0x19
    4348:	a6 85       	ldd	r26, Z+14	; 0x0e
    434a:	b7 85       	ldd	r27, Z+15	; 0x0f
    434c:	55 85       	ldd	r21, Z+13	; 0x0d
    434e:	38 e0       	ldi	r19, 0x08	; 8
    4350:	20 e0       	ldi	r18, 0x00	; 0
    4352:	cb 01       	movw	r24, r22
    4354:	01 97       	sbiw	r24, 0x01	; 1
    4356:	f1 f7       	brne	.-4      	; 0x4354 <__vector_3+0x72>
    4358:	82 2f       	mov	r24, r18
    435a:	90 e0       	ldi	r25, 0x00	; 0
    435c:	95 95       	asr	r25
    435e:	87 95       	ror	r24
    4360:	28 2f       	mov	r18, r24
    4362:	4c 91       	ld	r20, X
    4364:	45 23       	and	r20, r21
    4366:	09 f0       	breq	.+2      	; 0x436a <__vector_3+0x88>
    4368:	20 68       	ori	r18, 0x80	; 128
    436a:	31 50       	subi	r19, 0x01	; 1
    436c:	91 f7       	brne	.-28     	; 0x4352 <__vector_3+0x70>
    436e:	86 8d       	ldd	r24, Z+30	; 0x1e
    4370:	81 fd       	sbrc	r24, 1
    4372:	20 95       	com	r18
    4374:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4378:	90 e0       	ldi	r25, 0x00	; 0
    437a:	01 96       	adiw	r24, 0x01	; 1
    437c:	8f 73       	andi	r24, 0x3F	; 63
    437e:	99 27       	eor	r25, r25
    4380:	30 91 44 04 	lds	r19, 0x0444	; 0x800444 <_ZN14SoftwareSerial20_receive_buffer_headE>
    4384:	38 17       	cp	r19, r24
    4386:	49 f0       	breq	.+18     	; 0x439a <__vector_3+0xb8>
    4388:	a0 91 45 04 	lds	r26, 0x0445	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    438c:	b0 e0       	ldi	r27, 0x00	; 0
    438e:	aa 5b       	subi	r26, 0xBA	; 186
    4390:	bb 4f       	sbci	r27, 0xFB	; 251
    4392:	2c 93       	st	X, r18
    4394:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <_ZN14SoftwareSerial20_receive_buffer_tailE>
    4398:	03 c0       	rjmp	.+6      	; 0x43a0 <__vector_3+0xbe>
    439a:	86 8d       	ldd	r24, Z+30	; 0x1e
    439c:	81 60       	ori	r24, 0x01	; 1
    439e:	86 8f       	std	Z+30, r24	; 0x1e
    43a0:	82 8d       	ldd	r24, Z+26	; 0x1a
    43a2:	93 8d       	ldd	r25, Z+27	; 0x1b
    43a4:	01 97       	sbiw	r24, 0x01	; 1
    43a6:	f1 f7       	brne	.-4      	; 0x43a4 <__vector_3+0xc2>
    43a8:	a3 89       	ldd	r26, Z+19	; 0x13
    43aa:	b4 89       	ldd	r27, Z+20	; 0x14
    43ac:	9c 91       	ld	r25, X
    43ae:	85 89       	ldd	r24, Z+21	; 0x15
    43b0:	89 2b       	or	r24, r25
    43b2:	8c 93       	st	X, r24
    43b4:	ff 91       	pop	r31
    43b6:	ef 91       	pop	r30
    43b8:	bf 91       	pop	r27
    43ba:	af 91       	pop	r26
    43bc:	9f 91       	pop	r25
    43be:	8f 91       	pop	r24
    43c0:	7f 91       	pop	r23
    43c2:	6f 91       	pop	r22
    43c4:	5f 91       	pop	r21
    43c6:	4f 91       	pop	r20
    43c8:	3f 91       	pop	r19
    43ca:	2f 91       	pop	r18
    43cc:	0f 90       	pop	r0
    43ce:	0f be       	out	0x3f, r0	; 63
    43d0:	0f 90       	pop	r0
    43d2:	1f 90       	pop	r1
    43d4:	18 95       	reti

000043d6 <_ZN14SoftwareSerial5setTXEh>:
    43d6:	1f 93       	push	r17
    43d8:	cf 93       	push	r28
    43da:	df 93       	push	r29
    43dc:	ec 01       	movw	r28, r24
    43de:	16 2f       	mov	r17, r22
    43e0:	6e 8d       	ldd	r22, Y+30	; 0x1e
    43e2:	66 95       	lsr	r22
    43e4:	61 70       	andi	r22, 0x01	; 1
    43e6:	81 e0       	ldi	r24, 0x01	; 1
    43e8:	68 27       	eor	r22, r24
    43ea:	81 2f       	mov	r24, r17
    43ec:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
    43f0:	61 e0       	ldi	r22, 0x01	; 1
    43f2:	81 2f       	mov	r24, r17
    43f4:	0e 94 29 1f 	call	0x3e52	; 0x3e52 <pinMode>
    43f8:	81 2f       	mov	r24, r17
    43fa:	90 e0       	ldi	r25, 0x00	; 0
    43fc:	fc 01       	movw	r30, r24
    43fe:	e7 54       	subi	r30, 0x47	; 71
    4400:	f8 4f       	sbci	r31, 0xF8	; 248
    4402:	e4 91       	lpm	r30, Z
    4404:	e8 8b       	std	Y+16, r30	; 0x10
    4406:	fc 01       	movw	r30, r24
    4408:	e3 53       	subi	r30, 0x33	; 51
    440a:	f8 4f       	sbci	r31, 0xF8	; 248
    440c:	e4 91       	lpm	r30, Z
    440e:	f0 e0       	ldi	r31, 0x00	; 0
    4410:	ee 0f       	add	r30, r30
    4412:	ff 1f       	adc	r31, r31
    4414:	e5 51       	subi	r30, 0x15	; 21
    4416:	f8 4f       	sbci	r31, 0xF8	; 248
    4418:	85 91       	lpm	r24, Z+
    441a:	94 91       	lpm	r25, Z
    441c:	9a 8b       	std	Y+18, r25	; 0x12
    441e:	89 8b       	std	Y+17, r24	; 0x11
    4420:	df 91       	pop	r29
    4422:	cf 91       	pop	r28
    4424:	1f 91       	pop	r17
    4426:	08 95       	ret

00004428 <_ZN14SoftwareSerial5setRXEh>:
    4428:	1f 93       	push	r17
    442a:	cf 93       	push	r28
    442c:	df 93       	push	r29
    442e:	ec 01       	movw	r28, r24
    4430:	16 2f       	mov	r17, r22
    4432:	60 e0       	ldi	r22, 0x00	; 0
    4434:	81 2f       	mov	r24, r17
    4436:	0e 94 29 1f 	call	0x3e52	; 0x3e52 <pinMode>
    443a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    443c:	81 fd       	sbrc	r24, 1
    443e:	04 c0       	rjmp	.+8      	; 0x4448 <_ZN14SoftwareSerial5setRXEh+0x20>
    4440:	61 e0       	ldi	r22, 0x01	; 1
    4442:	81 2f       	mov	r24, r17
    4444:	0e 94 65 1f 	call	0x3eca	; 0x3eca <digitalWrite>
    4448:	1c 87       	std	Y+12, r17	; 0x0c
    444a:	81 2f       	mov	r24, r17
    444c:	90 e0       	ldi	r25, 0x00	; 0
    444e:	fc 01       	movw	r30, r24
    4450:	e7 54       	subi	r30, 0x47	; 71
    4452:	f8 4f       	sbci	r31, 0xF8	; 248
    4454:	e4 91       	lpm	r30, Z
    4456:	ed 87       	std	Y+13, r30	; 0x0d
    4458:	fc 01       	movw	r30, r24
    445a:	e3 53       	subi	r30, 0x33	; 51
    445c:	f8 4f       	sbci	r31, 0xF8	; 248
    445e:	e4 91       	lpm	r30, Z
    4460:	f0 e0       	ldi	r31, 0x00	; 0
    4462:	ee 0f       	add	r30, r30
    4464:	ff 1f       	adc	r31, r31
    4466:	ef 51       	subi	r30, 0x1F	; 31
    4468:	f8 4f       	sbci	r31, 0xF8	; 248
    446a:	85 91       	lpm	r24, Z+
    446c:	94 91       	lpm	r25, Z
    446e:	9f 87       	std	Y+15, r25	; 0x0f
    4470:	8e 87       	std	Y+14, r24	; 0x0e
    4472:	df 91       	pop	r29
    4474:	cf 91       	pop	r28
    4476:	1f 91       	pop	r17
    4478:	08 95       	ret

0000447a <_ZN14SoftwareSerialC1Ehhb>:
    447a:	1f 93       	push	r17
    447c:	cf 93       	push	r28
    447e:	df 93       	push	r29
    4480:	ec 01       	movw	r28, r24
    4482:	16 2f       	mov	r17, r22
    4484:	1b 82       	std	Y+3, r1	; 0x03
    4486:	1a 82       	std	Y+2, r1	; 0x02
    4488:	88 ee       	ldi	r24, 0xE8	; 232
    448a:	93 e0       	ldi	r25, 0x03	; 3
    448c:	a0 e0       	ldi	r26, 0x00	; 0
    448e:	b0 e0       	ldi	r27, 0x00	; 0
    4490:	8c 83       	std	Y+4, r24	; 0x04
    4492:	9d 83       	std	Y+5, r25	; 0x05
    4494:	ae 83       	std	Y+6, r26	; 0x06
    4496:	bf 83       	std	Y+7, r27	; 0x07
    4498:	8d e8       	ldi	r24, 0x8D	; 141
    449a:	91 e0       	ldi	r25, 0x01	; 1
    449c:	99 83       	std	Y+1, r25	; 0x01
    449e:	88 83       	st	Y, r24
    44a0:	1f 8a       	std	Y+23, r1	; 0x17
    44a2:	1e 8a       	std	Y+22, r1	; 0x16
    44a4:	19 8e       	std	Y+25, r1	; 0x19
    44a6:	18 8e       	std	Y+24, r1	; 0x18
    44a8:	1b 8e       	std	Y+27, r1	; 0x1b
    44aa:	1a 8e       	std	Y+26, r1	; 0x1a
    44ac:	1d 8e       	std	Y+29, r1	; 0x1d
    44ae:	1c 8e       	std	Y+28, r1	; 0x1c
    44b0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    44b2:	8e 7f       	andi	r24, 0xFE	; 254
    44b4:	20 fb       	bst	r18, 0
    44b6:	81 f9       	bld	r24, 1
    44b8:	8e 8f       	std	Y+30, r24	; 0x1e
    44ba:	64 2f       	mov	r22, r20
    44bc:	ce 01       	movw	r24, r28
    44be:	0e 94 eb 21 	call	0x43d6	; 0x43d6 <_ZN14SoftwareSerial5setTXEh>
    44c2:	61 2f       	mov	r22, r17
    44c4:	ce 01       	movw	r24, r28
    44c6:	df 91       	pop	r29
    44c8:	cf 91       	pop	r28
    44ca:	1f 91       	pop	r17
    44cc:	0c 94 14 22 	jmp	0x4428	; 0x4428 <_ZN14SoftwareSerial5setRXEh>

000044d0 <_ZN14SoftwareSerial5beginEl>:
    44d0:	cf 93       	push	r28
    44d2:	df 93       	push	r29
    44d4:	ec 01       	movw	r28, r24
    44d6:	9a 01       	movw	r18, r20
    44d8:	ab 01       	movw	r20, r22
    44da:	1b 8e       	std	Y+27, r1	; 0x1b
    44dc:	1a 8e       	std	Y+26, r1	; 0x1a
    44de:	19 8e       	std	Y+25, r1	; 0x19
    44e0:	18 8e       	std	Y+24, r1	; 0x18
    44e2:	1f 8a       	std	Y+23, r1	; 0x17
    44e4:	1e 8a       	std	Y+22, r1	; 0x16
    44e6:	60 e0       	ldi	r22, 0x00	; 0
    44e8:	79 e0       	ldi	r23, 0x09	; 9
    44ea:	8d e3       	ldi	r24, 0x3D	; 61
    44ec:	90 e0       	ldi	r25, 0x00	; 0
    44ee:	0e 94 4d 23 	call	0x469a	; 0x469a <__divmodsi4>
    44f2:	f9 01       	movw	r30, r18
    44f4:	24 30       	cpi	r18, 0x04	; 4
    44f6:	31 05       	cpc	r19, r1
    44f8:	18 f0       	brcs	.+6      	; 0x4500 <_ZN14SoftwareSerial5beginEl+0x30>
    44fa:	c9 01       	movw	r24, r18
    44fc:	03 97       	sbiw	r24, 0x03	; 3
    44fe:	02 c0       	rjmp	.+4      	; 0x4504 <_ZN14SoftwareSerial5beginEl+0x34>
    4500:	81 e0       	ldi	r24, 0x01	; 1
    4502:	90 e0       	ldi	r25, 0x00	; 0
    4504:	9d 8f       	std	Y+29, r25	; 0x1d
    4506:	8c 8f       	std	Y+28, r24	; 0x1c
    4508:	6c 85       	ldd	r22, Y+12	; 0x0c
    450a:	66 31       	cpi	r22, 0x16	; 22
    450c:	08 f0       	brcs	.+2      	; 0x4510 <_ZN14SoftwareSerial5beginEl+0x40>
    450e:	69 c0       	rjmp	.+210    	; 0x45e2 <_ZN14SoftwareSerial5beginEl+0x112>
    4510:	c9 01       	movw	r24, r18
    4512:	96 95       	lsr	r25
    4514:	87 95       	ror	r24
    4516:	84 31       	cpi	r24, 0x14	; 20
    4518:	91 05       	cpc	r25, r1
    451a:	10 f0       	brcs	.+4      	; 0x4520 <_ZN14SoftwareSerial5beginEl+0x50>
    451c:	43 97       	sbiw	r24, 0x13	; 19
    451e:	02 c0       	rjmp	.+4      	; 0x4524 <_ZN14SoftwareSerial5beginEl+0x54>
    4520:	81 e0       	ldi	r24, 0x01	; 1
    4522:	90 e0       	ldi	r25, 0x00	; 0
    4524:	9f 8b       	std	Y+23, r25	; 0x17
    4526:	8e 8b       	std	Y+22, r24	; 0x16
    4528:	36 97       	sbiw	r30, 0x06	; 6
    452a:	18 f0       	brcs	.+6      	; 0x4532 <_ZN14SoftwareSerial5beginEl+0x62>
    452c:	c9 01       	movw	r24, r18
    452e:	05 97       	sbiw	r24, 0x05	; 5
    4530:	02 c0       	rjmp	.+4      	; 0x4536 <_ZN14SoftwareSerial5beginEl+0x66>
    4532:	81 e0       	ldi	r24, 0x01	; 1
    4534:	90 e0       	ldi	r25, 0x00	; 0
    4536:	99 8f       	std	Y+25, r25	; 0x19
    4538:	88 8f       	std	Y+24, r24	; 0x18
    453a:	c9 01       	movw	r24, r18
    453c:	88 0f       	add	r24, r24
    453e:	99 1f       	adc	r25, r25
    4540:	28 0f       	add	r18, r24
    4542:	39 1f       	adc	r19, r25
    4544:	36 95       	lsr	r19
    4546:	27 95       	ror	r18
    4548:	36 95       	lsr	r19
    454a:	27 95       	ror	r18
    454c:	2d 30       	cpi	r18, 0x0D	; 13
    454e:	31 05       	cpc	r19, r1
    4550:	18 f0       	brcs	.+6      	; 0x4558 <_ZN14SoftwareSerial5beginEl+0x88>
    4552:	2c 50       	subi	r18, 0x0C	; 12
    4554:	31 09       	sbc	r19, r1
    4556:	02 c0       	rjmp	.+4      	; 0x455c <_ZN14SoftwareSerial5beginEl+0x8c>
    4558:	21 e0       	ldi	r18, 0x01	; 1
    455a:	30 e0       	ldi	r19, 0x00	; 0
    455c:	3b 8f       	std	Y+27, r19	; 0x1b
    455e:	2a 8f       	std	Y+26, r18	; 0x1a
    4560:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    4564:	68 30       	cpi	r22, 0x08	; 8
    4566:	50 f0       	brcs	.+20     	; 0x457c <_ZN14SoftwareSerial5beginEl+0xac>
    4568:	21 e0       	ldi	r18, 0x01	; 1
    456a:	6e 30       	cpi	r22, 0x0E	; 14
    456c:	08 f4       	brcc	.+2      	; 0x4570 <_ZN14SoftwareSerial5beginEl+0xa0>
    456e:	20 e0       	ldi	r18, 0x00	; 0
    4570:	81 e0       	ldi	r24, 0x01	; 1
    4572:	01 c0       	rjmp	.+2      	; 0x4576 <_ZN14SoftwareSerial5beginEl+0xa6>
    4574:	88 0f       	add	r24, r24
    4576:	2a 95       	dec	r18
    4578:	ea f7       	brpl	.-6      	; 0x4574 <_ZN14SoftwareSerial5beginEl+0xa4>
    457a:	01 c0       	rjmp	.+2      	; 0x457e <_ZN14SoftwareSerial5beginEl+0xae>
    457c:	84 e0       	ldi	r24, 0x04	; 4
    457e:	89 2b       	or	r24, r25
    4580:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    4584:	9c 85       	ldd	r25, Y+12	; 0x0c
    4586:	98 30       	cpi	r25, 0x08	; 8
    4588:	38 f0       	brcs	.+14     	; 0x4598 <_ZN14SoftwareSerial5beginEl+0xc8>
    458a:	9e 30       	cpi	r25, 0x0E	; 14
    458c:	40 f0       	brcs	.+16     	; 0x459e <_ZN14SoftwareSerial5beginEl+0xce>
    458e:	96 31       	cpi	r25, 0x16	; 22
    4590:	48 f0       	brcs	.+18     	; 0x45a4 <_ZN14SoftwareSerial5beginEl+0xd4>
    4592:	20 e0       	ldi	r18, 0x00	; 0
    4594:	30 e0       	ldi	r19, 0x00	; 0
    4596:	08 c0       	rjmp	.+16     	; 0x45a8 <_ZN14SoftwareSerial5beginEl+0xd8>
    4598:	2d e6       	ldi	r18, 0x6D	; 109
    459a:	30 e0       	ldi	r19, 0x00	; 0
    459c:	05 c0       	rjmp	.+10     	; 0x45a8 <_ZN14SoftwareSerial5beginEl+0xd8>
    459e:	2b e6       	ldi	r18, 0x6B	; 107
    45a0:	30 e0       	ldi	r19, 0x00	; 0
    45a2:	02 c0       	rjmp	.+4      	; 0x45a8 <_ZN14SoftwareSerial5beginEl+0xd8>
    45a4:	2c e6       	ldi	r18, 0x6C	; 108
    45a6:	30 e0       	ldi	r19, 0x00	; 0
    45a8:	3c 8b       	std	Y+20, r19	; 0x14
    45aa:	2b 8b       	std	Y+19, r18	; 0x13
    45ac:	98 30       	cpi	r25, 0x08	; 8
    45ae:	30 f4       	brcc	.+12     	; 0x45bc <_ZN14SoftwareSerial5beginEl+0xec>
    45b0:	81 e0       	ldi	r24, 0x01	; 1
    45b2:	01 c0       	rjmp	.+2      	; 0x45b6 <_ZN14SoftwareSerial5beginEl+0xe6>
    45b4:	88 0f       	add	r24, r24
    45b6:	9a 95       	dec	r25
    45b8:	ea f7       	brpl	.-6      	; 0x45b4 <_ZN14SoftwareSerial5beginEl+0xe4>
    45ba:	0e c0       	rjmp	.+28     	; 0x45d8 <_ZN14SoftwareSerial5beginEl+0x108>
    45bc:	29 2f       	mov	r18, r25
    45be:	30 e0       	ldi	r19, 0x00	; 0
    45c0:	9e 30       	cpi	r25, 0x0E	; 14
    45c2:	18 f4       	brcc	.+6      	; 0x45ca <_ZN14SoftwareSerial5beginEl+0xfa>
    45c4:	28 50       	subi	r18, 0x08	; 8
    45c6:	31 09       	sbc	r19, r1
    45c8:	02 c0       	rjmp	.+4      	; 0x45ce <_ZN14SoftwareSerial5beginEl+0xfe>
    45ca:	2e 50       	subi	r18, 0x0E	; 14
    45cc:	31 09       	sbc	r19, r1
    45ce:	81 e0       	ldi	r24, 0x01	; 1
    45d0:	01 c0       	rjmp	.+2      	; 0x45d4 <_ZN14SoftwareSerial5beginEl+0x104>
    45d2:	88 0f       	add	r24, r24
    45d4:	2a 95       	dec	r18
    45d6:	ea f7       	brpl	.-6      	; 0x45d2 <_ZN14SoftwareSerial5beginEl+0x102>
    45d8:	8d 8b       	std	Y+21, r24	; 0x15
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    45da:	8c 8d       	ldd	r24, Y+28	; 0x1c
    45dc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    45de:	01 97       	sbiw	r24, 0x01	; 1
    45e0:	f1 f7       	brne	.-4      	; 0x45de <_ZN14SoftwareSerial5beginEl+0x10e>
    45e2:	ce 01       	movw	r24, r28
    45e4:	df 91       	pop	r29
    45e6:	cf 91       	pop	r28
    45e8:	0c 94 48 21 	jmp	0x4290	; 0x4290 <_ZN14SoftwareSerial6listenEv>

000045ec <yield>:
    45ec:	08 95       	ret

000045ee <__udivmodqi4>:
    45ee:	99 1b       	sub	r25, r25
    45f0:	79 e0       	ldi	r23, 0x09	; 9
    45f2:	04 c0       	rjmp	.+8      	; 0x45fc <__udivmodqi4_ep>

000045f4 <__udivmodqi4_loop>:
    45f4:	99 1f       	adc	r25, r25
    45f6:	96 17       	cp	r25, r22
    45f8:	08 f0       	brcs	.+2      	; 0x45fc <__udivmodqi4_ep>
    45fa:	96 1b       	sub	r25, r22

000045fc <__udivmodqi4_ep>:
    45fc:	88 1f       	adc	r24, r24
    45fe:	7a 95       	dec	r23
    4600:	c9 f7       	brne	.-14     	; 0x45f4 <__udivmodqi4_loop>
    4602:	80 95       	com	r24
    4604:	08 95       	ret

00004606 <__udivmodhi4>:
    4606:	aa 1b       	sub	r26, r26
    4608:	bb 1b       	sub	r27, r27
    460a:	51 e1       	ldi	r21, 0x11	; 17
    460c:	07 c0       	rjmp	.+14     	; 0x461c <__udivmodhi4_ep>

0000460e <__udivmodhi4_loop>:
    460e:	aa 1f       	adc	r26, r26
    4610:	bb 1f       	adc	r27, r27
    4612:	a6 17       	cp	r26, r22
    4614:	b7 07       	cpc	r27, r23
    4616:	10 f0       	brcs	.+4      	; 0x461c <__udivmodhi4_ep>
    4618:	a6 1b       	sub	r26, r22
    461a:	b7 0b       	sbc	r27, r23

0000461c <__udivmodhi4_ep>:
    461c:	88 1f       	adc	r24, r24
    461e:	99 1f       	adc	r25, r25
    4620:	5a 95       	dec	r21
    4622:	a9 f7       	brne	.-22     	; 0x460e <__udivmodhi4_loop>
    4624:	80 95       	com	r24
    4626:	90 95       	com	r25
    4628:	bc 01       	movw	r22, r24
    462a:	cd 01       	movw	r24, r26
    462c:	08 95       	ret

0000462e <__divmodhi4>:
    462e:	97 fb       	bst	r25, 7
    4630:	07 2e       	mov	r0, r23
    4632:	16 f4       	brtc	.+4      	; 0x4638 <__divmodhi4+0xa>
    4634:	00 94       	com	r0
    4636:	07 d0       	rcall	.+14     	; 0x4646 <__divmodhi4_neg1>
    4638:	77 fd       	sbrc	r23, 7
    463a:	09 d0       	rcall	.+18     	; 0x464e <__divmodhi4_neg2>
    463c:	0e 94 03 23 	call	0x4606	; 0x4606 <__udivmodhi4>
    4640:	07 fc       	sbrc	r0, 7
    4642:	05 d0       	rcall	.+10     	; 0x464e <__divmodhi4_neg2>
    4644:	3e f4       	brtc	.+14     	; 0x4654 <__divmodhi4_exit>

00004646 <__divmodhi4_neg1>:
    4646:	90 95       	com	r25
    4648:	81 95       	neg	r24
    464a:	9f 4f       	sbci	r25, 0xFF	; 255
    464c:	08 95       	ret

0000464e <__divmodhi4_neg2>:
    464e:	70 95       	com	r23
    4650:	61 95       	neg	r22
    4652:	7f 4f       	sbci	r23, 0xFF	; 255

00004654 <__divmodhi4_exit>:
    4654:	08 95       	ret

00004656 <__udivmodsi4>:
    4656:	a1 e2       	ldi	r26, 0x21	; 33
    4658:	1a 2e       	mov	r1, r26
    465a:	aa 1b       	sub	r26, r26
    465c:	bb 1b       	sub	r27, r27
    465e:	fd 01       	movw	r30, r26
    4660:	0d c0       	rjmp	.+26     	; 0x467c <__udivmodsi4_ep>

00004662 <__udivmodsi4_loop>:
    4662:	aa 1f       	adc	r26, r26
    4664:	bb 1f       	adc	r27, r27
    4666:	ee 1f       	adc	r30, r30
    4668:	ff 1f       	adc	r31, r31
    466a:	a2 17       	cp	r26, r18
    466c:	b3 07       	cpc	r27, r19
    466e:	e4 07       	cpc	r30, r20
    4670:	f5 07       	cpc	r31, r21
    4672:	20 f0       	brcs	.+8      	; 0x467c <__udivmodsi4_ep>
    4674:	a2 1b       	sub	r26, r18
    4676:	b3 0b       	sbc	r27, r19
    4678:	e4 0b       	sbc	r30, r20
    467a:	f5 0b       	sbc	r31, r21

0000467c <__udivmodsi4_ep>:
    467c:	66 1f       	adc	r22, r22
    467e:	77 1f       	adc	r23, r23
    4680:	88 1f       	adc	r24, r24
    4682:	99 1f       	adc	r25, r25
    4684:	1a 94       	dec	r1
    4686:	69 f7       	brne	.-38     	; 0x4662 <__udivmodsi4_loop>
    4688:	60 95       	com	r22
    468a:	70 95       	com	r23
    468c:	80 95       	com	r24
    468e:	90 95       	com	r25
    4690:	9b 01       	movw	r18, r22
    4692:	ac 01       	movw	r20, r24
    4694:	bd 01       	movw	r22, r26
    4696:	cf 01       	movw	r24, r30
    4698:	08 95       	ret

0000469a <__divmodsi4>:
    469a:	05 2e       	mov	r0, r21
    469c:	97 fb       	bst	r25, 7
    469e:	1e f4       	brtc	.+6      	; 0x46a6 <__divmodsi4+0xc>
    46a0:	00 94       	com	r0
    46a2:	0e 94 64 23 	call	0x46c8	; 0x46c8 <__negsi2>
    46a6:	57 fd       	sbrc	r21, 7
    46a8:	07 d0       	rcall	.+14     	; 0x46b8 <__divmodsi4_neg2>
    46aa:	0e 94 2b 23 	call	0x4656	; 0x4656 <__udivmodsi4>
    46ae:	07 fc       	sbrc	r0, 7
    46b0:	03 d0       	rcall	.+6      	; 0x46b8 <__divmodsi4_neg2>
    46b2:	4e f4       	brtc	.+18     	; 0x46c6 <__divmodsi4_exit>
    46b4:	0c 94 64 23 	jmp	0x46c8	; 0x46c8 <__negsi2>

000046b8 <__divmodsi4_neg2>:
    46b8:	50 95       	com	r21
    46ba:	40 95       	com	r20
    46bc:	30 95       	com	r19
    46be:	21 95       	neg	r18
    46c0:	3f 4f       	sbci	r19, 0xFF	; 255
    46c2:	4f 4f       	sbci	r20, 0xFF	; 255
    46c4:	5f 4f       	sbci	r21, 0xFF	; 255

000046c6 <__divmodsi4_exit>:
    46c6:	08 95       	ret

000046c8 <__negsi2>:
    46c8:	90 95       	com	r25
    46ca:	80 95       	com	r24
    46cc:	70 95       	com	r23
    46ce:	61 95       	neg	r22
    46d0:	7f 4f       	sbci	r23, 0xFF	; 255
    46d2:	8f 4f       	sbci	r24, 0xFF	; 255
    46d4:	9f 4f       	sbci	r25, 0xFF	; 255
    46d6:	08 95       	ret

000046d8 <__tablejump2__>:
    46d8:	ee 0f       	add	r30, r30
    46da:	ff 1f       	adc	r31, r31
    46dc:	05 90       	lpm	r0, Z+
    46de:	f4 91       	lpm	r31, Z
    46e0:	e0 2d       	mov	r30, r0
    46e2:	09 94       	ijmp

000046e4 <malloc>:
    46e4:	0f 93       	push	r16
    46e6:	1f 93       	push	r17
    46e8:	cf 93       	push	r28
    46ea:	df 93       	push	r29
    46ec:	82 30       	cpi	r24, 0x02	; 2
    46ee:	91 05       	cpc	r25, r1
    46f0:	10 f4       	brcc	.+4      	; 0x46f6 <malloc+0x12>
    46f2:	82 e0       	ldi	r24, 0x02	; 2
    46f4:	90 e0       	ldi	r25, 0x00	; 0
    46f6:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <__flp>
    46fa:	f0 91 8b 04 	lds	r31, 0x048B	; 0x80048b <__flp+0x1>
    46fe:	20 e0       	ldi	r18, 0x00	; 0
    4700:	30 e0       	ldi	r19, 0x00	; 0
    4702:	a0 e0       	ldi	r26, 0x00	; 0
    4704:	b0 e0       	ldi	r27, 0x00	; 0
    4706:	30 97       	sbiw	r30, 0x00	; 0
    4708:	19 f1       	breq	.+70     	; 0x4750 <malloc+0x6c>
    470a:	40 81       	ld	r20, Z
    470c:	51 81       	ldd	r21, Z+1	; 0x01
    470e:	02 81       	ldd	r16, Z+2	; 0x02
    4710:	13 81       	ldd	r17, Z+3	; 0x03
    4712:	48 17       	cp	r20, r24
    4714:	59 07       	cpc	r21, r25
    4716:	c8 f0       	brcs	.+50     	; 0x474a <malloc+0x66>
    4718:	84 17       	cp	r24, r20
    471a:	95 07       	cpc	r25, r21
    471c:	69 f4       	brne	.+26     	; 0x4738 <malloc+0x54>
    471e:	10 97       	sbiw	r26, 0x00	; 0
    4720:	31 f0       	breq	.+12     	; 0x472e <malloc+0x4a>
    4722:	12 96       	adiw	r26, 0x02	; 2
    4724:	0c 93       	st	X, r16
    4726:	12 97       	sbiw	r26, 0x02	; 2
    4728:	13 96       	adiw	r26, 0x03	; 3
    472a:	1c 93       	st	X, r17
    472c:	27 c0       	rjmp	.+78     	; 0x477c <malloc+0x98>
    472e:	00 93 8a 04 	sts	0x048A, r16	; 0x80048a <__flp>
    4732:	10 93 8b 04 	sts	0x048B, r17	; 0x80048b <__flp+0x1>
    4736:	22 c0       	rjmp	.+68     	; 0x477c <malloc+0x98>
    4738:	21 15       	cp	r18, r1
    473a:	31 05       	cpc	r19, r1
    473c:	19 f0       	breq	.+6      	; 0x4744 <malloc+0x60>
    473e:	42 17       	cp	r20, r18
    4740:	53 07       	cpc	r21, r19
    4742:	18 f4       	brcc	.+6      	; 0x474a <malloc+0x66>
    4744:	9a 01       	movw	r18, r20
    4746:	bd 01       	movw	r22, r26
    4748:	ef 01       	movw	r28, r30
    474a:	df 01       	movw	r26, r30
    474c:	f8 01       	movw	r30, r16
    474e:	db cf       	rjmp	.-74     	; 0x4706 <malloc+0x22>
    4750:	21 15       	cp	r18, r1
    4752:	31 05       	cpc	r19, r1
    4754:	f9 f0       	breq	.+62     	; 0x4794 <malloc+0xb0>
    4756:	28 1b       	sub	r18, r24
    4758:	39 0b       	sbc	r19, r25
    475a:	24 30       	cpi	r18, 0x04	; 4
    475c:	31 05       	cpc	r19, r1
    475e:	80 f4       	brcc	.+32     	; 0x4780 <malloc+0x9c>
    4760:	8a 81       	ldd	r24, Y+2	; 0x02
    4762:	9b 81       	ldd	r25, Y+3	; 0x03
    4764:	61 15       	cp	r22, r1
    4766:	71 05       	cpc	r23, r1
    4768:	21 f0       	breq	.+8      	; 0x4772 <malloc+0x8e>
    476a:	fb 01       	movw	r30, r22
    476c:	93 83       	std	Z+3, r25	; 0x03
    476e:	82 83       	std	Z+2, r24	; 0x02
    4770:	04 c0       	rjmp	.+8      	; 0x477a <malloc+0x96>
    4772:	90 93 8b 04 	sts	0x048B, r25	; 0x80048b <__flp+0x1>
    4776:	80 93 8a 04 	sts	0x048A, r24	; 0x80048a <__flp>
    477a:	fe 01       	movw	r30, r28
    477c:	32 96       	adiw	r30, 0x02	; 2
    477e:	44 c0       	rjmp	.+136    	; 0x4808 <malloc+0x124>
    4780:	fe 01       	movw	r30, r28
    4782:	e2 0f       	add	r30, r18
    4784:	f3 1f       	adc	r31, r19
    4786:	81 93       	st	Z+, r24
    4788:	91 93       	st	Z+, r25
    478a:	22 50       	subi	r18, 0x02	; 2
    478c:	31 09       	sbc	r19, r1
    478e:	39 83       	std	Y+1, r19	; 0x01
    4790:	28 83       	st	Y, r18
    4792:	3a c0       	rjmp	.+116    	; 0x4808 <malloc+0x124>
    4794:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    4798:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    479c:	23 2b       	or	r18, r19
    479e:	41 f4       	brne	.+16     	; 0x47b0 <malloc+0xcc>
    47a0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    47a4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    47a8:	30 93 89 04 	sts	0x0489, r19	; 0x800489 <__brkval+0x1>
    47ac:	20 93 88 04 	sts	0x0488, r18	; 0x800488 <__brkval>
    47b0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    47b4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    47b8:	21 15       	cp	r18, r1
    47ba:	31 05       	cpc	r19, r1
    47bc:	41 f4       	brne	.+16     	; 0x47ce <malloc+0xea>
    47be:	2d b7       	in	r18, 0x3d	; 61
    47c0:	3e b7       	in	r19, 0x3e	; 62
    47c2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    47c6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    47ca:	24 1b       	sub	r18, r20
    47cc:	35 0b       	sbc	r19, r21
    47ce:	e0 91 88 04 	lds	r30, 0x0488	; 0x800488 <__brkval>
    47d2:	f0 91 89 04 	lds	r31, 0x0489	; 0x800489 <__brkval+0x1>
    47d6:	e2 17       	cp	r30, r18
    47d8:	f3 07       	cpc	r31, r19
    47da:	a0 f4       	brcc	.+40     	; 0x4804 <malloc+0x120>
    47dc:	2e 1b       	sub	r18, r30
    47de:	3f 0b       	sbc	r19, r31
    47e0:	28 17       	cp	r18, r24
    47e2:	39 07       	cpc	r19, r25
    47e4:	78 f0       	brcs	.+30     	; 0x4804 <malloc+0x120>
    47e6:	ac 01       	movw	r20, r24
    47e8:	4e 5f       	subi	r20, 0xFE	; 254
    47ea:	5f 4f       	sbci	r21, 0xFF	; 255
    47ec:	24 17       	cp	r18, r20
    47ee:	35 07       	cpc	r19, r21
    47f0:	48 f0       	brcs	.+18     	; 0x4804 <malloc+0x120>
    47f2:	4e 0f       	add	r20, r30
    47f4:	5f 1f       	adc	r21, r31
    47f6:	50 93 89 04 	sts	0x0489, r21	; 0x800489 <__brkval+0x1>
    47fa:	40 93 88 04 	sts	0x0488, r20	; 0x800488 <__brkval>
    47fe:	81 93       	st	Z+, r24
    4800:	91 93       	st	Z+, r25
    4802:	02 c0       	rjmp	.+4      	; 0x4808 <malloc+0x124>
    4804:	e0 e0       	ldi	r30, 0x00	; 0
    4806:	f0 e0       	ldi	r31, 0x00	; 0
    4808:	cf 01       	movw	r24, r30
    480a:	df 91       	pop	r29
    480c:	cf 91       	pop	r28
    480e:	1f 91       	pop	r17
    4810:	0f 91       	pop	r16
    4812:	08 95       	ret

00004814 <free>:
    4814:	cf 93       	push	r28
    4816:	df 93       	push	r29
    4818:	00 97       	sbiw	r24, 0x00	; 0
    481a:	09 f4       	brne	.+2      	; 0x481e <free+0xa>
    481c:	81 c0       	rjmp	.+258    	; 0x4920 <free+0x10c>
    481e:	fc 01       	movw	r30, r24
    4820:	32 97       	sbiw	r30, 0x02	; 2
    4822:	13 82       	std	Z+3, r1	; 0x03
    4824:	12 82       	std	Z+2, r1	; 0x02
    4826:	a0 91 8a 04 	lds	r26, 0x048A	; 0x80048a <__flp>
    482a:	b0 91 8b 04 	lds	r27, 0x048B	; 0x80048b <__flp+0x1>
    482e:	10 97       	sbiw	r26, 0x00	; 0
    4830:	81 f4       	brne	.+32     	; 0x4852 <free+0x3e>
    4832:	20 81       	ld	r18, Z
    4834:	31 81       	ldd	r19, Z+1	; 0x01
    4836:	82 0f       	add	r24, r18
    4838:	93 1f       	adc	r25, r19
    483a:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    483e:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    4842:	28 17       	cp	r18, r24
    4844:	39 07       	cpc	r19, r25
    4846:	51 f5       	brne	.+84     	; 0x489c <free+0x88>
    4848:	f0 93 89 04 	sts	0x0489, r31	; 0x800489 <__brkval+0x1>
    484c:	e0 93 88 04 	sts	0x0488, r30	; 0x800488 <__brkval>
    4850:	67 c0       	rjmp	.+206    	; 0x4920 <free+0x10c>
    4852:	ed 01       	movw	r28, r26
    4854:	20 e0       	ldi	r18, 0x00	; 0
    4856:	30 e0       	ldi	r19, 0x00	; 0
    4858:	ce 17       	cp	r28, r30
    485a:	df 07       	cpc	r29, r31
    485c:	40 f4       	brcc	.+16     	; 0x486e <free+0x5a>
    485e:	4a 81       	ldd	r20, Y+2	; 0x02
    4860:	5b 81       	ldd	r21, Y+3	; 0x03
    4862:	9e 01       	movw	r18, r28
    4864:	41 15       	cp	r20, r1
    4866:	51 05       	cpc	r21, r1
    4868:	f1 f0       	breq	.+60     	; 0x48a6 <free+0x92>
    486a:	ea 01       	movw	r28, r20
    486c:	f5 cf       	rjmp	.-22     	; 0x4858 <free+0x44>
    486e:	d3 83       	std	Z+3, r29	; 0x03
    4870:	c2 83       	std	Z+2, r28	; 0x02
    4872:	40 81       	ld	r20, Z
    4874:	51 81       	ldd	r21, Z+1	; 0x01
    4876:	84 0f       	add	r24, r20
    4878:	95 1f       	adc	r25, r21
    487a:	c8 17       	cp	r28, r24
    487c:	d9 07       	cpc	r29, r25
    487e:	59 f4       	brne	.+22     	; 0x4896 <free+0x82>
    4880:	88 81       	ld	r24, Y
    4882:	99 81       	ldd	r25, Y+1	; 0x01
    4884:	84 0f       	add	r24, r20
    4886:	95 1f       	adc	r25, r21
    4888:	02 96       	adiw	r24, 0x02	; 2
    488a:	91 83       	std	Z+1, r25	; 0x01
    488c:	80 83       	st	Z, r24
    488e:	8a 81       	ldd	r24, Y+2	; 0x02
    4890:	9b 81       	ldd	r25, Y+3	; 0x03
    4892:	93 83       	std	Z+3, r25	; 0x03
    4894:	82 83       	std	Z+2, r24	; 0x02
    4896:	21 15       	cp	r18, r1
    4898:	31 05       	cpc	r19, r1
    489a:	29 f4       	brne	.+10     	; 0x48a6 <free+0x92>
    489c:	f0 93 8b 04 	sts	0x048B, r31	; 0x80048b <__flp+0x1>
    48a0:	e0 93 8a 04 	sts	0x048A, r30	; 0x80048a <__flp>
    48a4:	3d c0       	rjmp	.+122    	; 0x4920 <free+0x10c>
    48a6:	e9 01       	movw	r28, r18
    48a8:	fb 83       	std	Y+3, r31	; 0x03
    48aa:	ea 83       	std	Y+2, r30	; 0x02
    48ac:	49 91       	ld	r20, Y+
    48ae:	59 91       	ld	r21, Y+
    48b0:	c4 0f       	add	r28, r20
    48b2:	d5 1f       	adc	r29, r21
    48b4:	ec 17       	cp	r30, r28
    48b6:	fd 07       	cpc	r31, r29
    48b8:	61 f4       	brne	.+24     	; 0x48d2 <free+0xbe>
    48ba:	80 81       	ld	r24, Z
    48bc:	91 81       	ldd	r25, Z+1	; 0x01
    48be:	84 0f       	add	r24, r20
    48c0:	95 1f       	adc	r25, r21
    48c2:	02 96       	adiw	r24, 0x02	; 2
    48c4:	e9 01       	movw	r28, r18
    48c6:	99 83       	std	Y+1, r25	; 0x01
    48c8:	88 83       	st	Y, r24
    48ca:	82 81       	ldd	r24, Z+2	; 0x02
    48cc:	93 81       	ldd	r25, Z+3	; 0x03
    48ce:	9b 83       	std	Y+3, r25	; 0x03
    48d0:	8a 83       	std	Y+2, r24	; 0x02
    48d2:	e0 e0       	ldi	r30, 0x00	; 0
    48d4:	f0 e0       	ldi	r31, 0x00	; 0
    48d6:	12 96       	adiw	r26, 0x02	; 2
    48d8:	8d 91       	ld	r24, X+
    48da:	9c 91       	ld	r25, X
    48dc:	13 97       	sbiw	r26, 0x03	; 3
    48de:	00 97       	sbiw	r24, 0x00	; 0
    48e0:	19 f0       	breq	.+6      	; 0x48e8 <free+0xd4>
    48e2:	fd 01       	movw	r30, r26
    48e4:	dc 01       	movw	r26, r24
    48e6:	f7 cf       	rjmp	.-18     	; 0x48d6 <free+0xc2>
    48e8:	8d 91       	ld	r24, X+
    48ea:	9c 91       	ld	r25, X
    48ec:	11 97       	sbiw	r26, 0x01	; 1
    48ee:	9d 01       	movw	r18, r26
    48f0:	2e 5f       	subi	r18, 0xFE	; 254
    48f2:	3f 4f       	sbci	r19, 0xFF	; 255
    48f4:	82 0f       	add	r24, r18
    48f6:	93 1f       	adc	r25, r19
    48f8:	20 91 88 04 	lds	r18, 0x0488	; 0x800488 <__brkval>
    48fc:	30 91 89 04 	lds	r19, 0x0489	; 0x800489 <__brkval+0x1>
    4900:	28 17       	cp	r18, r24
    4902:	39 07       	cpc	r19, r25
    4904:	69 f4       	brne	.+26     	; 0x4920 <free+0x10c>
    4906:	30 97       	sbiw	r30, 0x00	; 0
    4908:	29 f4       	brne	.+10     	; 0x4914 <free+0x100>
    490a:	10 92 8b 04 	sts	0x048B, r1	; 0x80048b <__flp+0x1>
    490e:	10 92 8a 04 	sts	0x048A, r1	; 0x80048a <__flp>
    4912:	02 c0       	rjmp	.+4      	; 0x4918 <free+0x104>
    4914:	13 82       	std	Z+3, r1	; 0x03
    4916:	12 82       	std	Z+2, r1	; 0x02
    4918:	b0 93 89 04 	sts	0x0489, r27	; 0x800489 <__brkval+0x1>
    491c:	a0 93 88 04 	sts	0x0488, r26	; 0x800488 <__brkval>
    4920:	df 91       	pop	r29
    4922:	cf 91       	pop	r28
    4924:	08 95       	ret

00004926 <realloc>:
    4926:	a0 e0       	ldi	r26, 0x00	; 0
    4928:	b0 e0       	ldi	r27, 0x00	; 0
    492a:	e9 e9       	ldi	r30, 0x99	; 153
    492c:	f4 e2       	ldi	r31, 0x24	; 36
    492e:	0c 94 ff 25 	jmp	0x4bfe	; 0x4bfe <__prologue_saves__+0x8>
    4932:	ec 01       	movw	r28, r24
    4934:	00 97       	sbiw	r24, 0x00	; 0
    4936:	21 f4       	brne	.+8      	; 0x4940 <realloc+0x1a>
    4938:	cb 01       	movw	r24, r22
    493a:	0e 94 72 23 	call	0x46e4	; 0x46e4 <malloc>
    493e:	b4 c0       	rjmp	.+360    	; 0x4aa8 <realloc+0x182>
    4940:	fc 01       	movw	r30, r24
    4942:	e6 0f       	add	r30, r22
    4944:	f7 1f       	adc	r31, r23
    4946:	9c 01       	movw	r18, r24
    4948:	22 50       	subi	r18, 0x02	; 2
    494a:	31 09       	sbc	r19, r1
    494c:	e2 17       	cp	r30, r18
    494e:	f3 07       	cpc	r31, r19
    4950:	08 f4       	brcc	.+2      	; 0x4954 <realloc+0x2e>
    4952:	a8 c0       	rjmp	.+336    	; 0x4aa4 <realloc+0x17e>
    4954:	d9 01       	movw	r26, r18
    4956:	0d 91       	ld	r16, X+
    4958:	1c 91       	ld	r17, X
    495a:	11 97       	sbiw	r26, 0x01	; 1
    495c:	06 17       	cp	r16, r22
    495e:	17 07       	cpc	r17, r23
    4960:	b0 f0       	brcs	.+44     	; 0x498e <realloc+0x68>
    4962:	05 30       	cpi	r16, 0x05	; 5
    4964:	11 05       	cpc	r17, r1
    4966:	08 f4       	brcc	.+2      	; 0x496a <realloc+0x44>
    4968:	9b c0       	rjmp	.+310    	; 0x4aa0 <realloc+0x17a>
    496a:	c8 01       	movw	r24, r16
    496c:	04 97       	sbiw	r24, 0x04	; 4
    496e:	86 17       	cp	r24, r22
    4970:	97 07       	cpc	r25, r23
    4972:	08 f4       	brcc	.+2      	; 0x4976 <realloc+0x50>
    4974:	95 c0       	rjmp	.+298    	; 0x4aa0 <realloc+0x17a>
    4976:	02 50       	subi	r16, 0x02	; 2
    4978:	11 09       	sbc	r17, r1
    497a:	06 1b       	sub	r16, r22
    497c:	17 0b       	sbc	r17, r23
    497e:	01 93       	st	Z+, r16
    4980:	11 93       	st	Z+, r17
    4982:	6d 93       	st	X+, r22
    4984:	7c 93       	st	X, r23
    4986:	cf 01       	movw	r24, r30
    4988:	0e 94 0a 24 	call	0x4814	; 0x4814 <free>
    498c:	89 c0       	rjmp	.+274    	; 0x4aa0 <realloc+0x17a>
    498e:	5b 01       	movw	r10, r22
    4990:	a0 1a       	sub	r10, r16
    4992:	b1 0a       	sbc	r11, r17
    4994:	4c 01       	movw	r8, r24
    4996:	80 0e       	add	r8, r16
    4998:	91 1e       	adc	r9, r17
    499a:	a0 91 8a 04 	lds	r26, 0x048A	; 0x80048a <__flp>
    499e:	b0 91 8b 04 	lds	r27, 0x048B	; 0x80048b <__flp+0x1>
    49a2:	61 2c       	mov	r6, r1
    49a4:	71 2c       	mov	r7, r1
    49a6:	e1 2c       	mov	r14, r1
    49a8:	f1 2c       	mov	r15, r1
    49aa:	10 97       	sbiw	r26, 0x00	; 0
    49ac:	09 f4       	brne	.+2      	; 0x49b0 <realloc+0x8a>
    49ae:	46 c0       	rjmp	.+140    	; 0x4a3c <realloc+0x116>
    49b0:	8d 91       	ld	r24, X+
    49b2:	9c 91       	ld	r25, X
    49b4:	11 97       	sbiw	r26, 0x01	; 1
    49b6:	a8 15       	cp	r26, r8
    49b8:	b9 05       	cpc	r27, r9
    49ba:	b1 f5       	brne	.+108    	; 0x4a28 <realloc+0x102>
    49bc:	6c 01       	movw	r12, r24
    49be:	42 e0       	ldi	r20, 0x02	; 2
    49c0:	c4 0e       	add	r12, r20
    49c2:	d1 1c       	adc	r13, r1
    49c4:	ca 14       	cp	r12, r10
    49c6:	db 04       	cpc	r13, r11
    49c8:	78 f1       	brcs	.+94     	; 0x4a28 <realloc+0x102>
    49ca:	4c 01       	movw	r8, r24
    49cc:	8a 18       	sub	r8, r10
    49ce:	9b 08       	sbc	r9, r11
    49d0:	64 01       	movw	r12, r8
    49d2:	42 e0       	ldi	r20, 0x02	; 2
    49d4:	c4 0e       	add	r12, r20
    49d6:	d1 1c       	adc	r13, r1
    49d8:	12 96       	adiw	r26, 0x02	; 2
    49da:	bc 90       	ld	r11, X
    49dc:	12 97       	sbiw	r26, 0x02	; 2
    49de:	13 96       	adiw	r26, 0x03	; 3
    49e0:	ac 91       	ld	r26, X
    49e2:	b5 e0       	ldi	r27, 0x05	; 5
    49e4:	cb 16       	cp	r12, r27
    49e6:	d1 04       	cpc	r13, r1
    49e8:	40 f0       	brcs	.+16     	; 0x49fa <realloc+0xd4>
    49ea:	b2 82       	std	Z+2, r11	; 0x02
    49ec:	a3 83       	std	Z+3, r26	; 0x03
    49ee:	91 82       	std	Z+1, r9	; 0x01
    49f0:	80 82       	st	Z, r8
    49f2:	d9 01       	movw	r26, r18
    49f4:	6d 93       	st	X+, r22
    49f6:	7c 93       	st	X, r23
    49f8:	09 c0       	rjmp	.+18     	; 0x4a0c <realloc+0xe6>
    49fa:	0e 5f       	subi	r16, 0xFE	; 254
    49fc:	1f 4f       	sbci	r17, 0xFF	; 255
    49fe:	80 0f       	add	r24, r16
    4a00:	91 1f       	adc	r25, r17
    4a02:	f9 01       	movw	r30, r18
    4a04:	91 83       	std	Z+1, r25	; 0x01
    4a06:	80 83       	st	Z, r24
    4a08:	eb 2d       	mov	r30, r11
    4a0a:	fa 2f       	mov	r31, r26
    4a0c:	e1 14       	cp	r14, r1
    4a0e:	f1 04       	cpc	r15, r1
    4a10:	31 f0       	breq	.+12     	; 0x4a1e <realloc+0xf8>
    4a12:	d7 01       	movw	r26, r14
    4a14:	13 96       	adiw	r26, 0x03	; 3
    4a16:	fc 93       	st	X, r31
    4a18:	ee 93       	st	-X, r30
    4a1a:	12 97       	sbiw	r26, 0x02	; 2
    4a1c:	41 c0       	rjmp	.+130    	; 0x4aa0 <realloc+0x17a>
    4a1e:	f0 93 8b 04 	sts	0x048B, r31	; 0x80048b <__flp+0x1>
    4a22:	e0 93 8a 04 	sts	0x048A, r30	; 0x80048a <__flp>
    4a26:	3c c0       	rjmp	.+120    	; 0x4aa0 <realloc+0x17a>
    4a28:	68 16       	cp	r6, r24
    4a2a:	79 06       	cpc	r7, r25
    4a2c:	08 f4       	brcc	.+2      	; 0x4a30 <realloc+0x10a>
    4a2e:	3c 01       	movw	r6, r24
    4a30:	7d 01       	movw	r14, r26
    4a32:	12 96       	adiw	r26, 0x02	; 2
    4a34:	0d 90       	ld	r0, X+
    4a36:	bc 91       	ld	r27, X
    4a38:	a0 2d       	mov	r26, r0
    4a3a:	b7 cf       	rjmp	.-146    	; 0x49aa <realloc+0x84>
    4a3c:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__brkval>
    4a40:	90 91 89 04 	lds	r25, 0x0489	; 0x800489 <__brkval+0x1>
    4a44:	88 16       	cp	r8, r24
    4a46:	99 06       	cpc	r9, r25
    4a48:	e1 f4       	brne	.+56     	; 0x4a82 <realloc+0x15c>
    4a4a:	66 16       	cp	r6, r22
    4a4c:	77 06       	cpc	r7, r23
    4a4e:	c8 f4       	brcc	.+50     	; 0x4a82 <realloc+0x15c>
    4a50:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    4a54:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    4a58:	00 97       	sbiw	r24, 0x00	; 0
    4a5a:	41 f4       	brne	.+16     	; 0x4a6c <realloc+0x146>
    4a5c:	8d b7       	in	r24, 0x3d	; 61
    4a5e:	9e b7       	in	r25, 0x3e	; 62
    4a60:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    4a64:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    4a68:	84 1b       	sub	r24, r20
    4a6a:	95 0b       	sbc	r25, r21
    4a6c:	e8 17       	cp	r30, r24
    4a6e:	f9 07       	cpc	r31, r25
    4a70:	c8 f4       	brcc	.+50     	; 0x4aa4 <realloc+0x17e>
    4a72:	f0 93 89 04 	sts	0x0489, r31	; 0x800489 <__brkval+0x1>
    4a76:	e0 93 88 04 	sts	0x0488, r30	; 0x800488 <__brkval>
    4a7a:	f9 01       	movw	r30, r18
    4a7c:	71 83       	std	Z+1, r23	; 0x01
    4a7e:	60 83       	st	Z, r22
    4a80:	0f c0       	rjmp	.+30     	; 0x4aa0 <realloc+0x17a>
    4a82:	cb 01       	movw	r24, r22
    4a84:	0e 94 72 23 	call	0x46e4	; 0x46e4 <malloc>
    4a88:	7c 01       	movw	r14, r24
    4a8a:	00 97       	sbiw	r24, 0x00	; 0
    4a8c:	59 f0       	breq	.+22     	; 0x4aa4 <realloc+0x17e>
    4a8e:	a8 01       	movw	r20, r16
    4a90:	be 01       	movw	r22, r28
    4a92:	0e 94 a3 25 	call	0x4b46	; 0x4b46 <memcpy>
    4a96:	ce 01       	movw	r24, r28
    4a98:	0e 94 0a 24 	call	0x4814	; 0x4814 <free>
    4a9c:	c7 01       	movw	r24, r14
    4a9e:	04 c0       	rjmp	.+8      	; 0x4aa8 <realloc+0x182>
    4aa0:	ce 01       	movw	r24, r28
    4aa2:	02 c0       	rjmp	.+4      	; 0x4aa8 <realloc+0x182>
    4aa4:	80 e0       	ldi	r24, 0x00	; 0
    4aa6:	90 e0       	ldi	r25, 0x00	; 0
    4aa8:	cd b7       	in	r28, 0x3d	; 61
    4aaa:	de b7       	in	r29, 0x3e	; 62
    4aac:	ee e0       	ldi	r30, 0x0E	; 14
    4aae:	0c 94 1b 26 	jmp	0x4c36	; 0x4c36 <__epilogue_restores__+0x8>

00004ab2 <atoi>:
    4ab2:	fc 01       	movw	r30, r24
    4ab4:	88 27       	eor	r24, r24
    4ab6:	99 27       	eor	r25, r25
    4ab8:	e8 94       	clt
    4aba:	21 91       	ld	r18, Z+
    4abc:	20 32       	cpi	r18, 0x20	; 32
    4abe:	e9 f3       	breq	.-6      	; 0x4aba <atoi+0x8>
    4ac0:	29 30       	cpi	r18, 0x09	; 9
    4ac2:	10 f0       	brcs	.+4      	; 0x4ac8 <atoi+0x16>
    4ac4:	2e 30       	cpi	r18, 0x0E	; 14
    4ac6:	c8 f3       	brcs	.-14     	; 0x4aba <atoi+0x8>
    4ac8:	2b 32       	cpi	r18, 0x2B	; 43
    4aca:	41 f0       	breq	.+16     	; 0x4adc <atoi+0x2a>
    4acc:	2d 32       	cpi	r18, 0x2D	; 45
    4ace:	39 f4       	brne	.+14     	; 0x4ade <atoi+0x2c>
    4ad0:	68 94       	set
    4ad2:	04 c0       	rjmp	.+8      	; 0x4adc <atoi+0x2a>
    4ad4:	0e 94 c9 25 	call	0x4b92	; 0x4b92 <__mulhi_const_10>
    4ad8:	82 0f       	add	r24, r18
    4ada:	91 1d       	adc	r25, r1
    4adc:	21 91       	ld	r18, Z+
    4ade:	20 53       	subi	r18, 0x30	; 48
    4ae0:	2a 30       	cpi	r18, 0x0A	; 10
    4ae2:	c0 f3       	brcs	.-16     	; 0x4ad4 <atoi+0x22>
    4ae4:	1e f4       	brtc	.+6      	; 0x4aec <atoi+0x3a>
    4ae6:	90 95       	com	r25
    4ae8:	81 95       	neg	r24
    4aea:	9f 4f       	sbci	r25, 0xFF	; 255
    4aec:	08 95       	ret

00004aee <strcmp_P>:
    4aee:	fb 01       	movw	r30, r22
    4af0:	dc 01       	movw	r26, r24
    4af2:	8d 91       	ld	r24, X+
    4af4:	05 90       	lpm	r0, Z+
    4af6:	80 19       	sub	r24, r0
    4af8:	01 10       	cpse	r0, r1
    4afa:	d9 f3       	breq	.-10     	; 0x4af2 <strcmp_P+0x4>
    4afc:	99 0b       	sbc	r25, r25
    4afe:	08 95       	ret

00004b00 <__strlen_P>:
    4b00:	fc 01       	movw	r30, r24
    4b02:	05 90       	lpm	r0, Z+
    4b04:	00 20       	and	r0, r0
    4b06:	e9 f7       	brne	.-6      	; 0x4b02 <__strlen_P+0x2>
    4b08:	80 95       	com	r24
    4b0a:	90 95       	com	r25
    4b0c:	8e 0f       	add	r24, r30
    4b0e:	9f 1f       	adc	r25, r31
    4b10:	08 95       	ret

00004b12 <strstr_P>:
    4b12:	fb 01       	movw	r30, r22
    4b14:	55 91       	lpm	r21, Z+
    4b16:	55 23       	and	r21, r21
    4b18:	a9 f0       	breq	.+42     	; 0x4b44 <strstr_P+0x32>
    4b1a:	bf 01       	movw	r22, r30
    4b1c:	dc 01       	movw	r26, r24
    4b1e:	4d 91       	ld	r20, X+
    4b20:	45 17       	cp	r20, r21
    4b22:	41 11       	cpse	r20, r1
    4b24:	e1 f7       	brne	.-8      	; 0x4b1e <strstr_P+0xc>
    4b26:	59 f4       	brne	.+22     	; 0x4b3e <strstr_P+0x2c>
    4b28:	cd 01       	movw	r24, r26
    4b2a:	05 90       	lpm	r0, Z+
    4b2c:	00 20       	and	r0, r0
    4b2e:	49 f0       	breq	.+18     	; 0x4b42 <strstr_P+0x30>
    4b30:	4d 91       	ld	r20, X+
    4b32:	40 15       	cp	r20, r0
    4b34:	41 11       	cpse	r20, r1
    4b36:	c9 f3       	breq	.-14     	; 0x4b2a <strstr_P+0x18>
    4b38:	fb 01       	movw	r30, r22
    4b3a:	41 11       	cpse	r20, r1
    4b3c:	ef cf       	rjmp	.-34     	; 0x4b1c <strstr_P+0xa>
    4b3e:	81 e0       	ldi	r24, 0x01	; 1
    4b40:	90 e0       	ldi	r25, 0x00	; 0
    4b42:	01 97       	sbiw	r24, 0x01	; 1
    4b44:	08 95       	ret

00004b46 <memcpy>:
    4b46:	fb 01       	movw	r30, r22
    4b48:	dc 01       	movw	r26, r24
    4b4a:	02 c0       	rjmp	.+4      	; 0x4b50 <memcpy+0xa>
    4b4c:	01 90       	ld	r0, Z+
    4b4e:	0d 92       	st	X+, r0
    4b50:	41 50       	subi	r20, 0x01	; 1
    4b52:	50 40       	sbci	r21, 0x00	; 0
    4b54:	d8 f7       	brcc	.-10     	; 0x4b4c <memcpy+0x6>
    4b56:	08 95       	ret

00004b58 <strchr>:
    4b58:	fc 01       	movw	r30, r24
    4b5a:	81 91       	ld	r24, Z+
    4b5c:	86 17       	cp	r24, r22
    4b5e:	21 f0       	breq	.+8      	; 0x4b68 <strchr+0x10>
    4b60:	88 23       	and	r24, r24
    4b62:	d9 f7       	brne	.-10     	; 0x4b5a <strchr+0x2>
    4b64:	99 27       	eor	r25, r25
    4b66:	08 95       	ret
    4b68:	31 97       	sbiw	r30, 0x01	; 1
    4b6a:	cf 01       	movw	r24, r30
    4b6c:	08 95       	ret

00004b6e <strcpy>:
    4b6e:	fb 01       	movw	r30, r22
    4b70:	dc 01       	movw	r26, r24
    4b72:	01 90       	ld	r0, Z+
    4b74:	0d 92       	st	X+, r0
    4b76:	00 20       	and	r0, r0
    4b78:	e1 f7       	brne	.-8      	; 0x4b72 <strcpy+0x4>
    4b7a:	08 95       	ret

00004b7c <__itoa_ncheck>:
    4b7c:	bb 27       	eor	r27, r27
    4b7e:	4a 30       	cpi	r20, 0x0A	; 10
    4b80:	31 f4       	brne	.+12     	; 0x4b8e <__itoa_ncheck+0x12>
    4b82:	99 23       	and	r25, r25
    4b84:	22 f4       	brpl	.+8      	; 0x4b8e <__itoa_ncheck+0x12>
    4b86:	bd e2       	ldi	r27, 0x2D	; 45
    4b88:	90 95       	com	r25
    4b8a:	81 95       	neg	r24
    4b8c:	9f 4f       	sbci	r25, 0xFF	; 255
    4b8e:	0c 94 d2 25 	jmp	0x4ba4	; 0x4ba4 <__utoa_common>

00004b92 <__mulhi_const_10>:
    4b92:	7a e0       	ldi	r23, 0x0A	; 10
    4b94:	97 9f       	mul	r25, r23
    4b96:	90 2d       	mov	r25, r0
    4b98:	87 9f       	mul	r24, r23
    4b9a:	80 2d       	mov	r24, r0
    4b9c:	91 0d       	add	r25, r1
    4b9e:	11 24       	eor	r1, r1
    4ba0:	08 95       	ret

00004ba2 <__utoa_ncheck>:
    4ba2:	bb 27       	eor	r27, r27

00004ba4 <__utoa_common>:
    4ba4:	fb 01       	movw	r30, r22
    4ba6:	55 27       	eor	r21, r21
    4ba8:	aa 27       	eor	r26, r26
    4baa:	88 0f       	add	r24, r24
    4bac:	99 1f       	adc	r25, r25
    4bae:	aa 1f       	adc	r26, r26
    4bb0:	a4 17       	cp	r26, r20
    4bb2:	10 f0       	brcs	.+4      	; 0x4bb8 <__utoa_common+0x14>
    4bb4:	a4 1b       	sub	r26, r20
    4bb6:	83 95       	inc	r24
    4bb8:	50 51       	subi	r21, 0x10	; 16
    4bba:	b9 f7       	brne	.-18     	; 0x4baa <__utoa_common+0x6>
    4bbc:	a0 5d       	subi	r26, 0xD0	; 208
    4bbe:	aa 33       	cpi	r26, 0x3A	; 58
    4bc0:	08 f0       	brcs	.+2      	; 0x4bc4 <__utoa_common+0x20>
    4bc2:	a9 5d       	subi	r26, 0xD9	; 217
    4bc4:	a1 93       	st	Z+, r26
    4bc6:	00 97       	sbiw	r24, 0x00	; 0
    4bc8:	79 f7       	brne	.-34     	; 0x4ba8 <__utoa_common+0x4>
    4bca:	b1 11       	cpse	r27, r1
    4bcc:	b1 93       	st	Z+, r27
    4bce:	11 92       	st	Z+, r1
    4bd0:	cb 01       	movw	r24, r22
    4bd2:	0c 94 eb 25 	jmp	0x4bd6	; 0x4bd6 <strrev>

00004bd6 <strrev>:
    4bd6:	dc 01       	movw	r26, r24
    4bd8:	fc 01       	movw	r30, r24
    4bda:	67 2f       	mov	r22, r23
    4bdc:	71 91       	ld	r23, Z+
    4bde:	77 23       	and	r23, r23
    4be0:	e1 f7       	brne	.-8      	; 0x4bda <strrev+0x4>
    4be2:	32 97       	sbiw	r30, 0x02	; 2
    4be4:	04 c0       	rjmp	.+8      	; 0x4bee <strrev+0x18>
    4be6:	7c 91       	ld	r23, X
    4be8:	6d 93       	st	X+, r22
    4bea:	70 83       	st	Z, r23
    4bec:	62 91       	ld	r22, -Z
    4bee:	ae 17       	cp	r26, r30
    4bf0:	bf 07       	cpc	r27, r31
    4bf2:	c8 f3       	brcs	.-14     	; 0x4be6 <strrev+0x10>
    4bf4:	08 95       	ret

00004bf6 <__prologue_saves__>:
    4bf6:	2f 92       	push	r2
    4bf8:	3f 92       	push	r3
    4bfa:	4f 92       	push	r4
    4bfc:	5f 92       	push	r5
    4bfe:	6f 92       	push	r6
    4c00:	7f 92       	push	r7
    4c02:	8f 92       	push	r8
    4c04:	9f 92       	push	r9
    4c06:	af 92       	push	r10
    4c08:	bf 92       	push	r11
    4c0a:	cf 92       	push	r12
    4c0c:	df 92       	push	r13
    4c0e:	ef 92       	push	r14
    4c10:	ff 92       	push	r15
    4c12:	0f 93       	push	r16
    4c14:	1f 93       	push	r17
    4c16:	cf 93       	push	r28
    4c18:	df 93       	push	r29
    4c1a:	cd b7       	in	r28, 0x3d	; 61
    4c1c:	de b7       	in	r29, 0x3e	; 62
    4c1e:	ca 1b       	sub	r28, r26
    4c20:	db 0b       	sbc	r29, r27
    4c22:	0f b6       	in	r0, 0x3f	; 63
    4c24:	f8 94       	cli
    4c26:	de bf       	out	0x3e, r29	; 62
    4c28:	0f be       	out	0x3f, r0	; 63
    4c2a:	cd bf       	out	0x3d, r28	; 61
    4c2c:	09 94       	ijmp

00004c2e <__epilogue_restores__>:
    4c2e:	2a 88       	ldd	r2, Y+18	; 0x12
    4c30:	39 88       	ldd	r3, Y+17	; 0x11
    4c32:	48 88       	ldd	r4, Y+16	; 0x10
    4c34:	5f 84       	ldd	r5, Y+15	; 0x0f
    4c36:	6e 84       	ldd	r6, Y+14	; 0x0e
    4c38:	7d 84       	ldd	r7, Y+13	; 0x0d
    4c3a:	8c 84       	ldd	r8, Y+12	; 0x0c
    4c3c:	9b 84       	ldd	r9, Y+11	; 0x0b
    4c3e:	aa 84       	ldd	r10, Y+10	; 0x0a
    4c40:	b9 84       	ldd	r11, Y+9	; 0x09
    4c42:	c8 84       	ldd	r12, Y+8	; 0x08
    4c44:	df 80       	ldd	r13, Y+7	; 0x07
    4c46:	ee 80       	ldd	r14, Y+6	; 0x06
    4c48:	fd 80       	ldd	r15, Y+5	; 0x05
    4c4a:	0c 81       	ldd	r16, Y+4	; 0x04
    4c4c:	1b 81       	ldd	r17, Y+3	; 0x03
    4c4e:	aa 81       	ldd	r26, Y+2	; 0x02
    4c50:	b9 81       	ldd	r27, Y+1	; 0x01
    4c52:	ce 0f       	add	r28, r30
    4c54:	d1 1d       	adc	r29, r1
    4c56:	0f b6       	in	r0, 0x3f	; 63
    4c58:	f8 94       	cli
    4c5a:	de bf       	out	0x3e, r29	; 62
    4c5c:	0f be       	out	0x3f, r0	; 63
    4c5e:	cd bf       	out	0x3d, r28	; 61
    4c60:	ed 01       	movw	r28, r26
    4c62:	08 95       	ret

00004c64 <__do_global_dtors>:
    4c64:	14 e0       	ldi	r17, 0x04	; 4
    4c66:	c3 e0       	ldi	r28, 0x03	; 3
    4c68:	d4 e0       	ldi	r29, 0x04	; 4
    4c6a:	04 c0       	rjmp	.+8      	; 0x4c74 <__do_global_dtors+0x10>
    4c6c:	fe 01       	movw	r30, r28
    4c6e:	0e 94 6c 23 	call	0x46d8	; 0x46d8 <__tablejump2__>
    4c72:	21 96       	adiw	r28, 0x01	; 1
    4c74:	c4 30       	cpi	r28, 0x04	; 4
    4c76:	d1 07       	cpc	r29, r17
    4c78:	c9 f7       	brne	.-14     	; 0x4c6c <__do_global_dtors+0x8>
    4c7a:	f8 94       	cli

00004c7c <__stop_program>:
    4c7c:	ff cf       	rjmp	.-2      	; 0x4c7c <__stop_program>
